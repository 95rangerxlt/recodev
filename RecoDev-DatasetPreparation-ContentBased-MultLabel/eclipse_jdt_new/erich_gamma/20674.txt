F4

JavaCapabilityConfigurationPage.init:

The doc states that when defaultsOverrideExistingClasspath is set to false and 
a .classpath file already exists the setting from the classpath file is taken.
code is
	defaultOutputLocation= null;
	defaultOutputLocation= null;

is meant to be
	defaultOutputLocation= null;
	defaultEntries= null;

Class is API and this bug would prevent cliants from using the functionality.
No dependences so far, fix is riskless.

F4

JavaCapabilityConfigurationPage.init:

The doc states that when defaultsOverrideExistingClasspath is set to false and 
a .classpath file already exists the setting from the classpath file is taken.
code is
	defaultOutputLocation= null;
	defaultOutputLocation= null;

is meant to be
	defaultOutputLocation= null;
	defaultEntries= null;

Class is API and this bug would prevent cliants from using the functionality.
No dependences so far, fix is riskless.
Just for completeness: A workaround would be to force clients to sublcass and 
override init.
Created attachment 1527
patch
Created attachment 1528
patch
Consequences of not fixing it: 
Clients have a hard time to track down why a ready to use wizard page
does not work.

Risk of fix: No risk

Just one addition - this class is independent of the capbability based project 
creation mechanism that didn't make it into 2.0. It is a generally reusable 
wizard page for creating Java projects. It is used internally in JDT, but 
inside JDT we are not setting the defaults. However, clients using this API 
class will likely do so and therefore this is a serious problem.
Reviewed by Kai-Uwe Maetzel & Erich Gamma.


JavaCapabilityConfigurationPage.init is not clearing the default path when classpath already exists



Bug 206747 CCE in LaunchConfigurationQueryParticipant when searching for references to method 

206747: CCE in LaunchConfigurationQueryParticipant when searching for references to method 

#20674 
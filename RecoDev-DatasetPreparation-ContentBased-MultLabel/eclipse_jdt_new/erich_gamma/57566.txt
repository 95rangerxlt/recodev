A great timesaver would be to have an action that allows re-running of just the failed (or 
highighted) tests in a JUnit run, as opposed to all the tests again. This could be selected from the 
failure trace/hierarchy.

Of course, it would not be suitable for rerunning all the tests again, but it would allow a developer to 
focus on a specific failure in one place and once completed, running all tests again.

I suggest that a new menu action, 'Run selected tests' or 'Run failed tests' would be very useful in those 
circumstances.

A great timesaver would be to have an action that allows re-running of just the failed (or 
highighted) tests in a JUnit run, as opposed to all the tests again. This could be selected from the 
failure trace/hierarchy.

Of course, it would not be suitable for rerunning all the tests again, but it would allow a developer to 
focus on a specific failure in one place and once completed, running all tests again.

I suggest that a new menu action, 'Run selected tests' or 'Run failed tests' would be very useful in those 
circumstances.
This feature is also on our wishlist, but to handle test decorations properly 
(TestSetup) this needs some JUnit support.

Notice you can already re-run a single failed test or a test suite (since the 
last integration build).




Actually, I found that after I had submitted this bug. But it didn't seem to work for the JUnit plug-in 
test; I got a 'method not found error'. Don't know if that's because I had a subclass-of-subclass-of-
testcase, or whether I was using the PDE to do my testing.
works for me, if it doesn't for you can you please file a separate test case 
with reproducable steps (ideally attach a skeleton of your test).

This is the test case I've tried.
public class TestTest extends TestCase {

	public void testSuccess() {
			
	}
	public void testFail() {
		assertEquals("aaaa", "aaabbaaaa");
	}

}
Odd. It works on some test cases, but not on others. I'm getting a .log file as follows

!SESSION Apr 07, 2004 15:28:37.423 ---------------------------------------------
java.version=1.4.2_03
java.vendor=Apple Computer, Inc.
BootLoader constants: OS=macosx, ARCH=ppc, WS=carbon, NL=en_US
Command-line arguments: -version 3 -application org.eclipse.pde.junit.runtime.uitestapplication -data 
/Local/alex/runtime-workbench-workspace -dev bin,Build -port 56107 -testpluginname hedgehog 
-test hedgehog.LogicTest:testSubclassOf
!ENTRY reference:file:/Applications/Eclipse/plugins/org.eclipse.pde.core_3.0.0 0 0 Apr 07, 2004 15:28:
37.426
!MESSAGE FrameworkEvent.ERROR
!STACK 0
org.osgi.framework.BundleException: Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.stop()
	at org.eclipse.osgi.framework.internal.core.BundleContext.stop(BundleContext.java:1170)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:481)
	at org.eclipse.osgi.framework.internal.core.Bundle.suspend(Bundle.java:556)
	at org.eclipse.osgi.framework.internal.core.Framework.suspendBundle(Framework.java:1252)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.decFWSL(StartLevelImpl.java:626)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.doSetStartLevel(StartLevelImpl.java:277)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.shutdown(StartLevelImpl.java:250)
	at org.eclipse.osgi.framework.internal.core.SystemBundle.suspend(SystemBundle.java:208)
	at org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:603)
	at org.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBundle.java:193)
	at java.lang.Thread.run(Thread.java:552)
Nested exception:
java.lang.NullPointerException
	at 
org.eclipse.pde.internal.core.WorkspaceModelManager.shutdown(WorkspaceModelManager.java:793)
	at org.eclipse.pde.internal.core.DefaultRuntimeSupport.shutdown(DefaultRuntimeSupport.java:59)
	at org.eclipse.pde.internal.core.PDECore.resetAlternativeRuntimeSupport(PDECore.java:407)
	at org.eclipse.pde.internal.core.PDECore.shutdown(PDECore.java:481)
	at org.eclipse.core.internal.compatibility.PluginActivator.stop(PluginActivator.java:67)
	at org.eclipse.osgi.framework.internal.core.BundleContext$2.run(BundleContext.java:1154)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContext.stop(BundleContext.java:1129)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:481)
	at org.eclipse.osgi.framework.internal.core.Bundle.suspend(Bundle.java:556)
	at org.eclipse.osgi.framework.internal.core.Framework.suspendBundle(Framework.java:1252)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.decFWSL(StartLevelImpl.java:626)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.doSetStartLevel(StartLevelImpl.java:277)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.shutdown(StartLevelImpl.java:250)
	at org.eclipse.osgi.framework.internal.core.SystemBundle.suspend(SystemBundle.java:208)
	at org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:603)
	at org.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBundle.java:193)
	at java.lang.Thread.run(Thread.java:552)
!ENTRY reference:file:/Applications/Eclipse/plugins/org.eclipse.jdt.launching_3.0.0 0 0 Apr 07, 
2004 15:28:37.431
!MESSAGE FrameworkEvent.ERROR
!STACK 0
org.osgi.framework.BundleException: Exception in 
org.eclipse.core.internal.compatibility.PluginActivator.stop()
	at org.eclipse.osgi.framework.internal.core.BundleContext.stop(BundleContext.java:1170)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:481)
	at org.eclipse.osgi.framework.internal.core.Bundle.suspend(Bundle.java:556)
	at org.eclipse.osgi.framework.internal.core.Framework.suspendBundle(Framework.java:1252)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.decFWSL(StartLevelImpl.java:626)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.doSetStartLevel(StartLevelImpl.java:277)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.shutdown(StartLevelImpl.java:250)
	at org.eclipse.osgi.framework.internal.core.SystemBundle.suspend(SystemBundle.java:208)
	at org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:603)
	at org.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBundle.java:193)
	at java.lang.Thread.run(Thread.java:552)
Nested exception:
java.lang.NullPointerException
	at org.eclipse.jdt.internal.launching.LaunchingPlugin.shutdown(LaunchingPlugin.java:357)
	at org.eclipse.core.internal.compatibility.PluginActivator.stop(PluginActivator.java:67)
	at org.eclipse.osgi.framework.internal.core.BundleContext$2.run(BundleContext.java:1154)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.eclipse.osgi.framework.internal.core.BundleContext.stop(BundleContext.java:1129)
	at org.eclipse.osgi.framework.internal.core.BundleHost.stopWorker(BundleHost.java:481)
	at org.eclipse.osgi.framework.internal.core.Bundle.suspend(Bundle.java:556)
	at org.eclipse.osgi.framework.internal.core.Framework.suspendBundle(Framework.java:1252)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.decFWSL(StartLevelImpl.java:626)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.doSetStartLevel(StartLevelImpl.java:277)
	at org.eclipse.osgi.framework.internal.core.StartLevelImpl.shutdown(StartLevelImpl.java:250)
	at org.eclipse.osgi.framework.internal.core.SystemBundle.suspend(SystemBundle.java:208)
	at org.eclipse.osgi.framework.internal.core.Framework.shutdown(Framework.java:603)
	at org.eclipse.osgi.framework.internal.core.SystemBundle$1.run(SystemBundle.java:193)
	at java.lang.Thread.run(Thread.java:552)

The JUnit error is:

junit.framework.AssertionFailedError: method 'testSubclassesOf' not found
 at junit.framework.TestResult$1.protect(TestResult.java:106)
 at org.eclipse.pde.internal.junit.runtime.RemotePluginTestRunner.main(RemotePluginTestRunner.java:
30)
...

I'm launching this as a 'JUnit Plug-in Test' from the Project (run all tests in project), then selecting this 
one. This one always seems to fail, whereas others so far have always succeeded. But I've also tried a 
few other random ones and they seem to fail too, so it's not a one-off. Plus, when I run the test as 'all 
tests in project' then it works.

I'll try to drill down and find out what's causing this problem and attach a test case.
in 3.1 there is support to re-run failed tests first.


Add an 're-run only failed tests' in JUnit view [JUnit]


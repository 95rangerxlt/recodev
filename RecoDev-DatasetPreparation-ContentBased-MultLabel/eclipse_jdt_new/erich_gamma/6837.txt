- Can't select elements in the Java world (e.g source folder, package, external 
JAR)
- Can't create a working set for a package
 Selecting the folder automatically selets all its children
 (->including subfolders)
 Deselecting all children, deselects the parent
 Selection of all children is not what I want when I filter for a package:
 I don't want to update the filter each time I add a CU to the package.
- These limitations might be ok for the usage of a working set in the package 
viewer. For Java search however, for me this seems to be too limiting.

- Can't select elements in the Java world (e.g source folder, package, external 
JAR)
- Can't create a working set for a package
 Selecting the folder automatically selets all its children
 (->including subfolders)
 Deselecting all children, deselects the parent
 Selection of all children is not what I want when I filter for a package:
 I don't want to update the filter each time I add a CU to the package.
- These limitations might be ok for the usage of a working set in the package 
viewer. For Java search however, for me this seems to be too limiting.

>Selecting the folder automatically selets all its children
> (->including subfolders)
working sets are currently resource centric and as a consequence we have the 
subfolder/package issue. Resources are the common currency and the user should 
not be forced to define the same working set once in the Java and once in the 
Resources domain.

The subfolder problem could be address by allowing to exclude folders from a 
working set. 

Further action should wait until the workbench provides working set support.

please note that the second point is a bug (not related to the resource / java 
element discussion)
it is not that clear that it is bug sometimes the subfolder behaviour is 
desired. It can be more convenient to select an inner package rather than 
having to select all leaf packages.
bug for case 2 is described in 6843 
addressed as part of the migration of working sets to the Platform UI


working sets deficiencies



Master: Fixed a resource leak warning - 376837 

HEAD - 266837 

176837 exception opening launch dialog on junit config 
Build 20020530.

I have a workspace with a Java, Java Browsing, Debug, and Resource perspectives 
open.  The workspace is saved with the Resource perspective active.  The Java 
Perspective is on the Packages view and a class is expanded (e.g. 
org.eclipse.ui.internal.WorkbenchPage) so that its methods are listed.

When I start the workspace and attempt to switch to the Java Perspective it 
takes on the order of 10 seconds, whereas switching to other perspectives is 
only about 4 seconds.

If I go to the Packages View, collapse my project (i.e., org.eclipse.ui), 
switch back to the Resources perspective, save and re-open workspace then 
switching to the Java perspective takes about 4 seconds.

Build 20020530.

I have a workspace with a Java, Java Browsing, Debug, and Resource perspectives 
open.  The workspace is saved with the Resource perspective active.  The Java 
Perspective is on the Packages view and a class is expanded (e.g. 
org.eclipse.ui.internal.WorkbenchPage) so that its methods are listed.

When I start the workspace and attempt to switch to the Java Perspective it 
takes on the order of 10 seconds, whereas switching to other perspectives is 
only about 4 seconds.

If I go to the Packages View, collapse my project (i.e., org.eclipse.ui), 
switch back to the Resources perspective, save and re-open workspace then 
switching to the Java perspective takes about 4 seconds.
we should measure where the time goes but since you had your project opened 
this will populate the Java model, in particular if you have a JAR file 
expanded. 

Philippe can you trace the time. One workaround we could do in the UI is to not 
persist the expansion state of the tree (or only persist to the level of CUs 
and JAR files)
My expanded project was from the repository, not a jar file - if that matters.
Times is also taken by checking index consistency and so on... but we will 
profile it 
Please run it under profiling tool.
UI is taking action so as to avoid persisting expansion state for openable 
elements JAR, units, classfiles.

Moving to UI for disposal.
we found another performance problem that brings the open time from 30 to 24 
seconds.

the fix gives a speedup of 6 seconds in a self hosting workspace. The other 
optimization to not preserve JAR elements and members of a CU did not result in 
a noticable speed-up.

closing the bug


Java Perspective slow to switch to the first time

performance

[18375] 
EC users have requested the following:

"VAJ has a nice feature that allows users to set default comments to be 
added at method and class creation time.  Other automatic boilerplate 
comments that could be added are, for example, copyright information at 
the top of the class. (Which, by the way is really annoying during 
development -- it would be nice to be able to hide that type of comment, 
either in my code or in somebody else's code)."

Or, when I create a new method I want to be able to automatically add
its javadoc: all the arguments, the return and the throw statements.

E.g, I write

int myMethod(int myArg1, int myArg2) throws Exception {}

now I press some magic key and get

/**
  @param myArg1 ......
  @param myArg2 ......
  @return .....
  @throw Exception .....
*/
  int myMethod(int myArg1, int myArg2) throws Exception {}

EC users have requested the following:

"VAJ has a nice feature that allows users to set default comments to be 
added at method and class creation time.  Other automatic boilerplate 
comments that could be added are, for example, copyright information at 
the top of the class. (Which, by the way is really annoying during 
development -- it would be nice to be able to hide that type of comment, 
either in my code or in somebody else's code)."

Or, when I create a new method I want to be able to automatically add
its javadoc: all the arguments, the return and the throw statements.

E.g, I write

int myMethod(int myArg1, int myArg2) throws Exception {}

now I press some magic key and get

/**
  @param myArg1 ......
  @param myArg2 ......
  @return .....
  @throw Exception .....
*/
  int myMethod(int myArg1, int myArg2) throws Exception {}
This function is in the 2.0 Stream. (On methods).
It is is a quite raw state, but generates you the JavaDoc tag stubs as 
suggested.


Automatic comment generation



HEAD  - Fix for 95262 

85262 
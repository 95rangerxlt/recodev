After bug 430336, we need to adapt the quick assist again. Bug 430818 adapted the quick assist to 4.4.0, but the AST in master is slightly different.

After bug 430336, we need to adapt the quick assist again. Bug 430818 adapted the quick assist to 4.4.0, but the AST in master is slightly different.
Noopur, could you please have a look? This should fix the 10 AssistQuickFixTest failures.
Created attachment 246679
Patch

This patch reverts the changes done in bug 430818 comment #9. With this, the failing tests get the create for loop proposals and produce the expected code. 

However, there seems to be some issue with the rewrite source ranges of the result. In JUnit tests, the closing brace of generated for loops and the closing brace of the enclosing method is coming in a single line. 
On applying the quick assists in runtime, the closing brace of the for loop is not visible in the additional info and in the result on editor.
Checking the issue.

Also, since QuickFixTest#collectAssists passes empty problem locations for the tests, some additional quick assists that should be available only when there is no error are also proposed in the tests. Hence, updated the number of proposals in tests accordingly.
Created attachment 246714
Patch

Updated patch by removing the code handling Assignment node as it not found in the new AST structure.

The rewrite issue that removes the newline before the enclosing method's closing brace (as seen in the failing tests) can also be seen in Extract Local Variable (Alt+Shift+L) refactoring on "collection":

import java.util.Collection;

public class Snippet {
	void foo1() {
		Collection<String> collection= null;
		collection
	}
}
Created attachment 246721
Patch - Fix

Updated patch with the fix. With this, all tests in AssistQuickFixTest and ExtractTempTests are green.

The problem was that we were replacing the recovered ExpressionStatement which didn't have the semicolon at its end in the source.
Added a method in ASTNodes to check the semicolon and updated GenerateForLoopAssistProposal and ExtractTempRefactoring to replace the Expression instead of ExpressionStatement if the recovered expression statement doesn't have the semicolon at its end.

Markus, please have a look.
Thanks Noopur, looks good!

Extracted a repeated cast in QuickAssistProcessor#getGenerateForLoopProposals() and released as http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=28c146c2133324c86c8aaf1a02cbd6ee9f407ce2


[1.8][quick fix] Quick fix for "for loop" is not shown for bare local variable/argument/field



Bug 443191: [1.8][quick fix] Quick fix for "for loop" is not shown for bare local variable/argument/field 
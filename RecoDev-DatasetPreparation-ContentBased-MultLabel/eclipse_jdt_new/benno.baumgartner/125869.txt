I20060125 + ZRH plug-ins from 20060131

- have this CU:

public class Clazz {
	public void method() {
		String s= "234234";
		String b= "asdf";
	}
}

- save it (non-dirty)
- use 'quick fix > clean up' to fix the NON-NLS warnings

> note: the CU is saved after the clean up

- alternatively: revert to the original state
- dirty the CU by adding a space somewhere, e.g. after the package stmt
- use 'quick fix > clean up' to fix the NON-NLS warnings

> note: the CU remains dirty after the clean up

I would expect the CU to be dirty in both scenarios, but perhaps I don't see all the consequences.

I20060125 + ZRH plug-ins from 20060131

- have this CU:

public class Clazz {
	public void method() {
		String s= "234234";
		String b= "asdf";
	}
}

- save it (non-dirty)
- use 'quick fix > clean up' to fix the NON-NLS warnings

> note: the CU is saved after the clean up

- alternatively: revert to the original state
- dirty the CU by adding a space somewhere, e.g. after the package stmt
- use 'quick fix > clean up' to fix the NON-NLS warnings

> note: the CU remains dirty after the clean up

I would expect the CU to be dirty in both scenarios, but perhaps I don't see all the consequences.
That behaviour looks right to me (same as with organize import). We can't leave all CU dirty, especially when you apply clean-up on multiple CU's.

Vut when I try this I'm always asked to save the files. That isn't really neccessary.

Moving to Benno to comment. But in my opinion the behaviour looks ok. But there shouldn't be a save dialog.
I don't get a save dialog. Are you selecting quick fix -> clean up or do you call clean up... through the context menu? There you get such a dialog because the refactoring requires to save all dirty editors. I can also weaken this requirement, but I'm not completly sure about the consequences.

The behaviour doesn't seam to be the same as with organize import, there the editor allways remains dirty. I agree with tom that we should be consistent here.
Just to clarify: I always went over the quick fix popup menu. I agree the save dialog makes sense when going through Source > Clean Up as this may touch multiple or non-open resources (e.g. when I have a selection in the package explorer). I never get a save dialog when using quick fix.
fixed > I20060322-1335

Keep it dirty!

Keep asking to save files when source -> clean up...


[clean up][infrastructure] a dirty CU remains dirty, a clean CU is saved after the clean up



125869 [clean up][infrastructure] a dirty CU remains dirty, a clean CU is saved after the clean up 
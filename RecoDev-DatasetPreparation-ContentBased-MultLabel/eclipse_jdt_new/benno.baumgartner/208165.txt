At the moment, when there is a warning or notice, e.g. class is missing a SerialVersionUID, the option to Add the SerialVersionUID, or to Ignore the warning for this class in the future, is accessed via clicking on the icon on the left hand side of the editor. Or, by moving the mouse cursor over the highlighted word and press APPLE(CTRL)+1 and the same menu will popup. 

This enhancement request is so when you hover your mouse over the highlighted text, as well as saying "Press 'F2' for focus." it should say "Press APPLE(CTRL)+1 for actions.".

This way people unfamiliar with the apple/ctrl+1 command will learn about it, rather than thinking their only option is to click on the icon on the LHS.

At the moment, when there is a warning or notice, e.g. class is missing a SerialVersionUID, the option to Add the SerialVersionUID, or to Ignore the warning for this class in the future, is accessed via clicking on the icon on the left hand side of the editor. Or, by moving the mouse cursor over the highlighted word and press APPLE(CTRL)+1 and the same menu will popup. 

This enhancement request is so when you hover your mouse over the highlighted text, as well as saying "Press 'F2' for focus." it should say "Press APPLE(CTRL)+1 for actions.".

This way people unfamiliar with the apple/ctrl+1 command will learn about it, rather than thinking their only option is to click on the icon on the LHS.
This is in the works, see bug 200838.
Created attachment 89738
proposed fix

Improves the annotation hover:
- Shows the annotation image in the hover
- Shows a list of quick fix completion proposals for java annotations if available
- Shows a toolbar with actions

This patch introduces the AbstractInformationControl as API, it's an abstraction of the DefaultInformationControl. It minimizes the required code copying. It makes it very easy to implement a information control. I found it quite useful, see also bug 215473. 

Dani, the toolbar actions are more a prove of concept, to show you that this is possible and works. I would not release this actions.

I'm sorry for all the patches;-)
Created attachment 89739
screen shot

And this is how it looks
Started first part of review (all except JDT).
- org.eclipse.ui.editors changes committed to head with minor modifications
- JFace Text changes have some severe issues:
  - DefaultInformationControl (DIC) can no longer be reused as the controls are
    created each time the input is set
  - since the controls aren't created before the input is set, old hovers are
    throwing NPEs, e.g. the overview ruler hover
- should not implement IInformationControlExtension2 (this simply stores the 
  input and can be done in the concrete impl)
- should handle focus listeners and not implement the methods empty
- need to implement setSizeConstraints(int, int)

Also, we should validate the new abstract class: can we reuse it for the AbstractInformationControl in JDT (used for quick views)? Could we abstract it even more, so that also the BrowserInformationControl can benefit from it?

I'll look at the JDT part once the lower layer is stable.
Created attachment 89985
Updated patch

This updated patch fixes most of the mentioned problems, except the empty setSizeConstraints(int, int).
Ah, please remove the multiple constructors. Just provide one in the abstract class.

The JDT NLS strings should get better names.
The images need to be improved before we go public ;-)
BTW: looks really nice!

One thing: the current implementation has problems with long problem messages (they are cut).
> This updated patch fixes most of the mentioned problems, except the empty
> setSizeConstraints(int, int).

Fixed, the default implementation tries to come as close as possible to the size constraint. Subclasses can be smarter, i.e. the problem hover tries to be as small as possible.

> Ah, please remove the multiple constructors. Just provide one in the abstract
> class.

IMHO the constructors express nicely that it is not possible to have a status message and a toolbar at the same time. If I replace the constructors by one constructor I would need to throw a IAE at runtime...

> The JDT NLS strings should get better names.

fixed

> One thing: the current implementation has problems with long problem messages

Fixed, wrap text, show horizontal scrollbar for quick fixes if required. 

> The images need to be improved before we go public ;-)

I've tried my best to improve it, but expect no miracles:-)


Created attachment 90085
proposed fix
Fixed in HEAD with some minor modifications. Filed the following bugs for the remaining issues:

bug 219596: AbstractInformationControl must be reused by BrowserInformationControl
bug 219607: [hovering] Rich Problem hover doesn't show spelling quick fixes

Good work! (except for the icon of course ;-)
Filed bug 219612 to track the artwork.
*** Bug 104501 has been marked as a duplicate of this bug. ***


[hovering] mention quick fix on Java problems



Committed Benno's patch to fix bug 208165: [hovering] mention quick fix on Java problems 

Committed Benno's patch to fix bug 208165: [hovering] mention quick fix on Java problems 

208165 [hovering] mention quick fix on Java problems - placeholder icon 

208165 [hovering] mention quick fix on Java problems - placeholder images 
3.2 M5 testing

A) warning should have cancel button
- have a project with a library jar
- replace the jar with a newer version containing refactorings
- press 'Finish' on the upcoming dialog

> a dialog warns me that finishing without reviewing the refactorings may produce unexpected results

- I can only press Ok

< expected: as I am afraid of the consequences, I can press cancel and review the refactorings.


B) support method change of return type only

- have a method 'public int length(CharSequence seq)'
- reference it in the dependend project like this:
   
   int len= library.length("foobar");

- change the library method to 'public long length(CharSequence seq)'
- replace the library and try to apply the refactoring

> fails, "the input element for the refactoring... does not exist in the workspace"



C) got the following exception (no steps):

!ENTRY org.eclipse.ltk.ui.refactoring 4 10000 2006-02-14 16:51:25.839
!MESSAGE Internal Error
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:341)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:833)
	at org.eclipse.ltk.ui.refactoring.history.RefactoringHistoryWizard.getRefactoringPage(RefactoringHistoryWizard.java:717)
	at org.eclipse.ltk.ui.refactoring.history.RefactoringHistoryWizard.getNextPage(RefactoringHistoryWizard.java:501)
	at org.eclipse.jdt.internal.ui.jarimport.JarImportWizard.getNextPage(JarImportWizard.java:312)
	at org.eclipse.ltk.internal.ui.refactoring.history.RefactoringHistoryOverviewPage.getNextPage(RefactoringHistoryOverviewPage.java:102)
	at org.eclipse.jface.wizard.WizardDialog.nextPressed(WizardDialog.java:737)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:345)
	at org.eclipse.jface.dialogs.Dialog$3.widgetSelected(Dialog.java:645)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1074)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3158)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2838)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:811)
	at org.eclipse.jface.window.Window.open(Window.java:789)
	at org.eclipse.jdt.internal.ui.actions.JarImportWizardAction.run(JarImportWizardAction.java:73)
	at org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:251)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:530)
	at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:480)
	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:392)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1074)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3158)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2838)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1899)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1863)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:417)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:106)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:99)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:374)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:282)
	at org.eclipse.core.launcher.Main.run(Main.java:977)
	at org.eclipse.core.launcher.Main.main(Main.java:952)
Caused by: org.eclipse.jface.util.Assert$AssertionFailedException: Assertion failed: Search for method declaration did not find original element
	at org.eclipse.jface.util.Assert.isTrue(Assert.java:180)
	at org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.getAllRippleMethods(RippleMethodFinder2.java:148)
	at org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.getRelatedMethods(RippleMethodFinder2.java:132)
	at org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.getRelatedMethods(RippleMethodFinder2.java:138)
	at org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureRefactoring.checkFinalConditions(ChangeSignatureRefactoring.java:783)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:83)
	at org.eclipse.ltk.ui.refactoring.history.RefactoringHistoryWizard.checkConditions(RefactoringHistoryWizard.java:356)
	at org.eclipse.ltk.ui.refactoring.history.RefactoringHistoryWizard.access$11(RefactoringHistoryWizard.java:350)
	at org.eclipse.ltk.ui.refactoring.history.RefactoringHistoryWizard$8.run(RefactoringHistoryWizard.java:676)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)
Root exception:
org.eclipse.jface.util.Assert$AssertionFailedException: Assertion failed: Search for method declaration did not find original element
	at org.eclipse.jface.util.Assert.isTrue(Assert.java:180)
	at org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.getAllRippleMethods(RippleMethodFinder2.java:148)
	at org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.getRelatedMethods(RippleMethodFinder2.java:132)
	at org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.getRelatedMethods(RippleMethodFinder2.java:138)
	at org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureRefactoring.checkFinalConditions(ChangeSignatureRefactoring.java:783)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:83)
	at org.eclipse.ltk.ui.refactoring.history.RefactoringHistoryWizard.checkConditions(RefactoringHistoryWizard.java:356)
	at org.eclipse.ltk.ui.refactoring.history.RefactoringHistoryWizard.access$11(RefactoringHistoryWizard.java:350)
	at org.eclipse.ltk.ui.refactoring.history.RefactoringHistoryWizard$8.run(RefactoringHistoryWizard.java:676)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)

3.2 M5 testing

A) warning should have cancel button
- have a project with a library jar
- replace the jar with a newer version containing refactorings
- press 'Finish' on the upcoming dialog

> a dialog warns me that finishing without reviewing the refactorings may produce unexpected results

- I can only press Ok

< expected: as I am afraid of the consequences, I can press cancel and review the refactorings.


B) support method change of return type only

- have a method 'public int length(CharSequence seq)'
- reference it in the dependend project like this:
   
   int len= library.length("foobar");

- change the library method to 'public long length(CharSequence seq)'
- replace the library and try to apply the refactoring

> fails, "the input element for the refactoring... does not exist in the workspace"



C) got the following exception (no steps):

!ENTRY org.eclipse.ltk.ui.refactoring 4 10000 2006-02-14 16:51:25.839
!MESSAGE Internal Error
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:341)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:833)
	at org.eclipse.ltk.ui.refactoring.history.RefactoringHistoryWizard.getRefactoringPage(RefactoringHistoryWizard.java:717)
	at org.eclipse.ltk.ui.refactoring.history.RefactoringHistoryWizard.getNextPage(RefactoringHistoryWizard.java:501)
	at org.eclipse.jdt.internal.ui.jarimport.JarImportWizard.getNextPage(JarImportWizard.java:312)
	at org.eclipse.ltk.internal.ui.refactoring.history.RefactoringHistoryOverviewPage.getNextPage(RefactoringHistoryOverviewPage.java:102)
	at org.eclipse.jface.wizard.WizardDialog.nextPressed(WizardDialog.java:737)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:345)
	at org.eclipse.jface.dialogs.Dialog$3.widgetSelected(Dialog.java:645)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1074)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3158)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2838)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:811)
	at org.eclipse.jface.window.Window.open(Window.java:789)
	at org.eclipse.jdt.internal.ui.actions.JarImportWizardAction.run(JarImportWizardAction.java:73)
	at org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:251)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:530)
	at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:480)
	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:392)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1074)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3158)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2838)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1899)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1863)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:417)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:106)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:99)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:374)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:585)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:282)
	at org.eclipse.core.launcher.Main.run(Main.java:977)
	at org.eclipse.core.launcher.Main.main(Main.java:952)
Caused by: org.eclipse.jface.util.Assert$AssertionFailedException: Assertion failed: Search for method declaration did not find original element
	at org.eclipse.jface.util.Assert.isTrue(Assert.java:180)
	at org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.getAllRippleMethods(RippleMethodFinder2.java:148)
	at org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.getRelatedMethods(RippleMethodFinder2.java:132)
	at org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.getRelatedMethods(RippleMethodFinder2.java:138)
	at org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureRefactoring.checkFinalConditions(ChangeSignatureRefactoring.java:783)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:83)
	at org.eclipse.ltk.ui.refactoring.history.RefactoringHistoryWizard.checkConditions(RefactoringHistoryWizard.java:356)
	at org.eclipse.ltk.ui.refactoring.history.RefactoringHistoryWizard.access$11(RefactoringHistoryWizard.java:350)
	at org.eclipse.ltk.ui.refactoring.history.RefactoringHistoryWizard$8.run(RefactoringHistoryWizard.java:676)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)
Root exception:
org.eclipse.jface.util.Assert$AssertionFailedException: Assertion failed: Search for method declaration did not find original element
	at org.eclipse.jface.util.Assert.isTrue(Assert.java:180)
	at org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.getAllRippleMethods(RippleMethodFinder2.java:148)
	at org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.getRelatedMethods(RippleMethodFinder2.java:132)
	at org.eclipse.jdt.internal.corext.refactoring.rename.RippleMethodFinder2.getRelatedMethods(RippleMethodFinder2.java:138)
	at org.eclipse.jdt.internal.corext.refactoring.structure.ChangeSignatureRefactoring.checkFinalConditions(ChangeSignatureRefactoring.java:783)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:83)
	at org.eclipse.ltk.ui.refactoring.history.RefactoringHistoryWizard.checkConditions(RefactoringHistoryWizard.java:356)
	at org.eclipse.ltk.ui.refactoring.history.RefactoringHistoryWizard.access$11(RefactoringHistoryWizard.java:350)
	at org.eclipse.ltk.ui.refactoring.history.RefactoringHistoryWizard$8.run(RefactoringHistoryWizard.java:676)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)
Steps for C):
- in the library project L:
  - have a (public) method 'add(int, int int)'
  - have a (public) method 'int length(CharSequence)'
- have a dependend project D using both methods

- in L:
  - CMS: remove third parameter of add/3
  - CMS: change return type of length/1 to long
  - CMS: remove second parameter of add/2
- export L with all refactorings
- replace jar in D

- first, the error of B) appears
- then the exception is in the log

Tobias, can you see if the stacktrace something for M5? Looks more like a change signature bug.
ad A) This is missing and needs to be fixed, filed bug 128180
ad B) Problem with the JAR importer, where a method handle is not correctly transformed, filed bug 128181
ad C) see bug 120846


refactoring history issues


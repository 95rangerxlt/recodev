I20051214-0010

- export project JUnit to junit1.jar
- copy junit1.jar into another project and add to build path
- apply some refactorings to JUnit, then export with history to junit2.jar
- import junit2.jar with Jar import wizard and choose to update junit1.jar

=> junit2.jar is copied into the project, but changes its name to junit1.jar. I would expect that the name of a jar is not changed, since it may contain version information which would be wrong after renaming. Rather, the classpath should be updated to the new name.

Maybe, we even need a refactoring 'Rename Jar', which would also inform participants about the name change.

I20051214-0010

- export project JUnit to junit1.jar
- copy junit1.jar into another project and add to build path
- apply some refactorings to JUnit, then export with history to junit2.jar
- import junit2.jar with Jar import wizard and choose to update junit1.jar

=> junit2.jar is copied into the project, but changes its name to junit1.jar. I would expect that the name of a jar is not changed, since it may contain version information which would be wrong after renaming. Rather, the classpath should be updated to the new name.

Maybe, we even need a refactoring 'Rename Jar', which would also inform participants about the name change.
I am not sure whether this is always the desired case. Maybe this is an option for the import wizard.
The rename really should be a refactoring to be consistent with the JAR import scenario.
Added option to choose whether to rename the JAR on the classpath

Fixed in HEAD > 20060109


Import Jar with refactoring history: after import, jar should have new name



120850 Import Jar with refactoring history: after import, jar should have new name 
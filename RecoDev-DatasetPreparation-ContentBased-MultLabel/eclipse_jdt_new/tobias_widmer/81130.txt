M4 test pass (I20041214-2000-gtk)

1. have the type below
2. move 'method' to 'Inner'

note that method does not reference anything from type 'Test', and the
refactoring correctly does not introduce a parameter to reference the original
type. The dialog that comes up first still prompts me for a name of that
parameter, which could be confusing.

Also, since I can specify the parameter, I may also want to specify javadoc for it?

M4 test pass (I20041214-2000-gtk)

1. have the type below
2. move 'method' to 'Inner'

note that method does not reference anything from type 'Test', and the
refactoring correctly does not introduce a parameter to reference the original
type. The dialog that comes up first still prompts me for a name of that
parameter, which could be confusing.

Also, since I can specify the parameter, I may also want to specify javadoc for it?
------ snip --------
package com.example.m4testing;

public class Test {
	
	/**
	 * Execute da stuff.
	 * 
	 * @param inner the target
	 */
	void method(Inner inner) {
		if (inner.check()) {
			inner.set(inner.get());
		}
	}
	
	public void caller() {
		Inner inner= new Inner();
		
		method(inner);
	}
}

The dialog always prompts for a parameter name, since at this point, it is not 
yet clear whether the method has any references to its declaring class (this 
is a little expensive and should not be done on every target switch).

The second suggestion has not yet been implemented in any refactorings, but is 
certainly a valid point. What do you think, Dirk?
Tobias,

do we know when the dialog comes up if the parameter is needed or not ? If not
how expensive is it to find this out. If it is an easy fix then we should do
something for 3.1. Otherwise postpone until we have full 1.5 support in JDT/UI.

Regarding Javadoc: non of the refactorings allow you entering Javadoc. What we
do offer is to generate the stub (see extract method). Adding support for
entering will make the dialog really clumsy.
We don't know. Finding out means an AST traversal over the method declaration, 
which had to be executed on every target switch.
Fixed > 20050104


move method prompts for parameter name even if not needed



81130 move method prompts for parameter name even if not needed 
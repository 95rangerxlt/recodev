M3 test candidate

public class A<T> {
	class Inner<X> {
		public void foo() {
			T t= null;
			X x= null;
			bar();
		}
	}
	void bar() {
		Inner inner= new Inner<Long>();
	}
}

- move Inner to new file

Observe: Inner now has correctly two type parameters. Hoewever the instance
creation new Inner<Long>() isn't updated resulting in non compilable code.

M3 test candidate

public class A<T> {
	class Inner<X> {
		public void foo() {
			T t= null;
			X x= null;
			bar();
		}
	}
	void bar() {
		Inner inner= new Inner<Long>();
	}
}

- move Inner to new file

Observe: Inner now has correctly two type parameters. Hoewever the instance
creation new Inner<Long>() isn't updated resulting in non compilable code.
Problem is that ConstructorReferenceFinder does not take the default 
constructor into account.
Fixed > 20041108


Move inner: doesn't update instance creation to reflect new type parameters [refactoring] [move inner]



77620 Move inner: doesn't update instance creation to reflect new type parameters [refactoring] [move inner] 
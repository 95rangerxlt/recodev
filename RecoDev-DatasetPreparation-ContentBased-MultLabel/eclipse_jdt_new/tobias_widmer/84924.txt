I20050209-0800

Move instance method should allow to move to the method's declaring class. I had
code like this (somewhat more complicated, actually the method was a static
method which I have moved to A):

class A {
    void m(A a) {
	a.hashCode();
    }
}

The refactoring didn't allow me to move A#m(A) to parameter 'A a'. I don't see
why this is not allowed.

Removing "&& !Bindings.equals(declaring, binding)" from 
MoveInstanceMethodProcessor#computeTargetCategories(..) worked fine (apart from
an error message that a method 'm' already exists).

I20050209-0800

Move instance method should allow to move to the method's declaring class. I had
code like this (somewhat more complicated, actually the method was a static
method which I have moved to A):

class A {
    void m(A a) {
	a.hashCode();
    }
}

The refactoring didn't allow me to move A#m(A) to parameter 'A a'. I don't see
why this is not allowed.

Removing "&& !Bindings.equals(declaring, binding)" from 
MoveInstanceMethodProcessor#computeTargetCategories(..) worked fine (apart from
an error message that a method 'm' already exists).
Tobias, any comments.
This is currently not allowed, since it is no real move refactoring anymore 
(just switches the receiver). But it could be enabled if there are cases where 
this is necessary.
Fixed > 20050224


Move instance method should allow to move to declaring class



84924 Move instance method should allow to move to declaring class 
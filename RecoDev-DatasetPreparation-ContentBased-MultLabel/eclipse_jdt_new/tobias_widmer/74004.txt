20040914088
I used the encapsulate field refactoring and this caused changes in both the 
type and its subclass.

The Undo operation correctly undid the changes in the type but the changes in 
the subclass remaind.

20040914088
I used the encapsulate field refactoring and this caused changes in both the 
type and its subclass.

The Undo operation correctly undid the changes in the type but the changes in 
the subclass remaind.
Darin,

I tested it with the following example:

package p2;

public class A {
	protected int field;
}

package p2;

public class B extends A {
	public void foo() {
		field= 10;
	}
}

and it worked. Any additional steps to reproduce. Was there something in the 
log file.
I did not find anything in the log file.
The exact operation I did was to encapsulate the "dtd" field of 
AntEditorCompletionProcessor in org.eclipse.ant.ui. It has a subclass in the 
org.eclipse.ant.ui.tests called TestTextCompletionProcessor.
Tobias, could you please investigate?
Example to reproduce:

public class A {
protected int f;
void foo(){f= 3;}
}

public class B extends A {
void foo(){f= 4;}
}

The field "f" is changed to private, and the undo does not revert it back to 
protected
Created attachment 14695
Patch

OldASTRewrite and ModifierRewrite (which uses ASTRewrite) do not work well
together. Changed everything to ASTRewrite
Will have to wait until after M2.
The patch causes a test failure (in SefTests). Tobias, please make sure that you
don't try to modify a placeholder node using ASTRewrite.
Created attachment 14832
Patch

Problem was not the modification of placeholders, but taking the wrong parent
for the list rewrite.
We cannot reproduce the original problem. I tried with the classes from comment
2 and with I200409140800, but I couldn't break the undo. Darin, could you please
try to reproduce in your workspace or in a new workspace?

The patch is a transition from OldASTRewrite to ASTRewrite, but is IMO unrelated
to this PR. I'll consider the patch again, as soon as we know why the current
code didn't work for Darin.
On 200409231200 I can not reproduce the problem.
Tobias, I get an IAE when I encapsulate field1 in this case:
	void foo(){
		new Object() {
			int field1, field2;
		};
	}
Created attachment 14862
Patch

Handles all body declaration nodes uniformly
Released patch 3 to HEAD. Please reopen if you can reproduce failing undos.


Undo for Encapsulate Field did not undo changes in subclass



74004: Undo for Encapsulate Field did not undo changes in subclass 
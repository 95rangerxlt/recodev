- Do not put everything on the user class path
- Use only the standard output for result and error messages
- Remove waitFor()
- Read from stream until -1

- Do not put everything on the user class path
- Use only the standard output for result and error messages
- Remove waitFor()
- Read from stream until -1
I tried to run QuickFixTest, but during the first test
(SerialVersionQuickFixTest#testAnonymousClass()), the runtime eclipse showed a
progress monitor with message "Computing" serial version ID..." and "Starting
virtual machine...", but with no apparent progress. A thread dump showed that
the runtime was waiting in Win32Process.waitFor(), and not in a stream reader.
Had to kill the runtime and restart the tests.

I cannot reproduce reliably (but I could reproduce occasionally).

Thread [ModalContext] (Suspended)
	Win32Process.waitFor() line: not available [native method]
	SerialVersionLaunchConfigurationDelegate$SerialVersionRunner.run(VMRunnerConfiguration,
ILaunch, IProgressMonitor) line: 188
	SerialVersionLaunchConfigurationDelegate.launch(ILaunchConfiguration, String,
ILaunch, IProgressMonitor) line: 341
	LaunchConfiguration.launch(String, IProgressMonitor, boolean, boolean) line: 590
	SerialVersionHashProposal.computeDefaultExpression(IProgressMonitor) line: 250
	SerialVersionHashProposal$3.run(IProgressMonitor) line: 184
	ModalContext$ModalContextThread.run() line: 113

Fixed in HEAD > 20060111

Changed implementation to use temp file. Case described in comment 1 cannot happen anymore, since the second VM does not try to write to buffered System.out streams anymore, which resulted in the mentioned deadlock.

Order of bootclasspath is not respected as well


Serial version quick fix improvements [quick fix]



107826 Serial version quick fix improvements [quick fix] 
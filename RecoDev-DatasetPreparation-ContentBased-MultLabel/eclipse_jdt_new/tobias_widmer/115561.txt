After copious commenting out of code I managed to isolate it to a small section
of code that is causing the Problems/Quick Fix/"Add generated serial version ID"
option to freeze up. The bottom part of the dialog says "Starting Virtual
Machine" when this happens. The offending class is Test.java below, but only
fails in conjunction with a call to Test2.java in a static String[] (See below).
When this happens the cancel button does not work either so I have to kill
eclipse  from taskmanager and restart it making it very slow to troubleshoot the
source. The set of circumstances that causes it doesn't make much sense to me.
Any ideas guys? Atleast make the cancel button work so when it happens I don't
have to kill eclipse. Thanks in advance.

Code To Reproduce Error
---------------------------------------
/* Test.java */
import java.io.Serializable;

public class Test implements Serializable {
  private static final String[] values = new String[] {
    Test2.getResourceText("some property")
  };
}

/* Test2.java */
import java.util.*;

public class Test2 {
  public static String getResourceText(String strResourceKey) {
    ResourceBundle.getBundle("MyBundle"); // if I comment this out it works!?		
    return strResourceKey;
  }
}

Operating System
----------------------
Windows 2000 5.00.2195

JDK versions tried
---------------------------------------------------------
java version "1.4.2_06"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_06-b03)
Java HotSpot(TM) Client VM (build 1.4.2_06-b03, mixed mode)

java version "1.5.0_02"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_02-b09)
Java HotSpot(TM) Client VM (build 1.5.0_02-b09, mixed mode)

After copious commenting out of code I managed to isolate it to a small section
of code that is causing the Problems/Quick Fix/"Add generated serial version ID"
option to freeze up. The bottom part of the dialog says "Starting Virtual
Machine" when this happens. The offending class is Test.java below, but only
fails in conjunction with a call to Test2.java in a static String[] (See below).
When this happens the cancel button does not work either so I have to kill
eclipse  from taskmanager and restart it making it very slow to troubleshoot the
source. The set of circumstances that causes it doesn't make much sense to me.
Any ideas guys? Atleast make the cancel button work so when it happens I don't
have to kill eclipse. Thanks in advance.

Code To Reproduce Error
---------------------------------------
/* Test.java */
import java.io.Serializable;

public class Test implements Serializable {
  private static final String[] values = new String[] {
    Test2.getResourceText("some property")
  };
}

/* Test2.java */
import java.util.*;

public class Test2 {
  public static String getResourceText(String strResourceKey) {
    ResourceBundle.getBundle("MyBundle"); // if I comment this out it works!?		
    return strResourceKey;
  }
}

Operating System
----------------------
Windows 2000 5.00.2195

JDK versions tried
---------------------------------------------------------
java version "1.4.2_06"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2_06-b03)
Java HotSpot(TM) Client VM (build 1.4.2_06-b03, mixed mode)

java version "1.5.0_02"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_02-b09)
Java HotSpot(TM) Client VM (build 1.5.0_02-b09, mixed mode)
Ok, I figured it out. Apparently the serialver.exe has to actually run the
static initializers on the class to work. This is very surprising to me. Here is
a simple example.

public class Test implements java.io.Serializable {
	static {
		int n = 5/0;
	}
}

running serialver.exe on Test manually I get this stacktrace:
Exception in thread "main" java.lang.ExceptionInInitializerError
        at java.io.ObjectStreamClass.hasStaticInitializer(Native Method)
        at java.io.ObjectStreamClass.computeDefaultSUID(ObjectStreamClass.java:1
557)
        at java.io.ObjectStreamClass.access$100(ObjectStreamClass.java:47)
        at java.io.ObjectStreamClass$1.run(ObjectStreamClass.java:173)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.io.ObjectStreamClass.getSerialVersionUID(ObjectStreamClass.java:
170)
        at sun.tools.serialver.SerialVer.resolveClass(SerialVer.java:192)
        at sun.tools.serialver.SerialVer.serialSyntax(SerialVer.java:161)
        at sun.tools.serialver.SerialVer.main(SerialVer.java:270)
Caused by: java.lang.ArithmeticException: / by zero
        at Test.<clinit>(Test.java:3)
        ... 9 more

So the real bug is that the eclipse quick fix dialog goes into an infinite loop
when this happens and fails to report an error. I shouldn't have to end task
eclipse when this happens.

Fixed in HEAD > 20060111


SerialVersionUID Quick Fix Freezes Up


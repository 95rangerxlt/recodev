3.1-RC1 test pass

cannot execute Refactor>Generalize Type, get an NPE anytime. Example: JUnit in
src, open Protectable.java, execute refactoring.

java.lang.NullPointerException
	at
org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring.determineSelection(ChangeTypeRefactoring.java:691)
	at
org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring.checkSelection(ChangeTypeRefactoring.java:314)
	at
org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring.checkInitialConditions(ChangeTypeRefactoring.java:269)
	at
org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:82)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719)
	at
org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:86)
	at
org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)

3.1-RC1 test pass

cannot execute Refactor>Generalize Type, get an NPE anytime. Example: JUnit in
src, open Protectable.java, execute refactoring.

java.lang.NullPointerException
	at
org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring.determineSelection(ChangeTypeRefactoring.java:691)
	at
org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring.checkSelection(ChangeTypeRefactoring.java:314)
	at
org.eclipse.jdt.internal.corext.refactoring.structure.ChangeTypeRefactoring.checkInitialConditions(ChangeTypeRefactoring.java:269)
	at
org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:82)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1719)
	at
org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:86)
	at
org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)
Tom, do you know where you positioned the cursor.
I can reproduce when the caret is within the 'Throwable' type literal in the
method's throws clause.
Tobias, can you please investigate. If it only happens when a type is selected
in the throw clause, we can live with it for RC2 and retag as 3.2. Otherwise
investigate in a fix.
The NPE happens because the exception clause case is not correctly recognized 
and the type binding of the type to generalize is zero. Other cases seem to be 
covered.

Fix is a three-liner in simpleNameSelected
Opt to defer then. It is very unlikely that clients will activate the
refactoring on a exception clause.

Tobias, can you attach the fix so that it doesn't get lost.
Fixed > 20050704


[refactoring] Generalize Type throws NPE



97279 [refactoring] Generalize Type throws NPE 
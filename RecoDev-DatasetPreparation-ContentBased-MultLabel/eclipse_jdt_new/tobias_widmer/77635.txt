I200411022000

Move Bar#foo() to Foo in the following code results in call bar.foo(bar) instead
of foo.foo():

package test;
public class Bar {
	private Foo foo;
	public void foo() {
	}
	public void bar() {
		foo();
	}
}

package test;
public class Foo {
}

Note that the resulting call is the same if foo() also calls bar() where it
should be foo.foo(this).

I200411022000

Move Bar#foo() to Foo in the following code results in call bar.foo(bar) instead
of foo.foo():

package test;
public class Bar {
	private Foo foo;
	public void foo() {
	}
	public void bar() {
		foo();
	}
}

package test;
public class Foo {
}

Note that the resulting call is the same if foo() also calls bar() where it
should be foo.foo(this).
Fixed > 20041108


Move method uses wrong target name



77938 Move Instance Method shows referenced field twice in list [refactoring] [move] 77653 Move method does not work with List<Integer> in method body [refactoring] [move] 77635 Move method uses wrong target name 77631 Move method can result in uncompilable code 77461 Move instance method: strange check boxes [refactoring] [move] 
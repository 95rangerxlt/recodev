Problem first noticed in 2.1.1 - it may be in 2.1, never checked.
If in the following code, I right click on Baz, Refactor->Convert Nested Type to
TopLevel, references (in this _and_ other classes) to "Foo.Baz" end up being
refactored to ".Baz" (note the erroneous period).  This problem only seems to
exists for classes in the default package.


public class Foo
{
	public static class Baz
	{	
	}
	
	public Foo()
	{
		super();
		new Foo.Baz();
	}

}

Problem first noticed in 2.1.1 - it may be in 2.1, never checked.
If in the following code, I right click on Baz, Refactor->Convert Nested Type to
TopLevel, references (in this _and_ other classes) to "Foo.Baz" end up being
refactored to ".Baz" (note the erroneous period).  This problem only seems to
exists for classes in the default package.


public class Foo
{
	public static class Baz
	{	
	}
	
	public Foo()
	{
		super();
		new Foo.Baz();
	}

}
refactoring lives in jdt ui
works on the latest
will add a regression test before closing
regression test added


Refactor of nested type broken for default package [refactoring]



39716 Refactor of nested type broken for default package [refactoring] 
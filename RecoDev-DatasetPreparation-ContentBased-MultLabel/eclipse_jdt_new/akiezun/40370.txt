Testpass on  20030716 + I20030716.from20030717_1019

1. Have this code
public class NewTest {
	public int foo() {
		return 0;
	}
}
class Tester {
	D one;
	NewTest two;
}

2. Note the reference to D which cannot be resolved, resulting in a compile error
3. Select NewTest
4. Choose Extract Interface
- if you press OK, the refactoring takes place in spite of the compile error
- if you press Preview, a NPE happens:


java.lang.reflect.InvocationTargetException: java.lang.NullPointerException
at java.lang.Throwable.<init>(Throwable.java)
at java.lang.Throwable.<init>(Throwable.java)
at java.lang.NullPointerException.<init>(NullPointerException.java:63)
at
org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator.getConstraintsForHiding(FullConstraintCreator.java:375)
at
org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator.getConstraintsForHiding(FullConstraintCreator.java:367)
at
org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator.create(FullConstraintCreator.java:149)
at
org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintCollector.visit(ConstraintCollector.java:292)
at org.eclipse.jdt.core.dom.FieldDeclaration.accept0(FieldDeclaration.java:116)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java)
at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java)
at org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java)
at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java)
at org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:159)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java)
at
org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceUtil.getConstraints(ExtractInterfaceUtil.java:317)
at
org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceUtil.getUpdatableVariables(ExtractInterfaceUtil.java:134)
at
org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceUtil.updateReferences(ExtractInterfaceUtil.java:161)
at
org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.createChangeManager(ExtractInterfaceRefactoring.java:285)
at
org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.checkInput(ExtractInterfaceRefactoring.java:190)
at
org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:65)
at
org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:100)
at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(Unknown Source)

Testpass on  20030716 + I20030716.from20030717_1019

1. Have this code
public class NewTest {
	public int foo() {
		return 0;
	}
}
class Tester {
	D one;
	NewTest two;
}

2. Note the reference to D which cannot be resolved, resulting in a compile error
3. Select NewTest
4. Choose Extract Interface
- if you press OK, the refactoring takes place in spite of the compile error
- if you press Preview, a NPE happens:


java.lang.reflect.InvocationTargetException: java.lang.NullPointerException
at java.lang.Throwable.<init>(Throwable.java)
at java.lang.Throwable.<init>(Throwable.java)
at java.lang.NullPointerException.<init>(NullPointerException.java:63)
at
org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator.getConstraintsForHiding(FullConstraintCreator.java:375)
at
org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator.getConstraintsForHiding(FullConstraintCreator.java:367)
at
org.eclipse.jdt.internal.corext.refactoring.typeconstraints.FullConstraintCreator.create(FullConstraintCreator.java:149)
at
org.eclipse.jdt.internal.corext.refactoring.typeconstraints.ConstraintCollector.visit(ConstraintCollector.java:292)
at org.eclipse.jdt.core.dom.FieldDeclaration.accept0(FieldDeclaration.java:116)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java)
at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java)
at org.eclipse.jdt.core.dom.TypeDeclaration.accept0(TypeDeclaration.java)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java)
at org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java)
at org.eclipse.jdt.core.dom.CompilationUnit.accept0(CompilationUnit.java:159)
at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java)
at
org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceUtil.getConstraints(ExtractInterfaceUtil.java:317)
at
org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceUtil.getUpdatableVariables(ExtractInterfaceUtil.java:134)
at
org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceUtil.updateReferences(ExtractInterfaceUtil.java:161)
at
org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.createChangeManager(ExtractInterfaceRefactoring.java:285)
at
org.eclipse.jdt.internal.corext.refactoring.structure.ExtractInterfaceRefactoring.checkInput(ExtractInterfaceRefactoring.java:190)
at
org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:65)
at
org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:100)
at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(Unknown Source)
Adam, please investigate.
fixed - because the refactoring heavily depends on bindings i will disallow 
performing it when there are errors in code

that's a solution for M2
for M3 we should come up with something better


[refactoring] extract interface: NPE



Fixed Bug 403705 - [1.8] Investigate failures against b81 

Bug 403700 - Selecting Ant Build launch configuration in External Tools Configuration dialog causes NPE 

 Bug 140370 - [variables] drop down cell editors should be read-only 
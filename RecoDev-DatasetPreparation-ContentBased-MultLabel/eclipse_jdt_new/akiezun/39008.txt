When adding a new parameter in Change Method signature refactoring you get the 
following defaults:
   int  arg0  0
These default values do not make sense and are not helpful. We should not 
suggest them, but rather leave them empty.

When adding a new parameter in Change Method signature refactoring you get the 
following defaults:
   int  arg0  0
These default values do not make sense and are not helpful. We should not 
suggest them, but rather leave them empty.
see bug 24561
Point of clarification, sometimes the defaults do not make sense in that they 
are wrong.  I added an additional Object parameter and got a default value of 0 
instead of null.

Possibly a way to specify the default value is fine.
IMO they do make sense since the user has to specify a default value otherwise 
the caller side will not compile. And 0 is the default value for ints. 

The refactoring should change the default value when the type changes, unless 
the user has specified a default value. 
...then why is "int 0" a better default than "Object null" or "String """. A 
default is only useful when it often makes sense. I don't know how many times 
I already had to change the default. This indicates it isn't helpful.

What would help is to have a type selector (Object, int, String, ...) and have 
a default value specific to the type this would help me when adding a 
parameter.
just to clarify...

Having int as a default parameter type doesn't make sense, having 0 as the 
default value when I select an int as the paramter type makes a lot of sense. 
Therefore the default value for new parameter should be set only after the 
user has entered the type.
will try to implement the following:
- a dropdown list of common types (primitives, String, Object) in the first 
column
- when a value in the type column changes, wizard will go and set the default 
value ('0/false' for primitives, 'null' for anyting else)
- wizard will not touch the default value if it's already set by the user to 
anything else than '0, false or null'
- no more smartness is planned currently (so you will still be able to say 
'type == Object[] and value == new int[0]') - more smartness would be a subject 
for another feature request

- pressing 'Add' must enter something into the table and not put the wizard in 
an error state. So the thing entered must be validatable. That's why I 
chose 'int argX 0' as a resonable default (as suggested by you in bug 24561). I 
think this behavior is still desired. Otherwise, please suggest alternatives.
>- pressing 'Add' must enter something into the table and not put 
>the wizard in an error state. So the thing entered must be validatable. 
Then you allow empty as a valid state, this is how we do it in other wizards.
When pressing OK then you can do a 2nd level validation, i.e., are there no 
empty type fields etc. Pressing add multiple times will insert empty rows.

(yes I've changed my mind with regard to bug 24561) 
i was not able to locate a place where we accept empty input.
what we do in other places is: don't allow modifying the table directly and 
make the 'add' button open the 'edit' dialog, which you cannot close before 
entering valid input
>i was not able to locate a place where we accept empty input.
(this is not for a table but for a field) we don't accept it, but we don't 
show an error on open. See the new class wizard for an example. The name field 
is empty when it comes up, but no error shows up.

When pressing add why can't you just select the new row and leave it empty?





fixed to make the new raw empty and select it


[refactoring] change method signature annoying defaults



39008 [refactoring] change method signature annoying defaults 
Usability testing feedback:

   When deleting a Java field, doesn't give users an option to
   delete the corresponding getter and setter at the same time

   Suggestion: Provide users an option to delete the corresponding
   getter and setter when a Java field is deleted

Pushing a field up or down the hierarchy could also provide the option for 
moving the getter/setter.

Issue the rule for how to derive a getter from a field depends on the 
naming convention used by the user for fields. We should handle:
fField
_field
field_

Usability testing feedback:

   When deleting a Java field, doesn't give users an option to
   delete the corresponding getter and setter at the same time

   Suggestion: Provide users an option to delete the corresponding
   getter and setter when a Java field is deleted

Pushing a field up or down the hierarchy could also provide the option for 
moving the getter/setter.

Issue the rule for how to derive a getter from a field depends on the 
naming convention used by the user for fields. We should handle:
fField
_field
field_
The rule to find the setter and getter name should conform to preference 
defined for code generation.

Regarding push up: the refactoring should provide a check box "Move setter and 
getter of field". If check the refactoring should auto detect the setters and 
move them too.

Adam, please investigate for the refactoring part. The delete part I would 
postpone > 2.0. 
1. but then we'd have to to it for 'Rename Field' as well.

2. and since there's no placeholder for getter/setter name i'd have to hardcode 
their name schemes. 
how to bind fields with their getter/setters in a general way?

not critical for 2.0
reopen
was implemented for 2.0
class used to calculate getter/setter is called GetterSetterUtil


Support for smart deleting of fields



161541 

161541 

Bug 176154 NPE in LaunchConfigurationProjectMainTypeChange while renaming project 
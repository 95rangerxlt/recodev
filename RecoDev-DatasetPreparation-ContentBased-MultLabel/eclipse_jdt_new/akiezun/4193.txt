EG (11.09.2001 16:02:57)
	JavaUIException has to eliminated.
	it is currently used as follows:

		if (!status.isOK()) {
			Throwable t= new JavaUIException(status);
			ExceptionHandler.handle(t, activeShell, ReorgMessages.getString("moveAction.error.title"), ReorgMessages.getString("moveAction.error.message")); //$NON-NLS-1$ //$NON-NLS-2$
		} else {

	either ExceptionHandler can take an IStatus directly or the error message is inlined.
NOTES:

EG (11.09.2001 16:02:57)
	JavaUIException has to eliminated.
	it is currently used as follows:

		if (!status.isOK()) {
			Throwable t= new JavaUIException(status);
			ExceptionHandler.handle(t, activeShell, ReorgMessages.getString("moveAction.error.title"), ReorgMessages.getString("moveAction.error.message")); //$NON-NLS-1$ //$NON-NLS-2$
		} else {

	either ExceptionHandler can take an IStatus directly or the error message is inlined.
NOTES:
I think we should keep the JavaUIException since it gives use the possibility 
to distinguish between Core, JavaCore and JavaUI exceptions (we shouldn't 
through an core exception if it is aUI thing).

Regarding the use of the exception to pass a status to the exception handler. 
In this cases the client should use the ErrorDialog directly (see 
ErrorDialog.openError(shell, title, message, status));

Moving to Adam to clean up wrong uses of JavaUIException.
Keeping it is fine but then we should make the corresponding
status class conform to the platform conventions. It is currently called
JavaUIErrorStatus it should be called JavaUIStatus. It should support to pass 
in a code (see the VCMException as an example). We should also introduce status 
constants in an IJavaUIStatus interface.
fixed 
(the constants are defined in JavaStatusConstants class)


eliminate JavaUIException (1GJW6KL)



Bug 419351 - org.eclipse.jdt.internal.compiler.batch.Main mixes up JVM and endorsed libraries in classpath ordering 

Bug 419351 - org.eclipse.jdt.internal.compiler.batch.Main mixes up JVM and endorsed libraries in classpath ordering 

Fixed Bug 419331 - [1.8][compiler] Weird error on forward reference to type annotations from type parameter declarations 

Test for Bug 419331 - [1.8][compiler] Weird error on forward reference to type annotations from type parameter declarations 

R3_2_maintenance - added N&N for 141931 

HEAD - Tuned N&N for bug 141931 

HEAD - add bug 141931 in what's new 

R3_2_maintenance - 141931 

HEAD - test215 for bug 141931 

141931 

Bug 419316 - All References or All instances may throw NPE in Eclipse 

Bug 441933: [preferences] Introduce new UI preference for reporting unused exception parameter 

Fixed bug 304193: regressions in CleanUpPerfTest and  MoveStaticMembersPerfTests* observed since build N20100218-2000 

Fixed bug 304193: regressions in CleanUpPerfTest and  MoveStaticMembersPerfTests* observed since build N20100218-2000 

184193 [browsing] Filtering empty parent packages no longer working in Packages view 

154193 [build path] Can't edit filters on project without separate src folder 

[41932] 

fix for: 4193 (renamed JavaUiErrorStatus to JavaUIstatus) 

fix for: 4193 (renamed from JavaUiErrorStatus) 

fix for: 4193 (renamed to JavaUiStatus) 

fix for: 4193 
AK (6/11/01 4:35:16 PM)
	1. add a resource (not source) folder to your project
	2. create a java class in it (or, rather, drag and drop a compilation unit in there)
	3. observe: you cannot rename the compilation unit (i mean, it only renames the file then)
		which is correct - it just happens to ba a .java file but it is just a resource

	4. however, you can invoke all other refactorings - which is wrong

AK (6/11/01 4:39:54 PM)
	why is it a ICompilationUnit then?
	why opening it opens the java editor?
	why is the outliner populated?
	why ...
	it is just a resource file with .java extension

AK (6/11/01 4:35:16 PM)
	1. add a resource (not source) folder to your project
	2. create a java class in it (or, rather, drag and drop a compilation unit in there)
	3. observe: you cannot rename the compilation unit (i mean, it only renames the file then)
		which is correct - it just happens to ba a .java file but it is just a resource

	4. however, you can invoke all other refactorings - which is wrong

AK (6/11/01 4:39:54 PM)
	why is it a ICompilationUnit then?
	why opening it opens the java editor?
	why is the outliner populated?
	why ...
	it is just a resource file with .java extension
moved to 'active'
PRODUCT VERSION:
	122


refactorings should only be enabled for java files on the build path.
otherwise refactorings don't makes sense since we only index Java files on the 
build path.
not a problem now - i did nothing but .java files are in folders (out of 
classpath) are not reported as cus anymore (only as resources)

closing


no refactoring should be available on .java files from resource folders (1GF5UQM)



Fix for bugs 391201, bug 391196, bug 391314 and bug 391315 

BETA_JAVA7 - Fixed bug 339128: [Doc] Sort statements and expressions inside DOM documentation for both abstract classes org.eclipse.jdt.core.dom.Expressionn and org.eclipse.jdt.core.dom.Statement 

HEAD - Fixed bug 339128: [Doc] Sort statements and expressions inside DOM documentation for both abstract classes org.eclipse.jdt.core.dom.Expressionn and org.eclipse.jdt.core.dom.Statement 

Bug 391265: JavaDoc {@link} and @See are not generated correctly for generic method arguments 

Fixed bug 391253: Memory leaks when opening and closing Java Editor (part 2) 

Fixed bug 391253: Memory leaks when opening and closing Java Editor 

Bug 243912: IProject#delete(..) should suppress deltas from CharsetDeltaJob 

Fixed bug 153912: [common navigator] Java model hiding parent folders in sync view 
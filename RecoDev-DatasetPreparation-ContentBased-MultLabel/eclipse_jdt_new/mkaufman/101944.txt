The resource or model (can't remember) listener, and the GeneratedFileManager 
are deadlocking when building the Petstore Demo (see setup instructions 
below).  Repro:

1.  Disable reconcile-path APT to dispatch
2.  Rebuild Petstore project.  
3.  Note deadlock.

The beehive project .zip files are too large to upload to bugzilla, so please 
contact me (mkaufman@bea.com) with info on where to get them from.



Setup Instructions for Beehive Petstore Demo 
--------------------------------------------

1.  WTP-enable your eclipse installation.  You'll need to drop the following 
plugins into your eclipse\plugins directory.  
	
	6/17 I-build of WTP - 
http://download.eclipse.org/webtools/downloads/drops/I-I20050617-
200506171814/wtp-I20050617.zip
	6/9 build of EMF    - 
http://download.eclipse.org/webtools/downloads/drivers/emf-sdo-xsd-SDK-
I200506091102.zip
	RC1 of GEF 3.1      - 
http://download.eclipse.org/webtools/downloads/drivers/GEF-SDK-3.1RC1.zip
	JME 1.1 M2          - 
http://download.eclipse.org/webtools/downloads/drivers/JEM-SDK-1.1M2.zip
 
2.  Get the org.eclipse.beehive and org.eclipse.beehive.zip & 
org.eclipse.beehive.ide.eclipse.core.zip plugins from the file share, and 
exppand them onto your hard-drive
3.  Import these projects into your workspace that contains the apt projects
4.  Launch a debug instance of eclipse from this workspace.
5.  Get the J1Petstore.zip and JDBCControlSample.zip files from the file 
share, and extract them onto your filesystem.
6.  Import these projects into your debug workspace.
7.  Beehive-enable your projects, for J1Petstore and JDBCControlSample 
	a) right-click the project, and then choose Add/Remove Beehive support
	b) open the .project file and make sure that the beehive builder has 
been removed
	c) right-click the project and then choose Add/Remove Beehive support 
again
	d) got to "Project | Properties | Java Annotaiton Processing ", and 
then choose the "apply" button, and then choose the "OK" button. (this will 
cause the options to be persisted)

7.  Do a clean build of the J1Petstore project (note the many bugs and crappy 
performance)
8.  Do a clean build of the JDBCControlSample project (note the many bugs and 
crappy performance)

Note that the JDBCControlSample project is a smaller project, and builds more 
quickly than J1Petstore project.

Also note that there are some nasty bugs here.  You may need to disable the 
reconcile-time apt dispatch (see APTDispatch.java), and disable the resource & 
model listeners (see the GeneratedFileManager's init() method)

The resource or model (can't remember) listener, and the GeneratedFileManager 
are deadlocking when building the Petstore Demo (see setup instructions 
below).  Repro:

1.  Disable reconcile-path APT to dispatch
2.  Rebuild Petstore project.  
3.  Note deadlock.

The beehive project .zip files are too large to upload to bugzilla, so please 
contact me (mkaufman@bea.com) with info on where to get them from.



Setup Instructions for Beehive Petstore Demo 
--------------------------------------------

1.  WTP-enable your eclipse installation.  You'll need to drop the following 
plugins into your eclipse\plugins directory.  
	
	6/17 I-build of WTP - 
http://download.eclipse.org/webtools/downloads/drops/I-I20050617-
200506171814/wtp-I20050617.zip
	6/9 build of EMF    - 
http://download.eclipse.org/webtools/downloads/drivers/emf-sdo-xsd-SDK-
I200506091102.zip
	RC1 of GEF 3.1      - 
http://download.eclipse.org/webtools/downloads/drivers/GEF-SDK-3.1RC1.zip
	JME 1.1 M2          - 
http://download.eclipse.org/webtools/downloads/drivers/JEM-SDK-1.1M2.zip
 
2.  Get the org.eclipse.beehive and org.eclipse.beehive.zip & 
org.eclipse.beehive.ide.eclipse.core.zip plugins from the file share, and 
exppand them onto your hard-drive
3.  Import these projects into your workspace that contains the apt projects
4.  Launch a debug instance of eclipse from this workspace.
5.  Get the J1Petstore.zip and JDBCControlSample.zip files from the file 
share, and extract them onto your filesystem.
6.  Import these projects into your debug workspace.
7.  Beehive-enable your projects, for J1Petstore and JDBCControlSample 
	a) right-click the project, and then choose Add/Remove Beehive support
	b) open the .project file and make sure that the beehive builder has 
been removed
	c) right-click the project and then choose Add/Remove Beehive support 
again
	d) got to "Project | Properties | Java Annotaiton Processing ", and 
then choose the "apply" button, and then choose the "OK" button. (this will 
cause the options to be persisted)

7.  Do a clean build of the J1Petstore project (note the many bugs and crappy 
performance)
8.  Do a clean build of the JDBCControlSample project (note the many bugs and 
crappy performance)

Note that the JDBCControlSample project is a smaller project, and builds more 
quickly than J1Petstore project.

Also note that there are some nasty bugs here.  You may need to disable the 
reconcile-time apt dispatch (see APTDispatch.java), and disable the resource & 
model listeners (see the GeneratedFileManager's init() method)

I think the fix here is to wrap up calls into GeneatedFileManager with an 
IWorkspaceRunnable class.  We should use the workspace-root as the 
ISchedulingRule, or possibly use a series of operations, one for each project.

At any rate, it would be good to stop synchronzing on the GeneratedFileManager 
instance, and start using the Eclipse resource locks. 

APTDispatch during reconcile is TBD, since we've got scheduling problems 
around the lock taken by a save or saveAs operation (file or project-level 
lock), and the lock required by JavaModelOperations necessary to get a 
compilation unit (workspace-level lock).  


Fixed this by making sure we weren't holding the GeneratedFileManager's lock 
when doing any operations that would take a different lock (e.g, java model 
operations or resource operations).



Deadlock between Resource (or model?) listener and GeneratedFileManager



- Fix for bugzilla 101944:   I made sure that we are never holding the GeneratedFileManager's lock before doing any java model operations, or doing any resource operations.  This should prevent the deadlock reported in 101944. 
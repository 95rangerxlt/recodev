200300813

a. add visibility buttons like 'Add constructor from super class'

200300813

a. add visibility buttons like 'Add constructor from super class'
b. goto 'Code Generation pref page and set argument prefix to '_'
class A {
  public A(String name) {
  }
}
class B extends A {
  int fCount;
}

add constructor for B
return is
	public B(String name, int _count) {
		super(name);
		fCount = _count;
	}
-> name should have prefix



c.
public class A {
  public A() {
  }
}
class B extends A {
  int fCount;
}

add constructor for B, omit super constructor
result is:

	public B(int _count) {

		fCount = _count;
	}
Empty line is ugly
d. 'omit super constructor' only makes sense if super constructor choosen is a
default constructor, right? Disable the option is this is not the case.
Created attachment 5768
proposed fix.

+ fixes a, c, d
- b should be addressed in a separate patch for StubUtility since it is high
risk given that it affects other source actions.
released patch > 20030814
Created attachment 5779
proposed fix.

Provides logic to StubUtility which reflects code generation preferences when
building parameters. Modifies AddDelegateMethodAction code and
AddUnimplementedConstructorAction code to utilize the parameter name guessing.
released the patch and fix some bugs in the AddCustomConstructorOperation
concerning argument prefixes. > 20030815

Note that there is now a new 'methodVisibility' flaog in
StubUtility.GenStubSettings so that you can specify the visibility when calling
StubUtility.genStub
Fixes made. Closing bug.
New Gerrit change created: https://git.eclipse.org/r/41491
New Gerrit change created: https://git.eclipse.org/r/41491


Add constructors from fields issues



141491 Remove unused icons/full/*lcl16/copy_qualified.gif 

41491 Add constructors from fields issues 
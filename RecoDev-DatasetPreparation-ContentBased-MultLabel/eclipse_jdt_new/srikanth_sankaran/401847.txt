BETA_JAVA8:

The following program should compile, but fails instead with a
ClassCastException:

// ---
interface I {
	Integer foo(X x);
}

public class X {
	int foo(I ...i) { return 10;}

	int goo() { return 0;}
	
	{
		foo(true ? X::goo : X::goo);
		foo(true ? x-> 1 : x->0);
	}
}

BETA_JAVA8:

The following program should compile, but fails instead with a
ClassCastException:

// ---
interface I {
	Integer foo(X x);
}

public class X {
	int foo(I ...i) { return 10;}

	int goo() { return 0;}
	
	{
		foo(true ? X::goo : X::goo);
		foo(true ? x-> 1 : x->0);
	}
}
Fix and tests released via the (non-atomic by mistake) commits:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=c232f63e38d9fdcfc4841ab866a4e36091735ec4

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=8dc325b5ad83fe486573fca06bedec7b37f7c533

I'll follow up with more tests before closing.
Fix and tests released via the cumulative commit http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=bacbe6f6e994ffc49a94960691c76bff97cb04d5


[1.8][compiler] Polyconditionals not accepted in method invocation contexts.



[1.8] Cumulate commit for bugs 421903, 421901, 421898, 401847 

Fixed bug Bug 401847 - [1.8][compiler] Polyconditionals not accepted in method invocation contexts. 

Fix and tests for Bug 401847 - [1.8][compiler] Polyconditionals not accepted in method invocation contexts. 
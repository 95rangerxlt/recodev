Consider the below code snippet:

import java.io.Serializable;

interface I {
    void doit();
}

public class X { 

// Invoke code assist<Ctrl+space> in this location gives 20+ suggestions
    Object o = (I & Serializable) () -> {};
// Invoke code assist<Ctrl+space> in this location gives just 4 template proposals
   
}

Invoking code assist just before and after a variable initialized using lambda gives different result.

Consider the below code snippet:

import java.io.Serializable;

interface I {
    void doit();
}

public class X { 

// Invoke code assist<Ctrl+space> in this location gives 20+ suggestions
    Object o = (I & Serializable) () -> {};
// Invoke code assist<Ctrl+space> in this location gives just 4 template proposals
   
}

Invoking code assist just before and after a variable initialized using lambda gives different result.
This got subsumed by one of the recent fixes. I added tests and released it
here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=dc77cb172c0128b4f7cc2d542080aeb45e16857f


[1.8][code assist] Invoking code assist just before and after a variable initialized using lambda gives different result



Fixed Bug 422107 - [1.8][code assist] Invoking code assist just before and after a variable initialized using lambda gives different result 
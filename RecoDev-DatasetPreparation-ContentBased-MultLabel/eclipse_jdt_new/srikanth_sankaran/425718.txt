The following code is allowed by ECJ:

interface I {
   default Object clone() { return null; }
}
public class Main  {
    public void foo() {
        I x = new I(){};
        System.out.println(x.clone());
    }
}

While Javac rejects it as clone is a protected method and should not be allowed to be accessed.

The following code is allowed by ECJ:

interface I {
   default Object clone() { return null; }
}
public class Main  {
    public void foo() {
        I x = new I(){};
        System.out.println(x.clone());
    }
}

While Javac rejects it as clone is a protected method and should not be allowed to be accessed.
Fix and tests released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=d1523ebe4ccb43f48305ff7e663a67eabfc0dae0


[1.8] default method changes access privilege of protected overridden method from Object



Fixed Bug 425718 - [1.8] default method changes access privilege of protected overridden method from Object 
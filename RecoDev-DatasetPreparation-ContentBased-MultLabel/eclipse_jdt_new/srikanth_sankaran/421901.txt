BETA_JAVA8:

// --
interface I {
	void foo();
}
interface J {
	int foo();
}
public class X {
	static void goo(I i) {
		System.out.println("goo(I)");
	}
	static void goo(J j) {
		System.out.println("goo(J)");
	}
	public static void main(String[] args) {
		final boolean x = true;
		goo(()-> goo((I)null));
	}
	int f() {
		final boolean x = true;
		while (x);
	}
}

This program is incorrectly rejected with an error message, cannot return
void result. This is because, we incorrectly tag the lambda as being value
compatible.

BETA_JAVA8:

// --
interface I {
	void foo();
}
interface J {
	int foo();
}
public class X {
	static void goo(I i) {
		System.out.println("goo(I)");
	}
	static void goo(J j) {
		System.out.println("goo(J)");
	}
	public static void main(String[] args) {
		final boolean x = true;
		goo(()-> goo((I)null));
	}
	int f() {
		final boolean x = true;
		while (x);
	}
}

This program is incorrectly rejected with an error message, cannot return
void result. This is because, we incorrectly tag the lambda as being value
compatible.
Fix and tests released via the cumulative commit http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=bacbe6f6e994ffc49a94960691c76bff97cb04d5


[1.8][compiler] Incorrect error message : "Cannot return void result"



[1.8] Cumulate commit for bugs 421903, 421901, 421898, 401847 
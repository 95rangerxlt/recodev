BETA_JAVA8:

As a first step to supporting full blown usage of method and constructor
reference in overloaded method calls, I'll use this ER to enable support
for these expressions in non-overloaded calls (actually in calls which
end up with just one applicable method - i.e deferring work on most specific
method determination to a later date)

The following program should compile, but does not:

// -------------
interface I {
	void foo(X x);
}

public class X {
	void foo(I i) {}

	void goo() {}
	
	{
		foo(X::goo);
	}
}

// --------------

BETA_JAVA8:

As a first step to supporting full blown usage of method and constructor
reference in overloaded method calls, I'll use this ER to enable support
for these expressions in non-overloaded calls (actually in calls which
end up with just one applicable method - i.e deferring work on most specific
method determination to a later date)

The following program should compile, but does not:

// -------------
interface I {
	void foo(X x);
}

public class X {
	void foo(I i) {}

	void goo() {}
	
	{
		foo(X::goo);
	}
}

// --------------
Combined fix and tests for bug 401789 and bug 401790 delivered here:
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=fbf658958d1eb066a4b5c16fdea253c3d8d5019c.

I'll add more tests before closing.
Basic tests are already released, I'll add additional tests on behalf of 
bug 401847 that will exercise poly conditionals that use method and
constructor references in invocation contexts.


[1.8][compiler] Enable support for method/constructor references in non-overloaded method calls.



Fix for Bug 401790 and bug 401789 
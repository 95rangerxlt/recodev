BETA_JAVA8:

The following program should compile fine, but fails to: We get three
error messages about: "The target type of this expression must be a functional interface" and an NPE.

// ----

interface I {
	void doit();
}

class X {
	Object o = (I) () -> {};
	I k = (()->{});
	I i = 1 == 2 ? () -> {} : () -> {};
	I j = () -> {};
}

// ----

While addressing this, we also need to ensure that the following is a well
formed construct in Java 8 while not in Java 7:

List<String> l = condition ? Arrays.asList() : Arrays.asList("a","b");

BETA_JAVA8:

The following program should compile fine, but fails to: We get three
error messages about: "The target type of this expression must be a functional interface" and an NPE.

// ----

interface I {
	void doit();
}

class X {
	Object o = (I) () -> {};
	I k = (()->{});
	I i = 1 == 2 ? () -> {} : () -> {};
	I j = () -> {};
}

// ----

While addressing this, we also need to ensure that the following is a well
formed construct in Java 8 while not in Java 7:

List<String> l = condition ? Arrays.asList() : Arrays.asList("a","b");
(In reply to comment #0)
> BETA_JAVA8:
> 
> The following program should compile fine, but fails to: We get three
> error messages about: "The target type of this expression must be a
> functional interface" and an NPE.

I have not included invocation contexts which has define a target type
as it will be dealt with separately.
Anirban, please follow up on this.
Fix and tests released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=677bf3763b6e383c756f5ca8cbbd80c6dec30c1f


[1.8][compiler] Conditional operator expressions should propagate target types



Fixed Bug 399778 - [1.8][compiler] Conditional operator expressions should propagate target types 
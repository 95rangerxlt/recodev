BETA_JAVA8: 

The following program should not compile, but does since RE drops the
explicit type argument <String>.

// --
interface I {
	void sam(X t, Integer s);
}
public class X {
	<T> void function(T t) {}
	public static void main(String [] args) {
		I i = X::<String>function;
		i = X::function;
		i = X::<Integer>function;
	}
}


Fix is trivial and will follow shortly.

BETA_JAVA8: 

The following program should not compile, but does since RE drops the
explicit type argument <String>.

// --
interface I {
	void sam(X t, Integer s);
}
public class X {
	<T> void function(T t) {}
	public static void main(String [] args) {
		I i = X::<String>function;
		i = X::function;
		i = X::<Integer>function;
	}
}


Fix is trivial and will follow shortly.
Fix and test available here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=293a53a19363893dc72bcd9c4bf117c4e143553f


[1.8][compiler] ReferenceExpression drops explicit type arguments



Fixed Bug 420580 - [1.8][compiler] ReferenceExpression drops explicit type arguments 
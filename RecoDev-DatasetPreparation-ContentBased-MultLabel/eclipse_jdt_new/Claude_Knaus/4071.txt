If you select the Format option from the pop up menu in a Java Editor your current selection location
is lost requiring you to search around for it again.

STEPS
1) Open a relatively large .java file
2) Go near the bottom
3) Select format - you are sent back to the top.


NOTES:

If you select the Format option from the pop up menu in a Java Editor your current selection location
is lost requiring you to search around for it again.

STEPS
1) Open a relatively large .java file
2) Go near the bottom
3) Select format - you are sent back to the top.


NOTES:
PRODUCT VERSION: 0.9



*** Bug 5559 has been marked as a duplicate of this bug. ***
I can't reproduce the exact same problem. It's true that the selection gets 
lost, but the cursor is put at the end of the previous selection.
ok, I reproduced it. Didn't realize that it only happens for no selection.
It's fixed from my point of view. There's currently a problem with the 
CodeFormatter which does not calculate mapped positions correctly if multi-line 
comments are involved.

Once this is fixed, the range check for StyledText.setSelection() can be 
removed from SourceViewer.
closing this bug, since the selection validation is done in TextViewer.
*** Bug 7215 has been marked as a duplicate of this bug. ***
*** Bug 6487 has been marked as a duplicate of this bug. ***


Format option loses place in editor (1GHQFU6)



[1.8] Partial fix for Bug 424071 - [1.8][select] cannot select method invoked on a lambda parameter with inferred type 

Fixed Bug 407106 - [1.8][code assist] Code assist failing for lambda expression with parameter of function call body 

Bug 407191 - [1.8] Binary access support for type annotations - adjust integration of new tests 

Bug 407191 - [1.8] Binary access support for type annotations 

Adjusting the test case message for the  fix for additional character issue raised in bug 399794 comment 7 (fixed as part of bug 407131) 

Fix for Bug 407131 [1.8][dom ast]ASTRewrite support for ReferenceExpression nodes family 

Bug 407189: [1.8] ASTRewritingTest should also support _since and _only on whole test class 

HEAD - 154071 

HEAD - 154071 

[nobug] removed deprecation warnings - use new API from debug.ui (bug 340710) 

partial fix of 4071, still depending on 5471 
F4 works fine in this case, but (menu) Search + Implementors + Workspace
brings up nothing after selecting Foo.

// --
@FunctionalInterface
interface Foo {
	int foo(int x);
}

public class T {
	// Select 'x' in lambda body and press Ctrl+G.
	Foo f1= x -> x; //[1]
	Foo f2= (int x) -> x; //[2]
}

F4 works fine in this case, but (menu) Search + Implementors + Workspace
brings up nothing after selecting Foo.

// --
@FunctionalInterface
interface Foo {
	int foo(int x);
}

public class T {
	// Select 'x' in lambda body and press Ctrl+G.
	Foo f1= x -> x; //[1]
	Foo f2= (int x) -> x; //[2]
}
Manoj, please take a look - If the fix is really small safe, we will consider for
GA.
Manoj, we should close this by 10th March if possible. Thanks.
Created attachment 240693
Proposed Patch
Patch looks good. 

In match(LambdaExpression node, MatchingNodeSet nodeSet) {

start with

if (node.resolvedType == null || node.resolvedType.isValidBinding())
    return IMPOSSIBLE_MATCH

Please release and resolve. Thanks !
(In reply to Srikanth Sankaran from comment #4)
> Patch looks good. 
> 
> In match(LambdaExpression node, MatchingNodeSet nodeSet) {
> 
> start with
> 
> if (node.resolvedType == null || node.resolvedType.isValidBinding())

This should be 

if (node.resolvedType == null || !node.resolvedType.isValidBinding())
(In reply to Srikanth Sankaran from comment #5)
> This should be 
> 
> if (node.resolvedType == null || !node.resolvedType.isValidBinding())

That turned out to be a wrong suggestion. 

Released Manoj's patch here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=cb2eaefdef69578cdf849641990d24a5851d3e0b

Thanks Manoj.


[1.8][search] Search implementors in workspace does not show lambda expressions.



Fixed Bug 429836 - [1.8][search] Search implementors in workspace does not show lambda expressions. 
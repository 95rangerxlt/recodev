CCE when trying to search for references to @Annot (a TYPE_USE annotation on an array dimension). Also happens for marker and single-member annotations.

package xy;

import java.lang.annotation.*;

@Target(ElementType.TYPE_USE)
@Retention(RetentionPolicy.RUNTIME)
@Documented
@interface Annot {
}

public class Try {
	{
		String tab @Annot() [] = null;
	}
}


!ENTRY org.eclipse.core.jobs 4 2 2013-12-16 14:03:34.616
!MESSAGE An internal error occurred during: "Java Search".
!STACK 0
java.lang.ClassCastException: org.eclipse.jdt.internal.core.Initializer cannot be cast to org.eclipse.jdt.core.IAnnotatable
	at org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.storeHandle(MemberDeclarationVisitor.java:145)
	at org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.visit(MemberDeclarationVisitor.java:253)
	at org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.traverse(SingleTypeReference.java:111)
	at org.eclipse.jdt.internal.compiler.ast.NormalAnnotation.traverse(NormalAnnotation.java:68)
	at org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.traverse(ArrayTypeReference.java:144)
	at org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.traverse(LocalDeclaration.java:299)
	at org.eclipse.jdt.internal.compiler.ast.Block.traverse(Block.java:145)
	at org.eclipse.jdt.internal.compiler.ast.Initializer.traverse(Initializer.java:134)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2619)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2773)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2504)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.process(MatchLocator.java:1737)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1147)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1188)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1320)
	at org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:95)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:231)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:515)
	at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:584)
	at org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run(JavaSearchQuery.java:144)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

CCE when trying to search for references to @Annot (a TYPE_USE annotation on an array dimension). Also happens for marker and single-member annotations.

package xy;

import java.lang.annotation.*;

@Target(ElementType.TYPE_USE)
@Retention(RetentionPolicy.RUNTIME)
@Documented
@interface Annot {
}

public class Try {
	{
		String tab @Annot() [] = null;
	}
}


!ENTRY org.eclipse.core.jobs 4 2 2013-12-16 14:03:34.616
!MESSAGE An internal error occurred during: "Java Search".
!STACK 0
java.lang.ClassCastException: org.eclipse.jdt.internal.core.Initializer cannot be cast to org.eclipse.jdt.core.IAnnotatable
	at org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.storeHandle(MemberDeclarationVisitor.java:145)
	at org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.visit(MemberDeclarationVisitor.java:253)
	at org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.traverse(SingleTypeReference.java:111)
	at org.eclipse.jdt.internal.compiler.ast.NormalAnnotation.traverse(NormalAnnotation.java:68)
	at org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.traverse(ArrayTypeReference.java:144)
	at org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.traverse(LocalDeclaration.java:299)
	at org.eclipse.jdt.internal.compiler.ast.Block.traverse(Block.java:145)
	at org.eclipse.jdt.internal.compiler.ast.Initializer.traverse(Initializer.java:134)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2619)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2773)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2504)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.process(MatchLocator.java:1737)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1147)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1188)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1320)
	at org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:95)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:231)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:515)
	at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:584)
	at org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run(JavaSearchQuery.java:144)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)
> Also happens for marker and single-member annotations.

For single-member annotations, I sometimes also just don't get any matches:

- paste to Package Explorer:

package xy;

import java.lang.annotation.*;

@Target(ElementType.TYPE_USE)
@Retention(RetentionPolicy.RUNTIME)
@Documented
@interface Annot2 {
	Class<int[]> value();
}

public class Try2 {
	{
//		String tab @Annot2(int[].class) [] = null;
	}
}

- uncomment the reference, do not save the editor
- put caret into reference to @Annot2
- Search > References
=> Exception:
java.lang.ClassCastException: org.eclipse.jdt.internal.core.Initializer cannot be cast to org.eclipse.jdt.core.IAnnotatable
	at org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.storeHandle(MemberDeclarationVisitor.java:145)
	at org.eclipse.jdt.internal.core.search.matching.MemberDeclarationVisitor.visit(MemberDeclarationVisitor.java:253)
	at org.eclipse.jdt.internal.compiler.ast.SingleTypeReference.traverse(SingleTypeReference.java:111)
	at org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation.traverse(SingleMemberAnnotation.java:67)
	at org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference.traverse(ArrayTypeReference.java:144)
	at org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.traverse(LocalDeclaration.java:299)
	at org.eclipse.jdt.internal.compiler.ast.Block.traverse(Block.java:145)
	at org.eclipse.jdt.internal.compiler.ast.Initializer.traverse(Initializer.java:134)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.reportMatching(MatchLocator.java:2619)

- save the editor
- search for references again
=> no matches found
Manoj, please see if we can fix this for EA2.
Created attachment 238424
Proposed Patch

Two issues listed in comment 0 and comment 1 addressed in this patch.
[Ref bug 209996 for background discussions on annotations search]
1. consumeSingleMemberAnnotation should simply reuse the member local
declared two lines above instead of materializing annotation all over
again.

2. I don't see any test failing if I disable the change to this method.
We should add a test that shows this line is necessary.

3. I would like to see some analysis documented here that says why the
changes are needed only for local variables and not for say fields.
(In reply to Markus Keller from comment #1)
> > Also happens for marker and single-member annotations.
> 
> For single-member annotations, I sometimes also just don't get any matches:

This seems like a bug even with SE7 annotations. I didn't verify it, but
that is what it at least looks like when I compare the various
the consume*Annotation() methods in SourceElementParser.
Please also verify in the IDE that the problems scenarios mentioned are
resolved and confirm here, Thanks.
Created attachment 238482
Proposed Patch

(In reply to Srikanth Sankaran from comment #4)
> 1. consumeSingleMemberAnnotation should simply reuse the member local
> declared two lines above instead of materializing annotation all over
> again.
 - Done 
> 2. I don't see any test failing if I disable the change to this method.
> We should add a test that shows this line is necessary.
 - Added
> 3. I would like to see some analysis documented here that says why the
> changes are needed only for local variables and not for say fields.
 - Would resolve only after putting the analysis here. Updating the patch in line with EA2 timeline though.

The original scenario described in the bug is fixed - manual confirmation done as well.
Patch looks good. Since the new test proves that a similar treatment for fields
as the one done for local variables is not necessary, I think we can release and
resolve this one.

For documentation/education's sakes do jot down your observations here as
why fields don't need modification.
(In reply to Srikanth Sankaran from comment #8)
> Patch looks good. Since the new test proves that a similar treatment for
> fields
> as the one done for local variables is not necessary, I think we can release
> and
> resolve this one.
> 
> For documentation/education's sakes do jot down your observations here as
> why fields don't need modification.

Will do so. And thanks for the review and release by http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=0e8a2b3bc15c38e29faaa2105eb6e0bbf7b15cd5


[1.8][search] CCE in search for references to TYPE_USE annotation on array dimension



Fixed Bug 424119 - [1.8][search] CCE in search for references to TYPE_USE annotation on array dimension 
int[] @Annot1 [] = new int[1] @Annot1 [2]; gets reduced to
int[]@Annot1[] = new int[1]@Annot1[2];

int[] @Annot1 [] = new int[1] @Annot1 [2]; gets reduced to
int[]@Annot1[] = new int[1]@Annot1[2];
Created attachment 237618
Test case

Ref: bug 417923 comment 9 point 2
Created attachment 237643
Proposed Patch

Fix with additional test cases
Looks good, thanks!

CodeFormatterVisitor#formatLeadingDimensions(TypeReference, boolean) and CodeFormatterVisitor#formatDimensions(TypeReference, int, int, boolean)
are now always called with spaceBeforeAnnotation=true.

Both method bodies can just use true instead of spaceBeforeAnnotation, and then we can get rid of the parameters (e.g. via Change Method Signature > Remove).
(In reply to Markus Keller from comment #3)
> Looks good, thanks!
> 
> CodeFormatterVisitor#formatLeadingDimensions(TypeReference, boolean) and
> CodeFormatterVisitor#formatDimensions(TypeReference, int, int, boolean)
> are now always called with spaceBeforeAnnotation=true.

Thanks Markus. Have incorporated this change and released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=a3e5b898cb4a20a395dd36117ef5b31b39ed2b46


[1.8][dom ast] AST Formatter removes blanks around annotations



Fix for Bug 422259 [1.8][dom ast] AST Formatter removes blanks around annotations 
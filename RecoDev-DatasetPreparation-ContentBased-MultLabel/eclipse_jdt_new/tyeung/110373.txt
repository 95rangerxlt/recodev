If a developer has a source file open that is generated by an annotation 
processor and then changes the processor/factory that generated that file to a 
different annotation factory implementation (i.e. different jar file == 
different generated source file) the changes are not reflected in the open 
source file until it is closed and re-opened in the editor. The project is 
being rebuilt correctly but this is confusing to developers as they can't see 
the changes being made if they already have the generated source open.  
Clicking refresh in the ‘Package Explorer’ view does not refresh the file in 
the editor.

Setup steps: Create simple project with simple a class that uses an annotation 
like @HelloWorld. Create two seperate @HelloWorld processors, one in external 
Jar A.jar and the other in B.jar, make sure they generate slightly different 
source at compile time but with the same class and package, one can 
print 'Hello world A.jar' the other 'Hello World B.jar'. Add them to classpath 
and to the Annotation Factory Path (Right click on project/Properties/Java 
Compiler/Annotation Processing/Factory Path/Add External Jars). Add them so 
A.jar is highier on the list than B.jar so A.jar will be used at compile time. 

Repro Steps: Once you have set up your simple project and can see the source 
file generated by the @HelloWorld annotation processor found in A.jar, open 
the generated source file in the IDE. Now go into project properties and 
change the Factory path so that B.jar is higher in the Factory path and apply 
the changes. This means the project will be re-built with the processor found 
in B.jar but the generated source displayed in the open file in the editor is 
still showing the old source generated by A.jar. Clicking refresh on the 
Package Explorer view does not fix the problem. You have to close the file and 
reopen it to see the newly generated file by B.jar processor. 

Note: When you edit a source file outside of the IDE there is a prompt 
advising that ‘the file has changed on the file system. Do you want to load 
the changes?’

If a developer has a source file open that is generated by an annotation 
processor and then changes the processor/factory that generated that file to a 
different annotation factory implementation (i.e. different jar file == 
different generated source file) the changes are not reflected in the open 
source file until it is closed and re-opened in the editor. The project is 
being rebuilt correctly but this is confusing to developers as they can't see 
the changes being made if they already have the generated source open.  
Clicking refresh in the ‘Package Explorer’ view does not refresh the file in 
the editor.

Setup steps: Create simple project with simple a class that uses an annotation 
like @HelloWorld. Create two seperate @HelloWorld processors, one in external 
Jar A.jar and the other in B.jar, make sure they generate slightly different 
source at compile time but with the same class and package, one can 
print 'Hello world A.jar' the other 'Hello World B.jar'. Add them to classpath 
and to the Annotation Factory Path (Right click on project/Properties/Java 
Compiler/Annotation Processing/Factory Path/Add External Jars). Add them so 
A.jar is highier on the list than B.jar so A.jar will be used at compile time. 

Repro Steps: Once you have set up your simple project and can see the source 
file generated by the @HelloWorld annotation processor found in A.jar, open 
the generated source file in the IDE. Now go into project properties and 
change the Factory path so that B.jar is higher in the Factory path and apply 
the changes. This means the project will be re-built with the processor found 
in B.jar but the generated source displayed in the open file in the editor is 
still showing the old source generated by A.jar. Clicking refresh on the 
Package Explorer view does not fix the problem. You have to close the file and 
reopen it to see the newly generated file by B.jar processor. 

Note: When you edit a source file outside of the IDE there is a prompt 
advising that ‘the file has changed on the file system. Do you want to load 
the changes?’
Adrian, could you attach A.jar and B.jar to this bug if you have them handy?
Created attachment 28365
A.jar

This is a simple hello world Annotation factory and processor used to replicate
this bug, it generates a file that contain s the phrase "A.jar". The annotation
is @HelloWorldAnnotation
Created attachment 28366
B.jar

Same as A.jar except generates method helloWorldB() and the prints the string
"Hello, (B) world!  This file produced by B.Jar"
fix checked into CVS Oct 20. 


Source file generated by annotation processor not updated in IDE



Bugzilla Bug 110373 + fix broken tests 
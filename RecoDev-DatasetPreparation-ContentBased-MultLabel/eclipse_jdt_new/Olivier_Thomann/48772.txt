The Code Formatter In General works Great, There is however a Small Bu, in the 
formatting and Indentation.  The Eclipse Editor is setup to use Spaces rather 
than tabs.  When An Extire Module is formatted, or just a small segment of the 
code. There are levels where the indentation is not correct.
Here is an example of the formmating error.  Notice the Open Braces under the 
blocks are indendeted 1 too many spaces.
  public void temp()
  {
    boolean minWidthOn = true;
    if (minWidthOn)
     {
      // If a user - calls this method, turn off auto resize
      this.setAutoResizeMode(AUTO_RESIZE_OFF);
      // int columnCount = getColumnCount();
      int columnCount = this.getColumnModel().getColumnCount();
      for (int i = 0; i < columnCount; i++)
       {
        // Get the column
        TableColumn col = this.getColumn(this.getColumnName(i));
        int tempSize = widestCellColumn(col);
        // Set the minimum width for a specific column
        col.setMinWidth(tempSize);
      }

    }
  }

Here is the same example.  I was expecting.
  public void temp()
  {
    boolean minWidthOn = true;
    if (minWidthOn)
    {
      // If a user - calls this method, turn off auto resize
      this.setAutoResizeMode(AUTO_RESIZE_OFF);
      // int columnCount = getColumnCount();
      int columnCount = this.getColumnModel().getColumnCount();
      for (int i = 0; i < columnCount; i++)
      {
        // Get the column
        TableColumn col = this.getColumn(this.getColumnName(i));
        int tempSize = widestCellColumn(col);
        // Set the minimum width for a specific column
        col.setMinWidth(tempSize);
      }

    }
  }

The Code Formatter In General works Great, There is however a Small Bu, in the 
formatting and Indentation.  The Eclipse Editor is setup to use Spaces rather 
than tabs.  When An Extire Module is formatted, or just a small segment of the 
code. There are levels where the indentation is not correct.
Here is an example of the formmating error.  Notice the Open Braces under the 
blocks are indendeted 1 too many spaces.
  public void temp()
  {
    boolean minWidthOn = true;
    if (minWidthOn)
     {
      // If a user - calls this method, turn off auto resize
      this.setAutoResizeMode(AUTO_RESIZE_OFF);
      // int columnCount = getColumnCount();
      int columnCount = this.getColumnModel().getColumnCount();
      for (int i = 0; i < columnCount; i++)
       {
        // Get the column
        TableColumn col = this.getColumn(this.getColumnName(i));
        int tempSize = widestCellColumn(col);
        // Set the minimum width for a specific column
        col.setMinWidth(tempSize);
      }

    }
  }

Here is the same example.  I was expecting.
  public void temp()
  {
    boolean minWidthOn = true;
    if (minWidthOn)
    {
      // If a user - calls this method, turn off auto resize
      this.setAutoResizeMode(AUTO_RESIZE_OFF);
      // int columnCount = getColumnCount();
      int columnCount = this.getColumnModel().getColumnCount();
      for (int i = 0; i < columnCount; i++)
      {
        // Get the column
        TableColumn col = this.getColumn(this.getColumnName(i));
        int tempSize = widestCellColumn(col);
        // Set the minimum width for a specific column
        col.setMinWidth(tempSize);
      }

    }
  }
In addition to regular open/close blocks.  I have found another that becomes 
even more annoying.  Still the same setup.  The Indentation on pasting the 
code performed the following format.

  public Object getColumnDataCell(int col)
  {
    Object obj = "";
    switch (col)
    {
      case 0 :
        obj = getId();
        break;
       case 1 :
         obj = getDistrict();
         break;
        case 2 :
          obj = getPack();
          break;
         case 3 :
           obj = getDen();
           break;
          case 4 :
            obj = getLastName();
            break;
           case 5 :
             obj = getFirstName();
             break;
            case 6 :
              obj = getVehicleNumber();
              break;
             default :
               break;
    }
    return obj;
  }

Could you please attach your formatting settings?
Are these issues when you paste some code or when you format the code?

I can format both codes without a problem.
Seems to be a pasting issue.
Move to JDt/Text for comment.
Olivier, in his inital comment he writes:
>When An Extire Module is formatted, or just a small segment

Given the fact that it also happens when he formats the entire CU I'd assume
it's on the formatter side.

Dani,

I formatted a complete CU with both pieces of code and I have absolutely no 
problem. The result is fine.

Hans-Jurgen, could you please attach your code formatter preferences?
Go to the code formatter preference page and select your profile and then save 
it into a file and attach that file.

Thanks.
This has been fixed sometime before christmas. Closing.
Created attachment 7402
Attachement of My Code Formatter Preferences

Recently, I have been using the super customized formatter, as I believe it
works better.  Maybe in my mind?

Anyway,  The only thing I can find with the profile is that on occasion the
Formmater. does not format all the rules.  However, the Indenter does?	Wierd.
Tom & Olivier, can you please comment comment 8.
I'd like to understand what "the rules" means.
Could you please provide steps to reproduce the problem?

Thanks.
The Baisc steps to reproduce the problem is use the basic code formatter.  
Sets the indentation level to 2, use Spaces instead of tabs.  
Then you can either find a piece of code with more than one level deep of 
indentation.  Such as Nested ifs/for loops, etc.  COpy then paste. The pasted 
section code should produce the results. of having the indentaion level offset.
Note you may want to set up formatter to move the braces down to the next line 
as well as control blocks on seperate lines as well.  "else if" on same line.

As said, this has been fixed recently. Please reopen if you still see this with
a recent integration build. Works fine for me using your settings on I20040113.


Formating and Indentation levels.


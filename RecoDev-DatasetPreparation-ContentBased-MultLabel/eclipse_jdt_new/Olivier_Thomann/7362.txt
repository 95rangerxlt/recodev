Using build 1218:

Here is a test case:

public class A  implements I \u007B \u007D

\u007B = {
\u007D = }

I is an interface that simply defines one method:
public interface I {
	void foo();
}

If I select A in the outliner and I do "Override Methods" and I select the 
method foo from I, I got:
public class A  implements I \u007B \u007	/*
	 * @see I#foo()
	 */
	public void foo() {
	}

D

instead of:
public class A  implements I \u007B 	/*
	 * @see I#foo()
	 */
	public void foo() {
	}

\u007D

This means the unicode are not handled at all by this operation. The 
corresponding JavaModel operation seems to be 
org.eclipse.jdt.internal.core.CreateElementInCUOperation. The problem seems to 
be from the DOMNode position. The fInsertionPosition is incorrect.
The DOMType and the DOMNode in general use '{' and '}' directly in the normalize 
operations without taking care of unicodes.

Using build 1218:

Here is a test case:

public class A  implements I \u007B \u007D

\u007B = {
\u007D = }

I is an interface that simply defines one method:
public interface I {
	void foo();
}

If I select A in the outliner and I do "Override Methods" and I select the 
method foo from I, I got:
public class A  implements I \u007B \u007	/*
	 * @see I#foo()
	 */
	public void foo() {
	}

D

instead of:
public class A  implements I \u007B 	/*
	 * @see I#foo()
	 */
	public void foo() {
	}

\u007D

This means the unicode are not handled at all by this operation. The 
corresponding JavaModel operation seems to be 
org.eclipse.jdt.internal.core.CreateElementInCUOperation. The problem seems to 
be from the DOMNode position. The fInsertionPosition is incorrect.
The DOMType and the DOMNode in general use '{' and '}' directly in the normalize 
operations without taking care of unicodes.
Fixed and released in HEAD.


Override Methods doesn't handle unicodes



Bug 427362: [1.8][dom ast] ASTRewriteFormatter uses wrong "Insert new line after annotation" option for SingleVariableDeclaration 

87362 

Update for 7362, 7295 and 6678 

Fixes for 7362, 7295 and 6678 

Bug 173620 Default Javadoc location for JDK 6 missing 

Bug 73624 - Don't prompt for main class when main class is selected 

Bug 73624  - Don't prompt for main class when main class is selected 

57362 organize import and class with first charachter '_' don't work [code manipulation] 
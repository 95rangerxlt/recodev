Build Identifier: I20100129-1300

Generating hashCode() and equals() for this class:

package test;
public class Object {
	public String s;
}

yields invalid equals() signature:

public boolean equals(Object obj)

With another class called 'Object' in scope it should be:

public boolean equals(java.lang.Object obj)


Reproducible: Always

Build Identifier: I20100129-1300

Generating hashCode() and equals() for this class:

package test;
public class Object {
	public String s;
}

yields invalid equals() signature:

public boolean equals(Object obj)

With another class called 'Object' in scope it should be:

public boolean equals(java.lang.Object obj)


Reproducible: Always
By the way I know nobody should create classes called 'Object' as that's asking for trouble (we have one here :) ) but I'm dealing with code generated from external schema which happens to have a class called Object.
Moving to JDT/UI
In addition to using the import rewrite context in GenerateHashCodeEqualsOperation#getQualifiedName(..) (bug 295638), GenerateHashCodeEqualsOperation#createEqualsMethod(..) should not do fAst.newSimpleName("Object")
Fixed in GenerateHashCodeEqualsOperation.


[hashcode/equals] Generated equals() invalid if there's an 'Object' class in scope



Bug 304174: [hashcode/equals] Generated equals() invalid if there's an 'Object' class in scope 
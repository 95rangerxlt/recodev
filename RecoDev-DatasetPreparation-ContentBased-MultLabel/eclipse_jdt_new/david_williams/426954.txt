Created attachment 239455
change to widen range of prereq of annotations

A couple other local changes I'd made, but had forgotten about ... 

Please note: the one change, in 
org.eclipse.jdt.core.tests.compiler
is _required_ to compile and package as desired. 
It is the one that replaces two "requires" statements

 org.eclipse.jdt.annotation;bundle-version="[1.1.0,2.0.0)",
 org.eclipse.jdt.annotation;bundle-version="[2.0.0,3.0.0)";resolution:=optional

With one but with wider range: 
org.eclipse.jdt.annotation;bundle-version="[1.1.0,3.0.0)"

BUT
the second change, for 
org.eclipse.jdt.core.tests.model
is not technically required and *might* not be desired? 
It widens the range so either of the two annotations bundles can be 'resolved', but not sure if it was intentionally restricted to 1.1.0 or not?

Created attachment 239455
change to widen range of prereq of annotations

A couple other local changes I'd made, but had forgotten about ... 

Please note: the one change, in 
org.eclipse.jdt.core.tests.compiler
is _required_ to compile and package as desired. 
It is the one that replaces two "requires" statements

 org.eclipse.jdt.annotation;bundle-version="[1.1.0,2.0.0)",
 org.eclipse.jdt.annotation;bundle-version="[2.0.0,3.0.0)";resolution:=optional

With one but with wider range: 
org.eclipse.jdt.annotation;bundle-version="[1.1.0,3.0.0)"

BUT
the second change, for 
org.eclipse.jdt.core.tests.model
is not technically required and *might* not be desired? 
It widens the range so either of the two annotations bundles can be 'resolved', but not sure if it was intentionally restricted to 1.1.0 or not?
Thanks for the patch, David! Released via:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=1aadc77c6b3d7d382df639073b5613474ebabb3e


[BETA_JAVA8] use wide range in manifest.mf prereq for o.e.j.annotations



Bug 426954 - [BETA_JAVA8] use wide range in manifest.mf prereq for o.e.j.annotations 
Created attachment 238880
contains two projects to show this issue

I am using JDT/Eclipse Java 8 Support (version is 1.0.0.v20140110-0104_BETA_JAVA8).

I attach two projects.
- apt-lib (contains an annotation processor to log this issue)
- apt-client (contains processed source code)

The log is following:
-----
eclipse.buildId=4.3.0.M20130911-1000
java.version=1.8.0-ea
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=ja_JP
Framework arguments:  -product org.eclipse.epp.package.standard.product -keyring /Users/nakamura/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.standard.product -keyring /Users/nakamura/.eclipse_keyring -showlocation

Info
Sat Jan 11 09:55:58 JST 2014
class=client.MyInterface, method=run, param=value, annotationSize=0, myParam=null
-----

This log shows that the type annotation 'lib.MyType' is processed, but the parameter annotation  'lib.MyParam' is not found.

Created attachment 238880
contains two projects to show this issue

I am using JDT/Eclipse Java 8 Support (version is 1.0.0.v20140110-0104_BETA_JAVA8).

I attach two projects.
- apt-lib (contains an annotation processor to log this issue)
- apt-client (contains processed source code)

The log is following:
-----
eclipse.buildId=4.3.0.M20130911-1000
java.version=1.8.0-ea
java.vendor=Oracle Corporation
BootLoader constants: OS=macosx, ARCH=x86_64, WS=cocoa, NL=ja_JP
Framework arguments:  -product org.eclipse.epp.package.standard.product -keyring /Users/nakamura/.eclipse_keyring -showlocation
Command-line arguments:  -os macosx -ws cocoa -arch x86_64 -product org.eclipse.epp.package.standard.product -keyring /Users/nakamura/.eclipse_keyring -showlocation

Info
Sat Jan 11 09:55:58 JST 2014
class=client.MyInterface, method=run, param=value, annotationSize=0, myParam=null
-----

This log shows that the type annotation 'lib.MyType' is processed, but the parameter annotation  'lib.MyParam' is not found.
Does it work with javac?
Yes.

java version.
-----
$ java -version
java version "1.8.0-ea"
Java(TM) SE Runtime Environment (build 1.8.0-ea-b121)
Java HotSpot(TM) 64-Bit Server VM (build 25.0-b63, mixed mode)
-----

javac and log.
-----
$ javac -J-Duser.language=en -J-Duser.country=us -cp ../apt-lib/build/apt-lib.jar -sourcepath ./src ./src/client/MyInterface.java 
Note: class=client.MyInterface, method=run, param=value, annotationSize=1, myParam=@lib.MyParam()
-----
I will take thisl
From command line ECJ, this is what I get:

1. WARNING: class=client.MyInterface, method=run, param=value, annotationSize=1, myParam=@lib.MyParam
1 problem (1 warning)

Looks good to me. I tried with IDE and see similar results.

If you are convinced it's a bug, please share more information, esp. what steps you followed to reproduce.
> If you are convinced it's a bug, please share more information, esp. what
> steps you followed to reproduce.

My steps are followings:

1. install Eclipse Standard 4.3.1 (Mac OS X 64 Bit)
2. install JDT/Eclipse Java 8 Support (BETA) according to http://wiki.eclipse.org/JDT/Eclipse_Java_8_Support_(BETA)
3. import my attached projects (apt-lib and apt-client) into a workspace
4. export the apt-lib project as apt-lib.jar and place it apt-lib/build directory
5. configure build path of the apt-client project to refer the apt-lib.jar
6. configure apt factory path of the apt-client project to refer the apt-lib.jar
7. build the apt-client project

This is what I get:
-----
class=client.MyInterface, method=run, param=value, annotationSize=0, myParam=null
-----

When I skip 2nd step, I get the expected result as follows:
-----
class=client.MyInterface, method=run, param=value, annotationSize=1, myParam=@lib.MyParam
-----
(In reply to Toshihiro Nakamura from comment #5)
> > If you are convinced it's a bug, please share more information, esp. what
> > steps you followed to reproduce.
> 
> My steps are followings:

Thanks, I can reproduce. The difference in our set-up is I was testing off BETA_JAVA8/HEAD. I just noticed the update site doesn't include the apt bundles.

Andy, how easy/difficult would it be to include them?
Andy, thanks in advance for taking care of this.
> Andy, how easy/difficult would it be to include them?

I've setup the update site build. Andy asked me to look into this.
It is likely not hard to add these bundles, but it would help if someone gave me a precise reference what bundle(s) they want added and what feature(s) these belong to.

I.e. please clarify what is meant by 'the apt bundles'.

Thanks,

Kris
(In reply to Kris De Volder from comment #8)
> I.e. please clarify what is meant by 'the apt bundles'.

Thanks for looking into this Kris.
I meant the following bundles:
 org.eclipse.jdt.apt.core
 org.eclipse.jdt.compiler.apt
 org.eclipse.jdt.compiler.tool (Not APT)
 
The following probably haven't been touched, but won't mind if they are included:
 org.eclipse.jdt.apt.ui
 org.eclipse.jdt.apt.pluggable.core
I've updated the build and changes should now be live on the update site.
Please give it a try and let me know if there's any problem with it.
I tried it.
It works very fine.

Thanks.
Thanks gentlemen.


[1.8] Annotation processor does not find parameter annotations


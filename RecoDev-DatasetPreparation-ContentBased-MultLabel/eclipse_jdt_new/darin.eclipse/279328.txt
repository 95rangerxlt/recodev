Created attachment 138454
test string saved as UTF-8 encoded file (no BOM)

Build ID: I20090528-2000

Steps To Reproduce:
1. Create a new Java project (default settings)
2. Create the package "test"
3. Import files "input.txt" and "TestUTF8.java" into the created package
4. Set file encoding of both files to "UTF-8" (by marking each single file, Properties->Resource->Encoding: Other->UTF-8)
5. Create Run Configuration with console-encoding UTF-8 (Run Configuration->Common->Console Encoding->Other->UTF-8)
6. Run application
7. copy the final string test from class test.TestUTF8 to the console
8. press enter


More information:
You should then have the following output:

Test 1 ( Console )
&#23376;&#20379;&#23481;&#35469;
 E5 AD 3F E4 BE 9B E5 AE B9 E8 AA 3F (source)
 E5 AD 90 E4 BE 9B E5 AE B9 E8 AA 8D (expected)

Test 2 ( File )
 E5 AD 90 E4 BE 9B E5 AE B9 E8 AA 8D (source)
 E5 AD 90 E4 BE 9B E5 AE B9 E8 AA 8D (expected)

It shows that reading the same test string via the console and the input file yield a different results.

It seems that there is a bug in the way how the "Console View" translates input into the desired encoding. This only effects System.in but not System.out or System.err!

The order of the four japanese character that the test string is composed of doesn't matter. The problem is always caused by character one and four.

(Tested on Windows XP SP3, Eclipse 3.5 RC3 and 3.4.2)

Created attachment 138454
test string saved as UTF-8 encoded file (no BOM)

Build ID: I20090528-2000

Steps To Reproduce:
1. Create a new Java project (default settings)
2. Create the package "test"
3. Import files "input.txt" and "TestUTF8.java" into the created package
4. Set file encoding of both files to "UTF-8" (by marking each single file, Properties->Resource->Encoding: Other->UTF-8)
5. Create Run Configuration with console-encoding UTF-8 (Run Configuration->Common->Console Encoding->Other->UTF-8)
6. Run application
7. copy the final string test from class test.TestUTF8 to the console
8. press enter


More information:
You should then have the following output:

Test 1 ( Console )
&#23376;&#20379;&#23481;&#35469;
 E5 AD 3F E4 BE 9B E5 AE B9 E8 AA 3F (source)
 E5 AD 90 E4 BE 9B E5 AE B9 E8 AA 8D (expected)

Test 2 ( File )
 E5 AD 90 E4 BE 9B E5 AE B9 E8 AA 8D (source)
 E5 AD 90 E4 BE 9B E5 AE B9 E8 AA 8D (expected)

It shows that reading the same test string via the console and the input file yield a different results.

It seems that there is a bug in the way how the "Console View" translates input into the desired encoding. This only effects System.in but not System.out or System.err!

The order of the four japanese character that the test string is composed of doesn't matter. The problem is always caused by character one and four.

(Tested on Windows XP SP3, Eclipse 3.5 RC3 and 3.4.2)
Created attachment 138455
short program to show the problem
When launching the example from the host/dev workspace it creates System.in with the file.encoding property of the host/dev workspace. Not sure whether we can control this input stream.

If you launch your host/dev workspace using -Dfile.encoding="UTF-8" it will work as expected.
Created attachment 138573
Fix
Thanks. Just tested the proposed solution. Works fine for me as long as file.encoding is set to UTF-8 in eclipse.ini
Created attachment 162997
updated patch

Left old constructor for internal dependencies.
Applied/Fixed.


Console View : Problem in UTF-8 translation


AK (6/11/01 5:21:41 PM)
	generete getters/setters uses out naming policy that all field names start with f
	if you create a getter for a field fFred
	the javadoc comments says "Gets the fred"
	how does it know that the leading f does not mean anything and can be ommited in the comment?
	it makes the same assumption for all one-letter lowercase prefixes

	it should not try to be too smart and just say "Gets fFred." (needs a period at the end)

	in other companies the leading f or anything might have some totally different meaning and generating 
	a comment without it will be very inappropriate

NOTES:
EG (7/12/01 10:57:38 AM)
	make it a preference, low prio

AK (6/11/01 5:21:41 PM)
	generete getters/setters uses out naming policy that all field names start with f
	if you create a getter for a field fFred
	the javadoc comments says "Gets the fred"
	how does it know that the leading f does not mean anything and can be ommited in the comment?
	it makes the same assumption for all one-letter lowercase prefixes

	it should not try to be too smart and just say "Gets fFred." (needs a period at the end)

	in other companies the leading f or anything might have some totally different meaning and generating 
	a comment without it will be very inappropriate

NOTES:
EG (7/12/01 10:57:38 AM)
	make it a preference, low prio
moved to 'active'
PRODUCT VERSION:
	122


added preference page > 11122


generate getter/setter too smart on names (1GF5WW1)



Fixed Bug 439158 - [1.8][compiler][null] Adding null annotation to return type causes IllegalStateException and sometimes InvocationTargetException 

Fix for bug 391521 - [1.8][compiler] Error highlighting is not accurate for type references with type annotations 

Bug 391517 - java.lang.VerifyError on code that runs correctly in Eclipse 3.7 and eclipse 3.6 

Bug 391517 - java.lang.VerifyError on code that runs correctly in Eclipse 3.7 and eclipse 3.6 

Bug 391517 - java.lang.VerifyError on code that runs correctly in Eclipse 3.7 and eclipse 3.6 

Fix for bug 391500: [1.8][compiler] Type annotations on Qualified Allocation Expressions dropped. 

Bug 248163, 253915 - properly resolve annotated fields and methods when retrieved with RoundEnv.getElementsAnnotatedWith(). 

Bugs 248163 and 253915 - properly resolve types returned by getElementsAnnotatedWith() in IDE. 

HEAD - log report for bug 143915 

verified bug 139152 [preferences] Java->Debug preference page validates uninitialized fields 

 Bug 139152 - [preferences] Java->Debug preference page validates uninitialized fields 

Bug 391520: [preferences] UI addition: Warning for Unused Generic Parameter 

139150 Externalize String and Find Broken NLS actions should have same enablement rules 

139158 JavaModelUtil.applyTextEdit should not start rewrite sessions for empty edits 

[39155] 
Working on bug 70827, I saw that jdt-ui always use a string pattern while
searching  for method declaration and never IJavaElement pattern...

It seems quite normal when focus is on Outline view or in Package explorer but
this can return unexepected matches when selected IMethod comes from an editor.

A perfect example to illustrate this issue is bug 33800.

Let's say that you add a class X in project P1:
public class X {
	void foo() {
		new C().method();
	}
}
If you select the message send method and look for declarations in workspace
using popup-menu item, then you get 4 matches although I would expect only the 2
of project P1...

Working on bug 70827, I saw that jdt-ui always use a string pattern while
searching  for method declaration and never IJavaElement pattern...

It seems quite normal when focus is on Outline view or in Package explorer but
this can return unexepected matches when selected IMethod comes from an editor.

A perfect example to illustrate this issue is bug 33800.

Let's say that you add a class X in project P1:
public class X {
	void foo() {
		new C().method();
	}
}
If you select the message send method and look for declarations in workspace
using popup-menu item, then you get 4 matches although I would expect only the 2
of project P1...
fixed > 20050314


[search] Search for method declaration always use a string pattern [search]



76014 [search] Search for method declaration always use a string pattern 
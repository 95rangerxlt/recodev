Build: I20030206

The "filecomment" template description says it is used by the new class and
interface wizards.  This template doesn't seem to be used anymore.  Instead I
now get the template from the code generation preference page. The catch block
template is also found in two places.  Having two template preference pages with
some overlapping entries seems confusing.

Build: I20030206

The "filecomment" template description says it is used by the new class and
interface wizards.  This template doesn't seem to be used anymore.  Instead I
now get the template from the code generation preference page. The catch block
template is also found in two places.  Having two template preference pages with
some overlapping entries seems confusing.
Martin, we should try to do something here since it is annoying if existing 
workspaces don't work as expected anymore and the user has no obvious clue how 
to fix it.

IMO we should do the following:

If the file comment and type comment template isn't the default then we should 
try to generate the new code templates based on the values of the file and type 
comment template. And we should change the value of the filecomment template 
with regarding of creating new classes and interfaces.
I'm afraid that adding some smartness will add more confusion. I can't remove 
the old filecomment template as users might still want to use it as normal 
template. So if I do a copy, I'm sure people will still modify it in the normal 
templates and write a bug report that this didn't change the code template.

Right now, when you create a class, you see the new default comment. 'To 
modify, change the code template in ...'. This should be enough help to realize 
that we have a new story. Of course it's not very nice to force people to go 
again to the preference page, but then they at least see the new possibilities 
(adding comment before/after package statement or type).

There is the same issue with the type comment. 

I agree that smartness will result in more errors. However the current solution 
doesn't give a user enough hints that something has changed regarding code 
generation. If I create a class I don't look at the comments anymore. So users 
might end up with lots of new classes until they recognize that the "wrong" 
template was used.

Martin, what would you think about adding a dialog that pops-up if a new class 
or type is created, informing the user that the new code templates are used. 
The dialog could have a check box "Don't show this dialog again".

Additionally we should remove the file and type comment template from the 
default templates.



dialog added > 20030210


filecomment template no longer used [code manipulation]



31150 filecomment template no longer used [code manipulation] 
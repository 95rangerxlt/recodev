When adding a new field to a class other than the one you're editing via the
suggestion box, the focus is not set on the new class.

To reproduce:

Open class A, type classb.newMethod().
Use the 'suggestion' facility to add newMethod to classb

At this point, the classb editor is open and the implementation area is
helpfully selected, but the editor pane does not have the focus.

If it did, one could begin to type, replacing the 'todo' text and carry on.

When adding a new field to a class other than the one you're editing via the
suggestion box, the focus is not set on the new class.

To reproduce:

Open class A, type classb.newMethod().
Use the 'suggestion' facility to add newMethod to classb

At this point, the classb editor is open and the implementation area is
helpfully selected, but the editor pane does not have the focus.

If it did, one could begin to type, replacing the 'todo' text and carry on.
The intentention of the current behaviour is that the user prefers to continue
the code and later fill in the method. Having the TODO tag, it is possible to
navigate to the new method (if you enabled to show todo markers in the overview
bar on the right side.
I guess this behaviour can be discussed.
Ah, now I can see where you'd want to be able to leave that generated code and
its todo in there.  However, whether the edit pane has the focus or not, isn't
the action the same to return?  (mouse action or hotkey)  

Allowing you to also implement the method by just continuing to type seems like
it wouldn't affect the original behavior.  Assuming its a small change, I think
it'd be a nice addition.
Now, the new method is always selected (regardless if in the same file or not)
We will have a look what are the reactions, and might come up with another solution


create new method suggestion doesn't set focus [quick fix]


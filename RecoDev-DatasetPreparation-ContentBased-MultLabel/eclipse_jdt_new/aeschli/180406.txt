The fixes for bug 179179, bug 157314, and bug 156357 overlap with the same set of files (particularly PackageExplorerActionProvider and the extension in the plugin.xml). 

There is one dependency (implementation) in org.eclipse.ui.navigator that changes how the extension state model is managed (see bug 156357) which requires the latest version in HEAD. 


The release of this patch will fix bug 157314 and bug 179179. 

Bug 156357 has other changes (not in the JDT extension) to come.

The fixes for bug 179179, bug 157314, and bug 156357 overlap with the same set of files (particularly PackageExplorerActionProvider and the extension in the plugin.xml). 

There is one dependency (implementation) in org.eclipse.ui.navigator that changes how the extension state model is managed (see bug 156357) which requires the latest version in HEAD. 


The release of this patch will fix bug 157314 and bug 179179. 

Bug 156357 has other changes (not in the JDT extension) to come.
Created attachment 62613
Patch for the mentioned bugs
Thanks for the patches, Michael.

a. The plugin.xml disables our refactorings on IResources: Don't we want to use our refactorings on IResources, as long as they are in Java projects?
b. The enablement tests for 'org.eclipse.jdt.core.IJavaElement'. Having that, testing for 'IJavaProject' and 'IClassFile' is not needed anymore as they are both IJavaElement
c. the test for IStorage can now be eliminated, all IStorage that we care about are also IJarEntryResource
d. what is <adapt type="java.util.Collection"> used for? 
e. There are two unused fields in PackageExplorerRefactorActionProvider and PackageExplorerActionProvider.
f. Please use our naming conventions to use 'f' for fields
g. Please rather remove old code than commenting it out
h. Why are there 'synchronized' blocks in CommonLayoutActionGroup. These methods can only be called in the UI thread, no?
i. Wouldn't it be better to call the 'PackageExplorer*' classes: 'JavaNavigator*' ?

>a. The plugin.xml disables our refactorings on IResources: Don't we want to use
our refactorings on IResources, as long as they are in Java projects?

Unfortunately, it would be shaky to show the JDT actions conditionally based on whether they were in Java projects; for cases where JDT overlaps with platform concerns (CDT), this wouldn't work. If you try doing this for source folders only, then you will impact downstream contributors (e.g. the custom Java Web project rendering in WTP). If you want to be isolated just to Java elements, then I would limit it to IJavaElement and the other JDT contributed types. 

I also believe that the user would be confused on seeing a different set of menu actions on a resource in a Java project vs. a Simple project vs. a CDT vs. a .. project. I don't think users expect the menu to change so dramatically within the same view just conditionally based on the element's parent. 


>b. The enablement tests for 'org.eclipse.jdt.core.IJavaElement'. Having that,
testing for 'IJavaProject' and 'IClassFile' is not needed anymore as they are
both IJavaElement

I will update the patch. 

>c. the test for IStorage can now be eliminated, all IStorage that we care about
are also IJarEntryResource

I will update the patch. 

>d. what is <adapt type="java.util.Collection"> used for? 
That clause (also the size == 0 subcondition) is used to indicate enablement for empty selection. 

>e. There are two unused fields in PackageExplorerRefactorActionProvider and
PackageExplorerActionProvider.

I will update the patch. 

>f. Please use our naming conventions to use 'f' for fields

If there is a spot where this wasn't the case, then it was an oversight; I'll review and then update the patch.

>g. Please rather remove old code than commenting it out

I will update the patch. 

>h. Why are there 'synchronized' blocks in CommonLayoutActionGroup. These
methods can only be called in the UI thread, no?

There is some initialization that can occur outside of the UI thread and so I tried to be a bit defensive where possible. 

>i. Wouldn't it be better to call the 'PackageExplorer*' classes:
'JavaNavigator*' ?

We could; I will update the patch. 



I will update the patch for b, c, e, f, g, and i.
ok, thanks!
Created attachment 62667
An updated patch that takes the review comments into account.

> b.

Changed the enablement expressions to: 

<or>   
  <instanceof value="org.eclipse.jdt.core.IJavaElement" />
  <instanceof value="org.eclipse.jdt.core.IJarEntryResource" /> 
  <instanceof value="org.eclipse.jdt.internal.ui.packageview.PackageFragmentRootContainer" /> 
  <adapt type="java.util.Collection"> 
    <count value="0" />
  </adapt>				
</or>

QUESTION: Should these clauses also include (instance IFile && IFile.extension == .jar) ?

QUESTION: Should one or more of the OpenView/JavaSearch/GenerateBuildPath/Generate actions groups be split out further to be contributed to all IResources? 

> c. Addressed in b.

> e. 

Patch updated to remove the fields.

> f. 

Patch updated to use proper naming convention. 

> g. 

Patch updated to remove commented blocks. 

> h. 

On review, I think you're correct that these synchronized blocks aren't required. I removed them from the patch. 

> i. 

Patch updated to rename the action providers.
The patch is really fixing 179719, *NOT* 179179.
patch released > 20070402


[Common Navigator] Patch for bugs 179179, 157314, 156357



180406 [Common Navigator] Patch for bugs 179179, 157314, 156357 
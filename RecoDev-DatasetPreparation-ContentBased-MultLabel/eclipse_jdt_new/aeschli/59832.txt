I20040422 0800

1) Enabled annotation roll-overs

2) Create the following type:

package p1;
public class A {
   void doit() {
   }
}

3) Create a subclass in a different package:

package p2;
import p1.A;
public class B extends A {
	void doit() {
		//
	}
}

I get two roll-overs in the editor next to B.doit:

 - "The method B.doit() does not override the inherited method from A since it
is private to a different package"
 - "overrides P1.A.doit"

These statements contradict eath other.

I20040422 0800

1) Enabled annotation roll-overs

2) Create the following type:

package p1;
public class A {
   void doit() {
   }
}

3) Create a subclass in a different package:

package p2;
import p1.A;
public class B extends A {
	void doit() {
		//
	}
}

I get two roll-overs in the editor next to B.doit:

 - "The method B.doit() does not override the inherited method from A since it
is private to a different package"
 - "overrides P1.A.doit"

These statements contradict eath other.
- override indicators must be enabled

The first warning is correct while the override indicator is not.

Dani, are we getting wrong override indications from core? Can we filter them?
Tracked it down. The bug is in Bindings.findMethodDefininition(binding) which
should not return the package visible method from another package.

Adapted summary.

Martin, it would be great if you could fix this method. Please let me know
otherwise I have to hack it into the override indicator manager.
We usually do this in two steps. First find the method, then check if it's 
visible. To do the visiblity check use 'ScopeAnalyzer.isVisible'.

I agree if you called the method find in hierarchy and not defining method.
After thinking over it agin I don't think a hack on my side is the right fix -
please reconsider to either fix it or rename the method. The current behavior is
definitely not correct and will lead to new bugs in the future.
added an additional parameter to Bindings.findMethodDefininition(binding) to
decide if visibiliy should be tested. 

I adapted the OverrideIndicatorManager to this > 20040517


Bindings.findMethodDefininition(binding) finds wrong definition



59832 Bindings.findMethodDefininition(binding) finds wrong definition 
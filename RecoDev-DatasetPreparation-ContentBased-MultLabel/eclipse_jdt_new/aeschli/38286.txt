It would be nice to be able to select multiple containers via 
IClasspathContainerPage. I have my own implementation of this page for my 
container type that allows selction of container from my own set of 
containers. But we use a lot of them and it would help users if they could 
select multiple ones in one go. 

Unfortunately getSelection() function currently returns a single 
IClasspathEntry without a way of allowing multiple selection without having to 
close and open the dialog again.

It would be nice to be able to select multiple containers via 
IClasspathContainerPage. I have my own implementation of this page for my 
container type that allows selction of container from my own set of 
containers. But we use a lot of them and it would help users if they could 
select multiple ones in one go. 

Unfortunately getSelection() function currently returns a single 
IClasspathEntry without a way of allowing multiple selection without having to 
close and open the dialog again.
Martin, can you please comment.
I have mixed feelings about that. So instead of returning a container you would
like to return multiple containers. What would that mean for editing one of
these containers?
Maybe it would make sense of having a container that contains all the
containers? (not sure if jdt.core supports that)

Correct. Instead of getSelection() returning a single IClasspathEntry I want 
to return an array of them, all to be added to the classpath. 

I also realized that Edit in that case is not as well defined, but you could 
say that any multiple entries returned in "Edit" of a single one just all get 
added/merged into classpath. I.e. you are replacing the single entry you're 
editing with the multiple ones that were selected. It would still be 
impossible to do edit on multiple selection.  You'd have to remove them first. 

I'll understand if you believe that above is not clean and will not be a good 
behavior and refuse to implement it, but before you do read more of my reasons 
below. Its really a usability issue for my users. Perhaps you can suggest an 
alternative.

As far as I can tell there's no support for container inside containers in JDT.

To give you a better idea why I'm asking for this feature I'll describe my 
scenario in more detail. We have a lot of java projects/libraries used by 
different applications. The granularity is similar to plugin, but these are 
not plugins, just external projects/libraries. E.g. xerces, xalan, struts, 
some of our own etc... Each app could easily use a dozen of these. Instead of 
each app hard coding the external jar path for each of these, whic is also 
different on different platforms, I created a custom Classpath container type 
which only knows/stores the "<project>/<version>" about each one that is used. 
Than it resolves this to the proper jars based on the platform and external 
configuration files.

So to configure the new project, a user would have to select a dozen of these 
via the dialog. Doing it one by one is a bit painful, and they've been asking 
for quicker way of doing it. One of the workarounds/backdoors they use 
currently to speed this up is to edit the .classpath directly by copy/paste 
from other already setup projects, but that's not very nice.

I could of course have written my own external dialog that does all this, but 
I'd hate to go around the JDT to do this.

Btw, (but this may need a sepearate bug#) I basically implemented the Jbuilder 
library functionality here, that Jbuilder has built in. [I'm even reusing the 
jbuilder file format, but I hate it and planning to change to my own]. I've 
seen it asked about a couple of times on mailing list/newsgroup. It might be 
something usefull enough to have built-in into JDT.
Or perhaps Edit... just doesn't support returning Multipe entries at all and 
you can only do that from Add...?
If these multiple classpath entries you want to add really have something to do 
together and have a single page to edit them all then they should be expressed 
with a single container.

So in my opinion we should find out if jCore should support containers in 
containers or if you can flatten the list of libraries to avoid that.

Changing getSelection() to return an array seems wrong to me.
Would it help if we allow multiple selection of containers on the container 
selection page and enable the 'OK' button? We could intruduce that container 
can be created without UI or have all the pages in the wizard (you would have 
to press 'next' several times).


Maybe we should make a step 


I could express it as one container but it would be very awkward and 
unnatural. Let me give you an example.

<classpathentry kind="con" path="com.blah.blah.MYCONTAINER/xerces/1.4.3"/>
<classpathentry kind="con" path="com.blah.blah.MYCONTAINER/xalan/2.4.1"/>

These 2 entries tell the system to use jars for Xerces 1.4.3 and Xalan 2.4.1 
from well known locations. They really have nothing to do with each other, 
except the use the same ClassPathEntry type. I'm not sure how I could possibly 
combine this information into one path without looking very weird. And think 
of normal cases when we have 5-10 of these in the project.

Multiple selection of containers wouldn't help at all (at least the way I've 
done this) as I only have one entry there "MY CONTAINER" (besides JRE) which 
then popups a separate selection dialog for all (100s) available 
projects/versions that we have. The selection then adds the appropriate path 
addition to the MY_CONTAINER. And I wouldn't want to convert the 100s of 
library/versions into seperate container types, that doesn't make sense 
really. Is that what you meant?

Does this make sense, what I'm trying to do?

added a new interface 'IClasspathContainerPageExtension2' that allows pages to
return more than one entry. see doc of 'IClasspathContainerPageExtension2' for
details.
 > 20040307


ClasspathContainerWizard should allow multiple selection


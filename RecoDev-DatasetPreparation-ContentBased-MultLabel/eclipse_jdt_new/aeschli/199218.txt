I20070807-0010

- Have:

import java.util.Map;

public class Bla {
	private int prev; //doc
	//doc2
	
	/** Javadoc */
	private Map/*<String, Object>*/ fVariables; //line comment
	// more comments
	
	private int next;
}

- extract class from field fVariables

=> extracted class is:

import java.util.Map;

public class BlaParameter {
	public Map fVariables;

	public BlaParameter() {
	}
}

=> expected: make sure all comments surrounding the variable declaration are moved to the new class

I20070807-0010

- Have:

import java.util.Map;

public class Bla {
	private int prev; //doc
	//doc2
	
	/** Javadoc */
	private Map/*<String, Object>*/ fVariables; //line comment
	// more comments
	
	private int next;
}

- extract class from field fVariables

=> extracted class is:

import java.util.Map;

public class BlaParameter {
	public Map fVariables;

	public BlaParameter() {
	}
}

=> expected: make sure all comments surrounding the variable declaration are moved to the new class
This sounds taff, for JavaDoc see
org.eclipse.jdt.internal.corext.refactoring.structure.HierarchyProcessor.copyJavadocNode(ASTRewrite, IMember, BodyDeclaration, BodyDeclaration)

Hint that i.e. pull up does also only move javadoc.

Karsten, can you see what's possible here?
You need to go along the lines of MoveStaticMembersProcessor.getUpdatedMemberSource(..), which adjusts the members at the original location, applies the rewrite, copies the modified source, and pastes it at the new location.
I think creating a new class with fresh formatting an comments is good enough.
As always it's hard to know if moving a comment makes sense or not.

WONTFIX for now
We could talk about other comment types, but I would never use a refactoring that removes my Javadocs...
100% agree with Markus. Moving the comment is the expected result in every extract class use case I can think of. And if we have refactorings which do remove javadoc unexpectedly then I would consider it a bug and we should fix it... 
You're right, Javadoc comment should be preserved.
Embedded comments like Map/*<String, Object>*/ or in field initializers also must be preserved.

Adjacent line and multi-line comments need to be either preserved at the original location or moved with field declarations. There's no reason for any refactoring to drop any comment when moving declarations around.
fixed > 20070817

Javadoc comments are now preserved. We still loose any comments on the declarations. Also Javadoc comment links are not updated.
No plans for this at the moment.


[Extract Class] should retain formatting and comments of extracted fields



199218 [Extract Class] should retain formatting and comments of extracted fields 
If I have the two classes:

public class A {
  public void method() { }
}

public class B extends A {
  public void method() throws Wobbly { }
}

then I (obviously) get a compile time error. However, it would be useful if the
suggestion list (currently empty) could add options
 o Add exception to superclass implementation
 o Surround internally with try/catch

You would then end up with (either):
public class A {
  public void method() throws Wobbly { }
} 
public class B extends A {
  public void method() throws Wobbly { }
}

or
public class A {
  public void method() { }
}
public class B extends A {
  public void method() { try { } catch (Wobbly w) { // use uncaught exception code generation } }
}

Both would be useful options, but I'd recommend that adding an exception to the
superclass' implementation is the preferred one of the two, in much the same
way that the preferred unhandled exception is to declare a throws rather than
a try/catch

If I have the two classes:

public class A {
  public void method() { }
}

public class B extends A {
  public void method() throws Wobbly { }
}

then I (obviously) get a compile time error. However, it would be useful if the
suggestion list (currently empty) could add options
 o Add exception to superclass implementation
 o Surround internally with try/catch

You would then end up with (either):
public class A {
  public void method() throws Wobbly { }
} 
public class B extends A {
  public void method() throws Wobbly { }
}

or
public class A {
  public void method() { }
}
public class B extends A {
  public void method() { try { } catch (Wobbly w) { // use uncaught exception code generation } }
}

Both would be useful options, but I'd recommend that adding an exception to the
superclass' implementation is the preferred one of the two, in much the same
way that the preferred unhandled exception is to declare a throws rather than
a try/catch
Nice suggestion.
added > 20040507


Suggest 'Add exception to supertype' when overriden method has more exceptions than superclass [quick assist]



Combined fix for Bug 331649 - [compiler][null] consider null annotations for fields Bug 382789 - [compiler][null] warn when syntactically-nonnull   expression is compared against null Bug 380896 - [compiler][null] Enum constants not recognised as being   NonNull. Bug 383368 - [compiler][null] syntactic null analysis for field   references Bug 388630 - @NonNull diagnostics at line 0 

Combined fix for Bug 331649 - [compiler][null] consider null annotations for fields Bug 382789 - [compiler][null] warn when syntactically-nonnull   expression is compared against null Bug 380896 - [compiler][null] Enum constants not recognised as being   NonNull. Bug 383368 - [compiler][null] syntactic null analysis for field   references Bug 388630 - @NonNull diagnostics at line 0 

Bug 331649 - [compiler][null] consider null annotations for fields Fixed NPE reported in comment 61 by fixing bug 380896 

Bug 331649 - [compiler][null] consider null annotations for fields Fixed NPE reported in comment 61 by fixing bug 380896 

Bug 338089: [quick fix] "Infer Generic Type Arguments..." shows up twice 

38089 Suggest 'Add exception to supertype' when overriden method has more exceptions than superclass [quick assist] 
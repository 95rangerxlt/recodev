I20080320-0800.

We have a warning in jdt ui's plugin.xml due to a classpathContainerPage contribution:
      <classpathContainerPage
            name="%defaultClasspathContainerPage"
            class="org.eclipse.jdt.internal.ui.wizards.buildpaths.ClasspathContainerDefaultPage"
            id="*">
      </classpathContainerPage>


The problem is that 'id' is now defined to be an identifier which is checked. Either this needs to be removed again, or we need to register a default/generic initializer which id can then be used instead of "*".

I20080320-0800.

We have a warning in jdt ui's plugin.xml due to a classpathContainerPage contribution:
      <classpathContainerPage
            name="%defaultClasspathContainerPage"
            class="org.eclipse.jdt.internal.ui.wizards.buildpaths.ClasspathContainerDefaultPage"
            id="*">
      </classpathContainerPage>


The problem is that 'id' is now defined to be an identifier which is checked. Either this needs to be removed again, or we need to register a default/generic initializer which id can then be used instead of "*".
Another alternative would be to use "" since "*" isn't documented:

identifies the classpath containers for which this page will be used. The id corresponds to the first segment of the path of a container classpath entry and matches the id referenced in org.eclipse.jdt.core.classpathContainerInitializer

The sentence "The id corresponds to the first segment of the path of a container classpath entry" isn't very clear to me either.
Dani, if you add "*" as an additional restriction to the schema definition, * should be a valid value in the list.

I don't know what your intention is with that value though so it's up to you.
Thanks Chris. Martin to decide whether this is an officially supported value or not.
Chris, does PDE see those restrictions rather as internal checks or might they appear in the schema doc in the future i.e. be somehow part of the "api"?
I'm not sure what you mean by it being considered API, but the schema identifier attribute works like this:

1) build up all valid values based on reference string
2) build up all valid values based on set of restrictions (if any are defined)

all valid values are the union of these two things

For example, perspectiveExtensions in the schema doc lists that they can reference to any perspective id or use "*" to refer to all extensions. 

Note that restrictions can be any string you choose... "*" , "meow" , "rawr" etc... it gives you a bit more flexibility when defining identifiers if you have cases for things such as "*" or you use some internally defined ids that aren't defined in schema.

I hope that explanation helps
>2) build up all valid values based on set of restrictions
So, they are *not* restrictions but additional valid values, right? Why are they called "restrictions"? I would rename this to "Additional values:".

>I'm not sure what you mean by it being considered API.
Currently this new identifier definition doesn't show up in the schema doc, so my question would be: if I add an additional value aka restriction but don't document it in words, is it still considered a valid value that clients are allowed to use?
(In reply to comment #6)
> >2) build up all valid values based on set of restrictions
> So, they are *not* restrictions but additional valid values, right? Why are
> they called "restrictions"? I would rename this to "Additional values:".

Good point, opened bug 225087 to address this issue of naming.

> >I'm not sure what you mean by it being considered API.
> Currently this new identifier definition doesn't show up in the schema doc, so
> my question would be: if I add an additional value aka restriction but don't
> document it in words, is it still considered a valid value that clients are
> allowed to use?

I thought I had a bug open for this but can't find it, so I opened bug 225088.

Thanks Dani, this was the type of feedback I'm looking for.

Thanks Chris, that clarifies it.
fixed > 20080404


Warning in plugin.xml due to classpathContainerPage


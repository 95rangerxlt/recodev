void m() {
		new Object(); // select "new Object()"
		Object object= new Object();
	}

Select new Object() and invoke quick fix "Assign statement to new local
variable". The guessed name is "object", which conflicts with the later declaration.

I think the problem is that ScopeAnalyzer#getDeclarationsInScope(.) only
considers variable declarations in front of the insertion position, which is IMO
wrong. The "Extract Local Variable" refactoring has the same problem.

void m() {
		new Object(); // select "new Object()"
		Object object= new Object();
	}

Select new Object() and invoke quick fix "Assign statement to new local
variable". The guessed name is "object", which conflicts with the later declaration.

I think the problem is that ScopeAnalyzer#getDeclarationsInScope(.) only
considers variable declarations in front of the insertion position, which is IMO
wrong. The "Extract Local Variable" refactoring has the same problem.
fixed > 20040507


Illegal variable name guessed because of  incomplete ScopeAnalyzer



44801 Illegal variable name guessed because of  incomplete ScopeAnalyzer 

44801 Illegal variable name guessed because of  incomplete ScopeAnalyzer 
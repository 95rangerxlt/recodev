This happens to the following code snippet in 3.0 RC1:

public class Test {
	
	private int value;
	
	public void setValue(int value) {
		this.value = value;
	}
	
}

It marks the "value" variable with the warning "The private field Test.value is
never read locally" and suggest its removal as a quick fix. This is wrong,
because if you accept the quick fix, it will generate a error of "this.value is
cannot be resolved or is not a field".

If there is a getter method, it does not show the warning.

This happens to the following code snippet in 3.0 RC1:

public class Test {
	
	private int value;
	
	public void setValue(int value) {
		this.value = value;
	}
	
}

It marks the "value" variable with the warning "The private field Test.value is
never read locally" and suggest its removal as a quick fix. This is wrong,
because if you accept the quick fix, it will generate a error of "this.value is
cannot be resolved or is not a field".

If there is a getter method, it does not show the warning.
fixed > 20040609
starting to verify.
verified. The quickfix now also removes the write references.
It does not work for the following sample:

public class Test {
	
	private int value;
	
	public void doSomething() {
		value = -1;
	}
	
}

It does not remove the line "value = -1".

Just curious: I noted this happens if the number ("-1") is lesser than 0.

Created attachment 12145
proposed fix
Dirk & Erich -> not critical enough - defer
patch released > 20041029


JDT says variable is not read and suggests removal, when it is only assigned [quick fix]



165646 [build path] BuildPath -> Classpath -> Order and Export -> New functions 

65646 JDT says variable is not read and suggests removal, when it is only assigned [quick fix] 

65646 JDT says variable is not read and suggests removal, when it is only assigned [quick fix] 
If your wizard does not have any user input pages, but performs changes that have a preview, the preview window is opened automatically. However, this preview window does not contain the text that was set using RefactoringWizard#setWindowTitle(). If a user page was specified, it does contain work.

If your wizard does not have any user input pages, but performs changes that have a preview, the preview window is opened automatically. However, this preview window does not contain the text that was set using RefactoringWizard#setWindowTitle(). If a user page was specified, it does contain work.
Can you attach a test case / example?

Markus, please comment.
Created attachment 132077
Reproducible code fragment (example)

Here's the code fragment you requested. 

It needs to be pasted into some UI-invokable thing to trigger the execution, like an existing (surrogate) action/command or a new one.
> If a user page was specified, it does contain work.

Really? If I replace:
        // no pages
with:
	addPage(new UserInputWizardPage("UserPage") {
		public void createControl(Composite parent) {
			Label label= new Label(parent, SWT.NONE);
			label.setText("This is the user page");
			setControl(label);
		}
	});
, then I also get no title.

But RefactoringWizard#setWindowTitle(..) works when the refactoring wizard was created with WIZARD_BASED_USER_INTERFACE (regardless of user input pages). The workaround for DIALOG_BASED_USER_INTERFACE is to call RefactoringWizard#setDefaultPageTitle(..).

Fixed in HEAD of RefactoringWizardDialog2#configureShell(Shell) by using getWindowTitle() if getDefaultPageTitle(..) is null.


[ltk] LTK RefactoringWizardOpenOperation opens window with no window title text



Bug 272366: [ltk] LTK RefactoringWizardOpenOperation opens window with no window title text 
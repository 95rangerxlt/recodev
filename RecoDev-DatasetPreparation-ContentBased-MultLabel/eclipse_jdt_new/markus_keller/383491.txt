Build Identifier: Version: 4.2.0 Build id: I20120531-1500

I'm building a plugin for a Java application. The source code and classes for my plugin all reside within an eclipse project workspace. However, the application jar and its source code are maintained outside of the eclipse workspace and the application jar is produced by another build mechanism.  I have referenced the application jar file in my project using drag and drop and the 'Link to files' option specifying it 'Create link locations relative to: MYDEV', where MYDEV is a Linked Resource Variable I have created for each Eclipse installation. This lets me use the same eclipse project on multiple machines where the path to the application jar varies, but is always the same relative to MYDEV.

However, I cannot associate the application source code with this jar unless I use an absolute path. If I include a reference to MYDEV in the Path for Workspace location or External location, the Properties dialogue will not accept the path and gives a 'The path XXX does not exist' error.

The work around is to use absolute paths for the source location.  However, this is a problem when the same project is used on different machines where the path to the external source is not the same.

Reproducible: Always

Steps to Reproduce:
1. Create a new Java Project
2. Drop in an external jar file and select
   - Link to files
   - Create link locations relative to: PROJECT_LOC 
3. Refresh
4. Select jar file under Referenced Libraries and open Properties
5. Select Java Source Attachment
6. Attempting to use PROJECT_LOC in any path setting is not allowed.

Build Identifier: Version: 4.2.0 Build id: I20120531-1500

I'm building a plugin for a Java application. The source code and classes for my plugin all reside within an eclipse project workspace. However, the application jar and its source code are maintained outside of the eclipse workspace and the application jar is produced by another build mechanism.  I have referenced the application jar file in my project using drag and drop and the 'Link to files' option specifying it 'Create link locations relative to: MYDEV', where MYDEV is a Linked Resource Variable I have created for each Eclipse installation. This lets me use the same eclipse project on multiple machines where the path to the application jar varies, but is always the same relative to MYDEV.

However, I cannot associate the application source code with this jar unless I use an absolute path. If I include a reference to MYDEV in the Path for Workspace location or External location, the Properties dialogue will not accept the path and gives a 'The path XXX does not exist' error.

The work around is to use absolute paths for the source location.  However, this is a problem when the same project is used on different machines where the path to the external source is not the same.

Reproducible: Always

Steps to Reproduce:
1. Create a new Java Project
2. Drop in an external jar file and select
   - Link to files
   - Create link locations relative to: PROJECT_LOC 
3. Refresh
4. Select jar file under Referenced Libraries and open Properties
5. Select Java Source Attachment
6. Attempting to use PROJECT_LOC in any path setting is not allowed.
If you use linked resources to link an external JAR into the workspace, then you also have to create a linked resource for the source archive first (the same way as your step 2).

Then you can open "Java Source Attachment", select "Workspace location", and choose the linked resource you created before.


An alternative would be to use Java classpath variables via
"project properties > Java Build Path > Libraries > Add Variable...".
Created attachment 217887
Screenshot showing project setup and error
Sorry but this does not work.  Please try the following steps.

1. Create a project
2. Drag and drop the application directory (this contains both the source files
   and the resultant jar file)
  - Link to files
  - Create link locations relative to: PROJECT_LOC 
3. Refresh project
4. Open project properties -> Java Build Path -> Libraries -> Add JARS..
5. Select jar file inside the now linked directory.  All good.
6. Expand jar list and select Source attachment: (None) then Edit...
7. Workspace location -> Browse... select linked directory -> OK

Outcome : The path XXXX does not exist.

See attached screen shot for a summary of this. 

-toenex
OK, so you selected "Link to files and recreate folder structure with virtual folders" when you imported the sources. There's indeed a bug in that scenario.

However, you'd better use "Link to files and folders" anyway -- and that already works. If you really want to use the virtual folder now, then you can hack the the .classpath file inside the project:
<classpathentry kind="lib" path="imagej.git/ij.jar" sourcepath="imagej.git/"/>


Fixed the virtual folder issue with http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=0c5876416743a860d83b856155b23399445e5f96
Excellent, thanks a million.

-toenex


Unable to reference a virtual folder as Java source attachment path



Bug 383491: Unable to reference a virtual folder as Java source attachment path 
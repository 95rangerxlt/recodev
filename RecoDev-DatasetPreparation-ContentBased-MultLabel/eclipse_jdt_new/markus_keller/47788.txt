If you have to source folders with a class in the first source folder andyou 
move the class into another package, the refactoring will refactor all classes 
of the first folder correctly, but doesn't take any classes of the second 
folder into account.

If you have to source folders with a class in the first source folder andyou 
move the class into another package, the refactoring will refactor all classes 
of the first folder correctly, but doesn't take any classes of the second 
folder into account.
This works for me using M5. My test case:

P1
+- s1
   +- p1
      +- A.java
      +- B.java <== references A
+- s2
   +- p2
      +- C.java <== references p1.A

Moving A.java from p1 to p2 correctly updates B and C. Can you please provide 
steps to reproduce the problem. Just to double check: you have check update 
references on the upcoming Move dialog ?
Created attachment 7018
Test project to reproduce the bug

I've created a test project (name: test) to reproduce the bug. Take the
TestClass1 and move it to package b. For me (I'm using M4, but a collegue of
mine has seen the same behaviour with M5), TestClass3 becomes invalid.
Reproduced. 
Fixed > 20040322.


Move CU doesn't add import to cus in other package fragments of source package [refactoring]



Fixed bug 477888 [1.8][compiler] Compiler silently produces garbage but editor shows no errors 

47788: Move CU doesn't add import to cus in other package fragments of source package [refactoring] 
Build ID: I20080617-2000   (3.4.0)

Steps To Reproduce:
Please apply the quickfix, and see the illegal result.

---------------------- Bug.java ---------------------
import java.util.*;
class Bug {
	{
		ArrayList<Number>list=new ArrayList();
		HashSet<Short>set=new HashSet();
		for(AbstractCollection<Number>bunch:Arrays.asList(list,set));
	}
}

Build ID: I20080617-2000   (3.4.0)

Steps To Reproduce:
Please apply the quickfix, and see the illegal result.

---------------------- Bug.java ---------------------
import java.util.*;
class Bug {
	{
		ArrayList<Number>list=new ArrayList();
		HashSet<Short>set=new HashSet();
		for(AbstractCollection<Number>bunch:Arrays.asList(list,set));
	}
}
Can reproduce on I20080805-1307.
Even simpler example:

                ArrayList<? extends Number> al= null;
                for (AbstractCollection<Number> bunch : al)
                        ;

The result is:
                for (? extends Number bunch : al)

We should take the upper bound of the element type, i.e. remove "? extends" and
change "? super X" to "Object".
*** Bug 248329 has been marked as a duplicate of this bug. ***
Fixed in HEAD of TypeMismatchSubProcessor.
.


[quick fix] "Change type" uses "? extends Number" as variable type in generic enhanced for loop



243179: [quick fix] "Change type" uses "? extends Number" as variable type in generic enhanced for loop 
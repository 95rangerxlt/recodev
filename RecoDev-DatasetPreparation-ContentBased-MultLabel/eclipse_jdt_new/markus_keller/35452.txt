Build RC3a

1. Create the following class:
public class X {
	void foo() {
		new Object() {
			public String toString() {
				return super.toString();
			}

		}.toString();
	}
}
2. Select foo in Outline
3. Refactor->Move
Observe: You get a dialog saying that 'The method cannot be moved, since it 
uses the "super" keyword.

The "super" keyword is used in an anonymous class of the method. It should not 
prevent the move.

Build RC3a

1. Create the following class:
public class X {
	void foo() {
		new Object() {
			public String toString() {
				return super.toString();
			}

		}.toString();
	}
}
2. Select foo in Outline
3. Refactor->Move
Observe: You get a dialog saying that 'The method cannot be moved, since it 
uses the "super" keyword.

The "super" keyword is used in an anonymous class of the method. It should not 
prevent the move.
true - to be fixed, but only after 2.1
deferring
reopening
Created attachment 5692
Fix
Created attachment 5693
Tests
Markus, can you re-create the patches on the latest code? 
i already have test15 that this patch adds
Created attachment 5750
Fix
Created attachment 5751
Tests
great, thanks - patch released
please also include a test for the local type case - i came across bug 41530 
while trying to create one
fixed


super in anonymous prevents move[refactoring]



fix for bug 35452 provided by Markus 

35452 
20030613+0814export (plus patch for bug 35452)

A.java
package p1;
public class A {
	public static void main(String[] args) {
		A a= new A();
		B b= new B("Gugguseli");
		a.print(b);
	}

	public void print(B b) {
		class StarDecorator1 extends StarDecorator{
			public String decorate(String in) {
				return "(" + super.decorate(in) + ")";
			}
		}
		System.out.println(
			new StarDecorator1().decorate(b.toString())
		);
	}
}

B.java
package p1;
public class B {
	private String fName;
	
	public B(String name) {
		fName= name;
	}
		
	public String toString() {
		return fName;
	}
}


StarDecorator.java
package p1;
class StarDecorator {
	public String decorate(String in) {
		return "*" + in + "*";
	}
}

move print from A to B and you'll get a syntax error in B.java

20030613+0814export (plus patch for bug 35452)

A.java
package p1;
public class A {
	public static void main(String[] args) {
		A a= new A();
		B b= new B("Gugguseli");
		a.print(b);
	}

	public void print(B b) {
		class StarDecorator1 extends StarDecorator{
			public String decorate(String in) {
				return "(" + super.decorate(in) + ")";
			}
		}
		System.out.println(
			new StarDecorator1().decorate(b.toString())
		);
	}
}

B.java
package p1;
public class B {
	private String fName;
	
	public B(String name) {
		fName= name;
	}
		
	public String toString() {
		return fName;
	}
}


StarDecorator.java
package p1;
class StarDecorator {
	public String decorate(String in) {
		return "*" + in + "*";
	}
}

move print from A to B and you'll get a syntax error in B.java
Created attachment 5782
Ridiculous one-line fix.
Created attachment 5783
Test
released, thx
reop to assign
fxd
Adam, could you please recommit the *Test* patch?
The resources are not in HEAD, but test24 is activated in MoveInstanceMethodTests.
oops.
resources for test24 are released now 

f


move instance method: moving a method with local type creates syntax errors [refactoring]



Fix for Bug 415308 - [1.8][compiler] Illegal type annotations not rejected 

fix for 41530 provided by Markus 
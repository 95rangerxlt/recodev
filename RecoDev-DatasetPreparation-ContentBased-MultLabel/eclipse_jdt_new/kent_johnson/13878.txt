I would like to request the ability to specify an entire directory (folder) 
when defining the resources not to be copied to the output folder during a 
build.
Our plugin currently supports having a META-INF folder per source folder, so in 
order to avoid the "This resource is a duplicate and was not copied to the 
output folder" errors produced by the java builder, we would like to filter the 
entire directory from being copied over.
The syntax could be of the form "META-INF/*" and should support being relative 
as we won't know the name of the source folders in advance.

I would like to request the ability to specify an entire directory (folder) 
when defining the resources not to be copied to the output folder during a 
build.
Our plugin currently supports having a META-INF folder per source folder, so in 
order to avoid the "This resource is a duplicate and was not copied to the 
output folder" errors produced by the java builder, we would like to filter the 
entire directory from being copied over.
The syntax could be of the form "META-INF/*" and should support being relative 
as we won't know the name of the source folders in advance.
How about a list of folder names to skip... no wildcards, just the relative 
subfolder names?

So if we're about to copy a resource file src1/p1/zzz/a/b/test.txt and the 
folder property included 'zzz', then we would skip it.

Ok? Any folder name matching a segment name in getProjectRelativePath() would 
stop the resource from being copied.
Then folders would be indicated using a trailing '/' (e.g. 'zzz/').
Works for me.
Our other choice is to change the filter to pattern match against 
resource.getProjectRelativePath() instead of resource.getName()... then you 
could specify:

*.txt
*/META-INF/*
*-INF/*.txt
Added support for "Meta-Inf/" to match a folder named Meta-Inf... no wildcards 
are supported.


Request to support folders for resource copy filters


EclipseCompiler#run() implements javax.tools.Tool#run(), which has following javadoc:

     * @param in "standard" input; use System.in if null
     * @param out "standard" output; use System.out if null
     * @param err "standard" error; use System.err if null

EclipseCompiler doesn't take care of this, instead just passes along the parameters err and out. This needs to be fixed.

EclipseCompiler#run() implements javax.tools.Tool#run(), which has following javadoc:

     * @param in "standard" input; use System.in if null
     * @param out "standard" output; use System.out if null
     * @param err "standard" error; use System.err if null

EclipseCompiler doesn't take care of this, instead just passes along the parameters err and out. This needs to be fixed.
Though this is not 1.8 specific, I think it is fine to fix it for Java 8 and 
since we are close to switching branches, this will become available for 4.4 
automatically.
Created attachment 239251
Proposed fix

Unfortunately, I can't add a test because when compiler is invoked via EclipseCompiler#run(), the system.exit is called (Main#systemExitWhenFinished is true by default) and I don't think we want to mess with that behavior. Considering the simplicity of the fix, I don't think it's worth investing time to put up a test.

Srikanth, please review.
Looks good, inserted JCP disclaimer and released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=6c76d390a016d2bc042688766f03adca637f8318


EclipseCompiler#run() crashes when null out/err passed by client



Fixed Bug 426434 - EclipseCompiler#run() crashes when null out/err passed by client 
After bug 266443.

'Open Implementation' on a super method invocation should not open the quick type hierarchy.

Example:

package p;

class A {
        public void method() {}
}

class B extends A {
        public void method() {}

        void xx() {
                super.method();
                super.hashCode();
        }
}


Open Implementation of "method" in "super.method()" should just open the declaration of A#method(). SuperMethodInvocations are a special case, because the call is never polymorphic.
Similar case for "super.hashCode();": Should open Object#hashCode().

After bug 266443.

'Open Implementation' on a super method invocation should not open the quick type hierarchy.

Example:

package p;

class A {
        public void method() {}
}

class B extends A {
        public void method() {}

        void xx() {
                super.method();
                super.hashCode();
        }
}


Open Implementation of "method" in "super.method()" should just open the declaration of A#method(). SuperMethodInvocations are a special case, because the call is never polymorphic.
Similar case for "super.hashCode();": Should open Object#hashCode().
Created attachment 128679
Patch with the fix.
Thanks for the patch Raksha!

Fixed in HEAD.
Available in builds > N20090315-2000.


[navigation] 'Open Implementation' on super method invocation should not open quick type hierarchy



Committed Raksha's patch to fix bug 267682: [navigation] 'Open Implementation' on super method invocation should not open quick type hierarchy 
BETA_JAVA8:

The following program fails to compile with TOT while javac 8b56 compiles
fine. I believe the right behavior is to compile it:

// -----------------
public interface X extends Map<String, Object> {
}

interface Map<K,V> extends MapStream<K, V>  {
   @Override
	Iterable<BiValue<K, V>> asIterable() default {
       return null;
   }
}
interface MapStream<K, V> {
	Iterable<BiValue<K, V>> asIterable() default {
       return null;
   }
}

interface BiValue<T, U> {
    T getKey();
    U getValue();
}

BETA_JAVA8:

The following program fails to compile with TOT while javac 8b56 compiles
fine. I believe the right behavior is to compile it:

// -----------------
public interface X extends Map<String, Object> {
}

interface Map<K,V> extends MapStream<K, V>  {
   @Override
	Iterable<BiValue<K, V>> asIterable() default {
       return null;
   }
}
interface MapStream<K, V> {
	Iterable<BiValue<K, V>> asIterable() default {
       return null;
   }
}

interface BiValue<T, U> {
    T getKey();
    U getValue();
}
Stephan, please take a look: I have added a disabled regression test
via DefaultMethodsTest._testDefaultNonclash3()

The emitted message is:

Duplicate methods named asIterable with the parameters () and () are inherited from the types Map<String,Object> and MapStream<String,Object>
Fix has been released for BETA_JAVA8 via commit 6545e2eba728ce5d7f114b77afe5ab08a731f692.


[1.8][compiler] Unable to override default method



Bug 390883 - [1.8][compiler] Unable to override default method 
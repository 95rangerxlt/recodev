An assignment like this is correctly flagged in most locations but not against a field initializer:

   List<@NonNull Person> l = new ArrayList<@Nullable Person>();

An assignment like this is correctly flagged in most locations but not against a field initializer:

   List<@NonNull Person> l = new ArrayList<@Nullable Person>();
Srikanth, the fix for this bug revealed we didn't yet test the effect of null annotations on extended array dimension. Question:

what is the correct way to initialize this field:
  
   @NonNull String @Nullable [] f @NonNull [] = new ... ?

As for the code change: I only hooked into FieldDeclaration what we already did for LocalDeclaration (and it's all under the option etc).

Commit is http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=5d6f5aaa0ef90debc42dc50e444944b70d619e1f

TIA for reviewing.
(In reply to Stephan Herrmann from comment #1)
> Srikanth, the fix for this bug revealed we didn't yet test the effect of
> null annotations on extended array dimension. Question:
> 
> what is the correct way to initialize this field:
>   
>    @NonNull String @Nullable [] f @NonNull [] = new ... ?

Reflection, javax.lang.model, ECJ, javac all agree that the C style dimensions
should be considered the primary dimensions.

So 

   int @T(1) [] v @T(2) [] is really

   int @T(2) [] @T(1) [] v;

See org.eclipse.jdt.core.tests.dom.TypeBindingTests308.testAnnotatedBinaryType2()
Phew, so this line in the updated test seems to be correct :

@NonNull String @Nullable [] f @NonNull [] = new @NonNull String @NonNull [0] @Nullable [];

:)
(In reply to Stephan Herrmann from comment #1)

> Commit is
> http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
> ?h=BETA_JAVA8&id=5d6f5aaa0ef90debc42dc50e444944b70d619e1f
> 
> TIA for reviewing.

Looks good, thanks.
Do you have open tasks against this ticket ?
(In reply to Srikanth Sankaran from comment #5)
> Do you have open tasks against this ticket ?

No, this one is done. Thanks for the review.


[1.8][null] null mismatch from type arguments is not reported at field initializer



Bug 429403 - [1.8][null] null mismatch from type arguments is not reported at field initializer 
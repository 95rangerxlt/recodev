The Ctrl+1 external annotation command fails when a method parameter is defined with array brackets after the parameter name instead of the type. For example, in java.lang.Thread#enumerate:

    public static int enumerate(Thread tarray[])

Pressing Ctrl+1 with the cursor on the brackets has no effect, while pressing it with the cursor on the type causes the following error in the Error Log:

Error computing completion proposals.

java.lang.IllegalArgumentException: Mismatching type structures [Ljava/lang/Thread; vs L1java/lang/Thread;
	at org.eclipse.jdt.core.util.ExternalAnnotationUtil.match(ExternalAnnotationUtil.java:471)
	at org.eclipse.jdt.core.util.ExternalAnnotationUtil.updateType(ExternalAnnotationUtil.java:426)
	at org.eclipse.jdt.core.util.ExternalAnnotationUtil.annotateParameterType(ExternalAnnotationUtil.java:687)
	at org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$ParameterAnnotationRewriteProposal.dryRun(ExternalNullAnnotationChangeProposals.java:263)
	at org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$SignatureAnnotationChangeProposal.initializeOperation(ExternalNullAnnotationChangeProposals.java:148)
	at org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$ProposalCreator.create(ExternalNullAnnotationChangeProposals.java:462)
	at org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals.createProposalsForType(ExternalNullAnnotationChangeProposals.java:516)
	at org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals.collectExternalAnnotationProposals(ExternalNullAnnotationChangeProposals.java:411)
	at org.eclipse.jdt.internal.ui.text.correction.ExternalNullAnnotationQuickAssistProcessor.computeQuickAssistProposals(ExternalNullAnnotationQuickAssistProcessor.java:91)
	at org.eclipse.jface.text.quickassist.QuickAssistAssistant$ContentAssistProcessor.computeCompletionProposals(QuickAssistAssistant.java:75)
	at org.eclipse.jface.text.contentassist.ContentAssistant$5.run(ContentAssistant.java:1904)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	...

The Ctrl+1 external annotation command fails when a method parameter is defined with array brackets after the parameter name instead of the type. For example, in java.lang.Thread#enumerate:

    public static int enumerate(Thread tarray[])

Pressing Ctrl+1 with the cursor on the brackets has no effect, while pressing it with the cursor on the type causes the following error in the Error Log:

Error computing completion proposals.

java.lang.IllegalArgumentException: Mismatching type structures [Ljava/lang/Thread; vs L1java/lang/Thread;
	at org.eclipse.jdt.core.util.ExternalAnnotationUtil.match(ExternalAnnotationUtil.java:471)
	at org.eclipse.jdt.core.util.ExternalAnnotationUtil.updateType(ExternalAnnotationUtil.java:426)
	at org.eclipse.jdt.core.util.ExternalAnnotationUtil.annotateParameterType(ExternalAnnotationUtil.java:687)
	at org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$ParameterAnnotationRewriteProposal.dryRun(ExternalNullAnnotationChangeProposals.java:263)
	at org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$SignatureAnnotationChangeProposal.initializeOperation(ExternalNullAnnotationChangeProposals.java:148)
	at org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals$ProposalCreator.create(ExternalNullAnnotationChangeProposals.java:462)
	at org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals.createProposalsForType(ExternalNullAnnotationChangeProposals.java:516)
	at org.eclipse.jdt.internal.corext.fix.ExternalNullAnnotationChangeProposals.collectExternalAnnotationProposals(ExternalNullAnnotationChangeProposals.java:411)
	at org.eclipse.jdt.internal.ui.text.correction.ExternalNullAnnotationQuickAssistProcessor.computeQuickAssistProposals(ExternalNullAnnotationQuickAssistProcessor.java:91)
	at org.eclipse.jface.text.quickassist.QuickAssistAssistant$ContentAssistProcessor.computeCompletionProposals(QuickAssistAssistant.java:75)
	at org.eclipse.jface.text.contentassist.ContentAssistant$5.run(ContentAssistant.java:1904)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	...
Thanks for the report, I'll take a look.
I'm also seeing the same issue with varargs, even with the ellipsis after the type. Example from Formatter:

    public Formatter format(Locale l, String format, Object ... args)
Passing tests in JDT/Core have been released via commit d40aa37eee65e333eb851276b58be1e3e4283906

Moving to JDT/UI where we need to better analyse the ASTNode we have in hands...
New Gerrit change created: https://git.eclipse.org/r/51382
Gerrit change https://git.eclipse.org/r/51382 was merged to [master].
Commit: http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=54f719aac1f9c734a58dd020dcc9767847bf917f
The UI part of this failed to handle the following cases where we don't point to a Type node:
- extra dimensions
- varargs

In both situations we need to consider details contained in the SingleVariableDeclaration. When we detect one of these situations we first prepend the annotated array dimensions to the string renders before rendering the plain (unannotated) type of the variable.
New Gerrit change created: https://git.eclipse.org/r/51794
(In reply to Eclipse Genie from comment #7)
> New Gerrit change created: https://git.eclipse.org/r/51794

Additional improvements pushed via http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=e2dcf5de11c60f5c9fcb85d18db9ef48445e8169

- more tests
- ensure that annotating a varargs parameter works at 1.5, too.

(test failures on jenkins where caused by bug 472205, test changes cannot yet see their fix in JDT/Core).


Error creating external annotation on array parameter in "Type name[]" format



Bug 471034 - Error creating external annotation on array parameter in "Type name[]" format 

bug 471034 - Error creating external annotation on array parameter in "Type name[]" format 

bug 471034 - Error creating external annotation on array parameter in "Type name[]" format 
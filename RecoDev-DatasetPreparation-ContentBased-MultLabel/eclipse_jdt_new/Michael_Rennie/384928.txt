3.8, was OK on 3.7.2

New workspace, enable Variables view > Show Logical Structure. Debug this:

package xy;

import java.util.Map;
import java.util.TreeMap;

public class Try {
    public static void main(String[] args) {
        Map<String, Integer> map= new TreeMap<String, Integer>();
        for (int i= 0; i < 1000; i++) {
            map.put("Item " + i, i);
        }
        System.out.println(map.size()); // breakpoint, inspect 'map'
    }
}

When you try to inspect 'map', you get this CCE:

Error
Thu Jul 12 14:12:11 CEST 2012
An internal error occurred during: "has children update".

java.lang.ClassCastException: org.eclipse.debug.internal.ui.views.variables.IndexedVariablePartition cannot be cast to org.eclipse.debug.core.model.IExpression
	at org.eclipse.debug.internal.ui.model.elements.ExpressionContentProvider.hasChildren(ExpressionContentProvider.java:205)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaExpressionContentProvider.hasChildren(JavaExpressionContentProvider.java:77)
	at org.eclipse.debug.internal.ui.model.elements.ElementContentProvider.updateHasChildren(ElementContentProvider.java:223)
	at org.eclipse.debug.internal.ui.model.elements.ElementContentProvider$3.run(ElementContentProvider.java:200)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

3.8, was OK on 3.7.2

New workspace, enable Variables view > Show Logical Structure. Debug this:

package xy;

import java.util.Map;
import java.util.TreeMap;

public class Try {
    public static void main(String[] args) {
        Map<String, Integer> map= new TreeMap<String, Integer>();
        for (int i= 0; i < 1000; i++) {
            map.put("Item " + i, i);
        }
        System.out.println(map.size()); // breakpoint, inspect 'map'
    }
}

When you try to inspect 'map', you get this CCE:

Error
Thu Jul 12 14:12:11 CEST 2012
An internal error occurred during: "has children update".

java.lang.ClassCastException: org.eclipse.debug.internal.ui.views.variables.IndexedVariablePartition cannot be cast to org.eclipse.debug.core.model.IExpression
	at org.eclipse.debug.internal.ui.model.elements.ExpressionContentProvider.hasChildren(ExpressionContentProvider.java:205)
	at org.eclipse.jdt.internal.debug.ui.variables.JavaExpressionContentProvider.hasChildren(JavaExpressionContentProvider.java:77)
	at org.eclipse.debug.internal.ui.model.elements.ElementContentProvider.updateHasChildren(ElementContentProvider.java:223)
	at org.eclipse.debug.internal.ui.model.elements.ElementContentProvider$3.run(ElementContentProvider.java:200)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
Looking at the history of the source it doesn't look like most of this has changed in quite some time. I wonder if this is some fallout from the fix to bug 161435. 

Looking at the code we should not be assuming the context we get is an IExpression anyway, but there is obviously a deeper problem.

CC Pawel for comment on the platform side
I had a look at this bug and I think it is a change in org.eclipse.debug.internal.ui.views.variables.IndexedVariablePartition class that is causing this problem. IndexedVariablePartition has a new method "public Object getAdapter(Class adapterType)" which was not present in 3.7.2. Seems like this was introduced as part of fix for Bug 303650. If this method is introduced into 3.7.2, it will also throw CCE.
*** Bug 388438 has been marked as a duplicate of this bug. ***
*** Bug 388989 has been marked as a duplicate of this bug. ***
I played around with a few fixes for this, all involved hacking in support for IVariable (IndexedVariablePartion) where we only care about IExpressions.

My vote on this would be to revert the fix for bug 303650, the reason being is that the indexed variables are an internal notion and were never meant to be customized the rest of variables, and clearly if we do want to allow them to be customized there is a lot more work to do than simply overriding getAdapter().

Pawel, thoughts?
(In reply to comment #5)
> I played around with a few fixes for this, all involved hacking in support
> for IVariable (IndexedVariablePartion) where we only care about IExpressions.
> 
> My vote on this would be to revert the fix for bug 303650, the reason being
> is that the indexed variables are an internal notion and were never meant to
> be customized the rest of variables, and clearly if we do want to allow them
> to be customized there is a lot more work to do than simply overriding
> getAdapter().
> 
> Pawel, thoughts?
+1 to revert 303650.  The side-effects of the fix obviously outweigh the benefits.
Ok, I reverted bug 303650.

Inspect is working again, but I did notice that if you turn on "Show References" and do an inpsect the reference node does not have children, but in 3.7.2 it does (using the test case from comment #0). Filed bug 388993 for that.

Marking fixed (with the revert from 303650)
*** Bug 394982 has been marked as a duplicate of this bug. ***
Curtis also added an additional instanceof check:

http://git.eclipse.org/c/platform/eclipse.platform.debug.git/commit/?id=5fb31ba8cc16508d7badad7188202b782054ab4b
*** Bug 394982 has been marked as a duplicate of this bug. ***


CCE in ExpressionContentProvider when inspecting TreeMap with Show Logical Structure


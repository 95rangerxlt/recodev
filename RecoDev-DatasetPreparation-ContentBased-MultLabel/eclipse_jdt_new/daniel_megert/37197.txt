The basepath for the JAR-exporter is the eclipse-install-directory.
I prefer it to be the root of the project (the description is saved in), so that
relative pathes end inside the project.

Now:
<jardesc>
    <jar path="workspace/projectdir/jar.jar"/>

Desired:
<jardesc>
    <jar path="jar.jar"/>

Reason:
To make the jardesc-files portable for shared projects

The basepath for the JAR-exporter is the eclipse-install-directory.
I prefer it to be the root of the project (the description is saved in), so that
relative pathes end inside the project.

Now:
<jardesc>
    <jar path="workspace/projectdir/jar.jar"/>

Desired:
<jardesc>
    <jar path="jar.jar"/>

Reason:
To make the jardesc-files portable for shared projects
Daniel, isn't the base path the directory passed via -data ? It can't be the 
root of the project since a Jar can export more than one project. However it 
should be the workspace root (e.g. <jar path="projectdir/jar.jar"/>)
When using the JAR file export UI the base path is the workspace location i.e.
the one specified by -data. This makes more sense and allows to copy a .jardesc
from one project to another (note that a .jardesc can export more than one
project). It also covers the case with shared projects. Your .jardesc would be:

<jardesc>
    <jar path="projectdir/jar.jar"/>

Now, the real bug is that this is not respected when creating a JAR from the
.jardesc: here it exports to the install-dir which is clearly wrong.

Fixed.
Available in 3.0 builds > N20030507

*** Bug 34857 has been marked as a duplicate of this bug. ***


Basepath for relative pathes in JAR-exporter



Fixed bug 37197: Basepath for relative pathes in JAR-exporter 
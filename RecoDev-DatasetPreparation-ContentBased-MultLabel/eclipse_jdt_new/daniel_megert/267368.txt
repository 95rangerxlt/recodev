HEAD

The Open Implementation hyperlink should open the type hierarchy on the hyperlink target, not on the element at the current caret location.

Steps:

- have:
abstract class A {
//		public abstract void method();
	public void method() {}
}

class B extends A {
	Number n;
	
	public void method() {}
	
	void xx() {
		super.method();
	}
	
	public static void main(String[] args) {
		A a = new B();
		a.method();
	}
}

- set the caret into Number
- press and hold Ctrl
- hover over "method" in "a.method()"
- click "Open Implementation"
=> type hierarchy of the completely unrelated type "Number" is opened

HEAD

The Open Implementation hyperlink should open the type hierarchy on the hyperlink target, not on the element at the current caret location.

Steps:

- have:
abstract class A {
//		public abstract void method();
	public void method() {}
}

class B extends A {
	Number n;
	
	public void method() {}
	
	void xx() {
		super.method();
	}
	
	public static void main(String[] args) {
		A a = new B();
		a.method();
	}
}

- set the caret into Number
- press and hold Ctrl
- hover over "method" in "a.method()"
- click "Open Implementation"
=> type hierarchy of the completely unrelated type "Number" is opened
It would be OK for me if the Open Implementation link (or even any link in the multi-hyperlink popup) would actually move the caret into the target word if it isn't already in there.

After all, I really "clicked" the hyperlink, although I couldn't click the real target because the popup table showed up. And Ctrl+click also moves the caret.
This is a more general issue: following a hyperlink via selection popup should set the caret before doing so. This will make sure that back navigation works and will also fix this bug here.
Fixed in HEAD.
Available in builds > I20090309-0100.


[navigation] Open Implementation hyperlink should not open type hierarchy on caret location


HEAD

Opening external editor from package explorer shows an error dialog with
Reasson: "No editor found for 'failure.gif'".

The problem is in org.eclipse.jdt.ui.actions.OpenAction.run(Object[]), where the code wrongly assumes that part == null is an error condition. This is wrongly spec'd in both org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(..) methods.

As a workaround for now, I reverted the check in OpenAction to avoid the dialog.

HEAD

Opening external editor from package explorer shows an error dialog with
Reasson: "No editor found for 'failure.gif'".

The problem is in org.eclipse.jdt.ui.actions.OpenAction.run(Object[]), where the code wrongly assumes that part == null is an error condition. This is wrongly spec'd in both org.eclipse.jdt.internal.ui.javaeditor.EditorUtility.openInEditor(..) methods.

As a workaround for now, I reverted the check in OpenAction to avoid the dialog.
You're right, null is a valid return value if the element was opened in an external editor. I suggest we let EditorUtility.openInEditor throw an exception (PartInitException?) if it can't build a editor input for a given object.

The code in OpenAction would handle that correctly (I updated the code there).
Moving to jdt.text.
Martin, does this also fix the following regression: opening a GIF from a JAR does not work and shows an error dialog. In 3.2 this was correctly not written to the .log. Now (did not try your fix) it appears in .log.
We cannot throw an exception if the input can't be made: the API specs to return 'null' in such cases.

In addition to your change I add the code back which handles the PartInitException separately by not logging it.
What API are you referring to? I thought about changing EditorUtility.openInEditor.
JavaUI.openInEditor will not be concerned as it only takes IJavaElement where we know that an input can be created.
Please read the Javadoc of JavaUI.openEditor:

 @return returns the editor part of the opened editor or <code>null</code> if the element is not a {@link ISourceReference}, 

In addition I do not want to go and check/change all current clients of the EditorUtility method.
As I said, as JavaUI only opens JavaElements this isn't a problem here. Problem are all inputs for which we can't create an editor input. The API makes the ISourceReference itself.

There are only around 8 references left to EditorUtility.openInEditor. All callers already have to handle PartInitException.

The reason for this request is to fix bug 148947 (filed by you) again that was reverted by this change.


Sigh! Just saw that the JavaUI method makes sure to get 'null' back.
Fixed in HEAD.


[actions] opening external editor from package explorer shows error dialog



Fixed bugs - 149555: [actions] opening external editor from package explorer shows error dialog - 148947: [actions] OpenActionUtil should check for null 

149555 [actions] opening external editor from package explorer shows error dialog 

workaround for 149555 [actions] opening external editor from package explorer shows error dialog 
The current .gitignore file in all Git repositories is incorrect. It causes nested folders / Java packages to be ignored if they have a 'bin' or 'target' segment.

The following change must be made for all top-level .gitignore files:

bin/ ==> /*/bin/
target/ ==> /*/target/

BTW: I cannot see the reason to ignore 'target'. We didn't do this in the CVS world either. I would remove this unless there are good reasons.

The current .gitignore file in all Git repositories is incorrect. It causes nested folders / Java packages to be ignored if they have a 'bin' or 'target' segment.

The following change must be made for all top-level .gitignore files:

bin/ ==> /*/bin/
target/ ==> /*/target/

BTW: I cannot see the reason to ignore 'target'. We didn't do this in the CVS world either. I would remove this unless there are good reasons.
(In reply to comment #0)
> target/ ==> /*/target/
> 
> BTW: I cannot see the reason to ignore 'target'. We didn't do this in the CVS
> world either. I would remove this unless there are good reasons.

I believe target/ is the default output folder of Maven.
(In reply to comment #1)
> (In reply to comment #0)
> > target/ ==> /*/target/
> > 
> > BTW: I cannot see the reason to ignore 'target'. We didn't do this in the CVS
> > world either. I would remove this unless there are good reasons.
> 
> I believe target/ is the default output folder of Maven.

If we don't use Maven then we should not blindly add that folder.
I think individual teams should just make this change if they need it, rather than have Releng do it. Many of the platform git repositories have added further organization to their repository, like this:

/
  .gitignore
  bundles/
  tests/
  examples/

So the exact pattern would be different in each case. Also we don't usually ask releng to commit changes in our source repositories - the only way to fix this is to commit and push the file change in each component team repo.
(In reply to comment #3)
> I think individual teams should just make this change if they need it, rather
> than have Releng do it. Many of the platform git repositories have added
> further organization to their repository, like this:
> 
> /
>   .gitignore
>   bundles/
>   tests/
>   examples/
> 
> So the exact pattern would be different in each case. Also we don't usually ask
> releng to commit changes in our source repositories - the only way to fix this
> is to commit and push the file change in each component team repo.

I guess one can't do that via EGit?
(In reply to comment #4)
> I guess one can't do that via EGit?

If you edit these files in the repository but aren't in a project registered with the Eclipse workspace, it should still show up in the 'Git Staging' view. You should be able to stage and commit from there if desired.
OK, we will fix our repos ourselves but others can also run into this and waste lots of time debugging it. Like PDE last week.
I applied the change on the .gitignore file in the master branch of the jdt.core repo. I'll apply it to the maintenance branch 3.7 maintenance as well.
> I'll apply it to the maintenance branch 3.7 maintenance as well

Good point. Does anybody know how to commit the new .gitignore to *all* branches at once?
(In reply to comment #8)
> Good point. Does anybody know how to commit the new .gitignore to *all*
> branches at once?

You can't. But you can cherry-pick the first commit onto each of the other branches. Once you are done, you can push all the branches at the same time.
(In reply to comment #9)
> (In reply to comment #8)
> > Good point. Does anybody know how to commit the new .gitignore to *all*
> > branches at once?
> 
> You can't. But you can cherry-pick the first commit onto each of the other
> branches. Once you are done, you can push all the branches at the same time.

Yep. That's what I did now.

Fixed for all repos where I have commit rights in
master
R3_7_maintenance
R3_development (platform.ui only)
R4_development (platform.ui only)


Wrong .gitignore in all repos


M5 Build

--Part 1--
1. Add a new project called "MyProject"
2. Add a new class to the default package called "MyClass" with main method
public class MyClass {

	public static void main(String[] args) {
	}
}

3. File->Export->JAR File, choose everything from MyProject.
4. Set JAR file to c:\temp\MyTest.jar
5. Press 'Next' twice
6. Browse and choose the only main class: MyClass
7. Click 'Finish'

Than the dialog appeared as "JAR creation failed". In the detail section "Main 
class is not valid"

Retyping the Main Class results in "The selected main class is not selected 
for export or has no main method"

--Part 2--
Cancel the export dialog and add a plain text file called 'MyManifest' with 
following content:

Manifest-Version: 1.0
Main-Class: MyClass


Now, repeat the export process with only 1 difference: Use MyManifest as 
manifest file. Everything works fine now.

M5 Build

--Part 1--
1. Add a new project called "MyProject"
2. Add a new class to the default package called "MyClass" with main method
public class MyClass {

	public static void main(String[] args) {
	}
}

3. File->Export->JAR File, choose everything from MyProject.
4. Set JAR file to c:\temp\MyTest.jar
5. Press 'Next' twice
6. Browse and choose the only main class: MyClass
7. Click 'Finish'

Than the dialog appeared as "JAR creation failed". In the detail section "Main 
class is not valid"

Retyping the Main Class results in "The selected main class is not selected 
for export or has no main method"

--Part 2--
Cancel the export dialog and add a plain text file called 'MyManifest' with 
following content:

Manifest-Version: 1.0
Main-Class: MyClass


Now, repeat the export process with only 1 difference: Use MyManifest as 
manifest file. Everything works fine now.
This is a JDT UI issue.

First analysis: part1 and part2 can't be compared at all because in part2 the
manifest is already provided and will be added to the JAR as-is (except if the
java.util.jar.Manifest class rejects the file).
Will have to debug.

Found the bug. The problem only appears if
a) all files of a package are exported
b) a package only contains this class

This bug has been introduced because the transitive closure of all files is
computed which in the above case is a package. However the code which tests if
the main class compilation unit assumes that the list of elements really is a
list of files.

A special "contains" method is needed.

Available in builds > 20020421


Main Class problem in JAR export wizard



Fixed bug 14120: Main Class problem in JAR export wizard 
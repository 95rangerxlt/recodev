508

Following is an almost useless defect report, but it contains all of the 
information we have.

After using the 508 build for some time (and exiting and restarting at least 
once), we discovered the following text in the console (we don't know exactly 
when it occurs)

(paraphrased error messages)
Invalid Menu Extension (path invalid) referencesSubMenu
(many messages like the above)

I thought this was trivially reproducable, but now cannot make it occur at 
all.  Will annotate the defect report with steps when (if) I discover them.

508

Following is an almost useless defect report, but it contains all of the 
information we have.

After using the 508 build for some time (and exiting and restarting at least 
once), we discovered the following text in the console (we don't know exactly 
when it occurs)

(paraphrased error messages)
Invalid Menu Extension (path invalid) referencesSubMenu
(many messages like the above)

I thought this was trivially reproducable, but now cannot make it occur at 
all.  Will annotate the defect report with steps when (if) I discover them.
I got this to happen again.  The following was printed to the console at startup.

(sorry, still no test case)

Invalid Menu Extension (Path is invalid):
org.eclipse.jdt.ui.actions.OpenJavaSearchPage
Invalid Menu Extension (Path is invalid): implementorsSubMenu
Invalid Menu Extension (Path is invalid):
org.eclipse.jdt.ui.actions.ImplementorsInWorkingSet
Invalid Menu Extension (Path is invalid):
org.eclipse.jdt.ui.actions.ImplementorsInWorkspace
Invalid Menu Extension (Path is invalid): declarationsSubMenu
Invalid Menu Extension (Path is invalid):
org.eclipse.jdt.ui.actions.DeclarationsInWorkingSet
Invalid Menu Extension (Path is invalid):
org.eclipse.jdt.ui.actions.DeclarationsInHierarchy
Invalid Menu Extension (Path is invalid):
org.eclipse.jdt.ui.actions.DeclarationsInWorkspace
Invalid Menu Extension (Path is invalid): writeAccessSubMenu
Invalid Menu Extension (Path is invalid):
org.eclipse.jdt.ui.actions.WriteAccessInWorkingSet
Invalid Menu Extension (Path is invalid):
org.eclipse.jdt.ui.actions.WriteAccessInHierarchy
Invalid Menu Extension (Path is invalid):
org.eclipse.jdt.ui.actions.WriteAccessInWorkspace
Invalid Menu Extension (Path is invalid): readAccessSubMenu
Invalid Menu Extension (Path is invalid):
org.eclipse.jdt.ui.actions.ReadAccessInWorkingSet
Invalid Menu Extension (Path is invalid):
org.eclipse.jdt.ui.actions.ReadAccessInHierarchy
Invalid Menu Extension (Path is invalid):
org.eclipse.jdt.ui.actions.ReadAccessInWorkspace
Invalid Menu Extension (Path is invalid): referencesSubMenu
Invalid Menu Extension (Path is invalid):
org.eclipse.jdt.ui.actions.ReferencesInWorkingSet
Invalid Menu Extension (Path is invalid):
org.eclipse.jdt.ui.actions.ReferencesInHierarchy
Invalid Menu Extension (Path is invalid):
org.eclipse.jdt.ui.actions.ReferencesInWorkspace
Created attachment 796
workspace.zip
Use the workspace I have zipped & attached to reproduce this problem.  I have
only tested this with the 20020508 build.
Here is a theory. These actions are contributed in action set part association. 
What we observerd before is that an action set part association can get's lost 
(e.g. F3 no longer works in the editor, since the Source menu got lost). There 
is a bug against the workbench on this.

Once the actions set is "lost" the corresponding menu slots are missing and 
when search wants to dynamically update the menus these slits are missing and 
you get the exception.

When this happens again please open the menus and verify that the Java search 
actions are contributed, same for the Source menu.  


hmm, the fact that this problem is reproducable in a particular workspace 
doesn't support my theory. We should try with the workspace.
This is caused by a workbench bug which is set to FIX LATER (after 2.0). The
suggested solution is to copy the Search menu definition in the plug-in which
adds items to it. This currently affects Java and Help.

This must be well documented since other contributors *will* stumble over this too.
I will provide the following (final) menu in the Search plug-in:
<!-- =================================================================== -->
<!-- Search Menu                                                         -->
<!-- =================================================================== -->

<menu
  id="org.eclipse.search.menu"
  label="%searchMenu.label"
  path="navigate">
  <groupMarker name="internalDialogGroup"/>   <!-- not to be used by clients  -->
  <groupMarker name="dialogGroup"/>           <!-- to be used by clients      -->
  <separator name="contextMenuActionsGroup"/>
</menu>

Is this really bug really fixed? 

I just failed making a contribution to the Search menu as described at http://wiki.eclipse.org/Menu_Contributions/Search_Menu . 
Later I tried the workaround with actionSets as described at http://www.eclipse.org/forums/index.php?t=msg&goto=648585&S=0b4e3effd0f243c7f18afd151cd53952#msg_648585 and finally I succeeded with the workaround that is still active in current JDT 3.6: By redefining the whole Search menu.
(In reply to comment #7)
> Is this really bug really fixed? 
This bug was about the issue in JDT UI's menu additions and this got fixed. The thing you refer to is not a real working example as it says: "Possible Java Search Menu Example". This example assumes that Search switched to the new menu contribution story which it didn't so far (see bug 213385).


Invalid Menu Extension on search pages



Fixed bug 156845: [content assist] wrong type arguments for a type parameterized with a local type 

156842 [clean up] should not make unused private fields final 
This comment applies to both resource filters and java element filters in JDT.  
I don't think it should be necessary to create a plugin just to add filters.  
The core filter mechanism should allow the user to dynamically add and remove 
filters on the fly.  The filter dialog should have a "New" button and 
a "Remove" button to provide the user a way to add and remove filters on the 
fly without having to create a separate plugin.

This comment applies to both resource filters and java element filters in JDT.  
I don't think it should be necessary to create a plugin just to add filters.  
The core filter mechanism should allow the user to dynamically add and remove 
filters on the fly.  The filter dialog should have a "New" button and 
a "Remove" button to provide the user a way to add and remove filters on the 
fly without having to create a separate plugin.
Moving to JDT/UI.

Feature request makes sense and this was the original intent, but in the 
overall scheme it currently has lower priority.
should be reconsiders as part of the improved filtering work item
I assume you're talking about pattern filters.

Yep. Did three things.
1. Allow to provide patterns via UI
2. Surfacing already existing built-in filters (e.g. empy package filter)
3. Allow plug-in contributors to provide their own ViewerFilters.



Dynamic Filters



BETA_JAVA7 - Fixed bug 326950: [compiler][null]Do not optimize code generation based on static analysis (dead code) 

HEAD- Fixed bug 326950: [compiler][null]Do not optimize code generation based on static analysis (dead code) 

96950, 97547, 97614, 98378 

96950 
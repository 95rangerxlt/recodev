Select a source folder.
Right-menu/Export...
JAR File, Next
Type in a relative path (or so I thought), e.g. "myproject/lib/myjar.jar"
Next, Next, Finish

At this point, I get a dialog box which asks me if I want to create the
directory.  (Would be helpful to tell what directory it's actually thinking of
creating.)  If I click "Yes", I'm taken back to the last dialog with no
explanation of what went wrong.

If, instead, I answer "No", it actually tells me what directory was missing.

Select a source folder.
Right-menu/Export...
JAR File, Next
Type in a relative path (or so I thought), e.g. "myproject/lib/myjar.jar"
Next, Next, Finish

At this point, I get a dialog box which asks me if I want to create the
directory.  (Would be helpful to tell what directory it's actually thinking of
creating.)  If I click "Yes", I'm taken back to the last dialog with no
explanation of what went wrong.

If, instead, I answer "No", it actually tells me what directory was missing.
I'm running F3 linux/gtk.
not critical enough for 2.0 - defer
Post 2.0 review:
There are two issues here
a) show the path in the dialog
b) I can not reproduce "coming back to the wizard after pressing Yes": the stuff
is exported and the wizard is closed. Maybe there was some other parameter not
right. Please check at the top of the wizard if there are any messages

I still get the behavior as described in the original bug report.  Maybe it's
obvious, but I should note that neither "myproject" nor "myproject/lib" exist.

I'm unsure what you mean by "the top of the wizard" to check for messages. 
After clicking "yes" to the dialog box asking if I want to create the directory,
I get back to the dialog box whose title bar reads "JAR Export" and whose first
two lines read, "JAR Manifest Specification" and "Customize the manifest file
for the JAR package."
The PR is not marked as fixed it is still open. I only described the issues one
being the path not shown in the dialog and the other one which I can not
reproduce in 2.0:

When I use the JAR Packager and paste in "myproject/lib/myjar.jar" as location
for the JAR file, then press Next, Next, Finish I'm asked if I want to create
the file. When I then press Yes the dialog and after that the wizard are closed.
Please check if there is some error message in .log.

With top of the wizard I meant that "Customize the manifest file
for the JAR package" would eventually be replaced with an error or warning
message if there would be a problem.

Created attachment 1652
Log file of system exhibiting this error
There are errors in the log file, but I don't know if they're related to the bug
or not, so I've attached the log.  I provoked the bug a few times this morning,
so that seems suspicious.
The .log shows serious problems with your object store. There seems to be some
problems with the Eclipse metadata. Did you reuse your workspace when switching
to a new Eclipse drop? If so I suggest to switch to Eclipse 2.0 and create a
fresh workspace. The .log does not contain any JAR Packager related call stack.
To prove this simply delete the .log export and then look at the .log again.

What could have happened is that the errors in the .log cause an abort of the
JAR Packager and that this exception is wrongfully swallowed by the JAR Packager
or the underlying Eclipse core or JDT core framework.

I suggest to try again with a fresh workspace (as said before yours is most
likely corrupt). If you still see the problem it would be helpful to provide a
test case that I can reproduce on my side i.e. by using Eclipse code or JUnit code.

I'm seeing the same results in a fresh workspace.  No .log file is being
created.  I'll try creating a new project and see if I get the same results.
Started eclipse via "/opt/eclipse/eclipse -data /local/home/nickell/eclipse"

Created a new project, ProvokeExportError.  Using source folder "src" for source
and bin for classes.

Created a new class, HelloWorld in package test.parc.provokeerror, with static
main method which printlns "Hello, World!"

Ran it.

Tried to export to JAR file "snowwhite/dopey/redapple.jar".  Offers to create
the location for the jar file, but afterward returns to "JAR Manifest
Specification" dialog.


Okay, I think I see the problem now:  If I click, "No", I don't want to create
the location, then I get an error window, "JAR creation failed. See details for
additional information."  The details say, "/snowwhite/dopey/redapple.jar (No
such file or directory)".

While I though I was specifying a path relative to my project workspace, eclipse
was trying to build a path relative to "/", to which I don't have write
permission on this machine.
That's definitely a bug (good finding!) but the path should not be relative to
the workspace since normally you like to export stuff out of the workspace. The
ZIP and directory export use the Eclipse install directory as starting point for
relative directories.Which I think isn't very good either.

We have two choices
a) don't allow relative directories
b) do the same as the other exports (i.e. use the install directory)

In my opinion, exporting relative to the install directory is always wrong.  In
a linux/unix world, the best case is that the user doesn't write there.  Worst
case is that some user is running as root, and *does* write there.  Software
should be installed where users can't overwrite it.  (I believe this should be
true in the Windows world as well, but writing settings to the installation
directory is just too common.

Here are my own choices, favorites first:
(a) Relative exports are relative to the workspace
(b) don't allow relative exports
(c) Relative exports are relative to the user's home directory
(d) (Bleah!) Relative exports are relative to the install directory

If relative exports are allowed, it would be good to somehow present to the user
just where the jar is being placed.  This is true even when no directory needs
to be created.
I agree with you that neither root (/) nor install are ok and the same should
also be fixed for file and directory export to be in synch.

Thinking of it again, the workspace is probably not the logically correct
solution but it is the most intuitive one for the user. Before I change it I
will have to coordinate it with Eclipse Platform.

>it would be good to somehow present to the user just where the jar is being placed
We had it in there that when the user started to type (instead of using
Browse...) the path was immediately resolved to the full path but we got PRs
that this wasn't good for the user (dynamic entry field). Possible solutions I
saw in other UIs:
- show the full path somewhere (below or in the info field on top)
- already display the (default) path and place the cursor at the end of the
string (I don't like this one because the user could still delete it and then
we're not much better than before)
- only allow "Browse..." (don't like it either: I'm often faster with typing
than using "Browse..." and navigating trough the tree)

Fixed.
Available in 2.1 builds > 20020723

The following changes have been released to HEAD (2.1 stream):
- dialog contains location which will be created
- if dialog is cancelled or No selected we return to the wizard
- relative paths are considered relative to the workspace
- if the path is relative an info is shown at the top of the wizard

Since milestones are now available, changing milestone from "2.1" to "2.1 M1".


JAR export does not explain problem



Fixed bug 20288: JAR export does not explain problem 

Fixed bug 20288: JAR export does not explain problem 

Fixed bug 20288: JAR export does not explain problem 
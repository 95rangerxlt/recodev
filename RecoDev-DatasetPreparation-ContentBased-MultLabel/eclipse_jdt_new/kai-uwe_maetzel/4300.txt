Ctrl-Shift-T
	Select a type.
	Hit OK.
	The type is opened in the java editor, but the editor does not have focus unless I click on it.

	This has the undesired effect of leaving the Outline editor showing the contents of the
	previously selected editor until I select the new editor.

	I'm pretty sure it didn't used to work this way.

NOTES:

Ctrl-Shift-T
	Select a type.
	Hit OK.
	The type is opened in the java editor, but the editor does not have focus unless I click on it.

	This has the undesired effect of leaving the Outline editor showing the contents of the
	previously selected editor until I select the new editor.

	I'm pretty sure it didn't used to work this way.

NOTES:
Fixed. Build > 203.
20020205: Verified:
When "Show in Type Hierarchy" is selected, focus goes to outline in type 
hierarchy.
When "Show in Type Hierarchy" is not selected, focus goes to editor.
In both cases, the outline is updated.
But the bug is that I opened a java editor and focus does not go to it. Please 
correct me if I misunderstand. If I open a file I should be able to type in it 
without any further mouse clicks to give it focus. The outline view should not 
get focus.
If "Show in Hierarchy" is checked the Type Hierarchy Part view gets the focus. 
The reason for that is Fast View support. Assume you have the Type Hierarchy 
View docked as Fast View, it would show up briefly - when getting new input - 
and then disapprear because the editor has the focus. Fast View supports 
overrules "instant typing" in this case.


Newly-opened java editors don't have focus (1GLE4MW)



Fixed Bug 444300 - [1.8] content assist not working inside lambda expression in case of fields 

Bug 430073 - Removing field LambdaExpression#resolvedTypeName 

Bug 430073 - [1.8][model] Lambda model elements hierarchy needs rewiring 

Bug 430015 - [1.8] NPE trying to disassemble classfile with lambda method and MethodParameters - fixed the test fix 

Bug 430015 - [1.8] NPE trying to disassemble classfile with lambda method and MethodParameters - fixed the test fix 

Follow up fixes to Bug 430015 - [1.8] NPE trying to disassemble classfile with lambda method and MethodParameters 

Follow up fixed to Bug 430015 - [1.8] NPE trying to disassemble classfile with lambda method and MethodParameters 

Fixed Bug 430035 - [1.8][compiler][codegen] Bridge methods are not generated for lambdas/method references 

Fixed Bug 430035 - [1.8][compiler][codegen] Bridge methods are not generated for lambdas/method references 

Bug 430084 - [compiler][null] NPE: Method without return value 

Bug 430069 - [1.8] Test failures when run with JRE7- use PackageAdmin to access (unresolved) org.eclipse.jdt.annotation_2.0.0 

Part I fix for Bug 430069 - [1.8] Test failures when run with JRE7- 

Test for Bug 430043 - [1.8][compiler] Cannot infer type arguments for Junk14<> 

Test for Bug 430040 - [1.8] [compiler] Type Type mismatch: cannot convert from Junk13.ExpressionHelper<Object> to Junk13.ExpressionHelper<Object> 

Fixes for Bug 430027 [1.8][model] Mitigate issues due to Lambda model element hierarchy lacking support for binary elements. 

Fixed Bug 430033 - [1.8][model] Lambda elements missing in ancestry for binary elements 

Fixed Bug 430026 - [1.8] Lambda parameter has wrong parent if it declares its type 

Fixed Bug 430015 - [1.8] NPE trying to disassemble classfile with lambda method and MethodParameters 

HEAD - bug 143001 

43003 Disable warning/don't show again checkbox 
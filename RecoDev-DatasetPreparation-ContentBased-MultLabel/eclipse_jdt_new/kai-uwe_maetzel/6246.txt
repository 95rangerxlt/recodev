according to the java lang spec (section 3.9)
the list of java keywords is as follows:

abstract double int strictfp
boolean else interface super 
break extends long switch 
byte final native synchronized 
case finally new this 
catch float package throw 
char for private throws 
class goto protected transient  
const if public try 
continue implements return void 
default import short volatile 
do instanceof static while 

//---
then, there are 3 reserved words (2 boolean literals and a null literal):
true, false, null

the notion of 'built-in' types does not exist!
only some of the java keywords are recognized as such by our java editor, 
which is incorrect.

suggest adding all keywords to the keyword list,
create another entry for reserved words (the 3 mentioned)
and removing the 'built-in types' entry

according to the java lang spec (section 3.9)
the list of java keywords is as follows:

abstract double int strictfp
boolean else interface super 
break extends long switch 
byte final native synchronized 
case finally new this 
catch float package throw 
char for private throws 
class goto protected transient  
const if public try 
continue implements return void 
default import short volatile 
do instanceof static while 

//---
then, there are 3 reserved words (2 boolean literals and a null literal):
true, false, null

the notion of 'built-in' types does not exist!
only some of the java keywords are recognized as such by our java editor, 
which is incorrect.

suggest adding all keywords to the keyword list,
create another entry for reserved words (the 3 mentioned)
and removing the 'built-in types' entry
We should complete the keyword list.

The distinction between built-in types and keywords is subtle and can easily 
confuse users. Need to understand the background first why there is a 
distinction between keywords and built-in types.

true, false, null: should be handled as keywords and not as built-in types.
Build > 20011212.


editor preferences: use of 'keywords' 'build-in types'  is incorrect



HEAD - Fix for 62463 

HEAD - Fix for 62463 

86246 [content assist] invalid parameter hints on content assist - also generate context info if the completion is empty 

Bug 86246 [content assist] invalid parameter hints on content assist 
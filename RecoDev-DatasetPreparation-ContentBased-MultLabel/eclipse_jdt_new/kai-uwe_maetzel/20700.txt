Build 20020618

- launch eclipse using java.exe, and -debug with options set to show startup 
time
- open a .java file
- notice that org.eclipse.help.ui is not yet activated
- do a code assist
- org.eclipse.help.ui gets activated

This got introduced with the fix for bug 19445, since in order to check 
IHelp.isContextHelpDisplayed(), it needs to call WorkbenchHelp.getHelpSupport
(), but this activates the Help UI.

The fix is to add a new API to WorkbenchHelp:

/**
 * Returns <code>true</code> if the context-sensitive help
 * window is currently being displayed, <code>false</code> if not.
 * This avoid activating the help support if it is not already activated.
 */
public static boolean isContextHelpDisplayed() {
	return helpSupport != null && helpSupport.isContextHelpDisplayed();
}

And then change all senders of IHelp.isContextHelpDisplayed() to use this 
instead.  There are currently two:
org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.createJavaSourceViewer
(Composite, IVerticalRuler, int)
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.AdaptedSourceViewe
r.requestWidgetToken(IWidgetTokenKeeper)

Build 20020618

- launch eclipse using java.exe, and -debug with options set to show startup 
time
- open a .java file
- notice that org.eclipse.help.ui is not yet activated
- do a code assist
- org.eclipse.help.ui gets activated

This got introduced with the fix for bug 19445, since in order to check 
IHelp.isContextHelpDisplayed(), it needs to call WorkbenchHelp.getHelpSupport
(), but this activates the Help UI.

The fix is to add a new API to WorkbenchHelp:

/**
 * Returns <code>true</code> if the context-sensitive help
 * window is currently being displayed, <code>false</code> if not.
 * This avoid activating the help support if it is not already activated.
 */
public static boolean isContextHelpDisplayed() {
	return helpSupport != null && helpSupport.isContextHelpDisplayed();
}

And then change all senders of IHelp.isContextHelpDisplayed() to use this 
instead.  There are currently two:
org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditor.createJavaSourceViewer
(Composite, IVerticalRuler, int)
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.AdaptedSourceViewe
r.requestWidgetToken(IWidgetTokenKeeper)
Marking for F4.
Once this has been fixed, bug 14314 should be annotated so that they can use 
the new API too.

Added WorkbenchHelp.isContextHelpDisplayed() as above.
Reviewed by Randy and Kevin.
Annotated bug 14314 as well.

Moving to JDT-UI for the corresponding changes there.

I-20020621


Code assist activates help UI

performance

#20700 
I had a workbench open, with the following perspectives open in the following order:
	team, java, java type hierarchy, debug

I closed and reopened the workbench in the "java" perspective

In the perspective bar on the left hand side of the screen, I right-clicked on the type
hierarchy perspective, and selected "Close".  Note that I had not yet used that 
perspective in the current invocation of the workbench.

Immediately after clicking close, I clicked in the content outline in my current
perspective.  The UI froze completely for about 30 seconds.  Using TaskManager
I saw that CPU usage was very low during that time (maybe 1%).  The UI didn't even
repaint during this time.

After awhile, the UI came back with a generic "internal error" dialog.  The log file contained
the following stack trace:

org.eclipse.jface.util.Assert$AssertionFailedException: null argument;
	at org.eclipse.jface.util.Assert.isNotNull(Assert.java:133)
	at org.eclipse.jface.util.Assert.isNotNull(Assert.java(Compiled Code))
	at org.eclipse.jface.util.ListenerList.remove(ListenerList.java:131)
	at org.eclipse.jdt.internal.ui.viewsupport.ProblemMarkerManager.removeListener(ProblemMarkerManager.java:184)
	at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.dispose(TypeHierarchyViewPart.java:366)
	at org.eclipse.ui.internal.WorkbenchPage.dispose(WorkbenchPage.java:500)
	at org.eclipse.ui.internal.WorkbenchWindow.closePage(WorkbenchWindow.java:353)
	at org.eclipse.ui.internal.WorkbenchWindow$6.widgetSelected(WorkbenchWindow.java:917)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:85)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:646)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1160)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:675)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:658)
	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:820)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:502)
	at org.eclipse.core.launcher.Main.main(Main.java:362)

NOTES:

JohnA (9/27/2001 3:09:31 PM)
	I have not yet reproduced this, but I will record more details if they become available...

JohnA (9/27/2001 4:01:42 PM)
	I can consistently reproduce the internal error, but the freeze is intermittent.
	It's important that the type hierarchy perspective has never been opened during that 
	invocation of the workbench.

EG (10/1/2001 12:00:10 AM)
	Given the current workbench APIs the code cannot assume that createPartControl
	is called before dispose. When a part never becomes visible then createPartControl
	isn't called. Therefore the code in dispose cannot assume that variables like the
	viewer field are set when calling dispose.
	We have to review all our ViewParts: TypeHierarchy, PackagesView, SearchResults, Outliner.

EG (10/1/2001 12:03:16 AM)
	MA pls check type hierarchy and then forward the PR to the owners of the other parts.

MA (01.10.2001 11:30:29)
	for TypeHierarchy, fixed in 202

DM (10/1/01 4:07:32 PM)
	Fixed for Search view > 0.202a

I had a workbench open, with the following perspectives open in the following order:
	team, java, java type hierarchy, debug

I closed and reopened the workbench in the "java" perspective

In the perspective bar on the left hand side of the screen, I right-clicked on the type
hierarchy perspective, and selected "Close".  Note that I had not yet used that 
perspective in the current invocation of the workbench.

Immediately after clicking close, I clicked in the content outline in my current
perspective.  The UI froze completely for about 30 seconds.  Using TaskManager
I saw that CPU usage was very low during that time (maybe 1%).  The UI didn't even
repaint during this time.

After awhile, the UI came back with a generic "internal error" dialog.  The log file contained
the following stack trace:

org.eclipse.jface.util.Assert$AssertionFailedException: null argument;
	at org.eclipse.jface.util.Assert.isNotNull(Assert.java:133)
	at org.eclipse.jface.util.Assert.isNotNull(Assert.java(Compiled Code))
	at org.eclipse.jface.util.ListenerList.remove(ListenerList.java:131)
	at org.eclipse.jdt.internal.ui.viewsupport.ProblemMarkerManager.removeListener(ProblemMarkerManager.java:184)
	at org.eclipse.jdt.internal.ui.typehierarchy.TypeHierarchyViewPart.dispose(TypeHierarchyViewPart.java:366)
	at org.eclipse.ui.internal.WorkbenchPage.dispose(WorkbenchPage.java:500)
	at org.eclipse.ui.internal.WorkbenchWindow.closePage(WorkbenchWindow.java:353)
	at org.eclipse.ui.internal.WorkbenchWindow$6.widgetSelected(WorkbenchWindow.java:917)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:85)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java(Compiled Code))
	at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:646)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1160)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:675)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:658)
	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:820)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:285)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:151)
	at org.eclipse.core.launcher.Main.run(Main.java:502)
	at org.eclipse.core.launcher.Main.main(Main.java:362)

NOTES:

JohnA (9/27/2001 3:09:31 PM)
	I have not yet reproduced this, but I will record more details if they become available...

JohnA (9/27/2001 4:01:42 PM)
	I can consistently reproduce the internal error, but the freeze is intermittent.
	It's important that the type hierarchy perspective has never been opened during that 
	invocation of the workbench.

EG (10/1/2001 12:00:10 AM)
	Given the current workbench APIs the code cannot assume that createPartControl
	is called before dispose. When a part never becomes visible then createPartControl
	isn't called. Therefore the code in dispose cannot assume that variables like the
	viewer field are set when calling dispose.
	We have to review all our ViewParts: TypeHierarchy, PackagesView, SearchResults, Outliner.

EG (10/1/2001 12:03:16 AM)
	MA pls check type hierarchy and then forward the PR to the owners of the other parts.

MA (01.10.2001 11:30:29)
	for TypeHierarchy, fixed in 202

DM (10/1/01 4:07:32 PM)
	Fixed for Search view > 0.202a
Checked remaining parts.


UI Freeze and error closing type hierarchy perspective (1GKQ77O)



Fixed Bug 426537 - [1.8][inference] Eclipse compiler thinks I<? super J> is compatible with I<J<?>> - raw type J involved 

Partial fix for Bug 426537 - [1.8][inference] Eclipse compiler thinks I<? super J> is compatible with I<J<?>> - raw type J involved 

Bug 426537 - [1.8][inference] Eclipse compiler thinks I<? super J> is compatible with I<J<?>> - raw type J involved 

Bug 426546 - [BETA_JAVA8] Build Eclipse Luna SDK with our Java 8 compiler - test to assure that an inherited bridge method need not be repeated 

Bug 426542 - [1.8] Most specific method not picked when one method has intersection type as type parameter 

junit for Bug 426542 - [1.8] Most specific method not picked when one method has intersection type as type parameter 

Bug 426515 - Added regression test 

Fixed Bug 426565 - [1.8][compiler] Use standard syntax in AnnotationBinding#toString() 

Fix for Bug 426510 - [1.8][dom ast] New API: ImportRewrite#addAnnotation(..) 

Fixed Bug 426520 - [1.8][formatter] inserts spaces into annotated qualified type 

Bug 426515 - [1.8][dom ast] Bindings from reconciler are sometimes missing type annotations 

Bug 426540 - [1.8][compiler] Inference/overload resolution failure 

Bug 426563 - [1.8] AIOOBE when method with error invoked with lambda expression as argument 

Bug 426590 - [1.8][compiler] Compiler error with tenary operator - test from comment 1 

Bug 426590 - [1.8][compiler] Compiler error with tenary operator 

Bug 426534 - [1.8][compiler] Accessibility of vararg element type not checked for generic methods. 

Bug 426589 - [1.8][compiler] Compiler error with generic method/constructor invocation as vargs argument 

(Disabled) test for Bug 426589 - [1.8][compiler] Compiler error with generic method/constructor invocation as vargs argument 

Fixed Bug 426544 - [1.8][compiler] Compiler over-eagerly detects collision of single static imports 

Test for Bug 426534 - [1.8][compiler] Accessibility of vararg element type not checked for generic methods. 

142653 in 3.2.1 

142653 

142653 in 3.2.1 

142653 

Bug 44265 - Breakpoint can be set in an empty method 

94265 [build path] native library configuration should also be possible via JAR properties 

42655 SourceAttachmentBlock does not use dialog font for all widgets [dialogs] [build path] 

42651 Changes in DirectoryDialog behavior [dialogs] [build path] [javadoc] 
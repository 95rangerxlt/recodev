TM (6/11/2001 15:10:11)	
	SDK 122

	1) smoke test setup
	2) move the package junit.extensions to a newly created java project foo
	3) put the JUnit project on the classpath of foo
	4) open a class hieararchy on ExceptionTestCase
	5) observe: the type hieraryh now shows ExceptionTestCase as a subclass of Object
	6) put JUnit back on the classpath of foo.
	7) observe: no update of the type hierarchy happens.

EG (7/12/01 11:17:45 AM)
	are we getting the proper notifications from JCORE

MA (03.08.2001 11:50:49)
	Missing change notifications from the ITypeHierarchy
	Same when a CU is same project:
		1. CreateCU X.java
			public class X extends C {
			}
			class C {
			}
		2. Open type hierarchy on X
		3. rename C -> C1 (by editing)
			-> no type hierarchy change notification
		4. rename C1 -> C
			-> no type hierarchy change notification
	2 CU's in the same file
		1.	X.java
			public class X extends Y {
			}
			Y.java
			public class Y {
			}				
		2. Open type hierarchy on X
		3. Rename Y -> Y1
			-> type hierarchy change notification
		4. rename Y1 -> Y
			-> no type hierarchy change notification

	Move to JCore

TM (6/11/2001 15:10:11)	
	SDK 122

	1) smoke test setup
	2) move the package junit.extensions to a newly created java project foo
	3) put the JUnit project on the classpath of foo
	4) open a class hieararchy on ExceptionTestCase
	5) observe: the type hieraryh now shows ExceptionTestCase as a subclass of Object
	6) put JUnit back on the classpath of foo.
	7) observe: no update of the type hierarchy happens.

EG (7/12/01 11:17:45 AM)
	are we getting the proper notifications from JCORE

MA (03.08.2001 11:50:49)
	Missing change notifications from the ITypeHierarchy
	Same when a CU is same project:
		1. CreateCU X.java
			public class X extends C {
			}
			class C {
			}
		2. Open type hierarchy on X
		3. rename C -> C1 (by editing)
			-> no type hierarchy change notification
		4. rename C1 -> C
			-> no type hierarchy change notification
	2 CU's in the same file
		1.	X.java
			public class X extends Y {
			}
			Y.java
			public class Y {
			}				
		2. Open type hierarchy on X
		3. Rename Y -> Y1
			-> type hierarchy change notification
		4. rename Y1 -> Y
			-> no type hierarchy change notification

	Move to JCore
Fixed first case, i.e. rename a type so that its subtype has an invalid 
supertype.

Need to fix second case. To do so, need to rewrite TypeHiearchy.isAffectedByType
(...) to use names instead of handles.
Implemented mechanism that remember the simple names of the missing types of a 
hierarchy. When a type is added, it now looks in this list to see if the 
hierarchy needs refresh.


Hierarchy not updated when changing classpath (1GF5QSW)



HEAD - Fix for 330435 

HEAD - Fix for 330445 

HEAD - Fix for javadoc related to bug 203304 

HEAD - 203304 

HEAD - 103304 + 119857 + 149013 

83304 

Bug 173304 NPE in EditDetailFormatterAction when called from context menu of Variables view 

bug 33292 - Show Source of selected element and Java Snippet Editor bug 33304 - Snippet editor toolbar actions not grouped properly 

Backported fix for bug 330438: [ltk] NPE in UndoDocumentChange 

Fixed bug 330415: [inline] Refactor > Inline fails to parenthesize replaced arguments 

Bug 283304: [JUnit] ITestRunSession should return launched project 

fix for 33042 Convert local var to field does not use names from code generation preferences 

33040 No single Undo for generate delegate methods 
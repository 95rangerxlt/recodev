MA (28.08.2001 16:07:58)
	I need to know the paths of JavaElements that has been deleted.

	IJavaElement.getUnderlyingResource throws a JavaModelException if the underlying resource does not exist.
	IResources are handles, so why not return a resource, even it does not exist? Let me do the 'exists' test, if I need it.

	Maybe an unchecked Accessor could be added.

NOTES:

MA (28.08.2001 16:07:58)
	I need to know the paths of JavaElements that has been deleted.

	IJavaElement.getUnderlyingResource throws a JavaModelException if the underlying resource does not exist.
	IResources are handles, so why not return a resource, even it does not exist? Let me do the 'exists' test, if I need it.

	Maybe an unchecked Accessor could be added.

NOTES:
PRODUCT VERSION:
	128


Deferring, please reopen if it is necessary before 2.0
There is now code in our plugin that does the same thing. It works, but not 
very efficient, so it would be nice to have.

I would also be happy with IJavaElement.getCorrespondingPath(), which might be 
an even better idea.
I saw the code for this in jdt.core's JavaSearchScope.add(IJavaElement element)

There are other API requests (incoperate JavaModelUtil into jdt.core) with are 
a _must_ for 2.0 (my opinion). 

Will add IJavaElement.getResource() that will always succeed (even if the 
underlying resource doesn't exist) or return null for external jar.
Will also add IJavaElement.getCorrespondingPath().
Added IJavaElement.getResource() and IJavaElement.getPath().


Need a IJavaElement.getUnderlyingResource that does not do the exists test (1GJ69GP)



HEAD - Fix for 161400 and 163349 

HEAD - Fix for 163349 

HEAD - bug 133491 (better fix) 

HEAD - bug 133491 

Bug 53349 - Error during test suite 

Bug 13349 - Add breakpoint action disabled in editor pop-up 

Fixed bug 334980: [actions] 'Format Element' should work if the selection is on a declaration 

Bug 334978: [syntax highlighting] default constructor of deprecated type should be rendered with strikethrough 

Bug 334992: [quick fix] "Return the allocated Object" hides "Assign statement to local variable" 

133492 Missing mnemonic in "Visible Categories..." view menu 

Fixed bug 133497: [misc] Activate30JavaEditors performance test explanation not there 
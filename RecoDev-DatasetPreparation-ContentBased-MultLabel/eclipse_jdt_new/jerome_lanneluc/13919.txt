1. Add a working set which contains a folder (e.g. junit.framework)
   ==> JavaSearchScope with IFolder junit/framework
2. Search for some classes using that working set
   ==> works
3. Search for the package declaration itself (e.g. junit.framework)
   ==> no matches.

1. Add a working set which contains a folder (e.g. junit.framework)
   ==> JavaSearchScope with IFolder junit/framework
2. Search for some classes using that working set
   ==> works
3. Search for the package declaration itself (e.g. junit.framework)
   ==> no matches.
The scope defines the elements that enclose the search results. So do you 
consider that junit.framework encloses junit.framework?
Yes I do and normally Java Model does apply the same rules i.e. if I add a type
to the scope this type is then found if looking for its declarations.
You're right. Thanks for pointing this out.

Fixed JavaSearchScope.encloses(IPath) so that it accepts the case where the 
given path is equal to one of the paths of the scope's resources.


Declaration for package not found if scope is not project



Bug 139195 [breakpoints] Error on Toggle method breakpoint in external .java file 

Bug 139195 [breakpoints] Error on Toggle method breakpoint in external .java file 

Fixed bug 139197: [refactoring] 'Introduce Indirection' do nothing when right-clicking on method name in .class file 
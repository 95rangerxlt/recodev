11211
1. Create
    public class A {
	public class B extends java.util.Vector {
	}
    }
2. open B in type hierarchy, turn on 'Show All Inherited Members'
3. -> There is no supertype hierarchy of B, 'Object' missing
      typeHierarchy.getSuperTypes('B') returns an empty array
4. -> The inherited methods are complete
      typeHierarchy.getAllSuperTypes('B') returns results

11211
1. Create
    public class A {
	public class B extends java.util.Vector {
	}
    }
2. open B in type hierarchy, turn on 'Show All Inherited Members'
3. -> There is no supertype hierarchy of B, 'Object' missing
      typeHierarchy.getSuperTypes('B') returns an empty array
4. -> The inherited methods are complete
      typeHierarchy.getAllSuperTypes('B') returns results
Did you save the working copy prior to opening the hierarchy ?
Yes, everything saved.
*** Bug 6898 has been marked as a duplicate of this bug. ***
HierarchyResolver was not converting the source type it was fed with to the 
correct compilation unit when the source type was an inner type.
Fixed by finding the outer most type first.


No typehierarchy for inner types



3.6.x stream - Fix for 316889 

HEAD - Fix for 316889 

HEAD - Fix for 316889 

1.5 - 68891 

98644: Infer type arguments causes compile error on JUnit 96889: Assertion Failed exception in Infer Type Arguments 

98644: Infer type arguments causes compile error on JUnit 96889: Assertion Failed exception in Infer Type Arguments 

96889 - use compiler loop in batches to avoid memory heap peaks - better progress monitoring and cancellation 

96889: Assertion Failed exception in Infer Type Arguments 
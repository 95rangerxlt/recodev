Build 20020328

The String based createTypeSignature method should be implemented in term of 
the char[] one, and not the opposite, since it is dealing with char[] 
underneath anyway.

Build 20020328

The String based createTypeSignature method should be implemented in term of 
the char[] one, and not the opposite, since it is dealing with char[] 
underneath anyway.
I would say we should define methods that use char[] for the following at least:

static char[] arrayIfy(char[], int)
public static int getArrayCount(char[]) throws IllegalArgumentException
public static int getParameterCount(char[]) throws IllegalArgumentException
public static char[][] getParameterTypes(char[]) throws IllegalArgumentException
public static char[] getReturnType(char[]) throws IllegalArgumentException
public static char[] toString(char[],char[],char[][],boolean, boolean)
public static char[] toString(char[]) throws IllegalArgumentException

For the first one, I wonder what the name means. I definitely need APIs that 
create as less new char[] as possible.
It is important that no cache is used to perform these operations. They should use the minimal 
amount of memory.
All methods now have their counterpart that use char arrays.
These methods don't create needless extra objects.


Performance - Signature#createTypeSignature should be implemented in term of char[]



HEAD - 127628 

HEAD - 127628, 128814 

HEAD - 127628 

HEAD - test for bug 127628 
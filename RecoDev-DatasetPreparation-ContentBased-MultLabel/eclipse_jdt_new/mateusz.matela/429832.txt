A nested function call with 1 argument is not line wrapped correctly when Formatter - Line Wrapping - Function calls - Arguments - Wrap all elements, every element on a new line is used. Instead they remain stubbornly in place, regardless of what the line length limit is set to. 

Nested functions called with 2 or more arguments work correctly and each argument gets a new line.

Tested with eclipse-SDK-I20140306-1200-win32-x86_64. 

I will attach a workspace shortly that has the right settings for formatter which show the problem.

A nested function call with 1 argument is not line wrapped correctly when Formatter - Line Wrapping - Function calls - Arguments - Wrap all elements, every element on a new line is used. Instead they remain stubbornly in place, regardless of what the line length limit is set to. 

Nested functions called with 2 or more arguments work correctly and each argument gets a new line.

Tested with eclipse-SDK-I20140306-1200-win32-x86_64. 

I will attach a workspace shortly that has the right settings for formatter which show the problem.
Created attachment 240623
Workspace with a test project and Formatter settings
Hint for debugging: Scribe throws AlignmentException with LINE_TOO_LONG.
Shankha, could you please take a look?
I cannot get the formatter to wrap a single argument no matter what setting I try!

Here are some examples; I've shortened the actual argument to fit better in this comment window. I see the same behavior with variables too, not just string constants.

Example 1:
    // not wrapped
    System.out.println("string that makes the line long.");

    // wrapped
    System.out
        .println("string that makes the line long.");

    // expected
    System.out.println(
        "string that makes the line long.");

Example 2:

    // not wrapped
    System.out.println(String.format("string that makes the line long.")); 
    
    // wrapped (too many newlines)
    System.out
        .println(String
            .format("string that makes the line long."));

    // expected
    System.out.println(String.format(
        "string that makes the line long.")); 

    // expected alternate    
    System.out.println(
        String.format("string that makes the line long.")); 

Example 3 with operator:

    // not wrapped
    System.out.println(String.format("string that makes " + "the line long."));

    // wrapped
    System.out.println(String
        .format("string that's long "
            + "with more text"));

    // expected
    System.out.println(String.format(
        "string that's long " 
        + "with more text"));

Example 4, two arguments:

    // not wrapped
    System.out.println(String.format("long string", ""));

    // wrapped (WAY too many newlines!)
    System.out
        .println(String
            .format(
                "long string",
                ""));

    // expected
    System.out.println(String.format(
        "long string", ""));
(In reply to Tye Z. from comment #4)
> I cannot get the formatter to wrap a single argument no matter what setting
> I try!
Try Eclipse 4.5, it's fixed now.
Fixed with bug 303519.


[formatter] Function call with 1 argument not line wrapped when Wrap all elements on new lines is in use


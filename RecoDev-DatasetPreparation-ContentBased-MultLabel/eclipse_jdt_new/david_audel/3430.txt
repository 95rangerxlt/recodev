AK (10/2/2001 2:14:31 PM)
	a. the parameter hints should give me more information - parameter type information is already present 
		in the code assist shell. i'd expect parameter names, not types.

	b. the only way i was able to see the hints was right after code completion - how do you see them afterwards? 
		(i.e. to see the hint again without using code completion again)

NOTES:
EG (02.10.2001 14:23:48)
	re a: I expect both arguments and types. Support for this is on the JCORE plan.

	re b: you can get the signature info by positioning the cursor behind the opening parenthesis.
		we could do better, but we are waiting for an API from JCORE to get the argument hints.
	moving to JCORE.
		

PM (10/4/2001 12:05:54 PM)
	Parameter names are currently being added to completion APIs. You would get both in each completion candidate.
	Support released into STABLE (change on ICodeCompletionRequestor).

PM (10/9/2001 7:17:28 PM)
	Contextual message send help is being investigated at UI level.

AK (10/2/2001 2:14:31 PM)
	a. the parameter hints should give me more information - parameter type information is already present 
		in the code assist shell. i'd expect parameter names, not types.

	b. the only way i was able to see the hints was right after code completion - how do you see them afterwards? 
		(i.e. to see the hint again without using code completion again)

NOTES:
EG (02.10.2001 14:23:48)
	re a: I expect both arguments and types. Support for this is on the JCORE plan.

	re b: you can get the signature info by positioning the cursor behind the opening parenthesis.
		we could do better, but we are waiting for an API from JCORE to get the argument hints.
	moving to JCORE.
		

PM (10/4/2001 12:05:54 PM)
	Parameter names are currently being added to completion APIs. You would get both in each completion candidate.
	Support released into STABLE (change on ICodeCompletionRequestor).

PM (10/9/2001 7:17:28 PM)
	Contextual message send help is being investigated at UI level.
Fixed in latest, UI is dealing with sticky help.
PRODUCT VERSION:
	202a
	



usability: parameter hints  (1GKYXK5)



revert fix for bug 343060 - buildnotes 

revert fix for bug 343060: Method.getMethods() returns different methods (compared to standard compiler) for public/non-public inheritance hierarchies 

revert fix for bug 343060 - buildnotes 

revert fix for bug bug 343060: Method.getMethods() returns different methods (compared to standard compiler) for public/non-public inheritance hierarchies 

revert fix for Fixed bug 343060: Method.getMethods() returns different methods (compared to standard compiler) for public/non-public inheritance hierarchies 

R3_6_maintenance_Java7 - Fixed bug 343060: Method.getMethods() returns different methods (compared to standard compiler) for public/non-public inheritance hierarchies 

R3_7_maintenance - fixed bug 343060: Method.getMethods() returns different methods (compared to standard compiler) for public/non-public inheritance hierarchies 

Fixed bug 343060: Method.getMethods() returns different methods (compared to standard compiler) for public/non-public inheritance hierarchies 

BETA_JAVA7: Fixed bug 334306: [1.7][compiler] name clash reported in javac 1.7 and not in javac 1.6 

HEAD - 234307 

Update for 34301 

Revert - Bug 343023 - Clear the initial stack trace console message on the first edit 

Bug 343023 - Clear the initial stack trace console message on the first edit 

Bug 343039 - Turn on monitors by default 

Bug 134304 - Fix broken NLS strings 

Bgu 13430 - Open on Type in console can work better; less beep 

134305 Incorrect layout for Cleanup dialog 

93430 Access rules - 'Combine rules...' checkbox does not reflect status on required project 

fix for 34306 
I20050823-0800

Steps to reproduce:
- Consider following 5.0 cu:

enum TEST { BLA, BLAH };

- Rename and do a preview
-> enum keyword is not correctly highlighted

I20050823-0800

Steps to reproduce:
- Consider following 5.0 cu:

enum TEST { BLA, BLAH };

- Rename and do a preview
-> enum keyword is not correctly highlighted
Andre, can you please give me a hint how I can advise the compare viewer to use
1.5 syntax coloring. I looked at CompareViewerSwitchingPane and satalietes but
didn't find a way how to do this.
Pinging Andre...
The class that currently sets up the compare viewer for refactoring preview is ComparePreviewer
any plans here for 3.2 as it is a polish item?
Andre is looking into it but we don't know yet how much work it will be and whether it will make it into RC1 or not.
Please note that this problem does not only occur in the refactoring preview, but in any Java Compare.
The problem is that the Java 5.0 highlighting of the SourceViewer is configured via an additional chained PreferenceStore that needs to track the corresponding JavaProject of the viewers input. The JavaMergeViewer lacked this additional PreferenceStore.

I've added code to the JavaMergeViewer that checks whether the left, right, or ancestor input of the ICompareInput implements an IResourceProvider. If yes, it tries to get the underlying IResource of the input and maps it to a IJavaProject. This is used to setup the PreferenceStore that configures the SourceViewer.

Dirk, now you only have to implement the IResourceProvider interface on the two sides of the previewer input.
Thanks Andre.

Fixed for RC1.


[refactoring] [ltk] Refactoring preview does not correctly highlight 5.0 code

polish

[108256] [refactoring] [ltk] Refactoring preview does not correctly highlight 5.0 code 

released partial fix for #108256: [refactoring] [ltk] Refactoring preview does not correctly highlight 5.0 code 
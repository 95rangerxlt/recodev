Take the following code:

package foo;

import java.io.IOException;
import java.sql.SQLException;

public class Test {
    private void thrower() throws SQLException, IOException {}
    public void test() throws SQLException {
        thrower();
    }
}

Obviously, there's an error because test doesn't handle thrower's IOException.
Now, if I apply the "Surround with try/catch" quick fix, I'd expect to get one
catch phrase -- for IOException. What happens (in Eclipse 3.0RC1) is that
another catch clause is generated for SQLException -- which is unnecessary and
usually not what I want.

Take the following code:

package foo;

import java.io.IOException;
import java.sql.SQLException;

public class Test {
    private void thrower() throws SQLException, IOException {}
    public void test() throws SQLException {
        thrower();
    }
}

Obviously, there's an error because test doesn't handle thrower's IOException.
Now, if I apply the "Surround with try/catch" quick fix, I'd expect to get one
catch phrase -- for IOException. What happens (in Eclipse 3.0RC1) is that
another catch clause is generated for SQLException -- which is unnecessary and
usually not what I want.
Move to JDT/UI for comment
I'm using the refactoring change as is...
Fixed for RC1.

Added two new test cases TestMethodThrowsException and TestMethodThrowsException1


Surround with try/catch quick fix too greedy [quick fix]



[66379] Surround with try/catch quick fix too greedy [quick fix] 

[66379] Surround with try/catch quick fix too greedy [quick fix] 
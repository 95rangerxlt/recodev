Below is email from the customer working on WSAD.
I have recreated this behaviour on Eclipse 2.1.1 and 3.0 on Windows 2000
I have viewed the jar files in hex and validated that the Java jar command
actually puts additional entries in the .jar compared to Eclipse/WSAD.
Both the customer and I believe the Java JAR spec does not address this issue.
That is why I have marked it as an enhancement. Customer would like an option to
control the creation of directory entries.

Here is a more detailed problem description

Unzip the attached file somewhere (such as C:\junk).
(See attached file: images.jar)

Then:
   C:\junk>jar cvf images1.jar images
   or
   C:\junk>jar cvf images2.jar images/

They give the same results, as shown by:
   C:\junk>jar tvf images1.jar
   or
   C:\junk>jar tvf images2.jar

     0 Mon Jan 10 09:30:36 CST 2005 META-INF/
    71 Mon Jan 10 09:30:36 CST 2005 META-INF/MANIFEST.MF
     0 Mon Jan 10 09:29:58 CST 2005 images/
   144 Tue Jun 22 14:45:42 CDT 2004 images/blank.png
   251 Tue Jun 22 14:45:42 CDT 2004 images/file.png
   229 Tue Jun 22 14:45:42 CDT 2004 images/foldericon.png
   148 Tue Jun 22 14:45:42 CDT 2004 images/I.png
   232 Tue Jun 22 14:45:42 CDT 2004 images/openfoldericon.png
   152 Tue Jun 22 14:45:42 CDT 2004 images/T.png

Note the existence of the directory entries and the order of the files (the
OS-native order for Windoze).

Now try:
   C:\junk>jar cvf images3.jar images/*
and dump the results:
   C:\junk>jar tvf images3.jar
        0 Mon Jan 10 09:31:14 CST 2005 META-INF/
       71 Mon Jan 10 09:31:14 CST 2005 META-INF/MANIFEST.MF
      144 Tue Jun 22 14:45:42 CDT 2004 images/blank.png
      251 Tue Jun 22 14:45:42 CDT 2004 images/file.png
      229 Tue Jun 22 14:45:42 CDT 2004 images/foldericon.png
      148 Tue Jun 22 14:45:42 CDT 2004 images/I.png
      232 Tue Jun 22 14:45:42 CDT 2004 images/openfoldericon.png
      152 Tue Jun 22 14:45:42 CDT 2004 images/T.png

! The META-INF/ directory entry is present, but not images/
Order is still OS-native.

Now use WSAD to export this same directory structure as a jar file.  Here's what
I see when I dump it:
   C:\junk>jar tvf images-ibm.jar
       25 Mon Jan 10 09:38:32 CST 2005 META-INF/MANIFEST.MF
      148 Mon Jan 10 09:37:18 CST 2005 images/I.png
      152 Mon Jan 10 09:37:18 CST 2005 images/T.png
      144 Mon Jan 10 09:37:18 CST 2005 images/blank.png
      251 Mon Jan 10 09:37:18 CST 2005 images/file.png
      229 Mon Jan 10 09:37:18 CST 2005 images/foldericon.png
      232 Mon Jan 10 09:37:18 CST 2005 images/openfoldericon.png

Now the META-INF/ directory entry is gone too, and the order looks more like
you'd see in UNIX.

My bottom line:
there may not be a specification for this, but there are times when it matters.
 In particular, as indicated originally, we have an internal application that
has fairly wide use at our company and it requires entries for directories --
even if the directories are empty.  WSAD/JAD should include options for
retaining or deleting directory entries.  I came across some 3rd party ant tasks
and other wrappers of the jarring process that include a filesOnly() method to
specifically remove directory entries or a KEEP_FILE_ORDER flag that, if true,
prohibits re-ordering of entries and deletion of directory entries.

Below is email from the customer working on WSAD.
I have recreated this behaviour on Eclipse 2.1.1 and 3.0 on Windows 2000
I have viewed the jar files in hex and validated that the Java jar command
actually puts additional entries in the .jar compared to Eclipse/WSAD.
Both the customer and I believe the Java JAR spec does not address this issue.
That is why I have marked it as an enhancement. Customer would like an option to
control the creation of directory entries.

Here is a more detailed problem description

Unzip the attached file somewhere (such as C:\junk).
(See attached file: images.jar)

Then:
   C:\junk>jar cvf images1.jar images
   or
   C:\junk>jar cvf images2.jar images/

They give the same results, as shown by:
   C:\junk>jar tvf images1.jar
   or
   C:\junk>jar tvf images2.jar

     0 Mon Jan 10 09:30:36 CST 2005 META-INF/
    71 Mon Jan 10 09:30:36 CST 2005 META-INF/MANIFEST.MF
     0 Mon Jan 10 09:29:58 CST 2005 images/
   144 Tue Jun 22 14:45:42 CDT 2004 images/blank.png
   251 Tue Jun 22 14:45:42 CDT 2004 images/file.png
   229 Tue Jun 22 14:45:42 CDT 2004 images/foldericon.png
   148 Tue Jun 22 14:45:42 CDT 2004 images/I.png
   232 Tue Jun 22 14:45:42 CDT 2004 images/openfoldericon.png
   152 Tue Jun 22 14:45:42 CDT 2004 images/T.png

Note the existence of the directory entries and the order of the files (the
OS-native order for Windoze).

Now try:
   C:\junk>jar cvf images3.jar images/*
and dump the results:
   C:\junk>jar tvf images3.jar
        0 Mon Jan 10 09:31:14 CST 2005 META-INF/
       71 Mon Jan 10 09:31:14 CST 2005 META-INF/MANIFEST.MF
      144 Tue Jun 22 14:45:42 CDT 2004 images/blank.png
      251 Tue Jun 22 14:45:42 CDT 2004 images/file.png
      229 Tue Jun 22 14:45:42 CDT 2004 images/foldericon.png
      148 Tue Jun 22 14:45:42 CDT 2004 images/I.png
      232 Tue Jun 22 14:45:42 CDT 2004 images/openfoldericon.png
      152 Tue Jun 22 14:45:42 CDT 2004 images/T.png

! The META-INF/ directory entry is present, but not images/
Order is still OS-native.

Now use WSAD to export this same directory structure as a jar file.  Here's what
I see when I dump it:
   C:\junk>jar tvf images-ibm.jar
       25 Mon Jan 10 09:38:32 CST 2005 META-INF/MANIFEST.MF
      148 Mon Jan 10 09:37:18 CST 2005 images/I.png
      152 Mon Jan 10 09:37:18 CST 2005 images/T.png
      144 Mon Jan 10 09:37:18 CST 2005 images/blank.png
      251 Mon Jan 10 09:37:18 CST 2005 images/file.png
      229 Mon Jan 10 09:37:18 CST 2005 images/foldericon.png
      232 Mon Jan 10 09:37:18 CST 2005 images/openfoldericon.png

Now the META-INF/ directory entry is gone too, and the order looks more like
you'd see in UNIX.

My bottom line:
there may not be a specification for this, but there are times when it matters.
 In particular, as indicated originally, we have an internal application that
has fairly wide use at our company and it requires entries for directories --
even if the directories are empty.  WSAD/JAD should include options for
retaining or deleting directory entries.  I came across some 3rd party ant tasks
and other wrappers of the jarring process that include a filesOnly() method to
specifically remove directory entries or a KEEP_FILE_ORDER flag that, if true,
prohibits re-ordering of entries and deletion of directory entries.
Created attachment 17055
testcase
Moving to JDT UI for comment
Daniel, is there a deeper reason why we don't include the directories.

Fixing this is time permitted for 3.1 since the focus for 3.1 is J2SE 5.0
Created attachment 17384
add directories to a JAR

Here is a simplistic version of a patch which adds directories.
Created attachment 17385
Handle nested directories

Little goof on my part.  I didn't reverse the order of directories when
creating them.
Re comment 3: we didn't include the directories since it wasn't speced and the
created JARs worked. Including them should not hurt.
Frank, 

thanks a lot for the patch. However, including empty directories will ask for a
new bug report if we don't give users control over this in the UI (we would
change the existing behavior on which other clients may rely). Are you
interested in provide a patch for the UI part as well ?
I can hack something up for the UI.

Do we care about the directory timestamps? Right now I just let it default.
Created attachment 17395
Include directories with UI

This adds an option to the UI.
Should the directory timestamp on disk be used?
Hi Michael,

thanks a lot for the patch !

I looked at it and did some minor modifications (Javadoc, formatting and
naming). One thing I would like to ask you to add is that the current timestamp
of the directory is used instead of the current time. Can you work on this ?

I will attach the changes I did as a new patch so that my changes don't get lost.
Created attachment 17470
The modified patch
Created attachment 17473
Use filesystem timestamp

Not the prettiest code but will do what we want.
Hi Michael,

I have released the patch with some minor tweaks ( I use current time if the
directory doesn't exist to make it consistent with files).

Thanks a lot for providing the patch.

Can you provide an updated version of the patch of bug 82804. 
I will redo the patch for 82804.

If you don't specify a time, then the current time is used.
Didn't know this.


Jar creation wizard omits directory entries



[82507] Jar creation wizard omits directory entries 
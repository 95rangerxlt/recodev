HEAD

xy/Try.java:
package xy;
public class Try {
    void hello() {
        C.world();
    }
}

xy/C.java:
package xy;
class C {
    public static void world() {
        System.out.println("x");
    }
}

Inline C.world().

- With 'Only selected invocation', the preview change tree contains a single
leaf node 'Update import statements'; expected: something like 'update call'.
Furthermore, the change is only visible in the preview when the top note
Try.java is selected.

- With 'All invocations' and 'Delete...', Try.java is shown without children and
 the preview does not show a change. Executing the refactoring then indeed
doesn't inline the reference, which leads to a compile error.

- When C is a secondary type in Try.java, then Try > hello() just has a
no-change 'Update import statements' child node.

HEAD

xy/Try.java:
package xy;
public class Try {
    void hello() {
        C.world();
    }
}

xy/C.java:
package xy;
class C {
    public static void world() {
        System.out.println("x");
    }
}

Inline C.world().

- With 'Only selected invocation', the preview change tree contains a single
leaf node 'Update import statements'; expected: something like 'update call'.
Furthermore, the change is only visible in the preview when the top note
Try.java is selected.

- With 'All invocations' and 'Delete...', Try.java is shown without children and
 the preview does not show a change. Executing the refactoring then indeed
doesn't inline the reference, which leads to a compile error.

- When C is a secondary type in Try.java, then Try > hello() just has a
no-change 'Update import statements' child node.
Fixed the inline problem (see bug
https://bugs.eclipse.org/bugs/show_bug.cgi?id=87777 for details).
Fixed.


Inline method does not inline method in other CU and doesn't show change in tree



[87764] Inline method does not inline method in other CU and doesn't show change in tree 

[87764] Inline method does not inline method in other CU and doesn't show change in tree 
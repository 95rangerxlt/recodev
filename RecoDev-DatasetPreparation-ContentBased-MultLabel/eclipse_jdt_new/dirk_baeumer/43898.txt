20030930

Turn on PRIMARY_WORKING_COPIES, turn on light bulb for quick assists.
I get the following error coming from the quick assist light bulb extensions
At the given breakpoint 'null' is added to the list of expressions, what results
in a NPE at ObjectStateExpression(CompositeExpression).evaluateAnd(Object) line: 46


-- stack trace of the adding of 'null' to the expression

ObjectStateExpression(CompositeExpression).add(Expression) line: 31
ExpressionParser.processChildren(CompositeExpression, IConfigurationElement)
line: 47
StandardElementHandler.create(IConfigurationElement, ExpressionParser) line: 34
ExpressionParser.parse(IConfigurationElement) line: 36
ContributedProcessorDescriptor.matches(ICompilationUnit) line: 58
ContributedProcessorDescriptor.getProcessor(ICompilationUnit) line: 68
JavaCorrectionProcessor.hasCorrections(ICompilationUnit, int) line: 118
JavaCorrectionProcessor.hasCorrections(IJavaAnnotation) line: 138
CompilationUnitDocumentProvider2$ProblemAnnotation.initializeImages() line: 127
CompilationUnitDocumentProvider2$ProblemAnnotation.getImage(Display) line: 159
JavaMarkerAnnotation.getImage(Display) line: 266
JavaMarkerAnnotation(MarkerAnnotation).paint(GC, Canvas, Rectangle) line: 196
AnnotationRulerColumn.doPaint(GC) line: 376

20030930

Turn on PRIMARY_WORKING_COPIES, turn on light bulb for quick assists.
I get the following error coming from the quick assist light bulb extensions
At the given breakpoint 'null' is added to the list of expressions, what results
in a NPE at ObjectStateExpression(CompositeExpression).evaluateAnd(Object) line: 46


-- stack trace of the adding of 'null' to the expression

ObjectStateExpression(CompositeExpression).add(Expression) line: 31
ExpressionParser.processChildren(CompositeExpression, IConfigurationElement)
line: 47
StandardElementHandler.create(IConfigurationElement, ExpressionParser) line: 34
ExpressionParser.parse(IConfigurationElement) line: 36
ContributedProcessorDescriptor.matches(ICompilationUnit) line: 58
ContributedProcessorDescriptor.getProcessor(ICompilationUnit) line: 68
JavaCorrectionProcessor.hasCorrections(ICompilationUnit, int) line: 118
JavaCorrectionProcessor.hasCorrections(IJavaAnnotation) line: 138
CompilationUnitDocumentProvider2$ProblemAnnotation.initializeImages() line: 127
CompilationUnitDocumentProvider2$ProblemAnnotation.getImage(Display) line: 159
JavaMarkerAnnotation.getImage(Display) line: 266
JavaMarkerAnnotation(MarkerAnnotation).paint(GC, Canvas, Rectangle) line: 196
AnnotationRulerColumn.doPaint(GC) line: 376
The problem was an wrong extension point in the test plugin.
   <quickFixProcessor
         id= "org.eclipse.jdt.ui.examples.MyQuickFixProcessor"
         class="org.eclipse.jdt.ui.examples.MyQuickFixProcessor"
         name="%exampleQuickFixProcessor.name">
         <objectState adaptable="org.eclipse.core.resources.IResource">
           <property name="name" value="A.java"/>
        </objectState>
   </quickFixProcessor>

should be 'test' instead of 'property'
I will change the expression parser to produce a more graceful error message.
The converter now generates a Core Exception with a detail status describing 
the element that can't be converted.


NPE in ExpressionParser


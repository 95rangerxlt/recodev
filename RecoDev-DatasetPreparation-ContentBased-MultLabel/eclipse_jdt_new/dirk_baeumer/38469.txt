public int fred(){
		return super.hashCode();
	}
	void f(int p){
		new Ad(){
			void f(){
				int u= Ad.this.fred();
			}
		};
	}

inline fred
the temp u is now initialized to a different value - no compile error
a different hashCode method is called

public int fred(){
		return super.hashCode();
	}
	void f(int p){
		new Ad(){
			void f(){
				int u= Ad.this.fred();
			}
		};
	}

inline fred
the temp u is now initialized to a different value - no compile error
a different hashCode method is called
Works if fred is:

public int fred(){
	return hashCode();
}

The only option I see is to not allow inlining super calls in "this." calls. 

Fixed for >= I20060110.


inline method: incorrect in innerclasses [refactoring]



Bug 438469 - [null] How-to use null type annotations with generic methods from interfaces in some library you only have as binary JAR? Bug 438467 - [compiler][null] Better error position for "The method _ cannot implement the corresponding method _ due to incompatible nullness constraints" 

[38469] inline method: incorrect in innerclasses [refactoring] 
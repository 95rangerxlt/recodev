package p;

import java.io.IOException;

class A{	
	void f() throws IOException{
		/*[*/try{
			f();
		} catch (IOException e){
			throw new IOException();
		}/*]*/
	}
}

btw - i don't think the recursion has anything to do with this (just made the 
example shorter)

package p;

import java.io.IOException;

class A{	
	void f() throws IOException{
		/*[*/try{
			f();
		} catch (IOException e){
			throw new IOException();
		}/*]*/
	}
}

btw - i don't think the recursion has anything to do with this (just made the 
example shorter)
Fixed in build > 20020124


extract method: missing exception in method signature



Fixed Bug 406786- [1.8][extract method] Extract Method refactoring in interfaces not handled 

Fixed bug 406786: [1.8][extract method] Extract Method refactoring in interfaces not handled - Updated tests with formatted default methods 

Fixed bug 406786: [1.8][extract method] Extract Method refactoring in interfaces not handled 

Fixed Bug 406786- [1.8][extract method] Extract Method refactoring in interfaces not handled 

Fixed bug 406786: [1.8][extract method] Extract Method refactoring in interfaces not handled - Updated tests with formatted default methods 

Fixed bug 406786: [1.8][extract method] Extract Method refactoring in interfaces not handled 

Fixed bug 406786: [1.8][extract method] Extract Method refactoring in interfaces not handled - Updated tests with formatted default methods 

Fixed bug 406786: [1.8][extract method] Extract Method refactoring in interfaces not handled 

Fixed bug 296786: [actions] Opening a project in Package Explorer forces me to select the project to open twice 

[4131] [6786] [7299] 
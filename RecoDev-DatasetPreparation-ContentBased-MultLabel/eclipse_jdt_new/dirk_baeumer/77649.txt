I200411022000

Having:
package test2;
public class A {
	public C c= new C();
	public void foo() {
	}
}

package test2;
public class B {
	public void bar() {
		new A().foo();
	}
}

package test2;
public class C {
}

and:
- open all 3 CUs
- move A#foo() to C
- remove 'a' from 'new A().c.foo(a);' in B
- save B
- Refactor -> Undo
-> lost parenthesis in B because undo did no longer match

I200411022000

Having:
package test2;
public class A {
	public C c= new C();
	public void foo() {
	}
}

package test2;
public class B {
	public void bar() {
		new A().foo();
	}
}

package test2;
public class C {
}

and:
- open all 3 CUs
- move A#foo() to C
- remove 'a' from 'new A().c.foo(a);' in B
- save B
- Refactor -> Undo
-> lost parenthesis in B because undo did no longer match
Christof, 

I can't reproduce this. Following yout steps the undo stack is empty after the
save (as expected).
I can reproduce it with my already running testing workspace, but not with a
newly set up one. Also importing all preference settings did not help to
reproduce it.
I think that the workspace tracker got out of sync assuming that every operation
has an undo. Hence the undo stack doesn't get flushed anymore.

Have to check the performed calls are in finally blocks.
Found two place of changePerformed which weren't in try/finally. Fixed for M4.


'Refactor -> Undo' enabled after consecutive change



[77649] 'Refactor -> Undo' enabled after consecutive change 
I sent an email to Daniel Megert a while back about possibly merging these
commands with the same commands defined by Platform UI.  This is related to Bug
45238.  Basically, we would like to have the duplicates for these commands
removed, and for refactoring to simply register handlers for these commands. 
This gets around the problem of having two commands for which key bindings need
to be defined.

I sent an email to Daniel Megert a while back about possibly merging these
commands with the same commands defined by Platform UI.  This is related to Bug
45238.  Basically, we would like to have the duplicates for these commands
removed, and for refactoring to simply register handlers for these commands. 
This gets around the problem of having two commands for which key bindings need
to be defined.
I did not answer since I was away. Forwarded the e-mail to Dirk BÃ¤umer.
Douglas, what exactly are you recommending ? I don't fully understand how 
merging these of undo/redo will do the right thing. Undo/redo refactoring are 
totally different from undo/redo in edit menu and all four actions must be 
available when a view or and editor is active.

If we do this for rename and move will users still be able to have different 
short cuts for rename and move for the "Old Eclipse keyboard short cuts". I am 
asking this users might be used to them. 
I feel that it is confusing to have two different flavours of these four 
commands.  As a user, I don't feel that I distinguish between "edit-undo" 
and "refactoring-undo".  I simply want to undo, and don't want to worry about 
the differences.

I agree that it has the potential of causing some initial confusion to old-
time users.  However, creating a simpler interface overall I think is a better 
goal then avoiding a small amount of confusion when migrating to a new version 
of Eclipse.  (When migrating, most users spend time discovering some of the 
new things anyway.)

But I don't want to take away functionality.  If these commands have different 
functions, then perhaps they should be kept separate.  I'm a bit confused as 
to why you say this is the case for "undo" and "redo", however....
Refactoring Undo/Redo differs from edit undo/redo and both must be present to 
the user all the time. So I don't see how we can bind them to one action/short 
cut. For example if you are in the editor how do you trigger and refactoring 
undo and how do you trigger a edit undo without having two different actions. 
Doing so would require a unified undo stack, which IMO should be provided by 
Platfrom/UI.

There is a possibility that we remove refactoring undo/redo for 3.0. But this 
depends on workspace snap shotting.

For rename and move we could bind the refactoring actions to file->rename and 
file->move as well if inside a Java view. This would allow users to use these 
actions as well. 

I am a little bit reluctant to remove them from the refactoring menu since new 
users might not look at the File menu.
Okay, I thought we might run into a problem with the lack of a unified 
undo/redo stack.  That's too bad really, as I don't think Platform UI will 
have the resources to approach that problem for 3.0.  (I agree that it is 
Platform UI's reponsibility to provide such a facility.)

However, for rename and move we might be able to work something out for 3.0.  
You can still list the items under the refactoring menu.  While this is not 
the usual way to deal with commands, I don't believe there is anything that 
*technically* prevents us from doing this.  So, there would be a "File > 
Rename" and a "Refactoring > Rename", but they would both point to the same 
command.
This should be possible. I think all we have to do is to retarget the Rename 
and Move action of the File menu. Do you know the action ids for them?
I added two constants -- MOVE and RENAME -- to IWorkbenchActionDefinitionIds 
in "org.eclipse.ui.workbench.texteditor".  They are in CVS now.  If you don't 
like where I've put them, feel free to move them.

As a note, I don't update the "text.map", but I believe Kai-Uwe does....
*** Bug 53717 has been marked as a duplicate of this bug. ***
What is the status of this bug?  I have a bug that is dependent on it that is 
currently marked as M9. 
I still believe that we should keep the refactoring Rename and Move actions 
since people are so used to it. Undo/Redo can't be removed anyway. So I 
suggest that we retarget the Move and Rename from the file menu. I can do this 
for M9. 
The package explorer now retargets the rename and move actions. I didn't do 
this for other Java views since the usually don't show files or folders.

Fixed.


Merge undo, redo, move and rename with Platform UI [refactoring]



[48501] 
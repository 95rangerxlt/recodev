20030716
public class S {
	void f(){
		int y= 2;
	}
	static class As{
		void f1() {
			int y1= 2;
		}
	}	
}

extract the first '2' (replace dups)
you get a compile error

20030716
public class S {
	void f(){
		int y= 2;
	}
	static class As{
		void f1() {
			int y1= 2;
		}
	}	
}

extract the first '2' (replace dups)
you get a compile error
another case:
class S {
	void f() {
		int y= 2;
	}
	class D{
		void f() {
			int y= 2;
		}
		boolean s(){return false;}
	}
}


extract the inner '2' and name the new method 's'
i meant: the outer '2'
It is very unlikely that the same set of statements or expression is used in a 
static and non-static method. Therefore lowering priority to P4
Fixed. Duplicates are only found in the same type.


extract method: compile error (static member classes and dup replacement) [refactoring]



[40336] 

[40336] 
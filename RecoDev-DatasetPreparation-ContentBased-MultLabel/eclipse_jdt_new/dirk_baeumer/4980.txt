I extracted the following to a method.
The extacted method claimed it threw the exception that it is catching.
This caused an error in the calling method since the exception is no longer 
caught there.

SubViewSite site = new SubViewSite(getViewSite(), actionBarPropListener);
mapPageToSite.put(rec.page, site);
rec.subActionBars = (SubActionBars)site.getActionBars();
try {
	rec.page.init(site);
	// The following must be called after page initialization
	// so that the page has had a chance to register its selection
	// provider with the site.
	ISelectionProvider selectionProvider = site.getSelectionProvider();
	if (selectionProvider != null) {
		selectionProvider.addSelectionChangedListener(
selectionChangedListener);
	} 
} catch (PartInitException e) {
	WorkbenchPlugin.log(e.getMessage());
}

Generated Method

private void initPage(PageRec rec) throws PartInitException {
	SubViewSite site = new SubViewSite(getViewSite(), 
actionBarPropListener);
	mapPageToSite.put(rec.page, site);
	rec.subActionBars = (SubActionBars)site.getActionBars();
	try {
		rec.page.init(site);
		// The following must be called after page initialization
		// so that the page has had a chance to register its selection
		// provider with the site.
		ISelectionProvider selectionProvider = site.getSelectionProvider
();
		if (selectionProvider != null) {
			selectionProvider.addSelectionChangedListener
(selectionChangedListener);
		} 
	} catch (PartInitException e) {
		WorkbenchPlugin.log(e.getMessage());
	}
}

I extracted the following to a method.
The extacted method claimed it threw the exception that it is catching.
This caused an error in the calling method since the exception is no longer 
caught there.

SubViewSite site = new SubViewSite(getViewSite(), actionBarPropListener);
mapPageToSite.put(rec.page, site);
rec.subActionBars = (SubActionBars)site.getActionBars();
try {
	rec.page.init(site);
	// The following must be called after page initialization
	// so that the page has had a chance to register its selection
	// provider with the site.
	ISelectionProvider selectionProvider = site.getSelectionProvider();
	if (selectionProvider != null) {
		selectionProvider.addSelectionChangedListener(
selectionChangedListener);
	} 
} catch (PartInitException e) {
	WorkbenchPlugin.log(e.getMessage());
}

Generated Method

private void initPage(PageRec rec) throws PartInitException {
	SubViewSite site = new SubViewSite(getViewSite(), 
actionBarPropListener);
	mapPageToSite.put(rec.page, site);
	rec.subActionBars = (SubActionBars)site.getActionBars();
	try {
		rec.page.init(site);
		// The following must be called after page initialization
		// so that the page has had a chance to register its selection
		// provider with the site.
		ISelectionProvider selectionProvider = site.getSelectionProvider
();
		if (selectionProvider != null) {
			selectionProvider.addSelectionChangedListener
(selectionChangedListener);
		} 
	} catch (PartInitException e) {
		WorkbenchPlugin.log(e.getMessage());
	}
}
Can you please give me a hint, in which file this happened so that I can
try to reproduce it. Normally this case is handled correctly.
There was a bug when evaluating the catch blocks (time when I evaluated the 
catch block).

Fixed in build > 20020129


Extracted method throws caught exception



49809 

49809 

Fixed bug 334980: [actions] 'Format Element' should work if the selection is on a declaration 

Fixed bug 149803: [quick assist] 'exchange left and right operands' for all comparison types 

Fixed bug 149801: [quick assist] 'exchange left and right operands' incorrectly removes parentheses around logical operators 

149800 [JUnit] NPE while copying editor code to clipboard during JUnit run 

149800 [JUnit] NPE while copying editor code to clipboard during JUnit run 

[84980] NPE when inlining constructor of InlineTargetCompilationUnit 

49805 Loses JavaDoc Location Setting on Variable [javadoc] 

49805 Loses JavaDoc Location Setting on Variable [javadoc] 

fixed #49802 

[7444] [3981] [6255] [4980] [7300] [7233] 
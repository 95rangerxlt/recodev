ak (10/2/2001 5:07:14 PM)
	there should be a way to use organize import headless -
	it should be implemented in terms of refactoring IChange objects
	it could then be reused in some refactorings.

NOTES:

ak (10/2/2001 5:07:14 PM)
	there should be a way to use organize import headless -
	it should be implemented in terms of refactoring IChange objects
	it could then be reused in some refactorings.

NOTES:
Implementing organize imports as an IChange is the wrong approach. Instead we 
need a TextEdit that does the job. Martin as converted his stuff so that is 
uses TextBuffer. I will now implement an TextEdit that does the organize import.
changed ImportsStructure in cooperation with DB for implementing a TextEdit.
DB will add the TestEdit -> Moving to DB
i created SimpleAddImportEdit
it has some of the kind of api i need (but ignores the user preferences)

one more thing of cource would be an edit that would really organize imports.
the api would be just a compilation unit (not a compilation unit and a package 
or type to import like it is in the case of SimpleAddImportEdit)
Why didn't you implement the real thing on top of Martin's stuff. Why do you 
ignore the preference settings ?
1. Martin's 'stuff' is an action - not a text edit
2. Preferences live in the ui world - edits live in the corext world
But you could put a TextEdit around Martin's ImportStructure. And there is a 
ConfigurationObject that doesn't live in the UI world. Look into the package 
codegeneration
fixed by DB
>= 20011217


organize imports should be implemented as IChange  (1GKZ5K0)



Bug 427163 - [1.8][null] bogus error "Contradictory null specification" on varags 

Bug 427199 - [1.8][resource] avoid resource leak warnings on Streams that have no resource 

Bug 427165 - [1.8][inference] reduce [alpha <: null] in analogy to [null <: alpha] 

Fixed Bug 427117 - [1.8][code assist] code assist after lambda as a parameter does not work 

Fixed Bug 427105 - [1.8][builder] Differences between incremental and full builds in method contract verification in the presence of type annotations 

Bug 427196 - [1.8][compiler] Compiler error for method reference to overloaded method 

Bug 427168 - [1.8][inference] NPE in ConstraintTypeFormula.reduceSubType:198 

Bug 427164 - [1.8][inference] NPE in ConstraintExpressionFormula.reduce:71 

Bug 427110 - [1.8] Open Actual Type / Hierarchy in Variables view for lambda and method reference 

Bug 84271 - Dialog font use: Java logical structure Add dialog 

Fixed Bug 427122: [1.8][quick fix] Change project compliance and JRE to 1.8 comment#6 

Fixed Bug 427122: [1.8][quick fix] Change project compliance and JRE to 1.8 comment#6 

Bug 427169: [1.8][quick assist] lambda body: convert expression to block 

Fixed bug 427169: [1.8][quick assist] lambda body: convert expression to block 

Fixed bug 427169: [1.8][quick assist] lambda body: convert expression to block 

Fixed bug 427122: [1.8][quick fix] Change project compliance and JRE to 1.8 - comment #5 

Bug 427122: [1.8][quick fix] Change project compliance and JRE to 1.8 

Fixed bug 427122: [1.8][quick fix] Change project compliance and JRE to 1.8 

Fixed bug 427122: [1.8][quick fix] Change project compliance and JRE to 1.8 

Fixed bug 24271: Source Folders: Sort Java Packages and Simple Folders Together 
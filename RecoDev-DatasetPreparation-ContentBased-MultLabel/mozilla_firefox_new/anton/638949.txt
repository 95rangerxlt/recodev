Usually when I hit Copy in the context menu on the web console I'm trying to get a URL. Then I paste it into the URL bar and manually delete the metadata surrounding the URL. It's annoying. Firebug provides a better experience with Copy Location. (It also has Copy Request/Response Headers and Response Body. I don't know if I've ever used those.)

Usually when I hit Copy in the context menu on the web console I'm trying to get a URL. Then I paste it into the URL bar and manually delete the metadata surrounding the URL. It's annoying. Firebug provides a better experience with Copy Location. (It also has Copy Request/Response Headers and Response Body. I don't know if I've ever used those.)
The Scope for this bug is a single context button with "Copy URL"
Unfortunately I won't have time for this in the near future, so it's up for grabs.
Should this new menu item be disabled in case of non-link lines or it should appear only in cases with link?
No, I think the copy item should always be enable. What should change is what is copied.

In a line like this one:
GET https://bugzilla.mozilla.org/extensions/BMO/web/images/background.png [HTTP/1.1 200 OK 225ms]

right-click->copy on "GET" should copy the whole line (with the timestamp & co). This is the current behvior.

right-click->copy on the URL should copy only the URL (currently, the whole line is copied).
Created attachment 579338
First try

I started with CommandController and it's method doCommand->this.copy(outputNode). I found that there is no information about what actually were clicked. I didn't find how to provide there such info, because of the nature of pop-up creation.
Than I found underline method copySelectedItems, which get only element where it find selected elements with predefined clipboardText property. And again - luck of event object or other information of actual clicked object.
So I made handler in message creation method, that handle all clicks and check's whatever it were "url" box or not. In case of "yes" answer it replaces clipboardText property with URL only and sets little flag for copySelectedItems. Flag needed to identify need for [timestamp] in copied text.

So I guess there are better ways, maybe with a bit refactoring to make it more elegant. I would like to know about it =)

Also multiline select should be considered. What is right way to do in that case. So if I clicked on link, but there were already line selected. Should be only URL selected, or it should work as usual.
Created attachment 579377
Second try - wrong curly brackets and line numbering fixed.
Comment on attachment 579377
Second try - wrong curly brackets and line numbering fixed.

Review of attachment 579377:
-----------------------------------------------------------------

I would suggest a different user experience here: when the user right-clicks on a network message show a context menu item for "copy link location".

This approach makes Ctrl-C, Edit > Copy and right-click copy to copy only the URL after the node has been clicked, which is not ideal, in my opinion.

Rob, any thoughts on this?
Comment on attachment 579377
Second try - wrong curly brackets and line numbering fixed.

Awesome! Patch applies cleanly on first try.

I had to work out the functionality by looking at the code and then experimenting. What you've got here seems to do the job.

Now for the reviewy bits.

A couple notes about style, in general, take a look around your patch to see how the file does things like spacing around parentheses, braces and operators.

instead of:

if(item.linkClicked){

do:

if (item.linkClicked) {

here:
+        timestampString = "[" + timestampString + "] ";
+        if(item.linkClicked){
+          timestampString = "";
+        }

I think I would write this with an else:

if (item.linkClicked) {
  timestampString = "";
} else {
  timestampString = "[" + timestampString + "] ";
}

in the second chunk:
 
+

extra blank line?

...
+    node.addEventListener('click', function(aEvent){
+      let target = aEvent.rangeParent;
+      if(target && target.classList && target.classList.contains('webconsole-msg-link')){

That if line gets a little long, maybe break the expression into 2 lines like:
       if (target && target.classList &&
           target.classList.contains('webconsole-msg-link')) {
         ...

We generally try to keep lines below 80 characters wide for readability on mxr and small screens.

Other than the styling issues and the if-else, I'd say this is good!
(In reply to Mihai Sucan [:msucan] from comment #7)
> Comment on attachment 579377 [diff] [details] [review]
> Second try - wrong curly brackets and line numbering fixed.
> 
> Review of attachment 579377 [diff] [details] [review]:
> -----------------------------------------------------------------
> 
> I would suggest a different user experience here: when the user right-clicks
> on a network message show a context menu item for "copy link location".
> 
> This approach makes Ctrl-C, Edit > Copy and right-click copy to copy only
> the URL after the node has been clicked, which is not ideal, in my opinion.
> 
> Rob, any thoughts on this?

I considered adding a separate menu item while reading this, but didn't like that idea. Are you suggesting changing the Copy context menu item to Copy Link Location when the user right clicks on the URL? If so, that might be a good compromise.

Nevertheless, in my testing, this patch does do the job even if it isn't exactly discoverable.

Maybe we should get some UX feedback on the route we should take.
actually, this is such a small issue, I'm willing to take the blame for landing this as-is.

Soswow: If you can make the popup menu change based on where the user's clicking, that would be preferable. If not, I'll take an updated patch as you've written it to do the job and a follow-up bug report to make the nicer menu option.
Rob: sounds good to me. Later a separate patch for changing the context menuitem to "copy link location" when the user right-clicks on the URL can be written.

Thanks for your contribution Aleksandr! Much appreciated!
Created attachment 579396
Third try. Code Style corrected.

I fixed Code Style and suggested if/else. I'll think about changing Menu Item label according to your suggestions.
Created attachment 579698
Fourth try. Now with item title change

I moved everything into context-menu opening event handler. I think it's more logical place and here I can change menu title if needed, which I also added. So now URL only is copied only if 1) user click "Copy link location" 2) There is only one line selected. In other cases normal like copied.
Also I added comment there, don't know yet is it ok.

I don't like this whole peace of code placed inside event handler. I eager move in some named function, but I don't know what is best way to do it.

Please comment =)
Comment on attachment 579698
Fourth try. Now with item title change

Review of attachment 579698:
-----------------------------------------------------------------

This is a cool fix! Users will be happy with this kind of Web Console polish! Thanks Aleksandr!

Did some quick testing and found that if I dismiss the context menu without using the mouse, the clipboardText of the given output item is not reset back to the original. Can you please look into this? Thanks!
Comment on attachment 579698
Fourth try. Now with item title change

+    menuPopup.addEventListener("popupshowing", function(event) {
+      // If user invoke context menu by clicking on URL, than:
+      //  1. Show "Copy link location" item
+      //  2. Replace original clipboardText with URL
+      //  3. Set flag urlClicked that copy function doesn't add [time] before URL
+      // In other cases reset everything.
+

I have some suggestions for wording here.

// If the context menu is invoked while clicking on a URL:
//   1. Show "Copy Link Location"
//   2. Replace original clipboardText with URL
//   3. Set the urlClicked flag so the copy function doesn't add 
//      [time] before the URL.
// Otherwise, reset everything.

+      let clickedIsElement = clickedElem.nodeType && clickedElem.nodeType == 1;

maybe change this to:
      let isClickedElement = clickedElem.nodeType &&
            clickedElem.nodeType == Ci.nsIDOMNode.ELEMENT_NODE;

+      copyItem.setAttribute("label", copyLabel); //Reset context item Label

extra space after //

+    copyItem.setAttribute("label", copyLabel);

Looking good!

I think this is going to work.

Last part is going to be writing a unit test for this to verify the menu is doing what we hope it's doing.

r+ with above nits addressed.
oh, one other thing: You should add yourself to the list of Contributors in the license section of the file.
Created attachment 580014
Fifth Try. Correction according to suggestions. No tests yet.
Created attachment 580016
Fifth Try. Correction according to suggestions. No tests yet.

Sorry, accidentally posted without Obsoletes options.

I added onhidden even handler, which resets everything, corrected wording, added caps letters to Copy Link Location, and made reseting before opening (maybe it's even not needed).

Now, if everything is ok with that, only tests are left.
Comment on attachment 580016
Fifth Try. Correction according to suggestions. No tests yet.

Review of attachment 580016:
-----------------------------------------------------------------

Tested the patch and it works like expected! Thanks for your fix Aleksandr! Great stuff!

Yep, you can move to write the test!

::: browser/locales/en-US/chrome/browser/devtools/webconsole.properties
@@ +83,5 @@
>  jsPropertyInspectTitle=Inspect: %S
>  saveBodies.label=Log Request and Response Bodies
>  saveBodies.accesskey=L
>  copyCmd.label=Copy
> +copyLocationCmd.label=Copy Link Location  

This string has trailing whitespace. Please remove it.
no activity. Unassigning.
Created attachment 661943
Patch with tests.

Attached is a patch that converts 'Copy' item in the context menu into 'Copy Link Location'. I took Aleksandr's patch, rewrote it (there were too many changes throughout the year to apply it directly) and wrote tests for the change.

Note about tests: I tried to reuse test-network.html but console logging tests were failing because an image from that file was being cached.

Also, I am learning the code base by reading applicable parts of it so if something doesn't make sense (redundant, etc.) this means I copied it from somewhere else. :-) Point me in the right direction and I'll fix it.

Tests for webconsole on my computer:

INFO TEST-START | Shutdown
Browser Chrome Test Summary
	Passed: 1440
	Failed: 0
	Todo: 0

*** End BrowserChrome Test Results ***
Created attachment 661974
Patch with tests (and all files this time).

Oops, I forgot to `hg add` some files with into my previous patch. Sorry, here's the correct version.
Comment on attachment 661974
Patch with tests (and all files this time).

Review of attachment 661974:
-----------------------------------------------------------------

Thank you for the patch Anton! It looks good and all tests pass.

One issue: if I right-click on GET and I pick Copy, I get the network message clipboard text (which is expected). If I click on the URL I get "Copy location" and it works as desired (only URL). But now if I right click again on GET and I select Copy, the text that is copied to the clipboard is different (unexpected behavior).

I'm not sure what user experience people want here. I would like:

1. right-click on GET > Copy: copies the full network message.
2. right-click on URL > Copy location: copies the URL only.
3. Ctrl-C with one network message: copies the URL only. (unsure about this, what do you think?)
4. Ctrl-C with multiple messages: copies the full network messages.

Thoughts? We should also ask Heather about this.

::: browser/devtools/webconsole/test/browser_bug_638949_copy_link_location.js
@@ +3,5 @@
> + * License, v. 2.0. If a copy of the MPL was not distributed with this
> + * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
> +
> +const TEST_NETWORK_URI = "http://example.com/browser/browser/devtools/" +
> +  "webconsole/test/test-network-message.html?_date=" + Date.now();

You can reuse any of the existing test files. For example just load test-console.html with Date.now(). You don't need any other network messages anyway, you can play with only one.

@@ +46,5 @@
> +      let selected = output.getItemAtIndex(0);
> +      selected.isLink = true;
> +      selected.clipboardText = selected.
> +        querySelector(".webconsole-msg-url").value;
> +      item.doCommand();

Here you do what the popupshowing event handler does. Why not open the context menu and check if cmd_copy works as desired after that?

::: browser/devtools/webconsole/webconsole.js
@@ +387,5 @@
> +          }
> +        }
> +      }
> +
> +      if (selItem.isLink) {

You can avoid the logic that checks if |elem| is what you need. Just check if selItem.category is CATEGORY_NETWORK and use selItem.url.

(selItem.url was just added in the patch I landed in fx-team)
(In reply to Mihai Sucan [:msucan] from comment #23)
> Comment on attachment 661974
> Patch with tests (and all files this time).
> 
> Review of attachment 661974:
> -----------------------------------------------------------------
> 
> Thank you for the patch Anton! It looks good and all tests pass.
> 
> One issue: if I right-click on GET and I pick Copy, I get the network
> message clipboard text (which is expected). If I click on the URL I get
> "Copy location" and it works as desired (only URL). But now if I right click
> again on GET and I select Copy, the text that is copied to the clipboard is
> different (unexpected behavior).
> 
> I'm not sure what user experience people want here. I would like:
> 
> 1. right-click on GET > Copy: copies the full network message.
> 2. right-click on URL > Copy location: copies the URL only.
> 3. Ctrl-C with one network message: copies the URL only. (unsure about this,
> what do you think?)
> 4. Ctrl-C with multiple messages: copies the full network messages.
> 
> Thoughts? We should also ask Heather about this.

Just talked with Anton about this. I think it's best to have a separate menu item for "Copy Location" when you right click on a url, and leave the "Copy" menuitem with its associated Ctrl-C command. So pressing Ctrl-C after opening the context menu will always copy the entire message.

That will keep things consistent, especially because the text of the entire message appears selected in both cases.
Created attachment 662367
New approach

So I noticed that there is a new context menu item now--"Open URL"--and decided to make "Copy Link Location" to behave exactly the same. Pros:

1. Consistency: users will see the same behavior for two URL-related commands.
2. Since you don't need to right-click on the link itself to copy the URL anymore Windows users will be able to trigger the context menu from keyboard and copy URL without even touching a mouse.
3. This "Copy Link Location" is now more consistent with generic "Copy Link Location" in Firefox (if you select random text on a page and right-click on a link Firefox shows both "Copy" and "Copy Link Location" items).

I rewrote my test file based on the "Open URL" test file (which is pretty cool). I also moved context menu helpers from that file and into head.js.
Comment on attachment 662367
New approach

Review of attachment 662367:
-----------------------------------------------------------------

Looking good. Thank you!

r+ provided the minor comments below are addressed.

::: browser/devtools/webconsole/test/head.js
@@ +229,5 @@
> +  EventUtils.synthesizeMouse(targetElement, 2, 2,
> +                             eventDetails, targetElement.ownerDocument.defaultView);
> +}
> +
> +function closeContextMenu (aContextMenu) {

I'm not sure if we really need this here - in head.js. I would not make a function to wrap foo.hidePopup().

::: browser/devtools/webconsole/webconsole.js
@@ +2272,4 @@
>    /**
>     * Copies the selected items to the system clipboard.
>     */
> +  copySelectedItems: function WCF_copySelectedItems(opts)

Please follow the coding style: aOptions for the variable name and add documentation in the comment above.
Created attachment 662696
Final patch (with Mihai's comments addressed)

Thanks!
https://hg.mozilla.org/integration/fx-team/rev/cdc721f3f9c6
*** Bug 793297 has been marked as a duplicate of this bug. ***
File a bug, find it has been fix commited earlier that day.. awesome open source win. Go Firefox!
https://hg.mozilla.org/mozilla-central/rev/cdc721f3f9c6


Please add Copy Location in the context menu for URLs in the web console



Bug 638949 - Please add Copy Location in the context menu for URLs in the web console. r=msucan 

Bug 914405: fix for browser_bug_638949_copy_link_location.js; r=me 
When a new tab is opened (and preloading enabled) we swap docShells of the newly opened tab and a preloaded one in the background. There is no need to actually start loading the newly created docShell until the tabopen animation has been finished. The animation is a lot smoother on my quite fast machine with this fixed.

When a new tab is opened (and preloading enabled) we swap docShells of the newly opened tab and a preloaded one in the background. There is no need to actually start loading the newly created docShell until the tabopen animation has been finished. The animation is a lot smoother on my quite fast machine with this fixed.
Created attachment 753495
defer loading the newly created docShell after a preloaded newtab page has been swapped in
Comment on attachment 753495
defer loading the newly created docShell after a preloaded newtab page has been swapped in

>             if (!uriIsAboutBlank) {
>               // pretend the user typed this so it'll be available till
>               // the document successfully loads
>               if (aURI && gInitialPages.indexOf(aURI) == -1)
>                 b.userTypedValue = aURI;
> 
>-              let flags = Ci.nsIWebNavigation.LOAD_FLAGS_NONE;
>-              if (aAllowThirdPartyFixup)
>-                flags |= Ci.nsIWebNavigation.LOAD_FLAGS_ALLOW_THIRD_PARTY_FIXUP;
>-              if (aFromExternal)
>-                flags |= Ci.nsIWebNavigation.LOAD_FLAGS_FROM_EXTERNAL;
>-              if (aIsUTF8)
>-                flags |= Ci.nsIWebNavigation.LOAD_FLAGS_URI_IS_UTF8;
>-              try {
>-                b.loadURIWithFlags(aURI, flags, aReferrerURI, aCharset, aPostData);
>-              } catch (ex) {
>-                Cu.reportError(ex);
>+              // If we didn't swap docShells with a preloaded browser
>+              // then let's just continue loading the page normally.
>+              if (!docShellsSwapped) {
>+                let flags = Ci.nsIWebNavigation.LOAD_FLAGS_NONE;
>+                if (aAllowThirdPartyFixup)
>+                  flags |= Ci.nsIWebNavigation.LOAD_FLAGS_ALLOW_THIRD_PARTY_FIXUP;
>+                if (aFromExternal)
>+                  flags |= Ci.nsIWebNavigation.LOAD_FLAGS_FROM_EXTERNAL;
>+                if (aIsUTF8)
>+                  flags |= Ci.nsIWebNavigation.LOAD_FLAGS_URI_IS_UTF8;
>+                try {
>+                  b.loadURIWithFlags(aURI, flags, aReferrerURI, aCharset, aPostData);
>+                } catch (ex) {
>+                  Cu.reportError(ex);
>+                }
>               }
>             }

Why not just check docShellsSwapped along with uriIsAboutBlank? "pretend the user typed this so it'll be available till the document successfully loads" doesn't seem to make sense for swapped docshells where nothing gets loaded.

(How) Does the timer code handle new tabs being opened in fast succession?
(In reply to DÃ£o Gottwald [:dao] from comment #2)
> Why not just check docShellsSwapped along with uriIsAboutBlank? "pretend the
> user typed this so it'll be available till the document successfully loads"
> doesn't seem to make sense for swapped docshells where nothing gets loaded.

Right, good point. Great, that makes the code a little less 'complex'.

> (How) Does the timer code handle new tabs being opened in fast succession?

If there's no preloaded page that is readyState=complete and has the right URL we will not swap docShells and therefore just continue loading as normal. The new tab will load as it currently does.
Created attachment 753707
defer loading the newly created docShell after a preloaded newtab page has been swapped in, v2
Thanks!

https://hg.mozilla.org/integration/fx-team/rev/876d89111acb
https://hg.mozilla.org/mozilla-central/rev/876d89111acb


Defer loading the newly created docShell after a preloaded newtab page has been swapped in



Bug 875509 - Defer loading the newly created docShell after a preloaded newtab page has been swapped in; r=dao 
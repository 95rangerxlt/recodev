For some reason, when I connect the ChromeDebuggerActor thread to client, and try to resume the thread I get an error that the frame isn't live. This is caused by _clearSteppingHooks trying to access the frame from `this.dbg.getNewestFrame()` which isn't live.

This is currently how I connect the ChromeDebuggerActor. For some reason if I connect the thread from the tab like normal, instead of chrome debugger, and call resume, everything works fine. What's different about this?

client.connect(() => {
  client.listTabs(function(res) {
    client.attachTab(res.tabs[0], function(r1, r2) {
      client.attachThread(res.chromeDebugger, function(res, threadClient) {
        threadClient.resume(() => {});
      });
    });
  });
});


I'll attach the small patch to add the if(live) check.

For some reason, when I connect the ChromeDebuggerActor thread to client, and try to resume the thread I get an error that the frame isn't live. This is caused by _clearSteppingHooks trying to access the frame from `this.dbg.getNewestFrame()` which isn't live.

This is currently how I connect the ChromeDebuggerActor. For some reason if I connect the thread from the tab like normal, instead of chrome debugger, and call resume, everything works fine. What's different about this?

client.connect(() => {
  client.listTabs(function(res) {
    client.attachTab(res.tabs[0], function(r1, r2) {
      client.attachThread(res.chromeDebugger, function(res, threadClient) {
        threadClient.resume(() => {});
      });
    });
  });
});


I'll attach the small patch to add the if(live) check.
Created attachment 8440814
1026041.patch
Created attachment 8441371
1026041.patch

Actually need to check is the frame isn't null too to make sure we don't change how this function works. I saw that a null error at one point.
Comment on attachment 8441371
1026041.patch

Guess I need you to sign off again?
Comment on attachment 8441371
1026041.patch

Review of attachment 8441371:
-----------------------------------------------------------------

Generally, such small changes don't need re-review.

::: toolkit/devtools/server/actors/script.js
@@ +1084,5 @@
>     * @param Debugger.Frame aFrame
>     *        The frame we want to clear the stepping hooks from.
>     */
>    _clearSteppingHooks: function (aFrame) {
> +    if(aFrame && aFrame.live) {

space after if
Created attachment 8442381
1026041.patch

Added bug message
https://tbpl.mozilla.org/?tree=Try&rev=efc57ce395ae
Created attachment 8444655
1026041.patch

Add r=fitzgen
Not sure why OSX 10.6 initially failed, but I've had 14 successful retriggers. The initial error is not remotely connected to this.
(In reply to James Long (:jlongster) from comment #8)
> Not sure why OSX 10.6 initially failed, but I've had 14 successful
> retriggers. The initial error is not remotely connected to this.

Its unrelated. See the bug suggested when you click for details. You can click the star next to the suggested bug, then the star in the bottom left to mark it as a known failure. You can press U to toggle showing only unmarked failures on tbpl.
(In reply to Nick Fitzgerald [:fitzgen] from comment #9)
> (In reply to James Long (:jlongster) from comment #8)
> > Not sure why OSX 10.6 initially failed, but I've had 14 successful
> > retriggers. The initial error is not remotely connected to this.
> 
> Its unrelated. See the bug suggested when you click for details. You can
> click the star next to the suggested bug, then the star in the bottom left
> to mark it as a known failure.

You also have to then press C to get the comment dialog, and either click to submit or press Ctrl+Enter to actually apply the "star" as a comment in the bug.

I hope treeherder will have a remove some of the steps in this process in the future.
https://hg.mozilla.org/integration/fx-team/rev/f7fc52269146
https://hg.mozilla.org/mozilla-central/rev/f7fc52269146


_clearSteppingHooks should check if the frame is live



Bug 1026041 - make _clearSteppingHooks in ThreadActor check if the frame is live. r=fitzgen 
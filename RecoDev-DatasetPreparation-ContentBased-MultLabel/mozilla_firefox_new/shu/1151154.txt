So we do this terrible thing in the debugger frontend that fakes resumption packets on tab navigation events, both at the start *and* at the end of navigation.

The end event, as handled by _navigate in the webbrowser actor, can generate a fake resumption packet that races with the paused event from a breakpoint hit on page reload.

STR for this is kind of complicated and came up while debugging Shumway.

Nick help me come up with the fix since I don't know the promise machinery.

So we do this terrible thing in the debugger frontend that fakes resumption packets on tab navigation events, both at the start *and* at the end of navigation.

The end event, as handled by _navigate in the webbrowser actor, can generate a fake resumption packet that races with the paused event from a breakpoint hit on page reload.

STR for this is kind of complicated and came up while debugging Shumway.

Nick help me come up with the fix since I don't know the promise machinery.
Created attachment 8588255
Don't fake resumption packets on tab navigation events in the frontend debugger.
Filed bug 1151156 for the backout of the fake resumption packet when Gecko 40 hits b2g stable.
Comment on attachment 8588255
Don't fake resumption packets on tab navigation events in the frontend debugger.

Review of attachment 8588255:
-----------------------------------------------------------------

This makes me happy!

::: toolkit/devtools/client/dbg-client.jsm
@@ +987,5 @@
>          typeof this._clients.get(aPacket.from)._onThreadState == "function") {
>        this._clients.get(aPacket.from)._onThreadState(aPacket);
>      }
> +
> +    // TODO: Remove once Gecko 40 is on b2g-stable.

Nit: add a mention of bug 1151156 in the comment.
https://hg.mozilla.org/mozilla-central/rev/4bc1143f4486


Stop faking resumption packets on tabNavigation events



Bug 1151154 - Don't fake resumption packets on tab navigation events in the frontend debugger. (r=past) 
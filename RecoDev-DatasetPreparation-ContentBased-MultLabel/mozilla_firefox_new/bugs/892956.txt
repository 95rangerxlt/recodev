STR:

1. createWidget({defaultArea: CustomizableUI.AREA_NAVBAR, ...});
2. destroyWidget();

ER:
CustomizableUI.inDefaultState is true, assuming it was true before createWidget was called.

AR:
CustomizableUI.inDefaultState is false because we don't remove the widget from default placements, but do splice it out of current placement because the widget no longer exists.

P2 because this essentially means that widgets created with a default area will forevermore disturb the state of the 'reset to defaults' button. Inconsistent internal state is bad.

STR:

1. createWidget({defaultArea: CustomizableUI.AREA_NAVBAR, ...});
2. destroyWidget();

ER:
CustomizableUI.inDefaultState is true, assuming it was true before createWidget was called.

AR:
CustomizableUI.inDefaultState is false because we don't remove the widget from default placements, but do splice it out of current placement because the widget no longer exists.

P2 because this essentially means that widgets created with a default area will forevermore disturb the state of the 'reset to defaults' button. Inconsistent internal state is bad.
Created attachment 774671
destroyWidget should remove the widget from defaultPlacements, if applicable
Comment on attachment 774671
destroyWidget should remove the widget from defaultPlacements, if applicable

Review of attachment 774671:
-----------------------------------------------------------------

r=me with a little comment clearing up the defaultPlacements existence assumption.

::: browser/components/customizableui/src/CustomizableUI.jsm
@@ +1511,5 @@
> +    // Remove it from the default placements of an area if it was added there:
> +    if (widget.defaultArea) {
> +      let area = gAreas.get(widget.defaultArea);
> +      if (area) {
> +        let defaultPlacements = area.get("defaultPlacements");

Should we check that defaultPlacements exists before indexOf'ing it? I see us doing that in several other places, which makes me think that we can't count on defaultPlacements existing...

Ok, a closer looks shows that if a widget is created with a defaultArea, that area is given a defaultPlacements array.

So I think a comment here would be good to explain that - something like,

"We can assume defaultPlacements exists because this widget had it set as its defaultArea, which automatically generates a defaultPlacements array for the area.".

Or something better.
https://hg.mozilla.org/projects/ux/rev/3a864f5263b9
https://hg.mozilla.org/mozilla-central/rev/3a864f5263b9


destroyWidget should remove widget from default area's defaultPlacements if applicable



Bug 892956 - destroyWidget should remove the widget from defaultPlacements, if applicable, r=mconley 
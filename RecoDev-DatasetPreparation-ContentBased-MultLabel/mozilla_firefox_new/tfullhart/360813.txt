Scenario #1: The config has release strings like 1.5.0.8-partner and version strings like 1.5.0.8-partner.

Result: aus2.test only has updates from the last release (e.g. 1.5.0.7 -> 1.5.0.8) and no updates from older releases. aus2 has updates from the last release and the other past releases, but the past releases are named like 1.5.0.6-partner.

Scenario #2: The config has release strings like 1.5.0.8-partner and version strings like 1.5.0.8. It seems to me that this would be the "correct" config because the version of the browser is "1.5.0.8".

Result: For each locale, it says "No known patch for locale ja, 1.5.0.5 -> 1.5.0.7; skipping...". I suspect that the MozAUSConfig::CreateUpdateGraph() function somehow is using the version string, instead of solely on the release strings, for it's calculations.

Another, minor issue is that patcher2.pl has a hard coded regular expression that says that only channels matching /test$/ should be copied into aus2.test. I believe the regular expression should at least be changed to /test(-\w+)$/.

Scenario #1: The config has release strings like 1.5.0.8-partner and version strings like 1.5.0.8-partner.

Result: aus2.test only has updates from the last release (e.g. 1.5.0.7 -> 1.5.0.8) and no updates from older releases. aus2 has updates from the last release and the other past releases, but the past releases are named like 1.5.0.6-partner.

Scenario #2: The config has release strings like 1.5.0.8-partner and version strings like 1.5.0.8. It seems to me that this would be the "correct" config because the version of the browser is "1.5.0.8".

Result: For each locale, it says "No known patch for locale ja, 1.5.0.5 -> 1.5.0.7; skipping...". I suspect that the MozAUSConfig::CreateUpdateGraph() function somehow is using the version string, instead of solely on the release strings, for it's calculations.

Another, minor issue is that patcher2.pl has a hard coded regular expression that says that only channels matching /test$/ should be copied into aus2.test. I believe the regular expression should at least be changed to /test(-\w+)$/.
Created attachment 246986
Patch for patcher to better allow partner repacks
Created attachment 247112
Compressed diff of generated snippits against snippits generated with the original version of patcher

Diff between the snippits generated by my version of patcher2.pl against the those generated by the original version. This diff is compressed and I used the 1.5.0.8 firefox patcher2.cfg. I didn't include the linux snippits in the diff because I couldn't unpack the linux mars on my mac (Linux mars have README.txt and readme.txt and case-insensitive filesystems such as HFS+ overwrite the one with the other when the mar is unpacked).

The diff is compressed with gzip because of the size of the diff.

The diff shows that the files generated, their names, paths, and contents are the same except for the hashes/sizes of the partial diffs. I don't know why the partial diffs generated on my mac are different from those generated by prometheus-vm. I suspect that that difference isn't related to my changes to patcher2 and is probably caused by a difference in tool chain on my mac compared to prometheus-vm.

If someone is concerned about the difference, then I will repeat the test on prometheus-vm.
I performed another test on staging-linux-tbox using the yahoo 1.5.0.8 repack configuration file and comparing it to the snippits generated from the released yahoo 1.5.0.8 repacks. The snippits were identical, it was an empty diff.

preed, do you mind landing the patch for me?
Created attachment 247229
Diff of the generated directories between the original and patched patcher2, using the yahoo branding config

On staging-linux-tbox, I used the original patcher2 to generate snippits and partials, using the moz180-branch-branded-patcher2.cfg with the yahoo configuration uncommented and the google configuration commented. The version lines were like "1.5.0.8-yahoo".

I think used the same configuration file, changing the version lines to be like "1.5.0.8", and generated snippits and partials with the patched version of patcher2.

I then ran "diff -ur patcher2-orig/temp/firefox patcher2-test/temp/firefox" and attached that output. Of the directories they had in common, there was no change. As you can see, the new version of patcher2 creates the proper directories in aus2.test and also names the directories correctly in aus2.
Landed:

Checking in MozAUSConfig.pm;
/cvsroot/mozilla/tools/patcher/MozAUSConfig.pm,v  <--  MozAUSConfig.pm
new revision: 1.4; previous revision: 1.3
done
Checking in MozAUSLib.pm;
/cvsroot/mozilla/tools/patcher/MozAUSLib.pm,v  <--  MozAUSLib.pm
new revision: 1.3; previous revision: 1.2
done
Checking in patcher2.pl;
/cvsroot/mozilla/tools/patcher/patcher2.pl,v  <--  patcher2.pl
new revision: 1.6; previous revision: 1.5
done



patcher2.pl doesn't generate correct snippits for older releases on partner builds


Found by mconley from instrumenting CustomizableUI:
* The XULWidgetGroupWrapper constructor is called 2755 times over the course of 251 window openings (the +1 is for the first window that launches the test).

* Traced it to the BookmarksUI button() getter, which is checking the areaType of the bookmarks button in order to determine whether or not to return the node.

* We could probably cache the areaType of the button, and have BookmarksUI have an onWidgetAdded/Moved/Removed listener so that it records the state of the button internally, and we don't have to construct the wrappers ~10 per new window.

Found by mconley from instrumenting CustomizableUI:
* The XULWidgetGroupWrapper constructor is called 2755 times over the course of 251 window openings (the +1 is for the first window that launches the test).

* Traced it to the BookmarksUI button() getter, which is checking the areaType of the bookmarks button in order to determine whether or not to return the node.

* We could probably cache the areaType of the button, and have BookmarksUI have an onWidgetAdded/Moved/Removed listener so that it records the state of the button internally, and we don't have to construct the wrappers ~10 per new window.
Created attachment 786146
v.1 Simpler approach to add a widgetGroup lazy getter to BookmarkingUI

This approach seemed more straightforward but unfortunately still only helps BookmarkingUI rather than a group wrapper cache at a lower level.

I didn't bother to memoize the XULWidgetSingleWrapper returned by the forWindow calls since we already have a wrapper cache for those. This means we still do a getElementById for the widget in each forWindow call but that should be fast. We can always do more in a follow-up patch if this doesn't help perf enough.

Are there reasons why using a lazy getter (_widgetGroup) would be wrong? It seems fine for a built-in widget but I could be wrong. A sanity test locally seemed to pass.

Baseline: https://tbpl.mozilla.org/?tree=Try&rev=69bbd8165e4e
Try push: https://tbpl.mozilla.org/?tree=Try&rev=680357927a4e
Comment on attachment 786146
v.1 Simpler approach to add a widgetGroup lazy getter to BookmarkingUI

Review of attachment 786146:
-----------------------------------------------------------------

So, in principle, this will fix the performance issue here, so r+.

However, in bug 899608 I pointed out the existing single wrapper cache is most likely leaking. I think we should fix that by caching group wrappers, and having those (lazily) cache nodes (or single wrappers) until the nodes or their windows are destroyed. So this isn't a final fix, but we can take this as the easy path to optimize some of what's causing us grief here.
(In reply to :Gijs Kruitbosch from comment #2)
> So, in principle, this will fix the performance issue here, so r+.

The try results so far on non-Windows aren't looking too good. If the results end up looking worthwhile, feel free to push this for me tonight. http://compare-talos.mattn.ca/?oldRevs=69bbd8165e4e&newRev=680357927a4e&submit=true

> However, in bug 899608 I pointed out the existing single wrapper cache is
> most likely leaking. I think we should fix that by caching group wrappers,
> and having those (lazily) cache nodes (or single wrappers) until the nodes
> or their windows are destroyed. So this isn't a final fix, but we can take
> this as the easy path to optimize some of what's causing us grief here.

Is there a bug filed on that? I think there should be.
Should be fixed by bug 899608, https://hg.mozilla.org/projects/ux/rev/872549727aeb
https://hg.mozilla.org/mozilla-central/rev/872549727aeb


XULWidgetGroupWrapper constructor is called ~11 times per window due to BookmarkingUI


User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.8) Gecko/20050511 Firefox/1.0.4
Build Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.8) Gecko/20050511 Firefox/1.0.4

Search in history do distinguish between uppercase and lowercase non-english
letters. This bug make difficulties for searching words and search will produce
non-complete results for users not knowing about this bug. 

Reproducible: Always

Steps to Reproduce:

User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.8) Gecko/20050511 Firefox/1.0.4
Build Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.8) Gecko/20050511 Firefox/1.0.4

Search in history do distinguish between uppercase and lowercase non-english
letters. This bug make difficulties for searching words and search will produce
non-complete results for users not knowing about this bug. 

Reproducible: Always

Steps to Reproduce:
Confirming bug with trunk build from 20050513 on Win XP.
Can I request a blocker?
Will this bug be fixed or the new Fx *again* will be bundled with *one more* 
broken feature? 
Daniel, can you add specific steps to reproduce?  (What language is involved,
what pages to visit, what to search for.)
I'm not Daniel, but...

Steps to reproduce:
1. Visit http://www.fyndborsen.se/
2. Open History and type in "fyndb" in the search field.
3. Press Alt+0246 to create a "ö" (latin small letter o with diaeresis)
4. Notice how the entry "FYNDBÖRSEN - Hemelektronik på internet sedan 1997" does
not match.
5. Delete the "ö" and press Alt+0214 to create "Ö" (latin capital letter o with
diaeresis) and notice the match.
Thanks.  I can reproduce the bug using Mozilla/5.0 (Macintosh; U; PPC Mac OS X
Mach-O; en-US; rv:1.9a1) Gecko/20051006 Firefox/1.6a1.
nsGlobalHistory::RowMatches uses nsCaseInsensitiveCStringComparator, which is
for comparing ASCII strings.  According to bug 231782, implementing
nsCaseInsensitiveUTF8StringComparator would not be trivial.

I will try to fix this bug by using UTF-16 or UCS2 instead of UTF-8 in
nsGlobalHistory::RowMatches, since nsCaseInsensitiveStringComparator takes
UTF-16 or UCS2.
But there is a working search field in the Bookmarks sidebar. Wouldn't it be 
easy just to "copy" its behaviour? 
Created attachment 198916
patch
Created attachment 198917
patch
*** Bug 311660 has been marked as a duplicate of this bug. ***
Comment on attachment 198917
patch

>+      const nsString searchText = term->text;

Make that |const nsString& searchText| perhaps?

sr=bzbarsky with that.
Neil, Ctho, does the other global history need a similar change?
> >+      const nsString searchText = term->text;

> Make that |const nsString& searchText| perhaps?

term->text is an nsXPIDLString, so I think |const nsXPIDLString& searchText|
would be more clear.  |const nsString& searchText| does work (and avoid copying
the string buffer) but relies on the fact that nsXPIDLString is a subclass of
nsString.
Created attachment 198947
patch

This patch declares searchText as |const nsXPIDLString&|.
(In reply to comment #13)
>Neil, Ctho, does the other global history need a similar change?
Almost certainly, which is why I created bug 311660...
Checked in on trunk.
On trunk?? Does that mean it won't be fixed for 1.5?? >:-E 
Verified:

* [Mac, Win] The fix works as advertised in today's trunk nightlies using normal
History sidebar search.

* [Mac] All History sidebar modes still work (except for "By Site", which has
been broken for ages, see bug 206927).

* [Win] The fix works as advertised using the "Enhanced History Manager" extension.

* [Win] The "Enhanced History Manager" extension still works.  I tested all
search mode combinations ("title starts with", etc) and all grouping options. 
The only oddity I found was that "location is not
http://steelgryphon.com/blog/?p=62" caused the remaining items to be re-sorted,
but that happens in a trunk build from last week too.

* [Mac] The "How'd I Get Here" extension still works.
I think this bug makes history search pretty broken in some languages, so I'm
requesting approval for Firefox 1.5 RC 1.
plussing since we approved this patch.
Checked in on MOZILLA_1_8_BRANCH.


Search in history is case-sensitive for non-ascii letters

fixed1.8, intl
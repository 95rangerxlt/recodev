In bug 1160253 we would like to use |mozPoisonValue()| in |GuardObjectNotifier|. This breaks the webapprt build due to a missing symbol.

On mac I believe we should be able to just specify |USE_LIBS += [ 'mfbt', ]|.

On Windows it's more complicated, per glandium on IRC:
> 18:31 <glandium> so, unfortunately, the only option to get that thing to build on windows is to add a staticruntime mfbt
> 18:32 <glandium> so, essentially, copy mfbt/moz.build to mfbt/staticruntime/moz.build, change the library name to mfbt_staticruntime, and add USE_STATIC_LIBS = True
> 18:32 <glandium> and link against that on windows
> 18:32 <glandium> (make it windows only)

In bug 1160253 we would like to use |mozPoisonValue()| in |GuardObjectNotifier|. This breaks the webapprt build due to a missing symbol.

On mac I believe we should be able to just specify |USE_LIBS += [ 'mfbt', ]|.

On Windows it's more complicated, per glandium on IRC:
> 18:31 <glandium> so, unfortunately, the only option to get that thing to build on windows is to add a staticruntime mfbt
> 18:32 <glandium> so, essentially, copy mfbt/moz.build to mfbt/staticruntime/moz.build, change the library name to mfbt_staticruntime, and add USE_STATIC_LIBS = True
> 18:32 <glandium> and link against that on windows
> 18:32 <glandium> (make it windows only)
My latest attempt is at https://treeherder.mozilla.org/#/jobs?repo=try&revision=50dc03a75df6 - there's an error building NormalizationTest.exe which probably needs to link against mfbt_staticruntime also. Looking into it.
Created attachment 8607574
Patch

This seems to do it. https://treeherder.mozilla.org/#/jobs?repo=try&revision=d44a437b168d
Created attachment 8607612
Patch v2

Whoops, the old version broke non-windows by unconditionally including the mfbt_staticruntime into the NormalizationTest binary. The new version only includes it on windows and works better.

https://treeherder.mozilla.org/#/jobs?repo=try&revision=e3019fe525e8
Comment on attachment 8607612
Patch v2

Review of attachment 8607612:
-----------------------------------------------------------------

::: intl/unicharutil/tests/moz.build
@@ +13,5 @@
>      'unicharutil_external_s',
>  ]
> +
> +if CONFIG['OS_ARCH'] == 'WINNT':
> +    USE_LIBS += ['mfbt_staticruntime']

That... is fishy. The GeckoSimplePrograms above should be doing a USE_LIBS += ['mozglue'], which contains mfbt, so adding another mfbt is weird. And looking at your try error confirms this: the problem you're trying to fix here is not due to the lack of mfbt_staticruntime here, but due to gChaosModeCounter not being declared MFBT_DATA in the .h.

::: mfbt/staticruntime/moz.build
@@ +40,5 @@
> +
> +# Suppress warnings in third-party code.
> +if CONFIG['GNU_CXX']:
> +    # TODO: Remove this LZ4 warning suppression after bug 993267 is fixed.
> +    SOURCES['../Compression.cpp'].flags += ['-Wno-unused-function']

You can be sure this file will become outdated quite quickly. It is better to share those definitions with the parent moz.build. Look how other places are doing.

Be aware that bug 991983 is going to change some of the details in the other places that do the same thing (making it simpler).

And if you can wait a couple more weeks, it should be possible, then, to define both mfbt and mfbt_standalone in the same moz.build.
(In reply to Mike Hommey [:glandium] from comment #4)
> > +if CONFIG['OS_ARCH'] == 'WINNT':
> > +    USE_LIBS += ['mfbt_staticruntime']
> 
> That... is fishy. The GeckoSimplePrograms above should be doing a USE_LIBS
> += ['mozglue'], which contains mfbt, so adding another mfbt is weird. And
> looking at your try error confirms this: the problem you're trying to fix
> here is not due to the lack of mfbt_staticruntime here, but due to
> gChaosModeCounter not being declared MFBT_DATA in the .h.

Not sure quite what you mean. The try push in comment 1 (which had the original NormalizationTest build error) does have MFBT_DATA in the .h file, at [1] - or did you mean something else?

> ::: mfbt/staticruntime/moz.build
> 
> You can be sure this file will become outdated quite quickly. It is better
> to share those definitions with the parent moz.build. Look how other places
> are doing.

Sure, I can do that. I was a little unsure if that should always be done since the xpcomglue's staticruntime moz.build also references files directly [2].

> Be aware that bug 991983 is going to change some of the details in the other
> places that do the same thing (making it simpler).
> 
> And if you can wait a couple more weeks, it should be possible, then, to
> define both mfbt and mfbt_standalone in the same moz.build.

I'll keep an eye on these. I don't like waiting for things unless they're really imminent because stuff at Mozilla always ends up taking longer than one expects :)

[1] https://hg.mozilla.org/try/file/50dc03a75df6/mfbt/ChaosMode.h#l19
[2] http://mxr.mozilla.org/mozilla-central/source/xpcom/glue/staticruntime/moz.build?rev=9bc266372d00#12
(In reply to Kartikaya Gupta (email:kats@mozilla.com) from comment #5)
> (In reply to Mike Hommey [:glandium] from comment #4)
> > > +if CONFIG['OS_ARCH'] == 'WINNT':
> > > +    USE_LIBS += ['mfbt_staticruntime']
> > 
> > That... is fishy. The GeckoSimplePrograms above should be doing a USE_LIBS
> > += ['mozglue'], which contains mfbt, so adding another mfbt is weird. And
> > looking at your try error confirms this: the problem you're trying to fix
> > here is not due to the lack of mfbt_staticruntime here, but due to
> > gChaosModeCounter not being declared MFBT_DATA in the .h.
> 
> Not sure quite what you mean. The try push in comment 1 (which had the
> original NormalizationTest build error) does have MFBT_DATA in the .h file,
> at [1] - or did you mean something else?

I did mean that, but it has to be a related issue that doesn't require using mfbt_staticruntime. Because, as I said, mfbt symbols should already be there.
 
> > ::: mfbt/staticruntime/moz.build
> > 
> > You can be sure this file will become outdated quite quickly. It is better
> > to share those definitions with the parent moz.build. Look how other places
> > are doing.
> 
> Sure, I can do that. I was a little unsure if that should always be done
> since the xpcomglue's staticruntime moz.build also references files directly
> [2].

They also add variables 2 lines above. xpcom glue is ... special. Those file lists are shared with other xpcom directories, so they don't include all files.
 
> > Be aware that bug 991983 is going to change some of the details in the other
> > places that do the same thing (making it simpler).
> > 
> > And if you can wait a couple more weeks, it should be possible, then, to
> > define both mfbt and mfbt_standalone in the same moz.build.
> 
> I'll keep an eye on these. I don't like waiting for things unless they're
> really imminent because stuff at Mozilla always ends up taking longer than
> one expects :)

Bug 991983 is "only" waiting for review. The other thing is not even in the form of a bug.
(In reply to Mike Hommey [:glandium] from comment #4)
> That... is fishy. The GeckoSimplePrograms above should be doing a USE_LIBS
> += ['mozglue'], which contains mfbt, so adding another mfbt is weird.

mozglue is getting set to None at [1], so the USE_LIBS += ['mozglue'] bit never happens. I'm not sure what the right behaviour here is. Also I noticed that this moz.build is the only one that uses GeckoSimplePrograms with msvcrt='static' so maybe that code is not exercised anywhere else.

[1] http://mxr.mozilla.org/mozilla-central/source/build/gecko_templates.mozbuild?rev=5e45fba743aa#34
Created attachment 8610602
Patch v3

Updated the patch to pull out an objs.mozbuild file but left the unicharutil thing as-is for now based on my above comment, let me know if you have something in mind to fix that.
https://treeherder.mozilla.org/#/jobs?repo=try&revision=b17092e8d9bb
Comment on attachment 8610602
Patch v3

Review of attachment 8610602:
-----------------------------------------------------------------

::: intl/unicharutil/tests/moz.build
@@ +13,5 @@
>      'unicharutil_external_s',
>  ]
> +
> +if CONFIG['OS_ARCH'] == 'WINNT':
> +    USE_LIBS += ['mfbt_staticruntime']

Okay, let's step back a little. The error in your try was:

05:41:45     INFO -  xpcomglue_staticruntime_s.lib(Unified_cpp_glue_staticruntime1.obj) : error LNK2001: unresolved external symbol "__declspec(dllimport) class mozilla::Atomic<unsigned int,2,void> mozilla::detail::gChaosModeCounter" (__imp_?gChaosModeCounter@detail@mozilla@@3V?$Atomic@I$01X@2@A)
05:41:45     INFO -  NormalizationTest.exe : fatal error LNK1120: 1 unresolved externals

which tells that somehow, Unified_cpp_glue_staticruntime1.cpp is needing gChaosModeCounter. Why is it?

But let's step back a little more. I took a look at https://hg.mozilla.org/try/rev/65d74f1f6636 which adds chaos mode, and I'm wondering: why don't you simply put it in libxul? (like, somewhere in xpcom/base)

Anyways, apart from this particular hunk, the patch is fine, so I'm okay for it to land _without_ this specific part, which can be dealt with separately (in the bug where you actually add chaos mode)
(In reply to Mike Hommey [:glandium] from comment #10)
>
> Okay, let's step back a little. The error in your try was:
> 
> 05:41:45     INFO - 
> xpcomglue_staticruntime_s.lib(Unified_cpp_glue_staticruntime1.obj) : error
> LNK2001: unresolved external symbol "__declspec(dllimport) class
> mozilla::Atomic<unsigned int,2,void> mozilla::detail::gChaosModeCounter"
> (__imp_?gChaosModeCounter@detail@mozilla@@3V?$Atomic@I$01X@2@A)
> 05:41:45     INFO -  NormalizationTest.exe : fatal error LNK1120: 1
> unresolved externals
> 
> which tells that somehow, Unified_cpp_glue_staticruntime1.cpp is needing
> gChaosModeCounter. Why is it?

I think this is because pldhash.cpp uses chaos mode to randomize iteration in some cases. It checks if chaos mode is enabled which, with my patches, requires access to gChaosModeCounter.

> But let's step back a little more. I took a look at
> https://hg.mozilla.org/try/rev/65d74f1f6636 which adds chaos mode, and I'm
> wondering: why don't you simply put it in libxul? (like, somewhere in
> xpcom/base)
> 
> Anyways, apart from this particular hunk, the patch is fine, so I'm okay for
> it to land _without_ this specific part, which can be dealt with separately
> (in the bug where you actually add chaos mode)

OK, fair enough. I'll land this patch without that hunk and we can sort this out in the chaos mode bug.
https://hg.mozilla.org/integration/mozilla-inbound/rev/f127879d5e7a
https://hg.mozilla.org/mozilla-central/rev/f127879d5e7a


webapprt should link against mfbt lib on windows and mac



Bug 1160285 - Add a staticruntime version of mfbt and link some stuff against it. r=glandium 
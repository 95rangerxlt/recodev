Open Firefox prefs dialog.
Click "Main"
Use at-poke to poke it.
You will find

Startup PANEL
--Startup LABEL
--When Minefield starts: LABEL

Startup PANEL and Startup LABEL don't have LABEL_FOR/BY relations

Open Firefox prefs dialog.
Click "Main"
Use at-poke to poke it.
You will find

Startup PANEL
--Startup LABEL
--When Minefield starts: LABEL

Startup PANEL and Startup LABEL don't have LABEL_FOR/BY relations
"startup" label is for group box
see http://lxr.mozilla.org/seamonkey/source/browser/components/preferences/main.xul#113
I see this in the file:

112     <groupbox id="startupGroup">
113       <caption label="&startup.label;"/>
114 
115       <hbox align="center">
116         <label value="&startupPage.label;" accesskey="&startupPage.accesskey;"
117                control="browserStartupPage"/>

We end up with a similar hierarchy in AT-SPI.  The problem is that the label and the groupbox do not have an accessible relation.  Thus, it is difficult for an assistive technology to tell if the label is a label for the group box, something else, or nothing at all.  
Created attachment 243322
patch

"label for" solved patch
"label by" not solved due to caption isn't taken as a child of groupbox when nsIContent->GetChildAt is called.
Comment on attachment 243322
patch

I like it, but since it's in toolkit my r= doesn't mean much. Works in terms of its interactions with mozilla/accessible.
I imagine we have the same problem for HTML <fieldset> and the <legend> that comes with it. I don't think we do, because we actually specifically ensure no accessible child is created for the <legend> in nsHTMLGroupboxAccessible::CacheChildren().
http://lxr.mozilla.org/seamonkey/source/accessible/src/html/nsHTMLFormControlAccessible.cpp#523

That may not be as good as using relations, but I think it's okay for now.
Created attachment 243396
HTML groupbox testcase, just for reference
Comment on attachment 243322
patch

>Index: content/widgets/groupbox.xml
>===================================================================
>@@ -38,12 +38,18 @@
>     </resources>
>     
>     <content>
>       <children>
>         <xul:image class="caption-icon" xbl:inherits="src=image"/>
>         <xul:label class="caption-text" flex="1"
>                    xbl:inherits="default,value=label,crop,accesskey"/>
>       </children>
>     </content>
>+
>+    <implementation>
>+      <constructor>
>+        document.getAnonymousNodes(this)[1].setAttribute("control", this.parentNode.getAttribute("id"));
>+      </constructor>
>+    </implementation>
>   </binding>
> 
> </bindings>

nit: use the id property instead and make sure it's set, i.e.

if (this.parentNode.id) {
  document.getAnonymousNodes(this)[1]
          .setAttribute("control", this.parentNode.id);
}

r=mano.
(In reply to comment #5)
> I imagine we have the same problem for HTML <fieldset> and the <legend> that
> comes with it. I don't think we do, because we actually specifically ensure no
> accessible child is created for the <legend> in
> nsHTMLGroupboxAccessible::CacheChildren().
> http://lxr.mozilla.org/seamonkey/source/accessible/src/html/nsHTMLFormControlAccessible.cpp#523
> 
> That may not be as good as using relations, but I think it's okay for now.
> 

so we take it as being fixed by addressing mano's comment? and do we need a sr for it?
No sr= needed on chrome fixes. Mano's r= is enough. The requirement for chrome is to get an r= from a "toolkit peer".
Created attachment 243576
patch v2

patch addressing mano's comment


LABEL of PANEL and PANEL don't have LABEL_FOR/BY relations

access
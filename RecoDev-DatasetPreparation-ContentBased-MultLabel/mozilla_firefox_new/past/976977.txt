Needs to call 'DebuggerServer.closeListener(true)'

See the 'listen' command in BuiltinCommands.jsm for inspiration.

Needs to call 'DebuggerServer.closeListener(true)'

See the 'listen' command in BuiltinCommands.jsm for inspiration.
Hi,

I would like to work on it.
Created attachment 8382082
Added unlisten command to gcli.
Comment on attachment 8382082
Added unlisten command to gcli.

Review of attachment 8382082:
-----------------------------------------------------------------

Thanks for this. It looks good so far.

Before we commit this, we'll need tests. browser_cmd_cookie.js [1] is a good example of some tests, and there are docs on helpers.audit in the source [2].

[1]: https://mxr.mozilla.org/mozilla-central/source/browser/devtools/commandline/test/browser_cmd_cookie.js
[2]: https://mxr.mozilla.org/mozilla-central/source/browser/devtools/commandline/test/helpers.js#982

Does that make sense?

::: browser/devtools/commandline/BuiltinCommands.jsm
@@ +1890,5 @@
> +  /**
> +   * 'listen' command
> +   */
> +  gcli.addCommand({
> +    name: "listen",

I know there's not a huge point in a "listen status" command right now, but I think it still makes sense to have "listen on" and "listen off" rather than "listen" and "unlisten" for 2 reasons:

* Given "listen on", there's no question what the opposite is (however I've been asked about the opposite of "listen" a few times)
* "help listen" will tell you about all the child commands.

There are examples in BuiltinCommands.jsm of parent commands.
Paul - You were saying that we should wait for bug 942756 to land. I'm wondering if we need to do that - this is a fairly simple patch right now.
If you do think we should wait, what changes to the code would be needed?
(In reply to Joe Walker [:jwalker] from comment #4)
> Paul - You were saying that we should wait for bug 942756 to land. I'm
> wondering if we need to do that - this is a fairly simple patch right now.
> If you do think we should wait, what changes to the code would be needed?

bug 942756 changes the way the listen command works, and unlistenning will work differently too. This bug is in review and should land soon. I recommend to wait.
Not enormously useful, but 'listen status' could show the number of open connections to the server.
Created attachment 8399569
Added new group of listen commands and tests.

Hi, sorry for delaying this so much. Here is the patch with a new set of `listen` commands and test set.

I got stuck after writing a few tests. When I tried to execute `listen on', it failed with 

ï»¿TEST-UNEXPECTED-FAIL | chrome://mochitests/content/browser/browser/devtools/commandline/test/browser_cmd_listen.js | html output for listen on - Got Listen is disabled by the devtools.debugger.remote-enabled preference, expected Listening on port

This is due to the last test in browser_cmd_listen.js file in this patch. I don't know how to enable the devtools prefs `devtools.debugger.remote-enabled` in this test. I tried importing Services.js and do |Services.prefs.setBoolPref('devtools.debugger.remote-enabled', true)| inside test(), but it didn't help.

How do I enable a pref in test?
Comment on attachment 8399569
Added new group of listen commands and tests.

Review of attachment 8399569:
-----------------------------------------------------------------

Bug 984365 breaks BuiltinCommands.jsm up, so if this bug lands first then we'll need to port these changes over to "/toolkit/devtools/gcli/commands/listen.js".

Your changes don't have the call to Services.prefs.setBoolPref in so it's hard to be sure what could be wrong. Maybe you could attach a broken version?

::: browser/locales/en-US/chrome/browser/devtools/gclicommands.properties
@@ +1341,5 @@
>  profilerNotReady=For this command to work you need to open the profiler first
>  
>  # LOCALIZATION NOTE (listenDesc) A very short string used to describe the
>  # function of the 'listen' command.
> +listenDesc=Control remote debug port

In order for localizers to know that a string has changed, we change the key, which is messy, but there's not a better way right now. So could you change this to listenDesc2 ?

@@ +1350,4 @@
>  
>  # LOCALIZATION NOTE (listenManual2) A longer description of the 'listen'
>  # command.
> +listenOnManual2=%1$S can allow remote debugging over a TCP/IP connection. For security reasons this is turned off by default, but can be enabled using this command.

And since this one (and listenOffManual2) are new strings, we don't need the "2".
Created attachment 8399983
Added new group of listen commands and tests.

Here is the broken version of the patch with Services.pref.setBoolPref to enable `remote-enabled` in the test file.

Also, made the suggested changes to localization strings.
Created attachment 8399987
Added new group of listen commands and tests.

Minor change in string content.
Comment on attachment 8399987
Added new group of listen commands and tests.

Review of attachment 8399987:
-----------------------------------------------------------------

Looks good - we still need to work out what's up with the pref right?
Comment on attachment 8399987
Added new group of listen commands and tests.

Review of attachment 8399987:
-----------------------------------------------------------------

::: browser/devtools/commandline/test/browser_cmd_listen.js
@@ +1,4 @@
> +Cu.import('resource://gre/modules/Services.jsm');
> +
> +function test() {
> +  Services.prefs.setBoolPref('devtools.debugger.enabled', true);

The problem is that you got the pref name wrong. Also don't forget to reset it in a cleanup function when the test is done.
Created attachment 8407411
Added new group of listen commands and tests.

Changed the pref name as pointed out by :past and it works fine now.
Added some more tests and all of them pass :)
Comment on attachment 8407411
Added new group of listen commands and tests.

Review of attachment 8407411:
-----------------------------------------------------------------

That looks good.
Please could you add a couple of things:

I think we should tidy up after ourselves, so we should add a test for "listen off", and in each time we execute a "listen" command could we check, in post() that DebuggerServer._socketConnections is a number that we expect (either 0 or 1)
Thanks.
Created attachment 8407473
Added new group of listen commands and tests.

Added test for `listen off` and every execution of `listen on` by verifying with DebuggerServer._socketConnections number.

Also, added copyright statement, thought they would be required as in other test files.
Thanks Sunny, do you have access to try?
Yeah, lemme push it.

Thanks!
Pushed to try: https://tbpl.mozilla.org/?tree=Try&rev=5fac58bf0316
Tests fail with `leaked 2 window(s) until shutdown` message.
What went wrong?
(In reply to Sunny [:darkowlzz] from comment #19)
> Tests fail with `leaked 2 window(s) until shutdown` message.
> What went wrong?

I'm not sure. Slightly overloaded right now, but I'll take a look.
If you can, please base your patch on top of bug 942756 (landed now, but it will get backedout). It's a pretty big patch a rebasing it is hard.
Hi, Joe - Are you still working on this?
(In reply to Mike Hoye [:mhoye] from comment #22)
> Hi, Joe - Are you still working on this?

It's on my list and not forgotten if that's what you mean.
Created attachment 8608018
0001-Add-an-unlisten-command.patch

I rebased and old patch by Sunny. Maybe r? isn't the correct flag, what I really mean is "Panos, please could you get this landed?, I'm happy to review if needed"
Created attachment 8609324
Add an unlisten command for stopping any active debugger server instaces

This is an updated patch that works as advertised. It appears that you chose to go with listen/unlisten instead of listen on/off, so I have cleaned up a few references to the latter.

I also modififed the test to not follow the current style and took out some checks that aren't going to work now that listen.js uses a private instance of the DebuggerServer. That's not terribly important though, as I've verified that the test fails when the debugger server isn't properly started or stopped.
Created attachment 8609325
Interdiff

Here is what actually changed from what you gave me.
Green try: https://treeherder.mozilla.org/#/jobs?repo=try&revision=1dbdf2e7aaf1
Created attachment 8611415
Add an unlisten command for stopping any active debugger server instaces

Updated patch that fixes the test leak by rearranging the setPref/clearPref calls.
https://hg.mozilla.org/integration/fx-team/rev/a6325318d1c6
Added a note about unlisten in MDN:

https://developer.mozilla.org/en-US/docs/Tools/GCLI
https://hg.mozilla.org/mozilla-central/rev/a6325318d1c6


GCLI should have an 'unlisten' command



Add an unlisten command for stopping any active debugger server instaces (bug 976977). r=jwalker 
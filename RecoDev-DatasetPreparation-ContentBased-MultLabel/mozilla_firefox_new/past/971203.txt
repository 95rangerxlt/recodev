WARNING: Please do not use mouseenter/leave events in chrome. They are slower than mouseover/out!: '!nsContentUtils::IsChromeDoc(d)', file dom/events/nsEventListenerManager.cpp, line 352

WARNING: Please do not use mouseenter/leave events in chrome. They are slower than mouseover/out!: '!nsContentUtils::IsChromeDoc(d)', file dom/events/nsEventListenerManager.cpp, line 352
There are a few more places, so I'm changing the title accordingly. Patch coming up as soon as the test run finishes.
Created attachment 8453091
Replace mouseenter/leave events with mouseover/out in devtools for performance

This passes all tests locally. Try: https://tbpl.mozilla.org/?tree=Try&rev=c3537c38d139
Comment on attachment 8453091
Replace mouseenter/leave events with mouseover/out in devtools for performance

If Patrick could look at the inspector and tooltip parts, and Victor at the rest, that would be great.
Comment on attachment 8453091
Replace mouseenter/leave events with mouseover/out in devtools for performance

Review of attachment 8453091:
-----------------------------------------------------------------

::: browser/devtools/shadereditor/shadereditor.js
@@ +194,5 @@
>  
>      this.widget.addEventListener("select", this._onProgramSelect, false);
>      this.widget.addEventListener("check", this._onProgramCheck, false);
> +    this.widget.addEventListener("mouseover", this._onProgramMouseOver, true);
> +    this.widget.addEventListener("mouseout", this._onProgramMouseOut, true);

There's a lot more activity here as a result of this change. Like hovering the label, then the background of an item in the list would result to two highlight requests, where the previous behavior only accounted for one. Not a huge deal, but either add a debounce mechanism (using setNamedTimeout and friends (followup acceptable)), or keep the existing mouseenter/mouseleave events.
Created attachment 8453659
count-events.patch

(In reply to Victor Porof [:vporof][:vp] from comment #4)
> There's a lot more activity here as a result of this change. Like hovering
> the label, then the background of an item in the list would result to two
> highlight requests, where the previous behavior only accounted for one. Not
> a huge deal, but either add a debounce mechanism (using setNamedTimeout and
> friends (followup acceptable)), or keep the existing mouseenter/mouseleave
> events.

Unless I misunderstood your point, mouseover/out actually reduce the activity significantly: with this patch that dumps in each event handler call, I can see less than half the events I see with mouseenter/leave.
(In reply to Panos Astithas [:past] from comment #5)
> 
> Unless I misunderstood your point, mouseover/out actually reduce the
> activity significantly: with this patch that dumps in each event handler
> call, I can see less than half the events I see with mouseenter/leave.

Oh, fantastic then!
Comment on attachment 8453091
Replace mouseenter/leave events with mouseover/out in devtools for performance

Review of attachment 8453091:
-----------------------------------------------------------------

::: browser/devtools/markupview/markup-view.js
@@ +120,5 @@
>      // Show the box model on markup-view mousemove
>      this._onMouseMove = this._onMouseMove.bind(this);
>      this._elt.addEventListener("mousemove", this._onMouseMove, false);
> +    this._onMouseOut = this._onMouseOut.bind(this);
> +    this._elt.addEventListener("mouseout", this._onMouseOut, false);

Switching to mouseout here ends up sending way many more requests through the protocol than by using mouseleave.

We're using a mousemove event listener here to show the highlighter on the element that is currently being hovered over in the markup-view.
mouseleave was only used to hide the highlighter once the mouse left the whole markup-view container.
mouseout is fired anytime the mouse leaves the container even if it goes in one of its children. This means that now, we will request to hide the highlighter everytime the mouse moves to a new node (and eventually re-show it thanks to the existing mousemove event, but we doubled the traffic here).

Also, this means that if your mouse is over one the nodes and moves left or right, keeping it over the same node, the highlighter will flicker as it will be toggled everytime a new attribute or tag node is hovered.

So either we keep on using mouseleave (which is much simpler for this use case I think), or we need to check, in _onMouseOut, that the event target isn't a child of _hoveredNode.

::: browser/devtools/shared/widgets/Tooltip.js
@@ +374,3 @@
>  
>      baseNode.addEventListener("mousemove", this._onBaseNodeMouseMove, false);
> +    baseNode.addEventListener("mouseout", this._onBaseNodeMouseOut, false);

Using mouseout here ends up executing _onBaseNodeMouseOut way many more times than before since that event is fired every time the mouse hovers over a child of baseNode.
One place where this part of Tooltip.js is used is in the rule-view for instance. The whole view container element is baseNode and we want to execute _onBaseNodeMouseOut only when the mouse moves out of the element but we don't care if it moves over its children (we use mousemove for this).

Also, it's not the case today, but this could lead to bugs whereby the tooltip would be closed even if it's supposed to remain open, just because the mouse moved over an child element of the element we want to have the tooltip on.

If we really want to change this code to use mouseout here, we also need to early return from _onBaseNodeMouseOut if the event target is a child of baseNode.

It sounds to me like keeping mouseleave would be simpler, but I don't know how performance would compare.

::: browser/devtools/styleinspector/style-inspector-overlays.js
@@ +79,5 @@
>      }
>  
>      let el = this.view.element;
>      el.addEventListener("mousemove", this._onMouseMove, false);
> +    el.addEventListener("mouseout", this._onMouseOut, false);

Exact same comment as in markup-view and Tooltip since the same mousemove/mouseleave pattern is used here.
Simply changing to mouseout will end up sending more requests to via the protocol and will cause the css transform highlighter to flicker.
Created attachment 8453785
Replace mouseenter/leave events with mouseover/out in devtools for performance v2

OK, I have reverted the relevant changes that you mentioned.
https://hg.mozilla.org/integration/fx-team/rev/d30fe68fb1e3
https://hg.mozilla.org/mozilla-central/rev/d30fe68fb1e3


Devtools still use mouseenter/leave events



Replace mouseenter/leave events with mouseover/out in devtools for performance (bug 971203). r=vporof,pbrosset 
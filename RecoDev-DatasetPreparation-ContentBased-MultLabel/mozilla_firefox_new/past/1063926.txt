I got this with Fever Dream, but it could happen in other scenarios as well: toolbox.destroy() schedules a number of tasks in the |outstanding| array and waits for all of them to resolve before executing a few more steps. However, if one of the promises in that array is rejected, then the last two tasks will be skipped as the rejection is propagated to the console.error handler in the end of the chain. Among other things that means that the toolbox-destroyed event will not be fired and other entities waiting on that for performing their own cleanup tasks will be SOL.

This is a problem with Fever Dream, which is unable to close the external protocol connection in an orderly fashion, leaving the remote target in an unavailable state.

I got this with Fever Dream, but it could happen in other scenarios as well: toolbox.destroy() schedules a number of tasks in the |outstanding| array and waits for all of them to resolve before executing a few more steps. However, if one of the promises in that array is rejected, then the last two tasks will be skipped as the rejection is propagated to the console.error handler in the end of the chain. Among other things that means that the toolbox-destroyed event will not be fired and other entities waiting on that for performing their own cleanup tasks will be SOL.

This is a problem with Fever Dream, which is unable to close the external protocol connection in an orderly fashion, leaving the remote target in an unavailable state.
Created attachment 8485399
Always complete the toolbox teardown path, even in the face of failures along the way

Simply logging the errors along the teardown path is enough. There is not much that can be done at that stage anyway.
https://hg.mozilla.org/integration/fx-team/rev/f6d4b7254519
https://hg.mozilla.org/mozilla-central/rev/f6d4b7254519


Failures in the toolbox teardown path lead to the destroyed event never firing



Always complete the toolbox teardown path, even in the face of failures along the way (bug 1063926). r=paul 
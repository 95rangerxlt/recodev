STR:

1.) Open a Scratchpad window
2.) Open Browser Toolbox
3.) Start picking an element
4.) Try to pick something in the Scratchpad window

The picker doesn't like Scratchpad windows.

STR:

1.) Open a Scratchpad window
2.) Open Browser Toolbox
3.) Start picking an element
4.) Try to pick something in the Scratchpad window

The picker doesn't like Scratchpad windows.
Even outside the Scratchpad, there is no way to access any other windows from the Browser Toolbox.
That's also important for extension developers, who want to inspect and debug their extension's windows.

Sebastian
So the Browser Toolbox needs some way to select the current window. DOM Inspector already provides that via File > Inspect Chrome Document, though the UX is not the best one, as it's sometimes hard to identify the right window.

So, if possible, the UI for the window/chrome content selection should somehow indicate what will actually be selected, e.g. by bringing the window to the foreground and showing a border around its content.

Sebastian
*** Bug 1077787 has been marked as a duplicate of this bug. ***


*** This bug has been marked as a duplicate of bug 1059308 ***
Paul, are you sure this is a duplicate?  I did not think the iframe selector would give us access to entirely separate top-level browser windows, so this seems like very different work would be needed here.
(In reply to J. Ryan Stinnett [:jryans] from comment #6)
> Paul, are you sure this is a duplicate?  I did not think the iframe selector
> would give us access to entirely separate top-level browser windows, so this
> seems like very different work would be needed here.

tabActor lists subdocshells. The rootActor will list all the docshells. Then it should work out of the box, no?
(In reply to Paul Rouget [:paul] (slow to respond. Ping me on IRC) from comment #7)
> (In reply to J. Ryan Stinnett [:jryans] from comment #6)
> > Paul, are you sure this is a duplicate?  I did not think the iframe selector
> > would give us access to entirely separate top-level browser windows, so this
> > seems like very different work would be needed here.
> 
> tabActor lists subdocshells. The rootActor will list all the docshells. Then
> it should work out of the box, no?

Maybe, but the implementation of bug 1059308 is a bit unclear for now, because frame switching is only part of the tab actor, and the root actor is not a tab actor at all.

Let's keep this open and depend on bug 1059308 so it's not lost.  When bug 1059308 is done, we can check if this came for free and close then.
Does this also cover being able to inspect content windows?  I'm trying to figure out why this one button in about:support doesn't work for me ...
(In reply to Samuel Bronson from comment #9)
> Does this also cover being able to inspect content windows?  I'm trying to
> figure out why this one button in about:support doesn't work for me ...

The Browser Toolbox shouldn't have a problem inspecting about:support, but it'd be easier to just use the normal toolbox on that page.  Does this not work?
(In reply to Brian Grinstead [:bgrins] from comment #10)
> (In reply to Samuel Bronson from comment #9)
> > Does this also cover being able to inspect content windows?  I'm trying to
> > figure out why this one button in about:support doesn't work for me ...
> 
> The Browser Toolbox shouldn't have a problem inspecting about:support, but
> it'd be easier to just use the normal toolbox on that page.  Does this not
> work?

No scripts show in the web debugger for about:support. I imagine they're all chrome scripts and that's why they're not visible.
(In reply to :Gijs Kruitbosch from comment #11)
> (In reply to Brian Grinstead [:bgrins] from comment #10)
> > (In reply to Samuel Bronson from comment #9)
> > > Does this also cover being able to inspect content windows?  I'm trying to
> > > figure out why this one button in about:support doesn't work for me ...
> > 
> > The Browser Toolbox shouldn't have a problem inspecting about:support, but
> > it'd be easier to just use the normal toolbox on that page.  Does this not
> > work?
> 
> No scripts show in the web debugger for about:support. I imagine they're all
> chrome scripts and that's why they're not visible.

Nick, any ideas what's going on there?  Is there already a bug on file about this?
(In reply to Brian Grinstead [:bgrins] from comment #12)
> (In reply to :Gijs Kruitbosch from comment #11)
> > (In reply to Brian Grinstead [:bgrins] from comment #10)
> > > (In reply to Samuel Bronson from comment #9)
> > > > Does this also cover being able to inspect content windows?  I'm trying to
> > > > figure out why this one button in about:support doesn't work for me ...
> > > 
> > > The Browser Toolbox shouldn't have a problem inspecting about:support, but
> > > it'd be easier to just use the normal toolbox on that page.  Does this not
> > > work?
> > 
> > No scripts show in the web debugger for about:support. I imagine they're all
> > chrome scripts and that's why they're not visible.
> 
> Nick, any ideas what's going on there?  Is there already a bug on file about
> this?

I believe this is bug 1085446.
(In reply to J. Ryan Stinnett [:jryans] from comment #8)
> (In reply to Paul Rouget [:paul] (slow to respond. Ping me on IRC) from
> comment #7)
> > (In reply to J. Ryan Stinnett [:jryans] from comment #6)
> > > Paul, are you sure this is a duplicate?  I did not think the iframe selector
> > > would give us access to entirely separate top-level browser windows, so this
> > > seems like very different work would be needed here.
> > 
> > tabActor lists subdocshells. The rootActor will list all the docshells. Then
> > it should work out of the box, no?
> 
> Maybe, but the implementation of bug 1059308 is a bit unclear for now,
> because frame switching is only part of the tab actor, and the root actor is
> not a tab actor at all.
> 
> Let's keep this open and depend on bug 1059308 so it's not lost.  When bug
> 1059308 is done, we can check if this came for free and close then.

Bug 1059308 is done. Is there more to do here?
Nope, we got this after all with bug 1059308.


Browser toolbox can't inspect other windows


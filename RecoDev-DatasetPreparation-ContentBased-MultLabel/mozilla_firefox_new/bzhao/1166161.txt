After landing of bug 1096800, many Chinese users on Windows XP (w/o Microsoft YaHei) ask why the default font becomes an empty string in their preference window.

This was introduced in bug 301311, to fix the display of the default font option when the font as defined in font.name.{family}.{lang} is not available.

I think it's better to take the logic in fonts.{xul,js} where the first available font defined in font.name-list.{family}.{lang} is displayed.

I'll attach a patch soon.

After landing of bug 1096800, many Chinese users on Windows XP (w/o Microsoft YaHei) ask why the default font becomes an empty string in their preference window.

This was introduced in bug 301311, to fix the display of the default font option when the font as defined in font.name.{family}.{lang} is not available.

I think it's better to take the logic in fonts.{xul,js} where the first available font defined in font.name-list.{family}.{lang} is displayed.

I'll attach a patch soon.
Created attachment 8607367
MozReview Request: bz://1166161/hectorz

/r/8995 - Bug 1166161 - Display available font from font.name-list.{family}.{lang} as fallback default font, instead of empty string.

Pull down this commit:

hg pull -r c17bc1c57e349e3437cf8bb9090682059a9b7d1a https://reviewboard-hg.mozilla.org/gecko/
Comment on attachment 8607367
MozReview Request: bz://1166161/hectorz

/r/8995 - Bug 1166161 - Display available font from font.name-list.{family}.{lang} as fallback default font, instead of empty string.

Pull down this commit:

hg pull -r c17bc1c57e349e3437cf8bb9090682059a9b7d1a https://reviewboard-hg.mozilla.org/gecko/
Comment on attachment 8607367
MozReview Request: bz://1166161/hectorz

https://reviewboard.mozilla.org/r/8993/#review7635

There are too many issues to give you r+ on this. Please clarify the function you're moving, why you had to change it, and if/how the changes still work with the fonts dialog as well.

::: toolkit/mozapps/preferences/fontbuilder.js:90
(Diff revision 1)
> +  readFontSelection: function (aElement)

Nit: readFontSelection(aElement)


But also, this function is not the same anymore. I'm not convinced the changes you made really work with the fonts dialog itself, esp. !preference.value is very different from !preference.hasUserValue, and the seemingly-previously-unnecessary enumerator.getStandardFamilyName call - and there are no comments either on the bug or in the code to explain what the code is doing.

::: browser/components/preferences/content.js:11
(Diff revision 1)
>      var menulist = document.getElementById("defaultFont");

menulist is unused now, so that line should go, too.

::: browser/components/preferences/in-content/content.js:16
(Diff revision 1)
>      var menulist = document.getElementById("defaultFont");

And you should remove it here, too.

::: toolkit/mozapps/preferences/fontbuilder.js:90
(Diff revision 1)
> +  readFontSelection: function (aElement)



::: browser/components/preferences/in-content/content.xul:101
(Diff revision 1)
> +                    onsyncfrompreference="return FontBuilder.readFontSelection(document.getElementById('defaultFont'));"/>

Ugh. We still haven't fixed onsyncfrompreference to not be inline. :-\

Is using onsyncfrompreference really necessary here? The previous code only did something onload, presumably that should continue being enough, no? These syncing functions cause serious performance issues when using the menulist on windows and scrolling through the list with arrows (bug 1008169).

Also, event.target or "this" would work here to reference the element, there's no need to get the same element again to pass it to this function.
https://reviewboard.mozilla.org/r/8993/#review7729

> menulist is unused now, so that line should go, too.

Still needed, after I switch back from onsyncfrompreference to onload.

> Ugh. We still haven't fixed onsyncfrompreference to not be inline. :-\
> 
> Is using onsyncfrompreference really necessary here? The previous code only did something onload, presumably that should continue being enough, no? These syncing functions cause serious performance issues when using the menulist on windows and scrolling through the list with arrows (bug 1008169).
> 
> Also, event.target or "this" would work here to reference the element, there's no need to get the same element again to pass it to this function.

I'm not aware of the performance issues of onsyncfrompreference, so I just copied from fonts.xul.

I switched back to onload, and replaced "document.getElementById" with "this" in fonts.xul.

> Nit: readFontSelection(aElement)
> 
> 
> But also, this function is not the same anymore. I'm not convinced the changes you made really work with the fonts dialog itself, esp. !preference.value is very different from !preference.hasUserValue, and the seemingly-previously-unnecessary enumerator.getStandardFamilyName call - and there are no comments either on the bug or in the code to explain what the code is doing.

Sorry for not including any explanations.

preference.hasUserValue => preference.value:
I believe this is a bug in the original implementation. The font.name-list.{family}.{lang} are always consulted as fallback by gfx codes, not only when it has an user value. For a zh-CN user on Windows XP, as Microsoft YaHei is not available, SimHei will be used, not the first sans-serif font returned by the enumerator (System, in our test). The hasUserValue check was introduced in [bug 274712](https://github.com/mozilla/gecko-dev/commit/b622819900d5), I think it was intened for early return, maybe?

enumerator.getStandardFamilyName:
This is another bug of the original implementation. The font name in the menulist (as returned by the enumerator) is the canonical name, but the names listed in font.name{-list}.{family}.{lang} are not necessarily so. For some CJK fonts, their ASCII-only alias is used (for performance reason? see [bug 652754](https://bugzil.la/652754)). For the zh-CN user on Windows XP where SimHei will be used, you won't find SimHei in the menulist, because its canonical name is "黑体". This is only needed for font.name-list.{family}.{lang} becaused the font.name.{family}.{lang} ones are automatically converted, see [preferences.xml](https://hg.mozilla.org/mozilla-central/file/ac277e615f8f/toolkit/content/widgets/preferences.xml#l343)
Comment on attachment 8607367
MozReview Request: bz://1166161/hectorz

/r/8995 - Bug 1166161 - Display available font from font.name-list.{family}.{lang} as fallback default font, instead of empty string.

Pull down this commit:

hg pull -r 0e647b12975cee255df1901f4fbfee89bea50247 https://reviewboard-hg.mozilla.org/gecko/
Comment on attachment 8607367
MozReview Request: bz://1166161/hectorz

https://reviewboard.mozilla.org/r/8993/#review7739

Thanks for the explanations! I'm happier about this, but there's a bundle of nits, so one more round. Have you try-pushed this? If not, doing that for the next iteration of the patch would be a good idea.

::: toolkit/mozapps/preferences/fontbuilder.js:96
(Diff revision 2)
> +    var preference = document.getElementById(aElement.getAttribute("preference"));

Nit: use let instead of var throughout this function.

::: toolkit/mozapps/preferences/fontbuilder.js:101
(Diff revision 2)
> +      if (fontItems.length > 0)

Just if (fontItems.length) is good enough here.

::: toolkit/mozapps/preferences/fontbuilder.js:119
(Diff revision 2)
> +    if (fontItems.length)
> +      return fontItems[0].getAttribute("value");

And then this block should go, because if it was a non-0-length array we would have returned long before now.

::: toolkit/mozapps/preferences/fontbuilder.js:116
(Diff revision 2)
> +      if (fontItems.length)
> +        break;

This should just return immediately instead of breaking and relying on the return there.

::: toolkit/mozapps/preferences/fontbuilder.js:107
(Diff revision 2)
> +    preference = document.getElementById(fontNameList);

Please use a new variable instead of reusing the "preference" variable.

The current code which nullchecks this second value of preference but not the initial set at the start of the function (presumably because it assumes nobody will call this on an element without a preference attribute whose pref element will exist) is confusing.

Maybe something like "prefFontNameList" or whatever.

::: toolkit/mozapps/preferences/fontbuilder.js:102
(Diff revision 2)
> +        return undefined;

You're assigning the rv to the value property of an element; surely that means this should be returning preference.value and not just undefined?
https://reviewboard.mozilla.org/r/8993/#review7809

> You're assigning the rv to the value property of an element; surely that means this should be returning preference.value and not just undefined?

I think undefined as return value has special meaning in onsyncfrompreference, the displayed value in ui will be preference.valueFromPreference or preference.value depending on preference.instantApply.

This function will never return undefined if we guard it with |menulist.selectedIndex == -1|. If selectedIndex is -1, that means the font as defined in font.name.{family}.{lang} is not available, and preference.value will be null. Maybe I should add a comment here, but I'm not quite sure how to phrase it.
Comment on attachment 8607367
MozReview Request: bz://1166161/hectorz

/r/8995 - Bug 1166161 - Display available font from font.name-list.{family}.{lang} as fallback default font, instead of empty string.

Pull down this commit:

hg pull -r 896045fb4892c5b770c261d9d982d146c020ed9a https://reviewboard-hg.mozilla.org/gecko/
(In reply to :Gijs Kruitbosch from comment #6)
> 
> Thanks for the explanations! I'm happier about this, but there's a bundle of
> nits, so one more round. Have you try-pushed this? If not, doing that for
> the next iteration of the patch would be a good idea.

https://treeherder.mozilla.org/#/jobs?repo=try&revision=20f5d5a2b09c
Comment on attachment 8607367
MozReview Request: bz://1166161/hectorz

https://reviewboard.mozilla.org/r/8993/#review7839

Ship It!
(In reply to Hector Zhao [:hectorz] from comment #9)
> 
> https://treeherder.mozilla.org/#/jobs?repo=try&revision=20f5d5a2b09c
https://hg.mozilla.org/integration/fx-team/rev/fdbe30ea4fdf
https://hg.mozilla.org/mozilla-central/rev/fdbe30ea4fdf
Comment on attachment 8607367
MozReview Request: bz://1166161/hectorz
Created attachment 8620321
MozReview Request: Bug 1166161 - Display available font from font.name-list.{family}.{lang} as fallback default font, instead of empty string.


Display available font from font.name-list.{family}.{lang} as fallback default font, instead of empty string.



Bug 1166161 - Display available font from font.name-list.{family}.{lang} as fallback default font, instead of empty string. 
> ::: toolkit/devtools/server/HeapSnapshot.h
> @@ +75,5 @@
> > +
> > +  // The id of the root node for this deserialized heap graph.
> > +  NodeId rootId;
> > +
> > +  // The set of nodes in this deserialized heap graph, keyed by id.
> 
> Suggestion for the future: I think this could save a lot of memory by
> holding the DeserializedNodes directly:
> 
> js::HashMap<NodeId, DeserializedNode>
> 
> because the hash table is frozen once 'init' is over, so ubi::Nodes pointing
> directly into the table won't be invalidated by table resizing.

> ::: toolkit/devtools/server/HeapSnapshot.h
> @@ +75,5 @@
> > +
> > +  // The id of the root node for this deserialized heap graph.
> > +  NodeId rootId;
> > +
> > +  // The set of nodes in this deserialized heap graph, keyed by id.
> 
> Suggestion for the future: I think this could save a lot of memory by
> holding the DeserializedNodes directly:
> 
> js::HashMap<NodeId, DeserializedNode>
> 
> because the hash table is frozen once 'init' is over, so ubi::Nodes pointing
> directly into the table won't be invalidated by table resizing.
Created attachment 8615464
HeapSnapshot::NodeMap store DeserializedNodes directly, rather than UniquePtrs
Comment on attachment 8615464
HeapSnapshot::NodeMap store DeserializedNodes directly, rather than UniquePtrs

Review of attachment 8615464:
-----------------------------------------------------------------

This looks good, but I'd like to see it again with the suggestion below implemented.

::: toolkit/devtools/server/DeserializedNode.cpp
@@ +76,5 @@
> +  return *this;
> +}
> +
> +bool
> +DeserializedNode::init(const protobuf::Node& node, HeapSnapshot& owner)

Would it be possible to keep the DeserializedNode constructor that populates all its members with real values, and then have HeapSnapshot::saveNode do all the protobuf message wrangling, and just call that constructor? saveNode is already fallible.
Created attachment 8615722
Part 2: Make the DeserializedNode cosntructor infallible
https://treeherder.mozilla.org/#/jobs?repo=try&revision=5f2fdcefa7db
Note the ordering of my patches (you can see in the try push):

Part 1 of this bug -> patch from bug 1148642 -> part 2 from this bug

I didn't want to have to rebase my other patches for this change.
Comment on attachment 8615722
Part 2: Make the DeserializedNode cosntructor infallible

Review of attachment 8615722:
-----------------------------------------------------------------

Yeah, this is much nicer!

::: toolkit/devtools/server/HeapSnapshot.cpp
@@ +128,5 @@
> +    edges.infallibleAppend(Move(edge));
> +  }
> +
> +  DeserializedNode dn(id, typeName, size, Move(edges), *this);
> +  return nodes.putNew(id, Move(dn));

Note that if you write the constructor directly as the argument to putNew, there's no need for Move.
https://hg.mozilla.org/integration/mozilla-inbound/rev/858d09af88bc
https://hg.mozilla.org/integration/mozilla-inbound/rev/c3840ca0384f
https://hg.mozilla.org/mozilla-central/rev/858d09af88bc
https://hg.mozilla.org/mozilla-central/rev/c3840ca0384f


Consider making HeapSnapshot::NodeMap store DeserializedNodes directly, rather than UniquePtrs



Bug 1147684 - HeapSnapshot::NodeMap store DeserializedNodes directly, rather than UniquePtrs; r=jimb 

Bug 1147684 - Part 2: Make the DeserializedNode cosntructor infallible; r=jimb 
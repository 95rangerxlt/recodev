User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.13pre) Gecko/20071126 Ubuntu/dapper-security Firefox/1.5.0.13pre
Build Identifier: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.13pre) Gecko/20071126 Ubuntu/dapper-security Firefox/1.5.0.13pre


To give an example, initially the following method works fine, when the program starts up, and it does replace the URL in the frame, where the old URL was "loading.htm" and the new URL is "getuser.htm":

	parent.contentFrame.document.location.replace(getuserfile);

This command works, therefore, the method itself functions in Firefox.

However, this method does not always function. This and other methods worked consistently in previous versions of Firefox, and even in the IE browser. They still work in the IE browser, but not in recent Firefox versions, those released in updates during the last couple of months. As far as I can tell, when the URLs on two frames are accessed in sequential commands, then something blows up. For example, these are two sequential commands in a function which used to work fine, but now does not work in recent Firefox versions (neither in Linux nor Windows OS):

	parent.navscrn.document.location.reload();
	parent.contentFrame.document.location.replace(LessonURL);

If I look at the variable "LessonURL" immediately before the "location.replace()" method is called, it is correct. However, the "location.href" is exactly the same for the frame both before and after these commands are executed. The "location.reload()" method is executed, and so is the "location.replace()" method, but the URL is not changed to the new one.

I have also tried the following alternative methods, using both variables and literal strings:
	parent.contentFrame.document.location.href = LessonURL;
	parent.contentFrame.document.location.assign(LessonURL);
	parent.contentFrame.window.location.replace(LessonURL);
	parent.contentFrame.window.location.href = LessonURL;
	parent.contentFrame.window.location.assign(LessonURL);
	parent.contentFrame.document.location.assign("file:///home/greg/Desktop/Greek%20Web%20Site/newfile.htm");
	parent.contentFrame.document.location.assign("file:///home/greg/Desktop/Greek Web Site/newfile.htm");

None of these methods work. I also tried the following commands to set the LessonURL to include the protocol:
	var tempLoc = parent.contentFrame.document.location.href;
	// and also tried: var tempLoc = unescape(parent.contentFrame.document.location.href);
	tempLoc = tempLoc.substring(0,tempLoc.lastIndexOf("/")+1) + LessonURL;
	parent.contentFrame.document.location.assign(tempLoc);

I have tried almost every combination I can think of at this time. This is likely a bug reported elsewhere by now, but I cannot find it in your database. So I am reporting it again.

Thanks. Greg.




Reproducible: Always

Steps to Reproduce:
1
2.
3.

User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.13pre) Gecko/20071126 Ubuntu/dapper-security Firefox/1.5.0.13pre
Build Identifier: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.13pre) Gecko/20071126 Ubuntu/dapper-security Firefox/1.5.0.13pre


To give an example, initially the following method works fine, when the program starts up, and it does replace the URL in the frame, where the old URL was "loading.htm" and the new URL is "getuser.htm":

	parent.contentFrame.document.location.replace(getuserfile);

This command works, therefore, the method itself functions in Firefox.

However, this method does not always function. This and other methods worked consistently in previous versions of Firefox, and even in the IE browser. They still work in the IE browser, but not in recent Firefox versions, those released in updates during the last couple of months. As far as I can tell, when the URLs on two frames are accessed in sequential commands, then something blows up. For example, these are two sequential commands in a function which used to work fine, but now does not work in recent Firefox versions (neither in Linux nor Windows OS):

	parent.navscrn.document.location.reload();
	parent.contentFrame.document.location.replace(LessonURL);

If I look at the variable "LessonURL" immediately before the "location.replace()" method is called, it is correct. However, the "location.href" is exactly the same for the frame both before and after these commands are executed. The "location.reload()" method is executed, and so is the "location.replace()" method, but the URL is not changed to the new one.

I have also tried the following alternative methods, using both variables and literal strings:
	parent.contentFrame.document.location.href = LessonURL;
	parent.contentFrame.document.location.assign(LessonURL);
	parent.contentFrame.window.location.replace(LessonURL);
	parent.contentFrame.window.location.href = LessonURL;
	parent.contentFrame.window.location.assign(LessonURL);
	parent.contentFrame.document.location.assign("file:///home/greg/Desktop/Greek%20Web%20Site/newfile.htm");
	parent.contentFrame.document.location.assign("file:///home/greg/Desktop/Greek Web Site/newfile.htm");

None of these methods work. I also tried the following commands to set the LessonURL to include the protocol:
	var tempLoc = parent.contentFrame.document.location.href;
	// and also tried: var tempLoc = unescape(parent.contentFrame.document.location.href);
	tempLoc = tempLoc.substring(0,tempLoc.lastIndexOf("/")+1) + LessonURL;
	parent.contentFrame.document.location.assign(tempLoc);

I have tried almost every combination I can think of at this time. This is likely a bug reported elsewhere by now, but I cannot find it in your database. So I am reporting it again.

Thanks. Greg.




Reproducible: Always

Steps to Reproduce:
1
2.
3.
*** Bug 401372 has been marked as a duplicate of this bug. ***
This problem is still disabling the system from loading the last lesson the users were accessing. Perhaps there is something simple I am missing. Is anyone out there able to give me a suggestion. The problem has been going on since last fall.
I set a flag variable when a user record was chosen from the content frame. Then the program called a function in the hidden frame, which did not work and returned the original content frame. But in the content frame, it now always looks for that flag, then calls for the replacement of itself if that flag is set.

In other words, I finally got it working. I do not have much time to spend on these things, but I knew there was a simple way around it.

Thanks. I love Firefox. It is a very good browser.

Greg.


In a frame of a multi-frame window, JavaScript methods "location.replace()" or ".assign()" or ".href =" do not replace the URL in the frame, if these methods are called after a "location.reload()" command has been executed.


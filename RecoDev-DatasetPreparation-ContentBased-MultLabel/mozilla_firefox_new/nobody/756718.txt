It seems suboptimal to allow the providers to specify the "features" for the service window.  For example, one provider specifies:

"resizable=yes,scrollbars=yes,width=400,height=300"

However, serviceWindow.xul also specifies:
        width="300"
        height="300"
        screenX="20"
        screenY="20"
        persist="screenX screenY width height"

The end result is that on Windows, there seems an inconsistency with the size when the window is created - there may be a transparent area at the bottom below the status bar area.  As soon as you resize the window, this area vanishes.  I think this is due to the discrepancy between the sizes.

If the provider changes to not provide width and height, things work correctly.  However, this then leaves just "resizable=yes,scrollbars=yes".  If you remove these, then the layout again gets screwed up.  There are almost certainly other "features" that could screw us.

So we should consider not allowing the provider to specify any features directly and have the service window add whatever features are necessary for correct operation.  If we do decide that some things should be customizable, we should allow them to be specified generically in "options" - eg, width and height, for example, which may or may not translate into feature strings.

It seems suboptimal to allow the providers to specify the "features" for the service window.  For example, one provider specifies:

"resizable=yes,scrollbars=yes,width=400,height=300"

However, serviceWindow.xul also specifies:
        width="300"
        height="300"
        screenX="20"
        screenY="20"
        persist="screenX screenY width height"

The end result is that on Windows, there seems an inconsistency with the size when the window is created - there may be a transparent area at the bottom below the status bar area.  As soon as you resize the window, this area vanishes.  I think this is due to the discrepancy between the sizes.

If the provider changes to not provide width and height, things work correctly.  However, this then leaves just "resizable=yes,scrollbars=yes".  If you remove these, then the layout again gets screwed up.  There are almost certainly other "features" that could screw us.

So we should consider not allowing the provider to specify any features directly and have the service window add whatever features are necessary for correct operation.  If we do decide that some things should be customizable, we should allow them to be specified generically in "options" - eg, width and height, for example, which may or may not translate into feature strings.
*** Bug 757169 has been marked as a duplicate of this bug. ***
removing the ability to set these options only fixes part of the aero styling problem.  There are still layout issues (margin between app button and top of browser) that get fixed when resizing the window.  Rather than remove that ability, we should first understand the aero styling issue.  Then we should probably have some whitelist of options we'd allow if that were necessary, however since the DOM window.open function allows these options, i see no reason to limit our window.

For now, the real issue is getting aero styling working right.
(In reply to Shane Caraveo (:mixedpuppy) from comment #2)
> There are still layout issues (margin between app button
> and top of browser) that get fixed when resizing the window.

Are you sure those problems aren't resolved if the provider doesn't supply width and height in the features string?

> For now, the real issue is getting aero styling working right.

In my testing, the styling did work correctly without width and height specified by the provider.  Sadly I can't repro this now.
Created attachment 629945
with width and height defined
Created attachment 629946
without width and height

note that there is no space between the app menu and close button and the content
Created attachment 629947
correct appearance
(In reply to Mark Hammond (:markh) from comment #3)
> (In reply to Shane Caraveo (:mixedpuppy) from comment #2)
> > There are still layout issues (margin between app button
> > and top of browser) that get fixed when resizing the window.
> 
> Are you sure those problems aren't resolved if the provider doesn't supply
> width and height in the features string?
> 
> > For now, the real issue is getting aero styling working right.
> 
> In my testing, the styling did work correctly without width and height
> specified by the provider.  Sadly I can't repro this now.

I've attached the images showing the difference between setting width and height or not.  They both initially display incorrectly and later reset to the 3rd image that shows what it should look like.

The problem is in something that we are not doing in css on our window, but I am not clear exactly what that is.  I seem to see an offset of 30px in some of the aero css that might be related to our issue, but this isn't terribly easy to track down.
Fixed in develop a6246f3


fix aero styling in service window


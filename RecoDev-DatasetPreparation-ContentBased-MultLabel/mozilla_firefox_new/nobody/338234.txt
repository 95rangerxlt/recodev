User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.8) Gecko/20050607 Firefox/1.0.4
Build Identifier: Mozilla/5.0 (X11; U; SunOS i86pc; en-US; rv:1.8.0.2) Gecko/20060502 Firefox/1.5.0.2

User accesses firefox preferences dialog with orca, the name of current preference tab can not be reported by orca. It will only issue 'no name' instead of its real name.

Reproducible: Always

Steps to Reproduce:
1. Launch orca and firefox.
2. Open preference dialog.
3. Press Tab to move focus between different items till the focus is moved onto top tab again.

Actual Results:  
The tab name can not be issued to orca, it only set out 'None' instead of its real name, say 'General' or others. Therefore, orca reports nothing when user tabbed focus onto this tab again.

Expected Results:  
The tab name should be reported to user by orca.

This bug can be found on vermillion_40/snv_39 with Mozilla/5.0 (X11; U; SunOS i86pc; en-US; rv:1.8.0.2) Gecko/20060502 Firefox/1.5.0.2.

It could be reproduce when user tab the focus onto this tab again. It can not be seen if user puts focus onto tab and press Left/Right arrow to move focus between different tabs.

User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.8) Gecko/20050607 Firefox/1.0.4
Build Identifier: Mozilla/5.0 (X11; U; SunOS i86pc; en-US; rv:1.8.0.2) Gecko/20060502 Firefox/1.5.0.2

User accesses firefox preferences dialog with orca, the name of current preference tab can not be reported by orca. It will only issue 'no name' instead of its real name.

Reproducible: Always

Steps to Reproduce:
1. Launch orca and firefox.
2. Open preference dialog.
3. Press Tab to move focus between different items till the focus is moved onto top tab again.

Actual Results:  
The tab name can not be issued to orca, it only set out 'None' instead of its real name, say 'General' or others. Therefore, orca reports nothing when user tabbed focus onto this tab again.

Expected Results:  
The tab name should be reported to user by orca.

This bug can be found on vermillion_40/snv_39 with Mozilla/5.0 (X11; U; SunOS i86pc; en-US; rv:1.8.0.2) Gecko/20060502 Firefox/1.5.0.2.

It could be reproduce when user tab the focus onto this tab again. It can not be seen if user puts focus onto tab and press Left/Right arrow to move focus between different tabs.
Created attachment 222363
Test case that illustrates the problem

This shows that focus events are emitted for the item that was highlighted versus the item that is highlighted.
*** Bug 338233 has been marked as a duplicate of this bug. ***
issue in comment #1 is a bug triggered by patch of Bug 320369

See nsRootAccessible.cpp, we fire focus event with state change event.

829   else if (eventType.LowerCaseEqualsLiteral("checkboxstatechange") || // it's a XUL <checkbox>
830            eventType.LowerCaseEqualsLiteral("radiostatechange")) { // it's a XUL <radio>
831     accessible->GetFinalState(&stateData.state);
832     stateData.enable = (stateData.state & STATE_CHECKED) != 0;
833     stateData.state = STATE_CHECKED;
834     privAcc->FireToolkitEvent(nsIAccessibleEvent::EVENT_STATE_CHANGE, accessible, &stateData);
835     if (eventType.LowerCaseEqualsLiteral("radiostatechange")) {
836       FireAccessibleFocusEvent(accessible, targetNode, aEvent);
837     }
838   }

To do list

1) Line 832, we should also test STATE_SELECTED, because buttons in PrefPane are listitems in A11y.
2) We should only fire focus event for "checked/selected" radiobutton/listitem.
3) When PrefPane or radiogroup gets focus, we need to fire focus event to the checked/seleted radiobutton/listitem.
Created attachment 222990
address the points in comment #3

I'm not sure whether we should fire focus event for both of radiogroup and checked radio, or just fire focus event for checked radio, when radiogroup gets focus.
Comment on attachment 222990
address the points in comment #3

Just fire it for the radio button (hopefully that's what we did before). Right?

I'm going on vacation so please have Ginn Chen review.
in the past, when radiogroup gets focus, we only fire focus event for radiogroup, which caused this bug. to fix this bug, we need fire focus event for the checked radio when radiogroup gets focus, but I'm not sure should we still fire focus event for radiogroup. I don't know is there any at-tools depend on the focus event for radiogroup.
Comment on attachment 222990
address the points in comment #3

correct code style is, && should be at the end of the previous line.
Really? This is a regression from Firefox 1.5.
Comment on attachment 222990
address the points in comment #3

Sorry, I have to minus this. Let's not fire a focus event for the group.

Also, I don't think the comment about prefpane's is necessary because we need this change for all radio buttons, not just those -- correct? We wouldn't want to fire focus for unselected radio buttons.
Created attachment 223009
patch v2

address ginn's comment.
only fire focus event for checked radio instead of radio group, like other gtk applications do.
(In reply to comment #9)
> (From update of attachment 222990 [edit])
> Sorry, I have to minus this. Let's not fire a focus event for the group.
Agree.

> Also, I don't think the comment about prefpane's is necessary because we need
> this change for all radio buttons, not just those -- correct? We wouldn't want
> to fire focus for unselected radio buttons.
Radio/Checkbox button uses STATE_CHECKED in states, PrefPane button uses STATE_SELECTED in states.   
Comment on attachment 223009
patch v2

We need a similar patch for MSAA
Evan & Ginn, you can ask Mark Pilgrim to test any patch you create for Windows. Please fix it soon for Windows since it's a regression blocking the Thunderbird tester.
Created attachment 223142
patch v3 (also fix msaa)
verified on Windows, works fine with both XUL radio, HTML radio and prefPane.

I don't understand
750   else if (eventType.LowerCaseEqualsLiteral("radiostatechange") ) {
751     // first the XUL radio buttons
752     if (targetNode &&
753         NS_SUCCEEDED(mAccService->GetAccessibleInShell(targetNode, eventShell,
754                                                        getter_AddRefs(accessible)))) {

For radiostatechange event, targetNode and accessible are not changed after
598   nsCOMPtr<nsIAccessible> accessible;
599   if (NS_FAILED(mAccService->GetAccessibleInShell(targetNode, eventShell,
600                                                   getter_AddRefs(accessible))))
601     return NS_OK;
602   

So it is always true for
752     if (targetNode &&
753         NS_SUCCEEDED(mAccService->GetAccessibleInShell(targetNode, eventShell,
754                                                        getter_AddRefs(accessible)))) {

I don't know why it is supposed to tell apart XUL radio and HTML radio.
So I just removed it.

*** Bug 338141 has been marked as a duplicate of this bug. ***
Does this patch also fix incorrect focus events in the View->Character Encoding->Customize List dialog and when the address bar gets focus? The same behavior is evident in those places also on Linux (i.e. some unnamed panel gets focus).
Bug #338141 marked dupe reports other cases where focus is incorrect.
(In reply to comment #18)
> Bug #338141 marked dupe reports other cases where focus is incorrect.
> 

I can't reproduce the Customize Character Encoding menu issue as Bug #338141 described, with or without this patch.
But I found another focus issue in "Customize Character Encoding" dialog, switching between 2 listboxes, unfocused listitem reports focus. It's not a regression, can be reproduced with 1.5.0.3.
I prefer to file another bug for it.

I think the listbox issue might be in our tree code -- I've seen the same issue in Thunderbird message lists.
> I can't reproduce the Customize Character Encoding menu issue as Bug #338141
> described, with or without this patch.

Sorry, I wasn't clear. The focus problem wasn't on the menu item. It was in the Character Encoding dialog itself after *activating* the menu item. 

When the dialog first appears, the left-hand list has the focus. We get a focus event for the list, but immediately afterward get a focus event for an unnamed panel:

window:deactivate(0, 0, Bon Echo)[Bon Echo, frame]
window:activate(0, 0, Customize Character Encoding)[Customize
Character Encoding, frame]
focus(0, 0, None)[Available Character Encodings:, list]
focus(0, 0, None)[Arabic (IBM-864), list item]
focus(0, 0, None)[Available Character Encodings:, list]
focus(0, 0, None)[None, panel]
(In reply to comment #21)
I still can't reproduce it either on Windows with AccEvent Watcher, or on Linux with at-poke.


(In reply to comment #22)
> I still can't reproduce it either on Windows with AccEvent Watcher, or on Linux with at-poke.

Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1a2) Gecko/20060525 BonEcho/2.0a2

at-poke shows the following:

window event 'window:deactivate' (0) (0) on A|co:frame:Bon Echo: with title 'Bon Echo'
window event 'window:activate' (0) (0) on A|co:frame:Customize Character Encoding: with title 'Customize Character Encoding'
generic event 'focus:' A|co|se:list:Available Character Encodings::(0) (0)
generic event 'focus:' A|co|ac:list item:Arabic (IBM-864):(0) (0)
generic event 'focus:' A|co|se:list:Available Character Encodings::(0) (0)
generic event 'focus:' A|co:panel::(0) (0)

The last focus event is incorrect.
I can't reproduce it either.

when I tried reproducing it, I found some other bugs. see bug 339191 and bug 339210.
> I can't reproduce it either.
> 
> when I tried reproducing it, I found some other bugs. see bug 339191 and bug
> 339210.

What build are you using? The report I just posted was with the 1.8 branch nightly from 2006-05-25 for BonEcho/2.0a2.
(In reply to comment #25)
> What build are you using? The report I just posted was with the 1.8 branch
> nightly from 2006-05-25 for BonEcho/2.0a2.
> 
I'm using trunk build applied with the patch for this bug.
my result for Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.1a2) Gecko/20060525 BonEcho/2.0a2

generic event 'focus:' A|co|ac:menu:More Encodings:(0) (0)
generic event 'focus:' A|co|ac:menu item:Customize List...:(0) (0)
generic event 'focus:' A|co|se:list:Available Character Encodings::(0) (0)
generic event 'focus:' A|co|ac:list item:Arabic (IBM-864):(0) (0)
generic event 'focus:' A|co|se:list:Available Character Encodings::(0) (0)

I didn't see focus event for panel.

(In reply to comment #27)
> I didn't see focus event for panel.

I have no idea what's going on then. Just reporting what I see.
I found the difference. I have the GTK_MODULES=gail:atk-bridge environment variable set globally on my machine to enable accessibility for legacy gtk apps. With this environment variable set, I get the focus event on the blank panel in FF 2 and 3. If I unset this var before running Firefox, I never see focus on the blank panel.

I'm not sure why having GTK_MODULES set changes the event behavior seen in FF. Is this going to be a problem for screen reader users who have the flag set globally?
(In reply to comment #29)
I think it's caused by GTK_MODULES=:gail, since we strips atk-bridge when firefox starts.
I'm not sure we should do the same thing to gail.



Bug 339554 for blank panel focus-event issue.
Let's discuss it there.
Checking in nsRootAccessible.cpp;
/cvsroot/mozilla/accessible/src/base/nsRootAccessible.cpp,v  <--  nsRootAccessible.cpp
new revision: 1.150; previous revision: 1.149
done



Name of preference tab can not be reported by screen readers

access, fixed1.8.1, regression
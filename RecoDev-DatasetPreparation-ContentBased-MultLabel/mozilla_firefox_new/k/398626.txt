Created attachment 283629
patch v1: fixes flubs

Sometimes, after you select either the "always ask" or "save to disk" action, for a content type and then unselect the type entry, the entry displays the wrong action in the Applications column.

There are two situations in which this happens:

1. When a type handled by a plugin has no user configuration, and you set the handler to something other than the plugin, the code incorrectly fails to flag the type as now having user configuration, so the type continues to appear to be set to the "use plugin" action, even though the action stored in the user configuration is something else.

The code should flag the type as having user configuration.


2. When a type is set to the "save file" action, the code incorrectly thinks the type isn't set to any preferred action (because the enum for the "save file" action is the number zero, and the test for the presence of a preferred action simply tests truth, not definition), so it sets the action to either "use helper app" (if the type has a preferred application handler) or "use default".

The code should distinguish between the "save file" action and no action.

Here's a patch that fixes these two problems.  Requesting blocking-firefox3 for these funky functionality flubs.

Created attachment 283629
patch v1: fixes flubs

Sometimes, after you select either the "always ask" or "save to disk" action, for a content type and then unselect the type entry, the entry displays the wrong action in the Applications column.

There are two situations in which this happens:

1. When a type handled by a plugin has no user configuration, and you set the handler to something other than the plugin, the code incorrectly fails to flag the type as now having user configuration, so the type continues to appear to be set to the "use plugin" action, even though the action stored in the user configuration is something else.

The code should flag the type as having user configuration.


2. When a type is set to the "save file" action, the code incorrectly thinks the type isn't set to any preferred action (because the enum for the "save file" action is the number zero, and the test for the presence of a preferred action simply tests truth, not definition), so it sets the action to either "use helper app" (if the type has a preferred application handler) or "use default".

The code should distinguish between the "save file" action and no action.

Here's a patch that fixes these two problems.  Requesting blocking-firefox3 for these funky functionality flubs.
Created attachment 283635
patch v2: simpler fix
Created attachment 283642
patch v3: make sure hasDefaultHandler before useSystemDefault

Digging deeper, it turns out that preferredAction is never null, since it gets set to saveToDisk by all three nsMIMEInfo constructors, so we can remove the chunk of code that tries to handle a null value.

But we need to do some extra work when preferredAction is useHelperApp and we don't have a valid preferred handler app.  Currently we just switch to useSystemDefault, but that's only valid when the info object hasDefaultHandler.  Otherwise, we should fall back to saveToDisk (for MIME info objects) or setting alwaysAskBeforeHandling to true (for protocol info objects).
Checking in browser/components/preferences/applications.js;
/cvsroot/mozilla/browser/components/preferences/applications.js,v  <--  applications.js
new revision: 1.24; previous revision: 1.23
done



Applications prefpane doesn't always display "always ask", "save to disk" actions



bug 398626: make sure the Applications prefpane always displays the 'always ask' and 'save to disk' actions where appropriate; r=gavin 
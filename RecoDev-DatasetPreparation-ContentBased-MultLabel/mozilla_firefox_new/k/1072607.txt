Created attachment 8494789
fix-capturing-regression

This was a really stupid bug that I found while debugging the session store tests. It's a regression from bug 1059207. The code there looked like this:

    let listener = (event) => this.handleEvent(useCapture, event);
    if (register) {
      this._childGlobal.addEventListener(eventType, listener, useCapture, true);
    } else {
      this._childGlobal.removeEventListener(eventType, listener, useCapture);
    }

The problem is that we get a new closure for listener each time. The removeEventListener call won't remove anything, since the new closure was never a listener. Bug 1072467 includes a test for this.

Created attachment 8494789
fix-capturing-regression

This was a really stupid bug that I found while debugging the session store tests. It's a regression from bug 1059207. The code there looked like this:

    let listener = (event) => this.handleEvent(useCapture, event);
    if (register) {
      this._childGlobal.addEventListener(eventType, listener, useCapture, true);
    } else {
      this._childGlobal.removeEventListener(eventType, listener, useCapture);
    }

The problem is that we get a new closure for listener each time. The removeEventListener call won't remove anything, since the new closure was never a listener. Bug 1072467 includes a test for this.
Comment on attachment 8494789
fix-capturing-regression

Review of attachment 8494789:
-----------------------------------------------------------------

Ouch, sorry for missing that during my review, and good catch.
https://hg.mozilla.org/integration/mozilla-inbound/rev/70ea9e678878
https://hg.mozilla.org/mozilla-central/rev/70ea9e678878


Event shim doesn't handle removeEventListener correctly



Bug 1072607 - [e10s] Handle removeEventListener correctly in EventTarget shim (r=mconley) 
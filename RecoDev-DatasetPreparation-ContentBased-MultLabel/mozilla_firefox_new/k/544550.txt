While testing bug 538910, I found that Ubufox was breaking the plugin bindings for the new UI being added. It looks like it's also breaking our UI for disabled and blocked plugins, too.

The culprit seems to be that Ubufox includes a pluginGlue.js component that results in overriding what our own toolkit/mozapps/plugins/pluginGlue.js does (it's basically a hack to load some CSS via a category entry).

The /usr/share/ubufox/components/pluginGlue.js seems to be a straight copy of ours, just changing the CSS url to chrome://ubufox/content/alternatePluginsBinding.css. Although I can't seem to find any alternatePluginsBinding.css in Ubufox, which seems odd.

We should probably find a better way to allow Ubufox to disable the missing-plugin binding (PFS), without breaking the other plugin bindings which don't involve PFS. Or Ubufox could implement and fix up their alternatePluginsBinding.css so that it does the right thing in the short-term.

Note that the plugin-crashed stuff will be landing in some Firefox 3.6.x update (Lorentz project), so we'll need some solution for that.

While testing bug 538910, I found that Ubufox was breaking the plugin bindings for the new UI being added. It looks like it's also breaking our UI for disabled and blocked plugins, too.

The culprit seems to be that Ubufox includes a pluginGlue.js component that results in overriding what our own toolkit/mozapps/plugins/pluginGlue.js does (it's basically a hack to load some CSS via a category entry).

The /usr/share/ubufox/components/pluginGlue.js seems to be a straight copy of ours, just changing the CSS url to chrome://ubufox/content/alternatePluginsBinding.css. Although I can't seem to find any alternatePluginsBinding.css in Ubufox, which seems odd.

We should probably find a better way to allow Ubufox to disable the missing-plugin binding (PFS), without breaking the other plugin bindings which don't involve PFS. Or Ubufox could implement and fix up their alternatePluginsBinding.css so that it does the right thing in the short-term.

Note that the plugin-crashed stuff will be landing in some Firefox 3.6.x update (Lorentz project), so we'll need some solution for that.
Created attachment 426935
Patch v.1

This patch avoids the problem by splitting the bindings into two separate registration categories... One for the plugin-missing case, one for the disabled/blocked/crashed case.

Ubufox will thus only replace the plugin-missing binding, and the other bindings will stay in place. No changes to Ubufox are required.

[However, in the future, I think it would be better to change things so that Ubufox doesn't need to override bindings, and we should have a nicer way to specify an alternate PFS mechanism. For example, I'd like to improve the binding's UI to tell the user if a plugin is actually available or not, instead of misleading users with a "click here to install" and then telling them nothing is available. Some new XPCOM service wrapping PFS with a hasPluginForMimeType() method could be used to do that, and Ubufox could just provide an alternate service.]
Pushed http://hg.mozilla.org/mozilla-central/rev/8cab477bf78a
http://hg.mozilla.org/projects/firefox-lorentz/rev/f5c41d72e1d7
Blanket approval for Lorentz merge to mozilla-1.9.2
a=beltzner for 1.9.2.4 - please make sure to mark status1.9.2:.4-fixed
Merged into 1.9.2 at http://hg.mozilla.org/releases/mozilla-1.9.2/rev/84ba4d805430


Ubufox addon incompatible with new plugin-crashed UI



Bug 544550 - Ubufox addon incompatible with new plugin-crashed UI. r=gavin 
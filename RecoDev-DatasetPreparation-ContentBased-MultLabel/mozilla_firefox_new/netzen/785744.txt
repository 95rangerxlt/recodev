- Should ensure check for a valid argument in nsBaseFilePicker::Open(nsIFilePickerShownCallback *aCallback)
- mockfilepicker and xul filepicker should have the callback called outside of the try statement.
- Should use Components.interfaces.nsIFilePicker.returnCancel instead of this.returnCancel inside xul filepicker

- Should ensure check for a valid argument in nsBaseFilePicker::Open(nsIFilePickerShownCallback *aCallback)
- mockfilepicker and xul filepicker should have the callback called outside of the try statement.
- Should use Components.interfaces.nsIFilePicker.returnCancel instead of this.returnCancel inside xul filepicker
Created attachment 655454
Patch v1.

Haven't pushed to try yet, but I will before I push to m-i after the review.
Comment on attachment 655454
Patch v1.

> NS_IMETHODIMP
> nsBaseFilePicker::Open(nsIFilePickerShownCallback *aCallback)
> {
>+  NS_ENSURE_ARG_POINTER(aCallback);
The GTK filepicker actually depends on being able to pass null to its open method :-( so I'm not sure what the right thing to do here is. (By comparison, the mock and xul filepickers don't null-check either, they just log an exception to the console when the picker is closed.)
Thanks for the quick feedback.

(In reply to neil@parkwaycc.co.uk from comment #2)
> Comment on attachment 655454
> Patch v1.
> 
> > NS_IMETHODIMP
> > nsBaseFilePicker::Open(nsIFilePickerShownCallback *aCallback)
> > {
> >+  NS_ENSURE_ARG_POINTER(aCallback);
> The GTK filepicker actually depends on being able to pass null to its open
> method :-( so I'm not sure what the right thing to do here is. 

Oh that was fast, I didn't realize any extra implementations had already landed.
Couldn't we just fail the Gtk2 implementation in the same way and cleanup the code in Done?

> (By
> comparison, the mock and xul filepickers don't null-check either, they just
> log an exception to the console when the picker is closed.)

What's the right way to fail them via throw?
(In reply to Brian R. Bondy from comment #3)
> (In reply to comment #2)
> > (From update of attachment 655454)
> > > NS_IMETHODIMP
> > > nsBaseFilePicker::Open(nsIFilePickerShownCallback *aCallback)
> > > {
> > >+  NS_ENSURE_ARG_POINTER(aCallback);
> > The GTK filepicker actually depends on being able to pass null to its open
> > method :-( so I'm not sure what the right thing to do here is. 
> 
> Oh that was fast, I didn't realize any extra implementations had already
> landed.
> Couldn't we just fail the Gtk2 implementation in the same way and cleanup
> the code in Done?

Unfortunately their Show() deliberately passes nullptr to Open(). The only workaround is to make the filepicker implement its own callback. I have some code I could attach if you would like to see it.

> > (By comparison, the mock and xul filepickers don't null-check either,
> > they just log an exception to the console when the picker is closed.)
> 
> What's the right way to fail them via throw?

Well, you could throw new TypeError("foo is null") I guess.
How about I just allow nullptr in the base filepicker implementation?
(In reply to Brian R. Bondy from comment #5)
> How about I just allow nullptr in the base filepicker implementation?

Sure, as long as it doesn't crash.
Created attachment 655788
Patch v2

How about this?
Comment on attachment 655788
Patch v2

>+      if (mCallback) {
>+        mCallback->Done(nsIFilePicker::returnCancel);
>+      }
>       return NS_OK;
[Rather than duplicating code, could you not just set result to returnCancel?]
Created attachment 655815
Code as mentioned in comment #4
Which way would you prefer? I don't mind either way.
(In reply to Brian R. Bondy from comment #10)
> Which way would you prefer? I don't mind either way.

I put the code in for posterity in case someone else wants it the other way.
Created attachment 656534
Patch v3.

Same as before just fixed nit.
http://hg.mozilla.org/integration/mozilla-inbound/rev/ca7e9d87a4f1
https://hg.mozilla.org/mozilla-central/rev/ca7e9d87a4f1


Async file picker cleanup



Bug 785744 - Async file picker cleanup. r=neil 
Created attachment 310915
stack

Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9b5pre) Gecko/2008031818 Minefield/3.0b5pre

Found this during testing of the new offline feature

Steps to reproduce:
-> Load http://www.campd.org/stuff/tests/offline/offline2.html
-> Allow this Site to store offline content
-> Click on the "Write 25 megs to offline storage." Link several times
-> You will get a infobar warning that you add more then 50 MB to your offline cache
-> Click on the Options Button in the Info Bar
-> Close the Options Window
--> Assertion

###!!! ASSERTION: XPConnect is being called on a scope without a 'Components' property!

This is pretty much always bad. It usually means that native code is
making a callback to an interface implemented in JavaScript, but the
document where the JS object was created has already been cleared and the
global properties of that document's window are *gone*. Generally this
indicates a problem that should be addressed in the design and use of the
callback code.

Created attachment 310915
stack

Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9b5pre) Gecko/2008031818 Minefield/3.0b5pre

Found this during testing of the new offline feature

Steps to reproduce:
-> Load http://www.campd.org/stuff/tests/offline/offline2.html
-> Allow this Site to store offline content
-> Click on the "Write 25 megs to offline storage." Link several times
-> You will get a infobar warning that you add more then 50 MB to your offline cache
-> Click on the Options Button in the Info Bar
-> Close the Options Window
--> Assertion

###!!! ASSERTION: XPConnect is being called on a scope without a 'Components' property!

This is pretty much always bad. It usually means that native code is
making a callback to an interface implemented in JavaScript, but the
document where the JS object was created has already been cleared and the
global properties of that document's window are *gone*. Generally this
indicates a problem that should be addressed in the design and use of the
callback code.
working on getting a stack for this
Looks like showAdvancedPane() is broken with modal prefs dialogs.  Should be an easy-enough fix, taking the bug.
Created attachment 313236
fix for modal openDialog
renominating for blocking-firefox3 after switching components.
Comment on attachment 313236
fix for modal openDialog

>Index: base/content/utilityOverlay.js

>+function openPreferences(paneID, extraArgs)

>+    if (extraArgs && extraArgs["advancedTab"]) {
>+      var advancedPane = win.document.getElementById("advancedPrefs");

nit: It's a bit confusing to call the "advancedPane", since it refers to the tabbox within the pane rather than the prefpane itself - advancedTabBox?

>Index: components/preferences/advanced.js

>   init: function ()

>+    var extraArgs = window.arguments[1];
>+    if (extraArgs && extraArgs["advancedTab"]){
>+      advancedPrefs.selectedTab = document.getElementById(extraArgs["advancedTab"]);
>+      delete extraArgs["advancedTab"];

Why bother deleting it? r=me assuming you've tested with both values of browser.preferences.instantApply.
Created attachment 313699
fixed for review comments

Fixed for review comments.  I lost the blocking flag while switching components, so I'm asking for approval...
Comment on attachment 313699
fixed for review comments

Yeah, this was a blocker.

a1.9+=damons.
Checking in base/content/utilityOverlay.js;
/cvsroot/mozilla/browser/base/content/utilityOverlay.js,v  <--  utilityOverlay.js
new revision: 1.65; previous revision: 1.64
done
Checking in components/preferences/advanced.js;
/cvsroot/mozilla/browser/components/preferences/advanced.js,v  <--  advanced.js
new revision: 1.36; previous revision: 1.35
done

Works for me.

Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9) Gecko/2008051202 Firefox/3.0


###!!! ASSERTION: XPConnect is being called on a scope without a 'Components' property!

assertion

Bug 424281: Fix up openAdvancedPreferences() for modal prefs dialogs.  r=gavin, a=damons 
Test environment:
   Windows XP, Firefox 2 (Bon Echo) build 20060804
   screen reader: Window-Eyes or JAWS

Description:
   When the "Find Updates" button is selected in the Add-ons dialog, and no updates are available, the message "No updates were found" is displayed as text within the Add-ons dialog, instead of a pop-up message.  The screen readers do not announce the message, as it is buried in the middle of the dialog window.  For that same reason, it is nearly impossible for a blind user to know the message even exists.

Steps to recreate:
1. Start a screen reader (JAWS or Window-Eye)
2. Start Firefox
3, Open the Add-ons dialog (press Alt+T, then "A" to open Add-ons)
4. Press Tab until the "Find Updates" button has focus, and press Enter. 
5. Note the message "No updates were found." is inserted into the dialog, between the Extensions/Themes graphics at the top and the list of installed extension.  (This assume that there are no updates available for the installed add-ons.)
6. Note that the screen reader does not speak the update message.
7.  Press Tab (or any other keyboard navigation keys) to try to focus on the update message.  The message is NOT part of the tab ring.   
8.  The only way for a blind user to be aware of the existence of this message is to read the entire dialog from top to bottom, or randomly search the dialog for the message text.

Expected results:
   The screen reader should automatically read the message when it is displayed.

Test environment:
   Windows XP, Firefox 2 (Bon Echo) build 20060804
   screen reader: Window-Eyes or JAWS

Description:
   When the "Find Updates" button is selected in the Add-ons dialog, and no updates are available, the message "No updates were found" is displayed as text within the Add-ons dialog, instead of a pop-up message.  The screen readers do not announce the message, as it is buried in the middle of the dialog window.  For that same reason, it is nearly impossible for a blind user to know the message even exists.

Steps to recreate:
1. Start a screen reader (JAWS or Window-Eye)
2. Start Firefox
3, Open the Add-ons dialog (press Alt+T, then "A" to open Add-ons)
4. Press Tab until the "Find Updates" button has focus, and press Enter. 
5. Note the message "No updates were found." is inserted into the dialog, between the Extensions/Themes graphics at the top and the list of installed extension.  (This assume that there are no updates available for the installed add-ons.)
6. Note that the screen reader does not speak the update message.
7.  Press Tab (or any other keyboard navigation keys) to try to focus on the update message.  The message is NOT part of the tab ring.   
8.  The only way for a blind user to be aware of the existence of this message is to read the entire dialog from top to bottom, or randomly search the dialog for the message text.

Expected results:
   The screen reader should automatically read the message when it is displayed.
We should use role="wairole:alert" or create a XUL alert object for it via nsIAccessibleProvider.
Looks like we already do everything right, i.e. the notification bar is already exposed as ROLE_ALERT: http://lxr.mozilla.org/mozilla1.8/source/toolkit/mozapps/extensions/content/extensions.xml#567

and we fire the correct event when it appears: http://lxr.mozilla.org/mozilla1.8/source/toolkit/mozapps/extensions/content/extensions.xml#630

Inspect32 confirms that the notification bar is exposed as an alert.

Unless anyone objects, I'll close this and file a parallel bug with WindowEyes.
This is a valid bug -- we're not firing EVENT_ALERT (need to look at accevent).

The notification bar in this case needs to fire AlertActive for the node that nsIAccessibleProvider creates an accessible for.
Created attachment 233919
Delay firing of event until notification is fully visible, otherwise accessible object can't be created for it

Tested this patch, and the event is fired & notification bar is now read by Window-Eyes.

Window-Eyes still says "custom control", but I do believe that part is a Window-Eyes problem.
Comment on attachment 233919
Delay firing of event until notification is fully visible, otherwise accessible object can't be created for it

The use of setTimeout makes me nervous but Aaron has assured me that we do this all the time, so r=me.
Comment on attachment 233919
Delay firing of event until notification is fully visible, otherwise accessible object can't be created for it

rename alert to self and add a comment on why we need to setTimeout-0 this (i.e. accessibility code expects AlertActive to be fired post-reflow?).

r=mano.
Comment on attachment 233919
Delay firing of event until notification is fully visible, otherwise accessible object can't be created for it

a=dbaron on behalf of drivers.  Please land on MOZILLA_1_8_BRANCH and add the fixed1.8.1 keyword once you have done so.


Add-ons: No Updates Found message not accessible

access, fixed1.8.1, sec508
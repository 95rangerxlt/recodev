Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20130129 Firefox/21.0
Build ID: 20130129030851


Steps to reproduce:
1. Launch Firefox
2. Perform several downloads
3. Download a large file
4. Open the Panel and the Downloads View
5. In the Downloads View click on the Cancel button and on the Retry buttons a couple of times.
6. Click on the Clear Downloads button while the download from step 3 is still in progress.
7. Click on the Cancel button again and open the context menu.

Expected results:
The Clear Downloads button remains enabled after step 6 since there still is a download in progress.
The Cancel button - stops the download.
The context menu is displayed.


Actual results:
The Clear Downloads button is disabled.
The Cancel button stops working and can't be clicked.
The context menu can't be opened.

Please see the screencast for more details: http://screencast.com/t/41YG11W36Xu2

Mozilla/5.0 (Windows NT 6.1; rv:21.0) Gecko/20130129 Firefox/21.0
Build ID: 20130129030851


Steps to reproduce:
1. Launch Firefox
2. Perform several downloads
3. Download a large file
4. Open the Panel and the Downloads View
5. In the Downloads View click on the Cancel button and on the Retry buttons a couple of times.
6. Click on the Clear Downloads button while the download from step 3 is still in progress.
7. Click on the Cancel button again and open the context menu.

Expected results:
The Clear Downloads button remains enabled after step 6 since there still is a download in progress.
The Cancel button - stops the download.
The context menu is displayed.


Actual results:
The Clear Downloads button is disabled.
The Cancel button stops working and can't be clicked.
The context menu can't be opened.

Please see the screencast for more details: http://screencast.com/t/41YG11W36Xu2
to be investigated.
Actually, you cannot clear in-progress downloads. The clear button is enabled as long as there's at least one finished download (successfully or not) in the list.
(In reply to Mano from comment #2)
> Actually, you cannot clear in-progress downloads. The clear button is
> enabled as long as there's at least one finished download (successfully or
> not) in the list.

yes, and that's fine, what is not is the not working cancel button.
I'll take this one.
This one is pretty frustrating. I'm having a hard time narrowing in on it. 

First of all, this problem is intermittent - sometimes I can repeat the STR and get the expected behaviour. Sometimes not. :/

Secondly, when I do get into the error state, it seems as if the XUL commands are not getting updated or dispatched properly anymore.
Alright, I'm narrowing in on this. It looks like when the downloads are cleared, the richlistbox is getting confused...no matter what items you select in the list, the selectedIndex stays -1 and selectedItem stays null. That's why commands aren't being dispatched properly - we're supposed to dispatch commands to the shell of the selected item.
Can you think of any reason why the richlistbox might get confused like this? If I manually call _refreshSelection on it, it corrects itself...so I think some internal state is getting messed up, but I can't see how or why.

Any ideas?
(In reply to Mike Conley (:mconley) from comment #7)
> Any ideas?

May this be related to the fact that we forcibly remove the richlistitem binding
from children of the richlistbox? If so, we should probably do something similar
to the richlistitem logic we're not executing.
It's unlikely, when you click on cancel the binding is already applied... it's more likely some internal status, maybe the async stuff, goes mad.
(In reply to Marco Bonardo [:mak] from comment #9)
> It's unlikely, when you click on cancel the binding is already applied...
> it's more likely some internal status, maybe the async stuff, goes mad.

What happens when a request to remove an item corresponding to a shell that is
not yet visible (no binding applied yet) comes in from the back-end?
(In reply to Mike Conley (:mconley) from comment #5)
> First of all, this problem is intermittent - sometimes I can repeat the STR
> and get the expected behaviour. Sometimes not. :/

Can this be related to whether you have any hidden items?
(In reply to Paolo Amadini [:paolo] from comment #11)
> (In reply to Mike Conley (:mconley) from comment #5)
> > First of all, this problem is intermittent - sometimes I can repeat the STR
> > and get the expected behaviour. Sometimes not. :/
> 
> Can this be related to whether you have any hidden items?

So, I seem to have stabilized to a pretty regular rhythm here:

1) Open Firefox
2) Start downloading an Ubuntu ISO
3) Download something small, like a web page
4) Click on the Downloads Button, choose "Show All Downloads"
5) Choose "Clear Downloads" to remove the completed download
6) Crash due to assertion failure (bug 826725)
7) Restart Firefox (Ubuntu ISO download restarts).
8) Download another HTML page.
9) Click on the Downloads Button, choose "Show All Downloads"
10) Choose "Clear Downloads" to remove the completed download. The single completed download should clear properly.
11) Click on the cancel icon to cancel the Ubuntu ISO download (this should work)
11) Click on the retry icon to restart the Ubuntu ISO download
12) Download another HTML page
13) Re-focus the Places window, and choose to "Clear Downloads"
14) The completed download will clear, but now cancelling the Ubuntu ISO will not work.

It's pretty rough to debug - especially due to the assertion crash every other time. I've just commented out that assertion to move forward.
fixing the assertion could be easy as checking if the download is in progress before trying to remove it...
Created attachment 710365
Workaround Patch v1

So, it's really not clear to me what's causing the confusion within richlistbox, but that confusion is definitely the source of the problem.

A workaround is to clear the selection after clicking "Clear Downloads". This seems to reset the internal selection state of the richlistbox and fixes the reported bug.

Not a very satisfying solution, but I'm really coming up on empty trying to figure out how this confusion is happening.
Created attachment 710623
does this help?

I was unable to reproduce this reliably, but I think I know what's going on here.  Mike, can you test this?
Comment on attachment 710365
Workaround Patch v1

It's cool you found this workaround since it may help figuring out the actual bug, though we can't take it as is, without having the whole picture of what happens, it may be hiding other bugs.
Plus looks like losing selection may be a hit for accessibility
Comment on attachment 710623
does this help?

No, this does not appear to make a difference.
OK, Here's an easier way to trigger the underlying bug:
1) Start downloading a file and pause the download right away
2) Select the download element for it in the Library (notice that at this point accel+click works for unselecting the item).
3) Keep the library open with that element selected, and open the error console. Run:
top.opener.PlacesUtils.history.runInBatchMode({ runBatched: function() {} }, null);
4) Try accel+click to unselect the selected item.

This won't work, regardless of whether or not the commands will or will not be enabled at that point. The richlistbox is broken at this point due to the hack done in _appendDownloadsFragment.
Created attachment 710740
does this help?  #2
Comment on attachment 710740
does this help?  #2

Review of attachment 710740:
-----------------------------------------------------------------

Yes, this appears to fix the bug. Great work, Mano!

Switching to feedback+, since I'm not really confident that I'm qualified / knowledgeable enough about this code to give this patch a thorough review.
Comment on attachment 710365
Workaround Patch v1

I don't think we're going to need this workaround anymore.
Comment on attachment 710740
does this help?  #2

Review of attachment 710740:
-----------------------------------------------------------------

::: browser/components/downloads/content/allDownloadsViewOverlay.js
@@ +1182,5 @@
>        if (element._shell.placesNode)
>          this._removeHistoryDownloadFromView(element._shell.placesNode);
>      }
>  
> +    this._richlistbox.suppressOnSelect = suppressOnSelect;

Is moving this earlier really needed for the fix to work? This was a perf optimization and now when we call _addDownloadData we may fire select events we don't need, afaict

@@ +1208,5 @@
>      // Workaround multiple reflows hang by removing the richlistbox
>      // and adding it back when we're done.
> +    // Bug 836283 - Avoid this hack if there's any selection, as it breaks the
> +    // richlistbox
> +    if (!this._richlistbox.currentItem && this._richlistbox.selectedItems.length == 0) {

How much perf hit are we accepting here? the view must not create jank if the user is browsing, and looks like here we will be paying the reflow price at each batch but the first invalidation (where I assume we still don't have a selection).
So, I think you should measure the reflow hit on Alice's profile with the profiler, and see how much that accounts for. I can eventually do the same measure on Windows if you don't have a box at hand.
Created attachment 711264
better hacks
Created attachment 711274
better hacks & better code structure...
Comment on attachment 711274
better hacks & better code structure...

Review of attachment 711274:
-----------------------------------------------------------------

I'd appreciate if mike could verify the fix locally before we push it.
Comment on attachment 711274
better hacks & better code structure...

Review of attachment 711274:
-----------------------------------------------------------------

I can no longer reproduce the bug with this patch. Great stuff!

::: browser/components/downloads/content/allDownloadsViewOverlay.js
@@ +1194,5 @@
> +          this._addDownloadData(null, aContainer.getChild(i), false,
> +                                elementsToAppendFragment);
> +        }
> +        catch(ex) {
> +        Cu.reportError(ex);

Indentation nit
https://hg.mozilla.org/integration/mozilla-inbound/rev/4a3536119834
Comment on attachment 711274
better hacks & better code structure...

[Approval Request Comment]
Bug caused by (feature/regressing bug #): downloads panel feature
User impact if declined: broken buttons (until the Library is closed and reopen)
Testing completed (on m-c, etc.): m-i
Risk to taking this patch (and alternatives if risky): limited to the feature
String or UUID changes made by this patch: none
https://hg.mozilla.org/releases/mozilla-aurora/rev/9124e86e2986
https://hg.mozilla.org/mozilla-central/rev/4a3536119834
Verified as fixed on Firefox 20 beta 4 - Cancel button works properly.

Verified on Windows 7, Ubuntu 12.04 and Mac OS X 10.7:
Build ID: 20130307075451
Mozilla/5.0 (Windows NT 6.1; rv:20.0) Gecko/20100101 Firefox/20.0
Mozilla/5.0 (X11; Linux i686; rv:20.0) Gecko/20100101 Firefox/20.0
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:20.0) Gecko/20100101


In the Downloads View the Cancel button stops working



Bug 836283 - In the Downloads View the Cancel button stops working. r=mak, mconley. 
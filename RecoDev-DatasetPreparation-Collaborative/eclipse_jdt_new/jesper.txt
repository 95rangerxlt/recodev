
Bug 407297: [1.8][compiler] Control generation of parameter names by option (like 'javac -parameters') selskabet.org

Bug 416027 - [1.8] Enable reflected parameter names during annotation processing 

Bug 382721: [1.8][compiler] Effectively final variables needs special treatment 
Bug 419209 - [1.8] Repeating container annotations should be rejected in the presence of annotation it contains Fixed Bug 419209 - [1.8] Repeating container annotations should be rejected in the presence of annotation it contains 

Fixed Bug 419209 - [1.8] Repeating container annotations should be rejected in the presence of annotation it contains 
Address review comment for Bug 412149 - [1.8][compiler] Emit repeated annotations into the designated container 
Follow up fixes for Bug 412153 - [1.8][compiler] Check validity of annotations which may be repeatable 
Follow up fix and tests for https://bugs.eclipse.org/bugs/show_bug.cgi?id=412151#c11 Fixed Bug 412149 - [1.8][compiler] Emit repeated annotations into the designated container 

Fixed Bug 412149 - [1.8][compiler] Emit repeated annotations into the designated container Fixed Bug 412151 - [1.8][compiler] Check repeating annotation's collection type 

Fixed Bug 412151 - [1.8][compiler] Check repeating annotation's collection type Fix for [1.8][compiler] Check validity of annotations which may be repeatable 
Bug 416885 - [1.8][compiler]IncompatibleClassChange error 

Bug 416885 - [1.8][compiler]IncompatibleClassChange error Bug 406982: [1.8][compiler] Generation of MethodParameters Attribute in classfile 

Bug 406982: [1.8][compiler] Generation of MethodParameters Attribute in classfile Fixed Bug 412150 - [1.8] [compiler] Enable reflected parameter names during annotation processing 

Fixed Bug 412150 - [1.8] [compiler] Enable reflected parameter names during annotation processing Jesper's fix for Bug 404657 - [1.8][compiler] Analysis for effectively final variables fails to consider loops 
Bug 406982: [1.8][compiler] Generation of MethodParameters Attribute in classfile 

Bug 406982: [1.8][compiler] Generation of MethodParameters Attribute in classfile Fix for Bug 406982 - [1.8][compiler] Generation of MethodParameters Attribute in classfile 

Fix for Bug 406982 - [1.8][compiler] Generation of MethodParameters Attribute in classfile 
Minor follow up to fix for Bug 406973 - [1.8] Parse MethodParameters attribute from classfiles 
Follow on changes to the fix for Bug 407297 - [1.8][compiler] Control generation of parameter names by option (like 'javac -parameters') Bug 407297 - [1.8][compiler] Control generation of parameter names by option 

Bug 407297 - [1.8][compiler] Control generation of parameter names by option Bug 406973: [1.8] Parse MethodParameters attribute from classfiles 

Bug 406973: [1.8] Parse MethodParameters attribute from classfiles [404146] [1.7][compiler] nested try-catch-finally-blocks leads to unrunnable Java byte code 
[388903] Cannot extend inner class as an anonymous class when it extends the outer class (comment cleanup) 
[404146] [1.7][compiler] nested try-catch-finally-blocks leads to unrunnable Java byte code 
[388903] Cannot extend inner class as an anonymous class when it extends the outer class (comment cleanup) 
Additional lambda code generation tests 
Fixed Bug 405069 - [1.8][compiler][codegen] Generate code for method references 

Fixed Bug 405069 - [1.8][compiler][codegen] Generate code for method references Fixed Bug 405066 - [1.8][compiler][codegen] Implement code generation infrastructure for JSR335 

Fixed Bug 405066 - [1.8][compiler][codegen] Implement code generation infrastructure for JSR335 Fixed Bug 378674 - "The method can be declared as static" is wrong 
Fixed Bug 378674 - "The method can be declared as static" is wrong 
Fix and tests for Bug 378674 - "The method can be declared as static" is wrong 
Tests for Bug 378674 - "The method can be declared as static" is wrong 
Fixed Bug 393192 - Incomplete type hierarchy with > 10 annotations 
Fixed Bug 401853 - Eclipse Java compiler creates invalid bytecode (java.lang.VerifyError) 

Fixed Bug 401853 - Eclipse Java compiler creates invalid bytecode (java.lang.VerifyError) Fixed Bug 392671 - [1.8][recovery] NPE with a method with explicit this and a following incomplete parameter 

Fixed Bug 392671 - [1.8][recovery] NPE with a method with explicit this and a following incomplete parameter Fixed Bug 403881 - [1.8][formatter] Receiver parameter halts formatting 

Fixed Bug 403881 - [1.8][formatter] Receiver parameter halts formatting Fixed Bug 402818 - [1.8][formatter] Code carrying interfaces halt formatting 

Fixed Bug 402818 - [1.8][formatter] Code carrying interfaces halt formatting Fixed Bug 402819 - [1.8][formatter] No effect with formatting when cast operator contains intersection of types. 

Fixed Bug 402819 - [1.8][formatter] No effect with formatting when cast operator contains intersection of types. Additional test for Bug 402173 - [1.8][formatter] Code formatter should understand lambda expressions 

Additional test for Bug 402173 - [1.8][formatter] Code formatter should understand lambda expressions 
Follow on fix bug 402892 to address test failures in some runs. Fixed Bug 401853 - Eclipse Java compiler creates invalid bytecode (java.lang.VerifyError) 

Fixed Bug 401853 - Eclipse Java compiler creates invalid bytecode (java.lang.VerifyError) Fixed Bug 401853 - Eclipse Java compiler creates invalid bytecode (java.lang.VerifyError) 

Fixed Bug 401853 - Eclipse Java compiler creates invalid bytecode (java.lang.VerifyError) Fixed Bug 402892 - [1.8][formatter] Code formatter should understand type annotations 

Fixed Bug 402892 - [1.8][formatter] Code formatter should understand type annotations Fix for issue raised during code review for Bug 402173 - [1.8][formatter] Code formatter should understand lambda expressions. 

Fix for issue raised during code review for Bug 402173 - [1.8][formatter] Code formatter should understand lambda expressions. Fixed Bug 378674 - "The method can be declared as static" is wrong 
Formatter308 
Data files to test Bug 402892 - [1.8][formatter] Code formatter should understand type annotations - derived from eclipse sources 

Data files to test Bug 402892 - [1.8][formatter] Code formatter should understand type annotations - derived from eclipse sources Fixed Bug 378674 - "The method can be declared as static" is wrong 
Fixed Bug 402174 - [1.8][formatter] Code formatter should understand method and constructor references. 

Fixed Bug 402174 - [1.8][formatter] Code formatter should understand method and constructor references. Fix and tests for Bug 402173 - [1.8][formatter] Code formatter should understand lambda expressions. 

Fix and tests for Bug 402173 - [1.8][formatter] Code formatter should understand lambda expressions. Fix and tests for Bug 378674 - "The method can be declared as static" is wrong 
Tests for Bug 378674 - "The method can be declared as static" is wrong 
Fixed Bug 393192 - Incomplete type hierarchy with > 10 annotations 
Enabling changes for Bug 402173 - [1.8][formatter] Code formatter should understand lambda expressions. 

Enabling changes for Bug 402173 - [1.8][formatter] Code formatter should understand lambda expressions. Fixed Bug 384567 - [1.5][compiler] Compiler accepts illegal modifiers on package declaration 

Fixed Bug 384567 - [1.5][compiler] Compiler accepts illegal modifiers on package declaration Fixed Bug 401853 - Eclipse Java compiler creates invalid bytecode (java.lang.VerifyError) 

Fixed Bug 401853 - Eclipse Java compiler creates invalid bytecode (java.lang.VerifyError) Fixed Bug 399695 - [1.8][compiler] migrate parser to other syntax for default methods 

Fixed Bug 399695 - [1.8][compiler] migrate parser to other syntax for default methods Fixed Bug 384687 - [1.8] Wildcard type arguments should be rejected for lambda and reference expressions 

Fixed Bug 384687 - [1.8] Wildcard type arguments should be rejected for lambda and reference expressions 
More tests for Bug 382721 - [1.8][compiler] Effectively final variables needs special treatment 
Fixed Bug 382721 - [1.8][compiler] Effectively final variables needs special treatment Tests for bug 382721: [1.8][compiler] Effectively final variables needs special treatment 

Tests for bug 382721: [1.8][compiler] Effectively final variables needs special treatment Bug 382721: Support for effectively final handling for lambdas & inner classes. 

Bug 382721: Support for effectively final handling for lambdas & inner classes. Tests for Bug 382702 - [1.8][compiler] Lambda expressions should be rejected in disallowed contexts. 
Bunch more tests from Jesper 
Test for bug 399537 

Bug 384600 - [1.8] 'this' should not be allowed in lambda/Reference expressions in contexts that don't allow it More return statement tests from Jesper. 
Lambda return statement tests from Jesper. 

Tests for bug 384600: This should not be allowed in static contexts. Tests for bug 382701 
Bug 382701: Incremental support for semantic analysis (JSR335) 
Infrastructure work for semantic analysis of lambda/reference expressions. 
Fix for failing tests 
Infrastructure work for semantic analysis of lambda/reference expressions 
Bug 430839: [1.8] Cannot inspect static method of interface 
Bug 426903: [1.8] Cannot evaluate super call to default method 
Bug 430839: [1.8] Cannot inspect static method of interface 
Bug 426903: [1.8] Cannot evaluate super call to default method 
Bug 427089 - [1.8] Debugger evaluations fail silently with lambdas or method references 
Bug 422029 - [1.8] Enable debug evaluation support for default methods 
Bug 422016 - [1.8] Having reference expressions or lambdas in file triggers warning for missing line numbers 

Bug 421806 - [1.8] Debug support for Java 8 - update tests Bug 427089 - [1.8] Debugger evaluations fail silently with lambdas or method references 
Bug 422029 - [1.8] Enable debug evaluation support for default methods 
Bug 422016 - [1.8] Having reference expressions or lambdas in file triggers warning for missing line numbers 
Bug 421938 - [1.8] ExecutionEnvironmentDescription#getVMArguments does not preserve VM arguments 

Bug 421938 - [1.8] ExecutionEnvironmentDescription#getVMArguments does not preserve VM arguments Bug 421938 - [1.8] ExecutionEnvironmentDescription#getVMArguments does not preserve VM arguments 

Bug 421938 - [1.8] ExecutionEnvironmentDescription#getVMArguments does not preserve VM arguments 
Bug 421806 - [1.8] Debug support for Java 8 - update tests Bug 341232 - Eclipse is not able to set the simplest of conditional breakpoints and reports that the condition has compilation errors when it doesn't 
56732: Call Hierarchy doesn't show callees of method from anonymous type [Jesper's patch] 
52734 (for Jesper): call hierarchy: Should search in the background 
52734 for Jesper: call hierarchy: Should search in the background - added cancel button 
53530 for Jesper: Call Hierarchy: change "Location" column header to line 
52470 (for Jesper): CallHierarchy: SourceLocation View doesn't deliver IJavaElement selection 
47207 for Jesper: call hierarchy: Enablement of "Search Scope" item on view menu is wrong 
[46351] for Jesper: Call Hierarchy must not implement IViewSite 

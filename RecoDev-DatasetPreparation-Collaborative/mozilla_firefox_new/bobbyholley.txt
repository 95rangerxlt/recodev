
Firefox honors embedded ICC intent flag - bug 444014 r=vlad stanford.edu

Backed out changeset e7c6d7843e81 due to linux reftest failures 
merge after backout of e7c6d7843e81 
Disable fatal LCMS errors earlier in thebes - bug 458164. r=joe 
LCMS bogus profile detection - Bug 460629. r=vlad 
LCMS LI16F_FORWARD renamed to LI8F_FORWARD - bug 457626.r=vlad 
Bug 469558: --enable-system-lcms build option should be removed.r=vlad,sr=ted 
Relanding after 8f347bf50a53 was backed out in e1da61348dda. Issues should be fixed. 
Bug 504888. qcms: Avoid integer overflow when checking buffer bounds. r=bobbyholley
Bug 504822 - Remove XBM support from Mozilla. r=joe sr=vladimir 
Bug 507902 - nsImageFrame static Icon Loads should not use the mListener of the first instantiated nsImageFrame.r=bz,joe 
Tests for bug 507902.r=joe 
Orange fix for bug 507902 tests. r=jwalden 
Bug 509929 - Reference cycle between nsProgressNotificationProxy and nsHttpChannel on channel redirect. r=biesi 
Bug 510001 - Added debugging dumps for the test for bug 507902. r=jwalden 
Bug 510001 - Second round of debugging dumps for the test for bug 507902. r=lumpy 
Bug 510001 - Fixed the hardcoded port and added an onerror debugging dump for the test for bug 507902. r=lumpy 
Bug 513544 - Crash [@nsImageFrame::DisplayAltFeedback] - r=bzbarsky 
Bug 435296 - Decode-On-Draw. r=joe,roc,bz,dolske,peterw sr=vlad 
Bug 435296 - Sync decode handling for decode-on-draw. r=roc 
Bug 512435 - document onload should not fire until all visible images have 1 decoded frame. r=bz 
Bug 512435 - Tests. r=dolske 
Bug 435296 - Tests. r=dolske 
GIF decoder hang fix for this CLOSED TREE. r=lumpy 
Bug 516265 - GIF Decoder doesn't send close notifications if it never gets a size. r=joe 
Bug 516311 - Disable decode-on-draw and discarding until we can figure out what's going on with perf. r=joe 
orange fix - disabled the wrong test in f34cc41267d8. r=lumpy 
Bug 516335 - Stopgap patch to disable failing assertion. r=bz 
Bug 516486 -  mDiscardable should be immutable - use lockImage() instead for animated images. r=joe 
Bug 516335 - Calling lockImage multiple times for borderImage. r=joe 
Null-check document pointer.  (Bug 516307)  r=bzbarsky 
Bug 517091 -  Don't do an expensive asynchronous RequestDecode() if there's already an active full decoder. r=joe 
Bug 488800. qcms: accept ICCv4 profiles. r=bobbyholley
Bug 517543 - need a STATUS_DECODE_COMPLETE for imgIRequest.r=joe 
Bug 510001 - Temporarily disable test for bug 507902. r=lumpy. A CLOSED TREE can't stop me! 
Bug 512269 - imgIDecoder shouldn't use an nsIInputStream for input. r=joe 
Bug 512269 - UUID rev that should have been in the last push.r=joe 
Bug 516665 disorted images with moz-icon://*?size=dialog r=bobbyholley 
Bug 516334: Track image decode notifications to send correct notifications to late-coming consumers (Tp4 orange fix). r=joe 
Bug 573629 - gDiscardable and gDecodeOnDraw should be prefs. r=vlad 
Bug 517119 - Preallocate image source data buffer based on Content-Length.r=jrmuizel,sr=vlad. 
Bug 502694 - Images should not have individual discard timers.r=jrmuizel 
Bug 575377 - Loading forever on pages with multipart image/motion jpeg streams.r=bzbarsky 
Bug 576621 - clearing cache does NOT clear cached images.r=joe,gavin 
Bug 553982 - myvidoop.com login broken on trunk.r=joe 
Tests for bug 478398, as well as for a few others, now that we have a discard timer pref.r=joe 
Added some checks for the random orange in bug 578591.r=joe 
Bug 580669 - Mac Menu icon crash with enabled image discarding.r=joe 
Bug 578511 - Canvas API to disable sync decoding of images.r=roc,sr=vlad 
Bug 583205 - Crash at the time of download completion. r=karlt,a=blocker 
Bug 521497 - refactor nsImageLoadingContent to make it easier to track when images appear and go away. r=bz,a=blocker 
Bug 578591 and bug 579139 - Disable test_bug435296.html and test_bug478398.html due to intermittent orange. r=lumpy 
Bug 579122 - imgRequestProxy race condition can fire 2 OnStartDecodes in a row.r=joe 
Bug 343515 - need API for tabbrowsers to tell docshells they're visible/hidden.r=gavin,sr=bz,a=blocker 
Tests for bug 343515 - Active tab API. r=dolske 
Since really we want to send OnStartContainer once per-proxy, it doesn't make the most sense to have such handling be done in imgRequest and imgStatusTracker. This patch moves all that into imgRequestProxy, and fixes the bug. 
Bug 586566: Fold nsIconDecoder into decoders/bmp. r=dholbert a=blocking 
bug 512260 - Add image tracker to nsDocument and register content images with it.r=roc,sr=dbaron,a=blocker 
bug 512260 - part 2 - Make ImageRenderer take a pointer to nsStyleImage rather than making a copy.r=dbaron,a=blocker 
bug 512260 - part 3 - call nsDocument::AddImage and RemoveImage on images stored in nsStyleBackground.r=dbaron,a=blocker 
bug 512260 - part 4 - call nsDocument::AddImage and RemoveImage on images stored in nsStyleContentData.r=dbaron,a=blocker 
bug 512260 - part 5 - make nsCursorImage::mImage private, add getter/setter, and lock images in the setter.r=dbaron,a=blocker 
bug 512260 - part 6 - lock images in nsStyleList::SetListStyleImage.r=dbaron,a=blocker 
Backout of changesets c866e73f3209 and baff7b7b32bc because of sicking's push-and-run bustage. a=backout 
Bug 563088 - Re-enable image discarding.r=joe,a=blocker 
Bug 587371 - Image.h PRUint32 getters shouldn't be COM-y. r=joe,a=blocker 
Bug 513681 - part 1 - fix a few warnings.r=joe,a=blocker 
Bug 513681 - part 2 - remove support for the MOZ_IMG_DECODERS build option.r=joe,khuey.a=blocker 
Bug 513681 - part 3 - instantiate decoders without using COM goop.r=joe,a=blocker 
Bug 513681 - part 4 - Get rid of CIDs and friends for decoders.r=joe,a=blocker 
Bug 513681 - part 5 - move the decoders out of their subdirectories.r=joe,a=blocker 
Bug 513681 - part 6 - Introduce Decoder.cpp and Decoder.h.r=joe,a=blocker 
Bug 513681 - part 7 - rename mImageContainer to mImage in nsGIFDecoder2 for consistency with the rest of the decoders.r=joe,a=blocker 
Bug 513681 - part 8 - Fold nsJPEGDecoder::Flush() into nsJPEGDecoder::Close().r=joe,a=blocker 
ug 513681 - part 9 - Move PNG callbacks into decoder class.r=joe,a=blocker 
Bug 513681 - part 10 - make decoder implementations inherit from Decoder.r=joe,a=blocker 
Bug 513681 - part 11 - make RasterImage carry a pointer to a Decoder.r=joe,a=blocker 
Bug 513681 - part 12 - Ensure that IsDecodeFinished() is only called with a non-null decoder.r=joe,a=blocker 
Bug 513681 - part 13 - switch from "HEADERONLY" flag to IsSizeDecode()/SetSizeDecode().r=joe,a=blocker 
Bug 513681 - part 14 - Coalesce size-setting into superclass.r=joe,a=blocker 
bug 513681 - part 15 - Coalesce OnStartFrame/OnStopFrame into superclass.r=joe,a=blocker 
Bug 513681 - part 16 - Move end-of-decode logic into Finish() and cleanup into destructor, abolishing Shutdown().r=joe,a=blocker 
Bug 513681 - part 17 - remove imgIDecoder.r=joe,sr=shaver,a=blocker 
Bug 587371 - Image.h PRUint32 getters shouldn't be COM-y. r=joe,a=blocker 
Bug 513681 - part 1 - fix a few warnings.r=joe,a=blocker 
Bug 513681 - part 2 - remove support for the MOZ_IMG_DECODERS build option.r=joe,khuey.a=blocker 
Bug 513681 - part 3 - instantiate decoders without using COM goop.r=joe,a=blocker 
Bug 513681 - part 4 - Get rid of CIDs and friends for decoders.r=joe,a=blocker 
Bug 513681 - part 5 - move the decoders out of their subdirectories.r=joe,a=blocker 
Bug 513681 - part 6 - Introduce Decoder.cpp and Decoder.h (with virtual destructor).r=joe,a=blocker 
Bug 513681 - part 7 - rename mImageContainer to mImage in nsGIFDecoder2 for consistency with the rest of the decoders.r=joe,a=blocker 
Bug 513681 - part 8 - Fold nsJPEGDecoder::Flush() into nsJPEGDecoder::Close().r=joe,a=blocker 
Bug 513681 - part 9 - Move PNG callbacks into decoder class.r=joe,a=blocker 
Bug 513681 - part 10 - make decoder implementations inherit from Decoder.r=joe,a=blocker 
Bug 513681 - part 11 - make RasterImage carry a pointer to a Decoder.r=joe,a=blocker 
Bug 513681 - part 12 - Ensure that IsDecodeFinished() is only called with a non-null decoder.r=joe,a=blocker 
Bug 513681 - part 13 - switch from "HEADERONLY" flag to IsSizeDecode()/SetSizeDecode().r=joe,a=blocker 
Bug 513681 - part 14 - Coalesce size-setting into superclass.r=joe,a=blocker 
Bug 513681 - part 15 - Coalesce OnStartFrame/OnStopFrame into superclass.r=joe,a=blocker 
Bug 513681 - part 16 - Move end-of-decode logic into Finish() and cleanup into destructor, abolishing Shutdown().r=joe,a=blocker 
Bug 513681 - part 17 - remove imgIDecoder.r=joe,sr=shaver,a=blocker 
Bug 578357 - Use fallible allocation for image frames.r=joe,cjones;a=blocker 
Bug 589815 - Images loaded from XUL should never be discarded.r=joe,enndeakin;a=blocker 
Backed out changeset a6c18a123fbb due to everything-on-mac-bustage. a=backout 
backout merge. a=backout 
Backed out changeset 9f8fc8a50525 due to windows bustage/sed syntax fail. a=backout 
backout merge. a=backout 
Bug 589469 - Notify nsImageLoadingContent when its document switches.r+sr=bz,a=blocking-beta-5 
Bug 590260 - Decode more bytes at a time during image redecodes.r=joe,a=blocker 
Bug 590252 - part 1 - Add framework to Decoder superclass to handle invalidations.r=joe,a=blocker 
Bug 590252 - part 2 - Make decoder implementations use the Decoder superclass invalidation framework.r=joe,a=blocker 
Bug 590252 - part 3 - Only flush invalidations when we need to.r=joe,a=blocker 
Bug 590252 - part 4 - Don't do progressive display on redecodes.r=joe,a=blocker 
Bug 590252 - part 5 - Make RequestDecode() SyncDecode() on images that are small enough.r=joe,a=blocker 
Bug 591560: Fix annoying abort in animated gifs. r=bz a=blocker 
Bug 590838 - Combine imgRequestProxy::mLocksHeld and imgRequestProxy::mDeferredLocks.r=joe 
Bug 592493 - Register border-images with the document image tracker.r=dbaron 
Bug 592641 - Image document doesn't show dimensions of cached images.r=Neil,a=blocker 
Bug 592641 - Tests.r=Neil,a=tests 
Bug 593489 - Make Image hold onto its URI.r=joe,a=blockerblocker 
Bug 514033 - Error recovery for imagelib - part 1 - Introduce error tracking to Decoder.r=joe,a=blocker 
Bug 514033 - Error recovery for imagelib - part 2 - Notify the superclass error reporting framework when an error occurs.r=joe 
Bug 514033 - Error recovery for imagelib - part 3 - Make errors returned by superclass methods contingent only on IsError().r=joe,a=blocker 
Bug 514033 - Error recovery for imagelib - part 4 - Stop returning errors from image decoders.r=joe,a=blocker 
Bug 514033 - Error recovery for imagelib - part 5 - Coalesce OnStartDecode into superclass.r=joe,a=blocker 
Bug 514033 - Error recovery for imagelib - part 6 - Get rid of EndFrameDecode() and friends.r=joe,a=blocker 
Bug 514033 - Error recovery for imagelib - part 7 - Move mIsHidden check inside nsPNGDecoder::EndImageFrame.r=joe,a=blocker 
Bug 514033 - Error recovery for imagelib - part 8 - Remove GIFWrite.r=joe,a=blocker 
Bug 514033 - Error recovery for imagelib - part 9 - Coalesce end-of-decode notifications into superclass.r=joe,a=blocker 
Bug 514033 - Error recovery for imagelib - part 10 - Make mObserver and friends Decoder-private.r=joe,a=blocker 
Bug 514033 - Error recovery for imagelib - part 11 - Move error-case teardown notifications into Decoder::Finish(), and call it unconditionally.r=joe,a=blocker 
Bug 514033 - Error recovery for imagelib - part 12 - Make Decoder API methods return void.r=joe,a=blocker 
Bug 514033 - Error recovery for imagelib - part 13 - Stop checking IsError() in decoder implementations.r=joe,a=blocker 
Bug 514033 - Error recovery for imagelib - part 14 - Log data errors to the console.r=joe,a=blocker 
Bug 514033 - Error recovery for imagelib - part 15 - Rename Is*Error to Has*Error.r=joe,a=blocker 
Bug 514033 - Error recovery for imagelib - part 16 - Eliminate checks for infallible malloc, use infallible malloc when we need it.r=joe,a=blocker 
Bug 596237 - [SeaMonkey 2.1] TEST-UNEXPECTED-FAIL | chrome://mochikit/content/browser/content/html/document/test/browser_bug592641.js; r=bobbyholley a=NPOTB 
Bug 593426 - Increase image discard timer to two minutes. r,a2.0=joe 
Bug 653930 - Setting marginWidth and marginHeight on an iframe should trigger a reflow.r=bz 
Bug 653930 - Tests.r=bz 
Bug 679494 - Wrap value returned from nsDOMMessageEvent::GetData. r=mrbkap 
Bug 679494 - Tests. r=khuey 
Bug 679494 - UUID rev followup. r=khuey 
Bug 684327 - Remove TestXPC.cpp, which currently printfs that it's failing various things and then segfaults. r=khuey 
Thanks to Mook for the initial patch! 
NB - The code here would make a great "find the bugs in this code" interview screen question. 
Bug 684327 - Move the C++ implementation of the test component into its own subdirectory. r=khuey 
Bug 684327 - Introduce js-implemented test component. r=khuey 
Bug 684327 - Add an xpcshell test that exercises both the native and js components. r=khuey 
Bug 684327 - Generalize test_readwriteattributes.js into test_attributes.js. r=khuey 
Bug 684327 - Test parameter passing. r=khuey 
Bug 684327 - Package the typelib along with the components so that it's accessible from the test harness. r=khuey 
Bug 683802 - Remove mAutoString micro-optimization. r=mrbkap 
Bug 683802 - Move the loop contents of ConvertIndependentParams into a separate method (without re-indentation). r=mrbkap 
Bug 683802 - Separate reindentation from previous patch for easier review. No other changes. r=mrbkap 
Bug 683802 - Factor dipper handling out into a helper method. r=mrbkap 
Bug 683802 - Always store jsvals directly within the val union (fixes bug 655878). r=mrbkap 
Bug 683802 - Define and restrict the semantics of PTR_IS_DATA. r=mrbkap 
Bug 683802 - Use an explicit indicator for direct vs indirect calling semantics. r=mrbkap 
Bug 683802 - Add jsval to the XPTCMiniVariant union for type safety. r=mrbkap 
Bug 683802 - Coalesce type-specific cleanup indicators. r=mrbkap 
AFAICT we'd crash if we hit these cases anyway. bsmedberg and khuey requested that I assert against this case within XPConnect, and file a bug to make XPIDL enforce that [shared] parameters exist only in [noscript] methods. Filed bug 685281 for this. 
XPC_JSArgumentFormatter adds 3 special format string tokens to spidermonkey: %ip, %iv, and %is. These were unused outside of testing according to a free-text MXR search, and don't appear to be well-documented anywhere either. They also happen to be quite dangerous and easy to use improperly: we pass untyped variadic parameters to XPCConvert::JSData2Native with useAllocator==false. This causes JSData2Native to blindly cast the values to concrete class pointers (like nsAString*) and call methods on them. 
This is the last remaining place where we might pass a non-dipper with useAllocator==false to XPCConvert *and, as a consequence*, do something different within XPCConvert. This paves the way for the elimination of useAllocator for non-dipper types. 
We only have one good reason for the useAllocator distinction: when C++ calls JS with a dipper parameter (ie, a string), the caller has already created the relevant nsAString or nsCString, so we shouldn't allocate another one. All other uses are superfluous or irrelevant, so we can get rid of them. 
Bug 684327 - Remove TestXPC.cpp, which currently printfs that it's failing various things and then segfaults. r=khuey 
Thanks to Mook for the initial patch! 
NB - The code here would make a great "find the bugs in this code" interview screen question. 
Bug 684327 - Move the C++ implementation of the test component into its own subdirectory. r=khuey 
Bug 684327 - Introduce js-implemented test component. r=khuey 
Bug 684327 - Add an xpcshell test that exercises both the native and js components. r=khuey 
Bug 684327 - Generalize test_readwriteattributes.js into test_attributes.js. r=khuey 
Bug 684327 - Test parameter passing. r=khuey 
Bug 684327 - Package the typelib along with the components so that it's accessible from the test harness. r=khuey 
Bug 683802 - Remove mAutoString micro-optimization. r=mrbkap 
Bug 683802 - Move the loop contents of ConvertIndependentParams into a separate method (without re-indentation). r=mrbkap 
Bug 683802 - Separate reindentation from previous patch for easier review. No other changes. r=mrbkap 
Bug 683802 - Factor dipper handling out into a helper method. r=mrbkap 
Bug 683802 - Always store jsvals directly within the val union (fixes bug 655878). r=mrbkap 
Bug 683802 - Define and restrict the semantics of PTR_IS_DATA. r=mrbkap 
Bug 683802 - Use an explicit indicator for direct vs indirect calling semantics. r=mrbkap 
Bug 683802 - Add jsval to the XPTCMiniVariant union for type safety. r=mrbkap 
Bug 683802 - Coalesce type-specific cleanup indicators. r=mrbkap 
AFAICT we'd crash if we hit these cases anyway. bsmedberg and khuey requested that I assert against this case within XPConnect, and file a bug to make XPIDL enforce that [shared] parameters exist only in [noscript] methods. Filed bug 685281 for this. 
XPC_JSArgumentFormatter adds 3 special format string tokens to spidermonkey: %ip, %iv, and %is. These were unused outside of testing according to a free-text MXR search, and don't appear to be well-documented anywhere either. They also happen to be quite dangerous and easy to use improperly: we pass untyped variadic parameters to XPCConvert::JSData2Native with useAllocator==false. This causes JSData2Native to blindly cast the values to concrete class pointers (like nsAString*) and call methods on them. 
This is the last remaining place where we might pass a non-dipper with useAllocator==false to XPCConvert *and, as a consequence*, do something different within XPCConvert. This paves the way for the elimination of useAllocator for non-dipper types. 
We only have one good reason for the useAllocator distinction: when C++ calls JS with a dipper parameter (ie, a string), the caller has already created the relevant nsAString or nsCString, so we shouldn't allocate another one. All other uses are superfluous or irrelevant, so we can get rid of them. 
Bug 682180 - Allocate executable trampoline buffers in darwin 10 and beyond. r=khuey 
Bug 682504 - Don't try to ImplicitConvert a void return value. r=jorendorff 
Bug 682504 - Tests. r=jorendorff 
Bug 599791 - part 1 - Remove unnecessary conditional logic. r=jorendorff 
Bug 599791 - part 2 - restructure argument handling in PointerType::ConstructData. r=jorendorff 
Bug 599791 - part 3 - Pass errVal down into the closure constructor. r=jorendorff 
Bug 599791 - part 4 - Do ClosureInfo cleanup with a destructor. r=jorendorff 
Bug 599791 - part 5 - Prepare the sentinel value and store it in ClosureInfo. r=jorendorff 
Bug 599791 - part 6 - Return the sentinel when we fail in ClosureStub. r=jorendorff 
Bug 599791 - part 7 - Tests. r=jorendorff 
Bug 690362 - Fix incorrect parenthetical grouping of nsXPTType::T_PWSTRING_SIZE_IS in xpcwrappednative.cpp. r=peterv 
Bug 657260 - Move CheckStringLength to JSString. r=Waldo 
Bug 657260 - Check JS string length against maximum in more places. r=Waldo 
Bug 657260 - Handle NULL return from JS_NewExternalString in XPCStringConvert::ReadableToJSVal. r=mrbkap 
Bug 526864 - Remove unused parameter aFrameToUse in RasterImage::DoComposite. r=bobbyholley 
Bug 691411 - Remove various dead directories in XPConnect. r=khuey 
Bug 691411 - Move js/src/xpconnect to js/xpconnect and rename source files while we're at it. r=khuey, sr=mrbkap 
git diff -w verifies that this patch contains no non-whitespace changes. 
git diff -w shows no changes here as well. 
Some of these changes aren't quite ideal, but it's the best my tooling can do and I think it's very much a step in the right direction. This is necessary to do first, because doing if(foo) -> if (foo) changes the location of parentheses, which affects how other things should be aligned. So this has to be built into the tooling, and we might as well take care of the pre-existing issues first. 
git diff -w is empty here as well. 
Updated to fix 'else' as well. 
This is a conservative pass, which doesn't catch absolutely all cases. But it should be good enough. 
Bug 688012 - Manual fixup of multi-line c++ cast alignment. r=mrbkap 
Bug 688012 - Manual fixup of overzealous brace hoisting. r=mrbkap 
Bug 688012 - Re-case dependency on dom_quickstubs.h to fix build-time race condition / bustage. r=lumpy 
Merge mozilla-central to mozilla-inbound 
Bug 584894 - Move libjpeg to media/libjpeg. r=khuey 
Bug 584894 - Move libpng to media/libpng. r=khuey 
Bug 128502 - Move imagelib to mozilla/image on a CLOSED TREE. r=joe,brendan 
Merge mozilla-central to mozilla-inbound on a CLOSED TREE. 
Bug 695138 - Fix inout memory leak in XPConnect tests. r=khuey 
Bug 693341 - Use comparators for everything in test_params.js. r=khuey 
Bug 693341 - Test arrays of arithmetic types. r=khuey 
Bug 693341 - Test arrays of strings. r=khuey 
Bug 693341 - Test sized strings. r=khuey 
Bug 693341 - Introduce a few test interfaces. r=khuey 
Bug 693341 - Test interface arrays. r=khuey 
Bug 693341 - Test iid_is(). r=khuey 
Bug 693341 - Improve array and interface comparisons. r=khuey 
Bug 693341 - Test arrays of iid_is params. r=khuey 
Bug 691781 - Add a check to avoid unpacking an empty array. r=khuey 
Bug 691781 - Make sure the lexer gets generated with regen, too. r=khuey 
Bug 691781 - Generate IDL lexer and parser as part of the build system. r=khuey 
Because length_is duplicates size_is, 'capacity' is just an alias for 'count'. 
Bug 677788 - Remove use of length_is xpt value from gecko. r=mrbkap 
All we're doing is checking that various types aren't flagged as reference. But xpidl makes sure this doesn't happen, so we should just trust it instead. 
* A check of something clearly enforced by the XPIDL compiler 
Bug 692342 - Introduce deprecated_IsPointer() to handle the cases that are too mucky to figure out right now. r=mrbkap 
We're not dealing with dependent parameters here. So as far as I can tell, the only behavior change that this introduces is that we flag for cleanup on T_WCHAR_STR in addition to T_CHAR_STR. This seems like something we probably want. 
Bug 692342 - Create a ConvertDependentParam(i) method to match ConvertIndependentParam(i) (modulo reindentation). r=mrbkap 
Bug 692342 - Reindentation from previous patch (no other changes). r=mrbkap 
Bug 692342 - Remove check for !IsInterfacePointer(), given the code a few lines above. r=mrbkap 
Bug 692342 - Move a call to SetValNeedsCleanup() to an equivalent location. r=mrbkap 
Apologies for the copy paste here. Fixing that will require some more serious re-architecting. 
Bug 692342 - Move some things below Do datum_type resolution in ConvertDependentParam. r=mrbkap 
The only change in functionality here is that we flag for cleanup on 'inout' sized strings in addition to 'in' sized strings. I'm pretty sure we want that. 
Bug 692342 - Assert against arrays of jsvals, since we don't handle them. r=mrbkap 
This eliminates another pesky use of IsPointer(). 
JSval is the only different between the two, and we handle that above. 
The XPIDL machinery should never output an invalid configuration here, so all this checking is unnecessary. The only thing we have to watch out for is native types, which all get shoehorned into T_VOID. So let's make this a simple check. 
Bug 692342 - Remove IsPointer() and IsReference() accessors and flag the bits as deprecated. r=mrbkap 
Bug 705019 - Introduce CType::IsCTypeProto() and CData::isCDataProto(). r=jorendorff 
Bug 705019 - Make toSource() and toString() work on sCTypeProtoClass and sCDataProtoClass objects. r=jorendorff 
Bug 705019 - Allow access to {C,Pointer,Struct,Array,Function}Type.prototype.prototype. r=jorendorff 
This is a regression from http://hg.mozilla.org/mozilla-central/rev/c428312abbc7 . The rest of the changes in that patch should be fine. 
Bug 706301 - Don't cache own properties on XrayProxy. r=mrbkap 
Bug 706301 - Tests. r=mrbkap 
Bug 696450 - Add increment/decrement methods to PointerType jsctype objects. r=bobbyholley 
Bug 702491 - Don't set JSPROP_READONLY for accessor properties. r=Waldo 
Bug 711203 - enable XPConnect wstring test. r=khuey 
Bug 711288 - Unconditionally use the new value of JSPROP_READONLY in accessor -> data transformations. r=Waldo 
Bug 712858 - Remove lingering XPT_TDP_POINTER uses in XPConnect. r=mrbkap 
Bug 713747 - Use UniversalXPConnect and UniversalXPConnect only in test coverage. r=bz 
The first test doesn't actually need UniversalXPConnect, so we can remove it for free. The second one needs it, so we add some SpecialPowers goop to make it possible. It's not ideal, but it can go away when the wrapper in bug 702353 lands. 
I don't think we need this stuff at all anymore, since the security policy stuff is now burned into c++ in xpconnect/wrappers. However, I'm too afraid to do the removal myself. 
Bug 713747 - Remove usage of UniversalFoo in gecko. r=bz 
Bug 713747 - Remove UniversalFoo from caps (and thus, the tree). r=bz 
Bug 622301 - Don't use XPCWrappedNative::GetWrappedNativeOfJSObject in quickstub unwrapping. r=mrbkap 
Bug 622301 - Remove now-obsolete 'callee' parameter. r=mrbkap 
Bug 715417 - Eliminate getPrincipalArray and globalPrivilegesEnabled from JSPrincipals. r=mrbkap 
Bug 622301 - Don't use XPCWrappedNative::GetWrappedNativeOfJSObject in quickstub unwrapping. r=mrbkap 
Bug 622301 - Remove now-obsolete 'callee' parameter. r=mrbkap 
Bug 717498 - Clear nsThread::mEventObservers at thread shutdown. r=bsmedberg 
Bug 716167 - Only push null contexts in XPConnect for main thread events, and remove infrastructure from bug 326777. r=bz 
Bug 716167 - Add a release-mode assertion that XPConnect is never used off the main thread. r=mrbkap 
Bug 718072 - WeakMaps constructor doesn't always get initialized on the global object. r=Waldo 
Bug 702353 - Implement Proxy-Based XPCOM Wrappers in SpecialPowers. r=mrbkap,ted 
Bug 702353 - Proof-of-concept on some pretty involved tests. r=ted 
Bug 719841 - Assert that inner objects don't appear in prototype chains. r=jorendorff 
Bug 719841 - Tests. r=jorendorff 
Bug 579535 - Remove AddScriptBlockerAndPreventAddingRunners() API and warn about script runner failures. r=bz 
Do not innerize an object assigned to __proto__ or used as the target of a with statement. Bug 719841, r=mrbkap. 
Do not innerize an object assigned to __proto__ or used as the target of a with statement. Bug 719841, r=mrbkap. 
Bug 622301 - Don't use XPCWrappedNative::GetWrappedNativeOfJSObject in quickstub unwrapping. r=mrbkap 
Bug 622301 - Remove now-obsolete 'callee' parameter. r=mrbkap 
Bug 714590 - Use the helper jsclass format everywhere. r=mrbkap 
Bug 700561 - Relax short-circuit principal checks on account of inner window reuse. r=bz 
Bug 696331 - Clear the document principal in nsDocument::ResetToURI after teardown, rather than before. r=jst 
Bug 718543 - Preserve SpecialPowers wrapper identity with a WeakMap cache. r=mrbkap 
Bug 717113 - Don't do a redundant class lookup in js::IsProxy. r=luke 
Bug 717113 - Make js::IsWrapper fully inline-able. r=luke 
Bug 691178 - Refuse to wrap windows that are on the way out. r=jst 
Bug 731471 - Don't reparent wrappers that don't want to move. r=peterv 
Bug 720580 - Indicate free bits in nsIXPCScriptable.idl. r=mrbkap 
Bug 720580 - Introduce a flag for global natives and assert that we have it. r=mrbkap 
Bug 720580 - Remove unnecessary aIID parameter from nsIXPConnect::InitClassesWithNewWrappedGlobal. r=mrbkap 
We only ever pass null here anyway, and this whole infrastructure is going away real soon now. 
Bug 720580 - Stop passing isGlobal everywhere and use the nsIXPCScriptable flags instead. r=mrbkap 
Bug 720580 - Move the AutoMarkingWrappedNativePtr in XPCWrappedNative::{GetNewOrUsed,Morph} closer to where we need it. r=mrbkap 
Bug 720580 - Use nsRefPtr instead of manual AddRef/Release in XPCWrappedNative::{GetNewOrUsed,Morph}. r=mrbkap 
The current semantics involve the caller transfering ownership of the input wrapper to FinishCreate(), which is complicated and error-prone. Now that we're using nsRefPtr at the callsites, we can get rid of it. 
Bug 720580 - Make JSID class initialization happen on demand. r=mrbkap 
Bug 720580 - Manually resolve |Object| on the global in XPCWrappedNativeScope::SetGlobal() to avoid calling into the XPConnect resolve hook too early. r=mrbkap 
Bug 720580 - Accept an explicit native global during XPCWrappedNativeScope creation. r=mrbkap 
Bug 720580 - Factor out the call to PostCreatePrototype into a helper method. r=mrbkap 
Bug 720580 - Make the call to PostCreatePrototype optional. r=mrbkap 
Bug 720580 - Call TraceDOMPrototypes via TraceXPCGlobal, and avoid the verification process for wrapped natives. r=mrbkap 
Bug 720580 - Introduce XPCWrappedNative::WrapNewGlobal. r=mrbkap 
This patch breaks the "every commit is a 100% correct tree" invariant a little bit, because constructors and prototypes for DOM globals are broken (PostCreatePrototype never gets called). This is fixed in the next patch. Doing it this way makes for a cleaner series of commits, and the browser still builds and runs fine. 
Bug 720580 - Do the last bit of wrapped global initialization once the dust has settled. r=mrbkap 
With this patch, the only call to JS_NewGlobalObject in XPConnect happens in xpc_CreateGlobalObject. \o/ 
Bug 720580 - Assert that we have the global jsclass flag if and only if we're a global. r=mrbkap 
Bug 731442 - Back out f9145dab4be9 (bug 718543) due to test failures. r=backout 
Bug 731845 - XPCWrappedNative::ReparentWrapperIfFound should handle preserved wrappers. r=mrbkap 
Bug 731845 - XPCWrappedNative::ReparentWrapperIfFound should handle preserved wrappers. r=mrbkap 
Without this patch, we call the above when restoring things out of the bfcache, which is bad. It must be called exactly once. 
Bug 731804 - nsXPCWrappedJSClass::GetNamedPropertyAsVariant should jsvalify strings _after_ changing compartments. r=peterv 
Bug 729589 - Fix frameElement wrapping test. r=Ms2ger 
Bug 735968 - PlacesUtils.history must be QI-ed before using nsPIPlacesDatabase methods. r=rnewman 
Bug 735544 - Allow exception stacks to cross compartment boundaries. r=luke 
Bug 736316 - Components.utils.getGlobalForObject should unwrap cross-compartment wrappers. r=khuey 
Bug 735826 - Fix jit-tests for browser builds on mac. r=dmandelin 
Bug 734910 - Enter the compartment of the new global before calling FinishInitForNewWrappedGlobal. r=mrbkap 
Bug 734475 - Take the full union of native sets when bringing non-PreCreate XPWNs across compartments. r=mrbkap 
Bug 596351 - Proxies should throw TypeErrors for assignments to read-only properties in ES5 strict mode. r=luke 
Bug 733984 - Stop specializing createHolder, and simplify holder creation in WrapperFactory::Rewrap. r=mrbkap 
I was getting confused by some of the naming and lack of comments here. 
I opted for stronger assumptions and more understandable security code. If Blake feels strongly though, I could go the other way and sprinkle '|| isChrome(obj)' throughout the asserts though. 
This isn't an issue right now, since it can't ever happen outside of sandboxes, which content can't use. But if it could, it could get a pure CrossCompartmentWrapper to a Location object, which is bad. 
The current situation seems incorrect, especially given the behavior of CrossOriginWrapper and XrayProxy. Currently it doesn't matter, but it probably will in the future. 
Bug 667388 - Introduce the PUNCTURE wrapper action. r=mrbkap 
We also remove the declared-but-never-implemented JSObject::getWrapperHandler. 
Bug 667388 - Tests. r=mrbkap 
This was taken care of in other ways before, but we need to be more explicit about it now that we're doing more Xray stuff with Location wrappers. 
Bug 738874 - Don't allow non-classinfo XPCWNs to be wrapped cross-compartment. r=mrbkap 
Bug 739432 - Access the inplaceEditor expando with an explicit API. r=dcamp 

Bug 739432 - Access the inplaceEditor expando with an explicit API. r=dcamp Bug 729589 - Fix js-ctypes tests for compartment-per-global. r=jorendorff 
Bug 738956 - Wrap values in nsStructuredCloneContainer::InitFromVariant before passing them to JS_WriteStructuredClone. r=khuey 
Bug 740469 - JSNative->JSFunction fixup should happen in DefinePropertyById, not DefineProperty. r=luke 
Bug 737245 - Typed Arrays should handle cross-compartment wrappers; part1. r=luke 
Bug 737245 - Typed Arrays should handle cross-compartment wrappers; part2. r=luke 
Bug 737245 - Typed Arrays should handle cross-compartment wrappers; part3. r=luke 
Bug 737251 - Reuse the throwing code in jsobj.cpp for jsproxy.cpp. r=luke 
Bug 739796 - Move same-compartment security wrapping into a method on XPCWrappedNative. r=gal 
Bug 739796 - Make js_TransplantObjectWithWrapper and GetSameCompartmentSecurityWrapper play nicely together. r=mrbkap 
Bug 739796 - Make same-origin cross-compartment Location object access go through the LW in the host compartment. r=gal 
Bug 739825 - Push principals when entering compartments in structured clone. r=mrbkap 
Bug 744034 - Link the script context to the outer window earlier to ensure that we always have TI for content. r=mrbkap 
Bug 745422 - Factor fundamental traps into js::AbstractWrapper. r=gal 
2 - eMsgBytes -> messageBytes 
Bug 743843 - Factor individual argument parsers into helper methods. r=Ms2ger 
Bug 743843 - Ditch the confusing switch-based parsing and add some comments. r=Ms2ger 
Bug 743843 - Introduce the options object for Components.Exception. r=Ms2ger,sr=mrbkap 
Bug 745483 - Don't assert that TI is enabled when the pref is disabled. r=jdm 
Bug 745661 - Make TI assertion handle safe mode, too. r=khuey 
Bug 746021 - Don't assert that the window ids are the same when they shouldn't be. r=msucan 

Bug 746021 - Don't assert that the window ids are the same when they shouldn't be. r=msucan Bug 746221 - Pull properties for comparison off the prototype to avoid mismatches with expandos. r=past a=test-only 

Bug 746221 - Pull properties for comparison off the prototype to avoid mismatches with expandos. r=past a=test-only Bug 743615 - Add the JS_{Read,Write}StructuredClone api. r=jorendorff 
Bug 743615 - Base worker structured clone tags on the dom ones to ensure against collisions. r=bent 
Bug 743615 - Handle ImageData in the main thread runtime callbacks. r=bent 
Doing so makes no sense. It seems like a no-op right now because we handle all the same cases first. But it's a hazard, and a problem for my upcoming patches. 
Bug 743615 - Introduce the ImageData object/constructor in workers. r=bent 
Bug 743615 - Hook up worker ImageData to the structured clone stream. r=bent 
Bug 743615 - Tests. r=bent, a=blassey 
Bug 743615 - Add the JS_{Read,Write}StructuredClone api. r=jorendorff 
Bug 743615 - Base worker structured clone tags on the dom ones to ensure against collisions. r=bent 
Bug 743615 - Handle ImageData in the main thread runtime callbacks. r=bent 
Doing so makes no sense. It seems like a no-op right now because we handle all the same cases first. But it's a hazard, and a problem for my upcoming patches. 
Bug 743615 - Introduce the ImageData object/constructor in workers. r=bent 
Bug 743615 - Hook up worker ImageData to the structured clone stream. r=bent 
Bug 743615 - Tests. r=bent, a=blassey 
Bug 640904 - Check for null window globals within PreCreate hooks and assert IsClosedOrClosing(). r=peterv 
Bug 747749 - Remove call to JS_SetGlobalObject in mozJSComponentLoader. r=luke 
Bug 640904 - Check for null window globals within PreCreate hooks and assert IsClosedOrClosing(). r=peterv,smaug 
Bug 751086 - Disable toolkit/mozapps/plugins/tests/browser_bug435788.js for leaks (r=Mano,a=test-only) 
Bug 750859 - remove unused (or seldom-used) PrivilegeManager functions. r=bz 
This will break addons using enablePrivilege, but that's going away too. We've been warning for many releases now, so it's time to bite the bullet. 
Bug 750859 - Remove (most of) SetCanEnableCapability. r=bz 
Bug 750859 - Remove {Disable,Revert}Capability. r=bz, PGO helper on CLOSED TREE 
Bug 743961 - Null-check context pushing callbacks. r=mrbkap 
Bug 749173 - Remove AutoPreserveCompartment. r=luke 
Bug 753277 - Factor out CCW remapping from JS_TransplantObject and add comments. r=mrbkap 
Bug 753277 - Rename |obj| to |newIdentity| in JS_TransplantObject. r=mrbkap 
Bug 753277 - Make js_TransplantObjectWithWrapper use RemapWrappers. r=mrbkap 
Bug 753277 - Rename |obj| to |newWrapper| in js_TransplantObjectWithWrapper. r=mrbkap 
It's not wrong, but it's not necessary either, since we'll just unwrap directly to the underlying object during wrapping. And this is confusing enough as-is. 
The reindentation is pure. No snakes. 
Bug 754044 - Pass stopAtOuter=false in GetWrappedNativeOfJSObject, because that's what we mean. r=mrbkap 
This distinction is the only reason for writing the code in this confusing manner. And I don't think we need it now that we have stopAtOuter. 
Bug 754044 - Simplify the logic surrounding the prewrap callback in jscompartment.cpp. r=mrbkap 
We leave it null for gecko for the time being to keep this patch small. 
Bug 754044 - Apply same-compartment security wrappers in same-compartment wrapping callback. r=mrbkap 
Bug 754044 - Remove manual injection of same-compartment security wrappers, and make sure to call JS_Wrap* instead. r=mrbkap 
Bug 754311 - Null out the private of soon-to-be-transplanted reflectors _after_ copying their properties onto the holder. r=mrbkap 
Bug 553102 - Make the SpecialPowers wrapping API a bit nicer. r=ted 
Bug 553102 - Fix test_cows.xul. r=mrbkap 
Bug 553102 - Fix SpecialPowers DOMWindowUtils. r=ted 
Bug 553102 - Waive COW checks on SpecialPowers wrapper objects. r=mrbkap 
Bug 553102 - Add __exposedProps__ for MockFilePicker. r=ted 
Bug 553102 - Fix mock prompt service. r=ted 
Bug 553102 - Fix open web apps. r=fabrice 
Bug 758563 - Warn when __exposedProps__ is missing. r=bz 
Bug 752038 - Avoid getting confused by PreCreate giving a different answer when we wrap objects cross-compartment during reparenting. r=mrbkap 
Bug 760070 - Make the __exposedProps__ warning appear as an error. r=bz 
Bug 760076 - Make |construct| use Wrapper::CALL. r=mrbkap 
Bug 751995 - Handle orphaned wrappers. r=peterv 
Bug 751995 - Handle orphaned wrappers. r=peterv 
Bug 761121 - Add JSCLASS_HAS_CACHED_PROTO to the typed array instance JSClass. r=bhackett 
Xray wrappers require that their wrappee be non-slim, so this works out perfectly. 
object instead, but I suspect it's not worth worrying about. 
Bug 758415 - Copy expando objects during object transplanting. r=mrbkap 
Bug 758415 - Expose AutoIdVector wrapping. r=mrbkap 
Bug 758415 - Switch WN Xrays to use the new expando infrastructure. r=mrbkap 
Bug 758415 - Rip out old expando architecture. r=mrbkap 
This is more or less just a backout of bug 739796, that caused so much pain. Huzzah! 
Bug 758415 - Tests. r=mrbkap 
Bug 640904 - Null-check after EnsureInnerWindow in nsWindowSH::GetProperty. r=mrbkap 
nsGlobalWindow for chrome callers). So those tests stop being useful. 
Bug 754202 - Pull object principals directly off the compartment, and assert that behavior doesn't change. r=bz 
just pull the trigger. 
Bug 754202 - Disallow calling EvaluateString{,WithValue} with a principal that doesn't match the global. r=mrbkap 
Can I get a 'hell yeah'? 
Bug 754202 - Remove mContextPrincipal usage from within nsScriptSecurityManager. r=mrbkap 
No more principal pushing! 
Bug 762529 - Handle constructors properly in SpecialPowers wrappers. r=mrbkap 
Back out bug 754202. r=me 
Merge backout. 
Bug 762432 - Handle proxies on __lookupGetter__ and __lookupSetter__. r=jorendorff 
The |ok| parent check goes away because it's ill-conceived. All it's really checking is that proxies are parented to the global, and it's impossible to port to SpecialPowers, because SpecialPowers will think that the proxy is parented to the SpecialPowers global. I don't think this check is very important, so I removed it. 
Bug 763856 - Introduce JSAutoEnterCompartment::leave(). r=luke 
Bug 764389 - Add an API to change the principals of a compartment. r=luke 
Bug 764389 - Update compartment principals on inner window reuse and on document.write. r=bz 
Bug 764289 - Null-check desc->obj after calling Proxy::getPropertyDescriptor. r=jorendorff 
Bug 763381 - Pass cx around in more places. r=mrbkap 
Bug 763381 - Fix up compartment situation for expando objects. r=mrbkap 
Bug 763301 - Put SpecialPowers Xray detection in a try/catch. r=mrbkap 
Bug 764315 - Trigger reification for QuickStubbed accessors in SpecialPowers wrappers before calling Object.getOwnPropertyDescriptor. r=mrbkap 
Bug 761982 - remove mozprefs.js. r=jmaher 
Bug 763433 - Clarify compartment semantics for ExposedPropertiesOnly. r=mrbkap 
Adding to the mess of the NodePrincipal (et al) check isn't great, but I'm refactoring that in bug 761704. 
Given the new bindings, I think this is dead code anyway modulo the pref. 
Bug 765168 - Remove js context parameter from XHR.send call chain. r=smaug 
Bug 753162 - Don't assume that we end up in the same compartment as we started in CrossCompartmentWrapper. r=mrbkap 
Bug 732870 - Have nsDOMStringMapSH::PreCreate use the element as its parent, rather than the window. r=peterv 
Bug 766018 - Null out the XPCWrappedNativeScope slot when scopes are deleted on shutdown. r=peterv 
Bug 755255 - Hoist mJSContextStack into XPCJSRuntime. r=mrbkap 
I started getting sick of typing nsXPConnect::GetXPConnect()->GetRuntime(). 
Bug 755255 - Make consumers of GetJSContextStack go through XPCJSRuntime. r=mrbkap 
Bug 755255 - Hoist mCallContext into XPCJSRuntime. r=mrbkap 
Bug 755255 - Make consumers of mCallContext go through XPCJSRuntime. r=mrbkap 
Bug 755255 - Hoist pending exception junk into XPCJSRuntime. r=mrbkap 
Bug 755255 - Hoist auto root list into XPCJSRuntime. r=mrbkap 
Bug 755255 - Remove Usage of XPCPerThreadData::IsMainThread. r=mrbkap 
Bug 755255 - Hoist Resolving* machinery into XPCJSRuntime. r=mrbkap 
Bug 755255 - Remove threadsafety checking machinery. r=mrbkap 
Bug 755255 - Remove mThreadData from XPCCallContext. r=mrbkap 
Bug 755255 - Remove thread iteration in XPCJSRuntime. r=mrbkap 
\o/ 
Bug 755255 - Rename XPCThreadContext.cpp to XPCJSContextStack.cpp, since that's all that's left. r=mrbkap 
Bug 767306 - Temporarily make assertion from bug 766641 non-fatal. r=me 
Bug 767948 - Make assertion nonfatal. r=me 
Bug 758344 - Make ContextHolder implement nsIScriptContextPrincipal. r=mrbkap 
Bug 754202 - Fix content->chrome postMessage mochitest. r=bz This isn't something we actually support, and were using enablePrivilege to do it before. When we switch this to SpecialPowers wrapping, the sender origin becomes a chrome URL (not very interesting) and the source window becomes null (which we do explicitly in nsGlobalWindow for chrome callers). So those tests stop being useful. 
Bug 754202 - Pull object principals directly off the compartment and assert that behavior doesn't change. r=bz 
just pull the trigger. 
Bug 754202 - Disallow calling EvaluateString{,WithValue} with a principal that doesn't match the global. r=mrbkap 
Can I get a 'hell yeah'? 
Bug 754202 - Remove mContextPrincipal usage from within nsScriptSecurityManager. r=mrbkap 
No more principal pushing! 
Bug 754202 - Check principal in IsCapabilityEnabled when there's no code on the stack. r=mrbkap 
Bug 754202 - Scope the push of the safe js context such that it doesn't include the call to XHR::Send. r=mrbkap,bent 
It's not used for anything substantial, and it can be (or always is?) called with no JS on the stack. 
Bug 754202 - Only push the context of the event target if the listener is scripted. r=smaug 
Aside from some renaming, no functionality has been changed. 
Simple rename/move. Renamed some parameters, and switched from manual iteration to CompartmentsIter. 
Now that we're not doing that awful Location thing anymore, We should assert this. 
Bug 655649 - Introduce an API to recompute wrappers based on various filters. r=billm 
Bug 655649 - Recompute cross-compartment wrappers when setting document.domain. r=mrbkap 
Now that we have nsExpandedPrincipal, the current way of doing things is wrong. For some reason, the old document.domain hackery was hiding the failures here. 
Bug 655649 - Stop doing dynamic security checks for document.domain. r=mrbkap 
Bug 601277 - Better tests for document.domain. r=mrbkap 
Bug 771202 - Add a PostTransplant nsIXPCScriptable hook. r=peterv 
Bug 771202 - Make the prototype climbing code in nsJSNPRuntime unwrap security wrappers. r=bsmedberg 
Bug 771202 - Implement post-transplant plugin behavior. r=bsmedberg 
Bug 771202 - Unwrap object arguments passed to plugins. r=bsmedberg 
Bug 771202 - Tests. r=bsmedberg 
AFAICT the only reason this worked before is that this code never ran: I put a MOZ_ASSERT just before call to OnWrappedDestroyed in OnDestroy, and it never fired during the dom/plugins mochitests. 
Bug 771202 - Tests. r=bsmedberg 
Bug 763343 - Handle classinfo singletons in cross-compartment wrapping. r=peterv 
Bug 771074 - Introduce pointer wrapping mechanism for hold references to pointers off-main-thread. r=bsmedberg 
Backed out changeset 784d3448dfe3 (Bug 771074) for windows bustage. a=me 
Bug 771074 - Introduce pointer wrapping mechanism for hold references to pointers off-main-thread. r=bsmedberg 
Bug 767273 - Never declare a stack-allocated PropertyDescriptor within SM, and make API safe. r=luke 
Bug 774245 - Factor out single-level checked unwrapping into a helper function. r=mrbkap 
Bug 774245 - Add WrapperFactory and XrayWrapper machinery to allow same-compartment Xray wrapping. r=mrbkap 
In the next patch, we drop support for lookupMethod for location objects, since the security policy there is tricky and location objects are already unshadowable Xray wrappers. 
Bug 774245 - Reimplement LookupMethod. r=mrbkap 
Bug 774245 - Tests. r=mrbkap 
Bug 774245 - Remove unnecessary memset. r=mccr8 
Bug 775435 - Wrap-by-default in GetNPObjectWrapper. r=bsmedberg 
This catches the crash when the naughtiness happens, rather than later on. 
Bug 773962 - Refactor Xray waiving logic to allow simple lookups in the waiver map without creating a waiver. r=mrbkap 
Bug 773962 - Fix up waivers after transplanting. r=mrbkap 
Xray waivers will stop being accessible to content entirely in bug 742444). 
Bug 773962 - Tests. r=mrbkap 
Bug 772288 - Waive Xray for target objects in Cu.import. r=mrbkap 
Bug 773962 - Fix windows linkage bustage. r=me 
Bug 776333 - Morph slim wrappers in LookupMethod. r=mrbkap 
Bug 777098 - Null check private of NPObjWrapper in nsJSObjWrapper::GetNewOrUsed. r=bsmedberg 
Bug 760109 - Don't force wrappers to use the wrapped proto if they decide to use something different. r=mrbkap 
Bug 760109 - Add an API to lookup proto key via standard prototype objects and vice-versa. 
Bug 760109 - When COWing objects with standard prototypes, use the prototype in the home compartment instead. r=mrbkap 
For now it's identical to ChromeObjectWrapperBase. Custom behavior comes in the next patch. 
Bug 760109 - Override traps in ChromeObjectWrapper to bounce lookups to the local prototype chain. r=mrbkap 
Bug 760109 - Tests. rs=mrbkap 
Anyway, I suspect this case isn't worth worrying about as long as we don't crash. 
Bug 778420 - Add Services getter to SpecialPowers. r=jmaher 
Bug 778420 - Fix up tests that don't like the new enablePrivilege. r=jmaher 
Bug 778420 - Add Services getter to SpecialPowers. v1 
Bug 778420 - Fix up tests that don't like the new enablePrivilege, r=jmaher. 
Bug 778420 - Add Services getter to SpecialPowers. r=jmaher 
Bug 778420 - Fix up tests that don't like the new enablePrivilege. r=jmaher 
Bug 776328 - Only create holders for WNs. r=mrbkap 
Bug 778085 - Use the Handle API in a few more places in Proxy. r=efaust 
Bug 778085 - Add optional getPrototypeOf trap. r=ejpbruel 
Bug 778085 - Add AutoVectorRooter.append(AutoVectorRooter). r=luke 
Bug 778085 - Add prototype suppport in Proxy::foo implementations. r=ejpbruel 
and Proxy hierarchy will soon be merged. 
This allows us to test this stuff in script. 
Bug 778085 - Tests. r=ejpbruel 
Bug 777628 - Do a Checked Unwrap in JS_WriteTypedArray. r=jorendorff 
The constructor function lives in content, but it's being invoked from chrome, so the |this| object is actually privileged. 
Bug 781521 - Fix Settings API. r=gwagner 
Bug 781521 - Fix Message Manager blob test. r=Ms2ger 
Bug 781521 - Fix BrowserElement API. r=jlebar 
Bug 781476 - Cross-compartment wrap same-origin objects with PreCreate even if PreCreate requests one wrapper per scope. r=mrbkap 
Bug 781476 - Test. r=me 
Bug 783031 - Make js1_5/Regress/regress-328897.js throw a different way. r=jmaher 
So we work around this with an explicit Cu API. :-( 
Bug 783173 - Fix test_ipc implementations to handle mandatory __exposedProps__. r=khuey 
Bug 783057 - Expose find results via XPCOM. r=gwagner 
So we work around this with an explicit Cu API. :-( 
test, and it also breaks stuff with respect to __exposedProps__. Let's kill it. 
Bug 553102 - Make content-> access default to deny if __exposedProps__ is not defined. r=mrbkap 
Bug 784071 - Add __exposedProps__ warning back into dom.properties. r=mccr8 
Bug 783989 - Return false after reporting error. r=ejpbruel 
Bug 784233 - Relax __exposedProps__ check for sandboxes until we can repack AMO addons. r=gal 
Backed out changeset 61e9eaf9aae2 
Bug 784233 - Relax __exposedProps__ check for sandboxes until we can repack AMO addons. r=gal 
Bug 784857 - Turn on enablePrivilege for JSReftests. r=mccr8 
Bug 784560 - Fix more tests. r=mccr8 
Bug 785162 -  Disable test_bug760802.html on android. r=smaug,dougt 
Bug 757046 - Convert enablePrivilege into an insecure test-only construct (preffed off everywhere but in automation). r=bz 
arguments. 
cx for aParent (callerContextGuard) whenever we're concerned about using its principal. 
This value is initialized to null and never set, so we can get rid of it. 
RegisterTopLevelWindow) without worrying about whether we've called it already. 
any consumers about the window's creation. 
changing origins, which is very important for compartment security invariants. 
Bug 774633 - Assert against switching origins on a compartment. r=jst 
WrapperFactory. So AFAICT this can go away entirely. 
Bug 774607 - Remove JS_{Is,Make}SystemObject API. r=luke 
Bug 771354 - Don't special-case principal assignment for chrome windows in nsGlobalWindow.cpp. r=bz 
Not sure what I was thinking before. We should always be in the compartment of the wrapper here. 
Bug 780370 - Remap objects from standard prototypes even if they're explicitly exposed. r=mrbkap 
arguments. 
cx for aParent (callerContextGuard) whenever we're concerned about using its principal. 
This value is initialized to null and never set, so we can get rid of it. 
RegisterTopLevelWindow) without worrying about whether we've called it already. 
any consumers about the window's creation. 
changing origins, which is very important for compartment security invariants. 
Bug 774633 - Assert against switching origins on a compartment. r=jst 
Bug 774633 - Fix TestAppShellSteadyState to load a system principal URI so that we don't discard the inner window. r=bent 
WrapperFactory. So AFAICT this can go away entirely. 
Bug 774607 - Remove JS_{Is,Make}SystemObject API. r=luke 
Bug 771354 - Don't special-case principal assignment for chrome windows in nsGlobalWindow.cpp. r=bz 
approach. ;-) 
Bug 788914 - Generate vanilla cross-compartment wrappers when UniversalXPConnect is enabled. r=mrbkap 
Bug 788914 - Recompute cross-compartment wrappers when UniversalXPConnect is enabled. r=mrbkap 
Bug 788914 - Remove dynamic UniversalXPConnect checks sprinkled around the wrapper code. r=mrbkap 
Bug 788914 - Kill partially transparent wrappers. r=mrbkap 
these questions. 
Bug 789494 - Rip enablePrivilege out of misbehaving mochitests. r=mccr8 
approach. ;-) 
Bug 788914 - Generate vanilla cross-compartment wrappers when UniversalXPConnect is enabled. r=mrbkap 
Bug 788914 - Recompute cross-compartment wrappers when UniversalXPConnect is enabled. r=mrbkap 
Bug 788914 - Remove dynamic UniversalXPConnect checks sprinkled around the wrapper code. r=mrbkap 
Bug 788914 - Kill partially transparent wrappers. r=mrbkap 
these questions. 
This seems to be failing intermittently during linux64 jsreftests (possibly due to OOM?). UniversalXPConnect is a test-only construct, so we don't really care too much about a failure here as long as it doesn't go orange in other ways. 
Bug 789494 - Rip enablePrivilege out of misbehaving mochitests. r=mccr8 
approach. ;-) 
Bug 788914 - Generate vanilla cross-compartment wrappers when UniversalXPConnect is enabled. r=mrbkap 
Bug 788914 - Recompute cross-compartment wrappers when UniversalXPConnect is enabled. r=mrbkap 
Bug 788914 - Remove dynamic UniversalXPConnect checks sprinkled around the wrapper code. r=mrbkap 
Bug 788914 - Kill partially transparent wrappers. r=mrbkap 
these questions. 
Bug 789713 - Ignore domain when computing whether to share non-PreCreate WNs cross-compartment. r=mrbkap 
Bug 784792 - Remove IsClosedOrClosing() assertion. r=bz 
Bug 789773 - Eagerly create the about:blank viewer in nsWebShellWindow::Initialize. r=bz 
Bug 789773 - Tests. r=bz 
Bug 790905 - Make the compartment principal of autoconfig_glob match the principal passed to JS::Evaluate. r=bz 
This would have caught this bug. 
Bug 783702 - Call through to get() for hasPrototype() path in getElementIfPresent(). r=ejpbruel 
The aGlobal API is currently unnecessary, since it should always be equal to the global obtained from the scope. But we'll want to manually specify the target object in subsequent patches, so make it an optional argument that's currently never passed. 
Bug 792036 - Factor out glue code to get the JS Components object for a scope. r=mrbkap 
versions of their respective sub-objects (with the exception of Ci, which is unwrapped). 
Bug 792036 - Expose |Components| to content in the indexedDB test harness. r=bent 
I want gabor to look at these. 
work better). 
find /files/mozilla/build/d/_tests/testing/mochitest/tests/ | egrep "\.(xhtml|html|xml|js)$" | grep -v SimpleTest | grep -vi mochikit | grep -v simpleThread | grep -v test_ipc_messagemanager_blob.html | grep -v "indexedDB/test" | xargs grep -l Components |  xargs grep -L enablePrivilege | perl -pe 's#.*mochitest/tests/##' | xargs perl -p -i.bakkk -e 's/Components\.interfaces(\s|;|\.|\[)/SpecialPowers\.Ci$1/g, s/SpecialPowers\.wrap\(Components\)\.(.)(lasses|tils|nterfaces|esults)/SpecialPowers.C$1/g, s/(?<![\.a-zA-Z])Components/SpecialPowers\.Components/g, s/window\.Components/window\.SpecialPowers\.Components/g' 
Bug 792036 - More manual fixes requested by Andrew. r=mccr8 
Bug 791526 - Temporarily add the |netscape.security| object back in to fix broken browser detection. r=bz 
Bug 793370 - crash in nsWebShellWindow::Initialize, r=smaug+bz 
Bug 794912 - Remove dynamic privilege check in isCrossOriginAccessPermitted. r=mrbkap 
A lot of this stuff can be simplified now, and we can stop using the deprecated APIs. 
world XBL filenames might be all over the place. So let's just be safe here. 
Bug 795275 - Turn Components into a JS value getter for content scopes. r=mrbkap 
Bug 795275 - Warn about content access to |Components|. r=mrbkap 
Bug 795275 - Telemetry. r=mrbkap 
Bug 797583 - Remove bogus assertion. r=mrbkap 
Bug 798346 - nsContentUtils::PreserveWrapper should explicitly QI its argument to the CC ISupports. r=peterv 
The .wrappedJSObject property only exists when the Xray wrapper subsumes the wrappee. 
global. This should be fine. 
to the global makes us consistent with the other Xray types. 
methods, because they're working just fine. 
bypass outer windows. But we can do this with js::UnwrapObject. 
we're Xraying to. 
Bug 761695 - Hoist call and construct traps into Traits, since the current implementations are XPCWN-specific. r=peterv 
the XPCWN holder no longer needs a reserved slot pointing to the WN. 
a virtual trap on XrayTraits, which lets the appropriate Xray type do its thing. 
Just cut/paste. No code changes. 
there are no changes to the function. 
CloneExpandoChain. 
Bug 761695 - Make expando chain getting/setting a virtual trap. r=peterv 
expando machinery out of XPCWrappedNativeXrayTraits. 
with new binding down the road a little bit. 
Peter and I decided this was ok. We can't hoist expando stuff otherwise. 
Bug 761695 - Create XrayTraits::resolveOwnProperty. r=peterv 
will (currently) always be null. 
Bug 761695 - Put Proxy and DOM expandos on the expando object, rather than the holder. r=peterv 
Bug 786142 - Make sure we have a real WN in MoveWrappers. r=peterv 
This causes us to leak every window ever, a la bug 722428. 
This function is also called to evaluate javascript:// URIs, at which point the chrome caller assumption isn't actually valid. Let's just do the modern thing here, and fix up the caller that breaks. 
These two functions do the exact same thing, as far as I can tell. 
do here. Justin's original reasoning for this check is in bug 593174 comment 25. 
Bug 797204 - Use JS_GetScriptedCaller instead of JSStackFrames in nsLocation. r=bz 
\o/ 
Bug 799348 - When creating a new content window, create the surrounding chrome docshell as system. r=bz 
This stuff should now all be taken care of by the AnimationConsumers infrastructure. 
Bug 505385 - Part 1: Hoist proxy list into imgStatusTracker. r=joe 
Bug 505385 - Part 2: Move notification dispatch into imgStatusTracker. r=joe 
Bug 505385 - Part 4: Fix some warnings. r=joe 
This will help us decouple imgRequest and imgRequestProxy. 
imgRequestProxy, and Image, so we need it to be a bit more visible. 
pull them off the tracker, but we'll soon change that. ;-) 
This stuff should now all be taken care of by the AnimationConsumers infrastructure. 
Bug 505385 - Part 1: Hoist proxy list into imgStatusTracker. r=joe 
Bug 505385 - Part 2: Move notification dispatch into imgStatusTracker. r=joe 
Bug 505385 - Part 4: Fix some warnings. r=joe 
This will help us decouple imgRequest and imgRequestProxy. 
imgRequestProxy, and Image, so we need it to be a bit more visible. 
pull them off the tracker, but we'll soon change that. ;-) 
Bug 797304 - Explicitly reparent the document to the new scope during document.open. r=peterv 
To make stronger assumptions, we should dig deeper on the parent chain, and also morph any slim wrappers. This is slightly slower, but not much, since this stuff only gets called for HTML documents, and the parent chains there tend to be short. Moreover, this only gets called during document.open(), where performance doesn't matter so much. 
Bug 797304 - Add special handling for nuked parents in orphan fixup. r=peterv 
Bug 797304 - Replace MoveWrapper nonsense with orphan fixup. r=peterv 
Bug 792280 - Only censor function.caller for non-same-origin calls. r=luke 
Bug 801241 - Properly handle |false| return false from JS_DescribeScriptedCaller. r=bz 
Bug 802968 - Fix racy test behavior. r=me DONTBUILD 
Bug 802557 - Do more direct comparisons with the outer window. r=bz 
Bug 801305 - Use the bonafide subject for the loadinfo owner. r=bz 
Bug 793969 - Define an identity transformation at the Xray layer. r=mrbkap 
Bug 747607 - Don't throw when we fail to find a source document. r=bz 
Bug 747607 - Remove GetContextFromStack. r=bz 
Bug 789224 - Remove miscellaneous UniversalXPConnect checks sprinkled throughout gecko. r=mrbkap 
Bug 789224 - Remove capability manager stuff in nsScriptSecurityManager. r=mrbkap 
Bug 789224 - Remove principal capability and preference infrastructure. r=mrbkap 
Bug 789224 - Remove signed script security checks. r=mrbkap 
cause more compat fuss than necessary. 
This stuff is super ugly and confusing. I think we're better off without it. 
Bug 801576 - Forbid cross-origin access to the History object. r=mrbkap 
Bug 801576 - Fix sandbox test. r=mrbkap 
Bug 801576 - Fix {push,pop}State tests. r=jlebar 
Bug 801576 - Add tests for the same-origin policy. r=mrbkap 
Bug 801576 - Bustage fix. r=me 
Bug 801576 - Android bustage fix. r=me 
Bug 797821 - Remove the dependency of XPCWrappedNativeScope instantiation on XPCCallContext and expose the raw constructor. r=mrbkap 
It doesn't do anything useful at this point. 
Bug 797821 - Simplify the call signature for XPC::CreateGlobalObject. r=mrbkap 
without having to put them in the set and trace expandos and such. 
This can happen after the fact where it needs to. 
globals XPConnect globals. 
another scope, but I don't think that should really break anything. 
Bug 797821 - Stop storing mScriptObjectPrincipal. r=mrbkap 
Bug 797821 - Remove unused aNative parameter to XPCWrappedNativeScope creation. r=mrbkap 
Object.prototype. 
Bug 797821 - Create XPCWrappedNativeScopes immediately after global creation. r=mrbkap 
Bug 797821 - Replace usage of XPCWrappedNativeScope::FindInJSObjectScope(ccx, obj) with GetObjectScope(obj). r=mrbkap 
\o/ 
A lot of these flags don't make sense in this context. 
This will let us rip out that flag. 
Bug 797821 - Remove JSCLASS_XPCONNECT_GLOBAL flag. r=mrbkap 
Bug 797821 - Removed the unused reserved slot for XPConnect globals. r=mrbkap 
instrumentation that needs to happen on non-xpconnect compartments. 
Bug 797821 - Remove the XPConnect Compartment Set. r=mrbkap 
Bug 797821 - Address Ms2ger's review comments. r=me 
Bug 797821 - Null check to fix intermittent orange. r=me 
Bug 797206 - Remove GetPrincipalAndFrame. r=bz 
Bug 797206 - Remove GetPrincipalFromContext. r=bz 
IndirectProxyHandler, which has really overcomplicated our proxy hierarchy. 
BaseProxyHandler. 
it roughly mimics its behavior. 
wrapper hierarchy. 
Bug 803068 - Remove IndirectProxyHandler. r=ejpbruel 
Bug 803068 - Merge DirectWrapper and Wrapper. r=ejpbruel 
Bug 803068 - Remove toBaseProxyHandler and toWrapper. r=ejpbruel 
Bug 804630 - Tests for exposing prototype properties on a derived object. r=mrbkap 
was - interfaces is accessible from content code. 
to the wrapper's consumer. 
was - interfaces is accessible from content code. 
to the wrapper's consumer. 
Bug 731471 - Crashtesty-mochitest. r=me 
Bug 793969 - Tests. r=mrbkap 
Bug 800864 - Add some more tests. r=bz 
Bug 807179 - Add a constructor for JSPropertyDescriptor. r=luke 
Bug 808612 - Wrapper cache and cycle collect nsLocation. r=smaug 
hit the "no wrapper cache, no wrapper" case in the current code. 
Bug 808611 - Move valueOf to nsIDOMLocation. r=mrbkap 
Bug 808457 - Add Telemetry for Components.lookupMethod and Components.interfaces. r=mrbkap 
Bug 809318 - Fix flakey tests. r=philor 
Bug 806751 - Pile more garbage into GetWrappedNativeOfJSObject. r=mrbkap 
Bug 802557 - Mochitests. r=bz 
Bug 805807 - Filter setters. r=mrbkap 
Bug 809547 - Tests. r=bz 
Bug 809290 - Fix nsLocation::CheckURL. r=bz 
Bug 809290 - Tests. r=bz 
Looks like these got lost in the Direct Proxy Handler refactor. 
Bug 810743 - First check for pending exceptions, _then_ examine the invoke result. r=mrbkap 
I think this is the path of least resistance here. 
in the tuple will go away. 
Bug 800915 - Add infrastructure to flag security wrappers as unsafe to unwrap. r=mrbkap 
Bug 800915 - Reimplement PUNCTURE consumers in terms of isSafeToUnwrap() and remove PUNCTURE API. r=mrbkap 
If callers want to throw, it's now their responsibility. 
in the tuple will go away. 
Bug 800915 - Add infrastructure to flag security wrappers as unsafe to unwrap. r=mrbkap 
Bug 800915 - Reimplement PUNCTURE consumers in terms of isSafeToUnwrap() and remove PUNCTURE API. r=mrbkap 
If callers want to throw, it's now their responsibility. 
Bug 569506 - Tearoff tests. r=mrbkap 
I think this is the path of least resistance here. 
Bug 811152 - Decxify various DOM methods. r=me 
too much time on this. SimpleTest.executeSoon() seems to do the trick here. 
Bug 776497 - Check for null currentInner when deciding to reuse inner windows. r=smaug 
likely to leak. 
is important. 
[Unforgeable]. 
Bug 808608 - Remove unnecessary outparam. r=mrbkap 
Bug 808608 - Remove specialized Location security wrappers. r=mrbkap 
this part. 
Bug 808608 - Fix up tests to work with new behavior. r=bz,me 
This is now unused. 
in step 2). So I added an annotation for that in item[2]. 
Bug 813394 - Test both |window.location| and |location| in navigated-away-from frame. r=bz 
the check we do in XrayWrapper.cpp for the .wrappedJSObject property. 
Bug 807102 - Rev the CID on nsPrincipal. r=bz 
Bug 813901 - Throw COW exceptions in the wrapper's scope. r=mrbkap 
This also involves modifying test_cows to deep clone in getCOW. 
Bug 820666 - Tag XBL script for <field> elements and child scripts. r=jorendorff 
Bug 818716 - Move XBL detection into nsContentUtils and remove filename hack. r=mrbkap 
<script> moves up to head, and the call to document.getElementById moves into go(). 
do <iframe onload="go()"> before go is guaranteed to be defined. 
Bug 823279 - Mark deserialized XBL script as XBL. r=bz 
Bug 822961 - Implement JS_WrapId. r=billm 
Bug 822383 - Allow arbitrary proxies on the scope chain. r=luke 
Bug 809652 - Have SecurityWrapper::enter default to deny, and override SecurityWrapper::objectClassIs. r=jorendorff 
Bug 809652 - Add gross one-off predicates to jsfriendapi. r=jorendorff 
Bug 809652 - Deny nativeCall for SecurityWrapper except under specific circumstances. r=jorendorff 
Bug 824581 - RemoteOpenFileChild::AsyncRemoteFileOpen crashes on Windows/Mac r=jduell 
Bug 826146 - Add a pref-controlled install confirmation override for automation. r=sicking 
Bug 826146 - Add a pref-controlled install confirmation override for automation. r=sicking 
Bug 824670 - Validate Activity and Message hrefs during manifest parsing. r=mounir 
Bug 824670 - Tests. r=mounir 
Bug 825395 - Add debug checking for interleaved nsCxPusher and JSAutoEnterCompartment. r=bz,luke 
The SSM interface is super awkward. 
Bug 824864 - Hoist the guts of CompileFunction into nsJSUtils. r=bz 
aClassObject in order to maintain the old behavior (whatever that is). 
if they so desire. This will allow us to combine the two functions. 
Bug 824864 - Move existing consumers of EvaluateString over to EvaluateStringWithValue. r=bz 
Bug 824864 - Remove nsIScriptContext::EvaluateString. r=bz 
This lets us get rid of a bunch of junk. 
Now that there's only one of them, we can get rid of the silly suffix. \o/ 
This simplifies a lot of code, and makes the function scope-agnostic. 
Bug 824864 - Move responsibility for checking for JSVERSION_UNKNOWN to the one caller of EvaluateString that might pass it. r=bz 
Bug 824864 - Pass EvaluateString out-param as a pointer, not a reference. r=bz 
Bug 824864 - Fix Ms2ger nits. r=me 
Bug 832435 - Fix compartment handling for EvaluteString and javascript: uris.  r=bzbarsky 
Bug 832435 - Fix compartment handling for EvaluteString and javascript: uris. r=bz 
Bug 832512 - Don't create SOWs for chrome code. r=bz 
caps/ and spend half an hour wondering what the heck is going on. :-( 
we're at it. 
this thing here. 
the holder is not so great. Let's fix this for real. 
will never match. Lets be explicit and safe. 
patch does that. 
Bug 823348 - Use EnsureCompartmentPrivate In Rewrap and stop checking for null. r=mrbkap 
that. And we're generally moving away from COWs anyway. 
multiple times when we start moving this stuff around. 
needs to be. 
This paves the way for more rule-based selection of wrappers in the common case. 
Bug 823348 - Replace security wrapper enumeration with a more rule-based approach. r=mrbkap 
All the casese where we want to waive should now be going through WaiveXrayWrapper. 
relationship between a principal and its corresponding nsEP. 
Bug 832041 - Remove nsJSContext::CompileEventHandler and move consumers to nsJSUtils::CompileFunction. r=bz 
Bug 832041 - Followup addressing review comments that was accidentally left out. r=me 
Bug 832041 - Actually push code for the followup. r=doh 
Bug 833412 - Fix tests that call addBinding. r=bz 
Bug 833412 - Make nsXMLPrettyPrinter use nsXBLService/BindingManger to load/remove bindings. r=bz 
Bug 833412 - Remove AddBinding/RemoveBinding and remove dead code. r=bz 
Bug 834255 - Fix intermittent orange. r=bz 
now. 
Bug 830500 - Implement JS_CharsToId. r=Waldo 
Bug 830500 - Implement JS_CharsToId. r=Waldo 
Bug 831076 - Outerize at the very beginning of XPConnect wrapping and remove other outerization checks. r=mrbkap 
Bug 831076 - Outerize during same-compartment wrapping so that JS_Wrap* is guaranteed to outerize. r=mrbkap 
Bug 831076 - Enter a compartment in jsd. r=mrbkap 
Bug 831076 - Add assertSameCompartment to JS_ObjectToOuterObject, and clean up classinfo hook. r=mrbkap 
Bug 819507 - Stop relying on deprecated behavior in passwordmgr mozStorage tests. r=dolske 
Bug 812669 - Remove XPConnect equality hooks. r=mrbkap 
Bug 821850 - Properly propagate |strict| in JSObject::deleteByValue. r=jorendorff 
hopefully be short-lived anyway, since SCSWs are on their way out. 
a chrome test anyway. 
Bug 821850 - Add infrastructure for lazily-created XBL scopes. r=bz 
Bug 821850 - Check for XBL scopes in nsContentUtils::IsCallerXBL(). r=bz 
Bug 821850 - Clean up security wrappers for NAC. r=bz 
have a URI. 
This lets us hook up the binding to the JSClass. 
out, CompilePrototypeMembers throws if mClassObject ends up null. 
get a reference to our JSClass no matter what, which we need. 
Bug 821850 - Store a strong ref to the JSClass in nsXBLBinding. r=bz 
Let's just pass a JSContext and do Requests/Compartments in the caller. 
XBLResolve will go away soon, so there's no need to put it in a header. 
Bug 821850 - Install XBL field accessors on prototype objects at setup time, and nuke XBLResolve. r=bz 
otherwise we'll end up with objects that aren't functions. 
and methods on the class object. 
Bug 821850 - Add API to lookup implementation members on XBL bindings. r=bz 
Bug 821850 - Expose XBL members via Xray wrappers. r=bz 
Bug 821850 - Dynamically waive Xray for field access by XBL script on bound nodes. r=bz 
Bug 821850 - Clone XBL into the XBL scope's compartment. r=bz 
Bug 821850 - Tests. r=bz 
rather than window.location. :-( 
patch. 
nsIScriptContext behind it. :-( 
This gets rid of one of the last consumers of REQUIRE_SCRIPT_CONTEXT. 
This gets rid of the last use of REQUIRE_SCRIPT_CONTEXT. \o/ 
release-mode behavior everywhere. Remove the crap. 
against it, since there are already callers that don't check the return value. 
Bug 834732 - Implement stricter cx handling in xpc_EvalInSandbox. r=mrbkap 
Bug 834732 - Push a cx in nsWindowSH::NewResolve. r=mrbkap 
Bug 834732 - Push a cx in nsPrincipal::SetDomain. r=mrbkap 
Bug 834732 - Push a cx in AdoptNode. r=mrbkap 
Bug 834732 - Improve pushing in nsJSEnvironment. r=mrbkap 
Bug 834732 - Assert proper cx stack handling in WrapperFactory::Rewrap. r=mrbkap 
Bug 839792 - Store members on a shadow proto in the XBL scope. r=bz 
Bug 839792 - Do XBL lookups on the shadow prototype. r=bz 
This reverts bug 821850 part 16, and updates the tests accordingly. 
handling outer explicitly. 
It is the "correct" mechanism to prototype a sandbox to a DOM Window. 
Otherwise, they won't get invoked with the proper |this|. 
Bug 841067 - Fix sandbox xhr tests. r=bz 
consumers. 
Bug 834697 - Enable XBL scopes. r=bz 
Bug 834697 - Enable XBL scopes, and disable assertion. r=bz,me 
Bug 803870 - Compare the subject with the outer window for History. r=bz 
Bug 842940 - Don't squelch exceptions in Proxy::get. r=jorendorff 
Bug 842940 - Remove another instance of cx->isExceptionPending(). r=jorendorff 
is equivalent. All this will go away soon anyhow when JSD goes away. 
changes. 
Bug 843231 - Alter the XBL scope test to make it compatible with reading the dom.xbl_scopes only once per global. r=bz 
Bug 843231 - Compute whether to use an XBL scope exactly once. r=bz 
Luke explained to me that it should never get there. 
entirely later in these patches. 
Bug 836301 - Add Special handling to allow us to call enter() for defineProperty on Xrays. r=mrbkap 
for anything. So let's just get rid of it. 
proxies, which are the cases where we care most about performance. 
Bug 836301 - Hoist enter() into BaseProxyHandler. r=mrbkap 
entered exactly once. 
Bug 836301 - Hoist enter() calls from {Xray,}Wrapper::foo into Proxy::foo. r=mrbkap 
Bug 836301 - Hoist some assertions, remove a bunch of no-op trap overrides, and add assertions that we've entered our policy. r=mrbkap 
Bug 843711 - Fix up new |Components| culprits in test suite. r=mccr8 
Luke explained to me that it should never get there. 
entirely later in these patches. 
Bug 836301 - Add Special handling to allow us to call enter() for defineProperty on Xrays. r=mrbkap 
for anything. So let's just get rid of it. 
proxies, which are the cases where we care most about performance. 
Bug 836301 - Hoist enter() into BaseProxyHandler. r=mrbkap 
entered exactly once. 
Bug 836301 - Hoist enter() calls from {Xray,}Wrapper::foo into Proxy::foo. r=mrbkap 
Bug 836301 - Hoist some assertions, remove a bunch of no-op trap overrides, and add assertions that we've entered our policy. r=mrbkap 
Bug 812693 - Remove GetJSObjectOfWrapper. r=mrbkap 
patch. 
nsIScriptContext behind it. :-( 
This gets rid of one of the last consumers of REQUIRE_SCRIPT_CONTEXT. 
This gets rid of the last use of REQUIRE_SCRIPT_CONTEXT. \o/ 
release-mode behavior everywhere. Remove the crap. 
against it, since there are already callers that don't check the return value. 
Bug 834732 - Implement stricter cx handling in xpc_EvalInSandbox. r=mrbkap 
Bug 834732 - Push a cx in nsWindowSH::NewResolve. r=mrbkap 
Bug 834732 - Push a cx in nsPrincipal::SetDomain. r=mrbkap 
Bug 834732 - Push a cx in AdoptNode. r=mrbkap 
Bug 834732 - Improve pushing in nsJSEnvironment. r=mrbkap 
and correctness in the uncommon case. 
Bug 834732 - Audit callers of GetNativeContext and use AutoPushJSContext where appropriate. r=mrbkap 
Bug 834732 - Assert proper cx stack handling in WrapperFactory::Rewrap. r=mrbkap 
the policy passes *bp == false, we want to just throw. 
Not sure why these didn't appear on earlier try runs, but they're trivial. 
scope chain. At this point, it's not necessary anymore. 
of which should have |Components|. 
Bug 790732 - Remove Components warning and Telemetry. r=mrbkap 
Bug 790732 - Omit Components object for content scopes. r=mrbkap 
Bug 844211 - Make this-object nativeCall special-casing actually do something. r=jorendorff 
Bug 844211 - Only check the XBL bit if XBL scopes are disabled. r=bz 
Bug 825697 - Check for all wrapper types. r=mrbkap 
Bug 786142 - Crashtest. r=me 
Bug 805807 - Tests. r=mrbkap 
Bug 806751 - Crashtest. r=me 
Bug 809652 - Tests. r=jorendorff 
Bug 809674 - Tests. r=me 
Bug 850000 - Don't clobber exceptions set in security wrapper check() hooks. r=mrbkap 
Bug 813901 - Tests. r=mrbkap 
Bug 848939 - De-field scale.xml. r=jaws 
Bug 848939 - De-field videocontrols.xml. r=jaws,dao 
Bug 848939 - De-field marquee. r=jaws 
Bug 849730 - Let objectClassIs through for COWs. r=mrbkap 
Bug 850517 - Factor out child window lookup into a helper. r=mrbkap 
Bug 850517 - Support named window access via Xray. r=mrbkap 
spec-correct. 
It no longer does anything useful. 
browsing context name must be set to the empty string." 
Bug 850517 - Tests. r=bz 
Bug 850054 - Do some more work on nsMainThreadPtrHandle. r=bsmedberg 
Bug 850054 - Add opt-out for strict checking in nsMainThreadPtrHolder. r=bsmedberg 
Bug 850249 - Remove Off-Main-Thread XPCWrappedJS refcounting from Wifi Listeners. r=mcmanus 
Bug 850251 - Remove Off-Main-Thread XPCWrappedJS refcounting from HTTP Activity Distributor. r=mcmanus 
Comment says it all. 
This can go away as soon as XBL scopes are no longer behind a pref. 
Bug 658909 - Remove unnecessary ccx param. r=mrbkap 
here. Garbage XPCWN and JSObject pointers are bad. 
doesn't call SetName in that case). 
Bug 658909 - Implement carefully-checked unwrapping in XPCCallContext. r=mrbkap 
* nsStorage2SH::NewResolve 
Bug 658909 - Add a hack to support calling nohelper XPCWN methods without the proper |this|. r=mrbkap 
Bug 658909 - Stop doing all the crazy stuff in GetWrappedNativeOfJSObject. r=mrbkap 
Bug 658909 - Add a new, much simpler API for getting WNs from JS objects. r=mrbkap 
Bug 658909 - Remove GWNOJO from MarkWrappedNative. r=mrbkap 
Bug 658909 - Remove GWNOJO for helper stubs. r=mrbkap 
Bug 658909 - Remove GWNOJO from JSObject2NativeInterface. r=mrbkap 
Bug 658909 - Remove GWNOJO from JSValToXPCException. r=mrbkap 
Bug 658909 - Remove GWNOJO from XPCJSID. r=mrbkap 
but I'm going to leave that for now. 
Bug 658909 - Remove GWNOJO from nsXPConnect. r=mrbkap 
Bug 658909 - Remove GWNOJO from AccessCheck. r=mrbkap 
Bug 658909 - Remove GWNOJO from nsDOMClassInfo. r=mrbkap 
Bug 658909 - Remove GWNOJO from PreserveWrapper. r=mrbkap 
Bug 658909 - Port tearoff-handling guts of GWNOJO to XPCCallContext and remove GWNOJO. r=mrbkap 
Bug 658909 - Tests. r=mrbkap 
Bug 851851 - Null check win. r=me 
Bug 850000 - Don't clobber exceptions set in security wrapper check() hooks. r=mrbkap 
Bug 813901 - Tests. r=mrbkap 
Bug 848538 - Push a cx before calling into ctypes callbacks. r=jorendorff 
Bug 848538 - Followup test bustage fix on a CLOSED TREE. r=me 
Bug 851418 - Unscope the pusher in CompileEventHandlerInternal. r=mrbkap 
Bug 851987 - QI to nsPIDOMWindow instead of nsIDOMWindow in XPCWrappedJS. r=bz 
Bug 848939 - De-field scale.xml. r=jaws 
Bug 848939 - De-field videocontrols.xml. r=dao 
Bug 848939 - De-field marquee. r=jaws 
Bug 850245 - Remove Off-Main-Thread XPCWrappedJS refcounting from DNSListenerProxy. r=mcmanus 
Bug 850246 - Remove Off-Main-Thread XPCWrappedJS refcounting from ServerSocketListenerProxy. r=mcmanus 
Bug 823227 - Have the global scope polluter find the document via the global. r=bz 
Bug 823227 - Resolve named frames for non-HTML documents. r=bz 
Bug 823227 - Stop pref-controlling the GSP. r=mrbkap 
rather than writing code to support something that we don't do (and thus can't test). 
that might try to change contexts midstream. 
Bug 850247 - Move nsRequestObserverProxy to nsMainThreadPtr{Holder,Handle}. r=mcmanus 
Bug 851887 - Null-check XPConnect() in nsWindowSH::GlobalScopePolluterNewResolve. r=bz 
Bug 853283 - Grab the window directly from the navigator in nsNavigatorSH::NewResolve. r=mrbkap 
Comment says it all. 
This can go away as soon as XBL scopes are no longer behind a pref. 
Bug 658909 - Remove unnecessary ccx param. r=mrbkap 
here. Garbage XPCWN and JSObject pointers are bad. 
doesn't call SetName in that case). 
Bug 658909 - Implement carefully-checked unwrapping in XPCCallContext. r=mrbkap 
* nsStorage2SH::NewResolve 
Bug 658909 - Add a hack to support calling nohelper XPCWN methods without the proper |this|. r=mrbkap 
Bug 658909 - Stop doing all the crazy stuff in GetWrappedNativeOfJSObject. r=mrbkap 
Bug 658909 - Add a new, much simpler API for getting WNs from JS objects. r=mrbkap 
Bug 658909 - Remove GWNOJO from MarkWrappedNative. r=mrbkap 
Bug 658909 - Remove GWNOJO for helper stubs. r=mrbkap 
Bug 658909 - Remove GWNOJO from JSObject2NativeInterface. r=mrbkap 
Bug 658909 - Remove GWNOJO from JSValToXPCException. r=mrbkap 
Bug 658909 - Remove GWNOJO from XPCJSID. r=mrbkap 
but I'm going to leave that for now. 
Bug 658909 - Remove GWNOJO from nsXPConnect. r=mrbkap 
Bug 658909 - Remove GWNOJO from AccessCheck. r=mrbkap 
Bug 658909 - Remove GWNOJO from nsDOMClassInfo. r=mrbkap 
Bug 658909 - Remove GWNOJO from PreserveWrapper. r=mrbkap 
Bug 658909 - Port tearoff-handling guts of GWNOJO to XPCCallContext and remove GWNOJO. r=mrbkap 
Bug 658909 - Tests. r=mrbkap 
is incorrect. 
Bug 851895 - Expand the this-fixup hack to include Cu. r=mrbkap 
Bug 851895 - Tests. r=mrbkap 
Bug 844783 - Disable XBL scopes for XUL-whitelisted domains. r=bz 
Bug 844783 - Tests. r=bz 
Bug 848939 - De-field scale.xml. r=jaws 
Bug 848939 - De-field videocontrols.xml. r=dao 
Bug 853283 - Grab the window directly from the navigator in nsNavigatorSH::NewResolve. r=mrbkap 
Comment says it all. 
This can go away as soon as XBL scopes are no longer behind a pref. 
Bug 658909 - Remove unnecessary ccx param. r=mrbkap 
here. Garbage XPCWN and JSObject pointers are bad. 
doesn't call SetName in that case). 
Bug 658909 - Implement carefully-checked unwrapping in XPCCallContext. r=mrbkap 
* nsStorage2SH::NewResolve 
Bug 658909 - Add a hack to support calling nohelper XPCWN methods without the proper |this|. r=mrbkap 
Bug 658909 - Stop doing all the crazy stuff in GetWrappedNativeOfJSObject. r=mrbkap 
Bug 658909 - Add a new, much simpler API for getting WNs from JS objects. r=mrbkap 
Bug 658909 - Remove GWNOJO from MarkWrappedNative. r=mrbkap 
Bug 658909 - Remove GWNOJO for helper stubs. r=mrbkap 
Bug 658909 - Remove GWNOJO from JSObject2NativeInterface. r=mrbkap 
Bug 658909 - Remove GWNOJO from JSValToXPCException. r=mrbkap 
Bug 658909 - Remove GWNOJO from XPCJSID. r=mrbkap 
but I'm going to leave that for now. 
Bug 658909 - Remove GWNOJO from nsXPConnect. r=mrbkap 
Bug 658909 - Remove GWNOJO from AccessCheck. r=mrbkap 
Bug 658909 - Remove GWNOJO from nsDOMClassInfo. r=mrbkap 
Bug 658909 - Remove GWNOJO from PreserveWrapper. r=mrbkap 
Bug 658909 - Port tearoff-handling guts of GWNOJO to XPCCallContext and remove GWNOJO. r=mrbkap 
Bug 658909 - Tests. r=mrbkap 
is incorrect. 
Bug 851895 - Expand the this-fixup hack to include Cu. r=mrbkap 
Bug 851895 - Tests. r=mrbkap 
Bug 844783 - Disable XBL scopes for XUL-whitelisted domains. r=bz 
Bug 844783 - Tests. r=bz 
Bug 853571 - Add some belt-and-suspenders checks for sketchy scripted caller detection. r=bz 
Bug 853571 - Do special detection for sandboxPrototype to make sure the source gets set up right in postMessage. r=bz 
Bug 853571 - Tests. r=bz 
Bug 854019 - Continue checking the XBL bit if remote XUL disables XBL scopes. r=bz 
Bug 854558 - Enforce __exposedProps__ for Sandboxes. r=gabor 
Bug 854510 - Convert expected assertion into a 0-1 range. r=RyanVM 
where we don't check IsValid() or something that depends on it. 
Not sure why these didn't appear on earlier try runs, but they're trivial. 
scope chain. At this point, it's not necessary anymore. 
of which should have |Components|. 
Bug 790732 - Make Components console warning test pref-aware. r=mrbkap 
Bug 790732 - Define a lazily-resolved shim for Components. r=mrbkap 
Bug 790732 - Omit Components object for content scopes. r=mrbkap 
Bug 790732 - Components shim telemetry. r=mrbkap 
Bug 790732 - Components shim tests. r=mrbkap 
Not sure why these didn't appear on earlier try runs, but they're trivial. 
scope chain. At this point, it's not necessary anymore. 
of which should have |Components|. 
Bug 790732 - Make Components console warning test pref-aware. r=mrbkap 
Bug 790732 - Define a lazily-resolved shim for Components. r=mrbkap 
Bug 790732 - Omit Components object for content scopes. r=mrbkap 
Bug 790732 - Components shim telemetry. r=mrbkap 
Bug 790732 - Components shim tests. r=mrbkap 
Bug 854139 - Handle all DOM objects, not just ones that unwrap to nsISupports. r=bz 
Bug 790732 - Fix automation detection to handle Components shim. rs=mccr8 
Bug 790732 - Fix miscellaneous Components proliferation. r=me 
Bug 790732 - Flip pref to omit Components in content. r=me 
Bug 855922 - Check XBL scopes per-compartment in the SOW isSafeToUnwrap hook. r=bz 
Bug 856127 - Override the override. r=bz 
Bug 853709 - Deny accessor definitions in SecurityWrapper. r=mrbkap 
Bug 854480 - Remove old-style unwrapping from dom/bindings bindings. r=bz 
Bug 854480 - Remove old-style unwrapping from nsDOMClassInfo. r=mrbkap 
Bug 854480 - Remove old-style unwrapping from QuickStubs. r=mrbkap 
here, but this change should be equivalent. 
Bug 854480 - Remove old-style unwrapping from GetNativeOfWrapper. r=mrbkap 
Bug 854480 - Remove old-style unwrapping infrastructure. r=mrbkap 
Bug 854480 - Remove SCRIPT_ACCESS_ONLY. r=mrbkap 
Bug 856257 - Clean up nsXPConnect sandbox API a bit. r=mrbkap 
Bug 856257 - Use a sandbox in nsJSConfigTriggers. r=mrbkap 
Bug 845862 - Transitively apply waivers for accessor descriptors. r=mrbkap 
to make it correct first. :-) 
Bug 843829 - Apply transitive waivers for nativeCall. r=mrbkap 
Bug 843829 - Stop using IsTransparent for XBL field access, and explicitly waive instead. r=mrbkap 
Bug 843829 - Explicitly add a waiver in FieldGetter and FieldSetter. r=mrbkap 
Bug 843829 - Wrap unwaived content JS objects in opaque wrappers for XBL scopes. r=mrbkap 
Bug 845862 - Transitively apply waivers for accessor descriptors. r=mrbkap 
to make it correct first. :-) 
Bug 843829 - Apply transitive waivers for nativeCall. r=mrbkap 
Bug 843829 - Stop using IsTransparent for XBL field access, and explicitly waive instead. r=mrbkap 
Bug 843829 - Explicitly add a waiver in FieldGetter and FieldSetter. r=mrbkap 
Bug 843829 - Wrap unwaived content JS objects in opaque wrappers for XBL scopes. r=mrbkap 
certainly be switched. 
Bug 858642 - Null-check the XBL scope. r=bz 
Bug 839467 - Remove JSContext pushing in AdoptNode. r=mrbkap 
rely on the cx stack here and kill the param. 
Bug 856840 - Kill FindWrapper. r=mrbkap 
Bug 859957 - Simplify [[DefaultValue]] security wrapping setup. r=mrbkap,gabor,ejpbruel 
Bug 850253 - Remove Off-Main-Thread XPCWrappedJS refcounting from KeyGenRunnable. r=jedp 
Bug 860494 - Move the named property check further down in XrayWrapper. r=bz 
Bug 860494 - Tests. r=bz 
Bug 860438 - Straightforward cases. r=gabor 
This patch should not change any behavior. 
being non-null anyway, so that probably never happened. 
for now we just preserve the old behavior with a JSAutoRequest. 
Also, termination functions are going away soon in bug 841312. 
to do the careful thing. 
Bug 860438 - Use nsCxPusher in JSD. r=gabor 
Bug 860438 - Add assertion back in. r=gabor 
to have unintended consequences, so we fix it here. 
Bug 862918 - Only create nsGlobalModalWindow for the primary content shell. r=bz 
instanceof is behaving sketchily on modal window, and I want this test to be robust. 
where I munge this stuff. 
Bug 863646 - Force layout initialization in XPCOM initialization. r=bsmedberg 
Back out bug 863646 for make check orange (TestStartupCache). 
This reverts commit 2aec46b29d41c457b5b192ff51a448eb98598e20. 
It sure would be nice if C++ unit tests could run with internal linkage... :-( 
Bug 864363 - Force layout initialization in XPCOM initialization. r=bsmedberg 
This patch should not change any behavior. 
the right trap by just calling GetXrayTraits(wrapper) from non-templatized code. 
describe them in a big comment. 
Bug 860494 - Check for native properties before checking named children on XOWs. r=bz 
Bug 860494 - Move the named property check further down in XrayWrapper. r=bz 
Bug 862404 - Make nsCxPusher MOZ_CRASH if there's no stack. r=gabor 
Window-specific, there's not a pressing need to fix the other stuff. 
Bug 865948 - Return the appropriate value when the whitelist checks fail. r=gabor 
We leave it in nsContentUtils.cpp, which we'll handle in a separate patch. 
Bug 865729 - Remove nsIJSContextStack from dom/foo. r=gabor 
Bug 865729 - Remove nsIJSContextStack from xpconnect/loader. r=gabor 
Bug 865729 - Remove nsIJSContextStack from other miscellaneous parts of gecko. r=gabor 
simplifies the migration. 
Bug 865729 - Make nsContentUtils munge the cx stack with sXPConnect directly. r=gabor 
initialized before nsContentUtils. 
Bug 865729 - Use XPConnect directly in C++ unit tests. r=gabor 
Bug 865729 - Remove Push/Pop from public API. r=gabor 
Bug 865729 - Remove Context stack iterators. r=gabor 
\o/ 
Bug 865947 - Force all string event handlers to be evaluated in the content scope. r=jaws,bz 
Bug 834699 - Stop checking dom.xbl_scopes. r=bz 
Bug 834699 - Fix tests that munge dom.xbl_scopes. r=bz 
Bug 829872 - Add convenience version of Equals/Subsumes to nsIPrincipal. r=bz 
Bug 829872 - Return null for cross-origin contentDocument. r=bz 
Bug 829872 - Tests. r=bz 
think they're representative of any use-cases we might find on the web. 
Bug 868122 - Don't rely on nsIScriptContextPrincipal in nsDOMDataTransfer. r=gabor 
Bug 868122 - Calculate the JS_SaveFrameChain optimization by directly examining the principal of the default compartment. r=mrbkap,gabor 
\o/ 
domain into a remote-XUL domain, which thankfully can't happen. 
it even if they were). 
Bug 868675 - Don't throw for primitive-valued inputs to XPCNativeWrapper{,.unwrap}. r=gabor 
Bug 868675 - Allow waiving on non-native objects. r=gabor 
This should be the API we promote going forward. 
Bug 868675 - Tests. r=gabor 
nsIScriptContext. We have a more direct way of doing that. 
global here. 
Bug 868635 - Make merging CC heuristics go through scx. r=mccr8 
it in the codegen. 
Bug 868528 - Don't expose _content over Xrays. r=mccr8 
Bug 869800 - Remove JS_GetGlobalObject from workers. r=bent 
This makes workers the first consumer to be weaned off this API. \o/ 
Bug 857356 - Remove XBL field auto-waiving. r=bz 
Bug 857356 - Fix in-content XBL tests. r=bz 
remote XUL configuration. 
the browser assert. ;-) 
for reftests/crashtests. 
Bug 770840 - Remove XPConnect test that explicitly runs JS on a seperate thread. v1 
Bug 770840 - Add Runtime aborts when using XPCWrappedJS off-main-thread. v2 
Bug 871303 - Remove JS_GetGlobalObject from gdb tests. r=sfink 
Bug 871303 - Remove JS_GetGlobalObject from jsapi-tests. r=sfink 
Bug 871297 - Remove JS_GetGlobalObject from nsDeviceStorage. r=bz 
Bug 871299 - Remove JS_GetGlobalObject from SystemWorkerManager and RIL. r=mrbkap 
Bug 871301 - Remove JS_GetGlobalObject from nsCrypto and nsDirectoryViewer. r=bz 
Bug 871887 - Fix marquee _setEventListener. r=bz 
Bug 866823 - Don't create waivers in WaiveXrayAndWrap if the caller has no business waiving. r=gabor,mrbkap 
Bug 866823 - Handle standard prototype remapping in PrepareForWrapping. r=gabor,mrbkap 
Bug 873253 Crash clicking on file input in XUL whitelisted site r=bz 
I'm not sure what it used to do, but it sure doesn't do a damn thing now. 
around. 
mArguments and be clearer about the invariants we expect. 
This function proceeds to invoke CleanUp(), which also cleans this stuff up. 
should more or less preserve the current security behavior. 
the stringification of the dialog arguments must be returned. 
[1] https://www.w3.org/Bugs/Public/show_bug.cgi?id=21771 
checks are taken care of. So we can kill this off. 
dialogArguments and returnValue. 
Bug 860941 - Remove assertion annotations for the now-removed mArguments assertion. r=jst 
I'm not sure what it used to do, but it sure doesn't do a damn thing now. 
around. 
mArguments and be clearer about the invariants we expect. 
This function proceeds to invoke CleanUp(), which also cleans this stuff up. 
should more or less preserve the current security behavior. 
the stringification of the dialog arguments must be returned. 
[1] https://www.w3.org/Bugs/Public/show_bug.cgi?id=21771 
checks are taken care of. So we can kill this off. 
dialogArguments and returnValue. 
Bug 860941 - Remove assertion annotations for the now-removed mArguments assertion. r=jst 
Bug 872772 - Fix up lost Xray waivers when wrapping into the content compartment. r=gabor 
Bug 872772 - Tests. r=gabor 
Bug 871887 - Make sure |this|-binding is correct or marquee event listeners. r=bz 
Bug 834701 - Stop depending on the XBL bit in IsCallerXBL. r=bz 
Bug 834701 - Stop setting the XBL script in the browser. r=bz 
Bug 834701 - Remove the XBL bit from spidermonkey. r=luke 
Bug 874083 - Ignore domain in PrepareForWrapping prototype remapping. r=gabor, billm 
This is a more jaded version of my previous attempt. 
want to do this only when the stack frame is popped. 
\o/ 
Bug 868130 - Enter a request for all of OnJSContextNew. r=peterv 
Bug 868130 - Make sure mContext is stack-top in nsJSContext::CompileScript. r=gabor 
Bug 868130 - Make sure the new cx is stack-top in nsFrameMessageManager. r=gabor 
Bug 868130 - Use an AutoSafeJSContext in hueyfix. r=gabor 
Bug 868130 - Make sure to push a JSContext in TabParent::ReceiveMessage. r=gabor 
Bug 868130 - Use an AutoSafeJSContext in nsObjectLoadingContent::TeardownProtoChain. r=gabor 
unrelated cx. 
Bug 868130 - Make sure to push the context in the ObjectWrapperChild constructor. r=gabor 
Let's just bite the bullet and do this. 
Bug 868130 - Include nsCxPusher.h everywhere we need it, and stop including it from nsContentUtils.h. r=gabor 
js/src/xpconnect, so that we can take advantage of the stuff in xpcprivate.h. 
No more xpc::danger, for now. ;-) 
Bug 868130 - Add an AutoRequest inside nsCxPusher. r=gabor 
Bug 868130 - Fix sketchy cx consumers identified by gabor. r=gabor 
that we're not doing double-duty with the nsCxPusher change, though. 
Bug 868130 - Fix include guard. r=me 
Bug 872135 - Use the SafeJSContext in nsXPConnect::CheckForDebugMode. r=gabor 
Bug 871306 - Add an API for directly accessing the default JSD global and use it in ActivateDebugger. r=gabor 
it at all. 
this is what we want here. 
Bug 873698 - Remove JS_GetGlobalObject from plugins. r=gabor 
this code doesn't compartment mismatch right now, this should be equivalent. 
explicitly. 
\o/ 
Bug 862380 - Pass the entered id in addition to the wrapper action to Policy::deny. r=mrbkap 
We already do this, but it's helpful to be clear about it. 
Bug 862380 - Silently fail for enumerate-like operations on XOWs. r=mrbkap 
Bug 862380 - Tests. r=mrbkap 
Bug 874318 - Don't allow CALL on XOWs. r=mrbkap 
Bug 875251 - Push the JSContexts that get used in BluetoothAdapter, r=gabor 
Bug 870423 - Use the actual hasInstance proxy hook for function proxies. r=luke 
Bug 870423 - Tests. r=bz 
Bug 872135 - Remove unnecessary nsContentUtils include. r=me DONTBUILD 
Bug 876762 - Remove support for mScopeForNewJSObjects. r=luke 
Bug 877235 - Use the default global for just a little bit longer in JSD. r=gabor 
reports. 
Bug 858101 - Run the DefaultValue algorithm directly on the wrapper for Xrays. r=mrbkap 
Bug 858101 - Fix other tests. r=mrbkap 
Bug 877862 - Propagate exceptions from PrepareForWrapping. r=mrbkap 
Bug 878325 - Propagate exceptions out of CreateTemplateBuilder and LoadDataSources. r=bz 
Bug 878325 - Propagate exceptions out of ResolveForwardReferences. r=bz 
Bug 877862 - Propagate exceptions from PrepareForWrapping. r=mrbkap 
As such, this seems like a much more reasonable place to make debug mode changes. 
Bug 879341 - Use an AutoSafeJSContext in CheckForDebugMode like we should. r=gabor 
We can do this now, since it won't cause infinite recursion. 
happens in onload. 
Bug 877478 - Add a SpecialPowers API for wrapping callbacks and callback objects. r=mrbkap 
Bug 877478 - Fix mochitests with problematic callbacks to use the new API. r=mrbkap 
|subject| is quite often an XPCOM object that's not accessible to content. 
This way, we get the callback wrapping behavior for free. 
we're fixing those now. So we need to fix the tests that do this sort of thing. 
do the right thing given for script running in the scope of a BackstagePass. 
The only consumers here were the shells, which we've now fixed. 
Bug 877478 - Move all consumers of GetAppropriateSecurityManager to GetDefaultSecurityManager and rm the former. r=mrbkap 
Bug 877478 - Remove the machinery for security managers in XPCContext. r=mrbkap 
Starting with the above, this is the smallest unit change that will compile. 
Bug 877261 - Stop using XPCCallContext for XPCConvert. r=Ms2ger 
let's just remove the param all together for consistency. 
Bug 877261 - Remove XPCCallContext from XPCCComponents. r=Ms2ger 
Bug 877261 - Remove a bunch of now-unnecessary ccx declarations from nsXPConnect. r=Ms2ber 
Bug 877261 - Remove the last two non-quickstub XPCLazyCallContexts. r=Ms2ger 
Bug 877261 - Stop Passing lccx in a few Quickstubs places where we just want a JSContext. r=Ms2ger 
doesn't have any observable side-effects. So this should actually be safe. 
\o/ 
in the next patch. 
The large block is a simple move. 
Bug 770840 - Remove XPConnect test that explicitly runs JS on a seperate thread. v1 
Bug 770840 - Add Runtime aborts when using XPCWrappedJS off-main-thread. v2 
Bug 881517 - Just use Object.prototype for vanilla XPCWNs. r=mrbkap 
to a pre-CPG world. 
Bug 880697 - Add an RAII class to JSD to save/restore exception state. r=gabor 
Bug 880697 - Stop using clunky C API in JSD and start using RAII classes. r=gabor 
This obviates the need for a context at the JSD callsite. 
Bug 880697 - Root directly with a runtime in jsd_DestroyScriptHookProc. r=gabor 
pretty explicit about its compartments. 
Bug 880697 - Remove JSD_GetDefaultJSContext and fix callers. r=gabor 
Whew. 
Bug 880697 - Push in a few other suspicious places. r=gabor 
we can't support going forward. 
stuff that eventually needs to move out of the JSContext. 
mechanism. 
overrides and version introspection. Let's just kill it. 
anymore, and it's just a debugging aid to boot. Let's kill it. 
taken advantage of. Let's continue to support it explicitly. 
Bug 880917 - Convert JS_SetVersion API consumers to per-compartment versions. r=luke 
Let's just kill the test. 
Bug 880917 - Add an API to mutate the version on the compartment and use it from the shells. r=luke 
Bug 880917 - Remove js_RevertVersion and associated shell functionality. r=luke 
\o/ 
Bug 880917 - Hoist defaultVersion into the runtime and remove it from the JSContext. r=luke 
the version of the running script anyway. 
just infer our global from the active compartment. 
sometimes is, here). And that's exactly what AutoJSContext gives us. 
Bug 884362 - Make IDBRequest::CaptureCaller use the cx stack and decxify a bunch of IDB. r=bent 
Bug 884362 - Play Maybe<> games to root |temp| in the right circumstances. r=bz 
There's not a lot we can do without it in the browser these days. 
Bug 883450 - Unscope the JSAutoRequest in XPCJSContextStack. r=gabor 
Bug 883450 - Remove custom request munging in XPCCallContext and use a JSAutoRequest. r=gabor 
Bug 883450 - Re-order stuff in CallSetup so that we construct the RootedObject after the Push. r=bz 
Bug 883450 - Miscellaneous requests. r=gabor 
Bug 883450 - Assert that we're in a request whenever we create a Rooted<T>. r=terrence 
Bug 875790 - Add cx push back into nsJSContext::CompileScript. r=me 
Bug 885800 - Unwrap CCWs in Cu.isDeadWrapper. r=gabor 
Bug 887098 - Cache nodePrincipal when InstallTrigger is bound. r=gavin 
we can't support going forward. 
stuff that eventually needs to move out of the JSContext. 
mechanism. 
overrides and version introspection. Let's just kill it. 
anymore, and it's just a debugging aid to boot. Let's kill it. 
taken advantage of. Let's continue to support it explicitly. 
Bug 880917 - Convert JS_SetVersion API consumers to per-compartment versions. r=luke 
Let's just kill the test. 
Bug 880917 - Add an API to mutate the version on the compartment and use it from the shells. r=luke 
Bug 880917 - Remove js_RevertVersion and associated shell functionality. r=luke 
\o/ 
Bug 880917 - Hoist defaultVersion into the runtime and remove it from the JSContext. r=luke 
the version of the running script anyway. 
Bug 880917 - Add a clobber. r=RyanVM 
Bug 865745 - Stop depending on mCx during frame script execution. r=smaug 
Bug 865745 - Rename nsFrameScriptExecutor::DidCreateCx. r=smaug 
we should make sure to keep that alive for anyone that might be using it. 
uses the same error reporter as JSMs and such, which is probably fine. 
AutoSafeJSContext will always push. 
nsFrameMessageManager::GetJSContext, which we're about to remove. 
Bug 865745 - Remove mContext from nsFrameMessageManager. r=smaug 
Their lifetimes should be the same, and the latter is going away. 
Bug 865745 - Return the safe JSContext for Tab Children in GetJSContextForEventHandlers. r=smaug 
Bug 865745 - Remove mCx from nsFrameScriptExecutor. r=smaug 
Bug 865745 - Remove nsFrameScriptExecutor::DestroyCx. r=smaug 
Bug 865745 - Stop depending on mCx during frame script execution. r=smaug 
Bug 865745 - Rename nsFrameScriptExecutor::DidCreateCx. r=smaug 
we should make sure to keep that alive for anyone that might be using it. 
uses the same error reporter as JSMs and such, which is probably fine. 
AutoSafeJSContext will always push. 
nsFrameMessageManager::GetJSContext, which we're about to remove. 
Bug 865745 - Remove mContext from nsFrameMessageManager. r=smaug 
Their lifetimes should be the same, and the latter is going away. 
Bug 865745 - Return the safe JSContext for Tab Children in GetJSContextForEventHandlers. r=smaug 
Bug 865745 - Remove mCx from nsFrameScriptExecutor. r=smaug 
Bug 865745 - Remove nsFrameScriptExecutor::DestroyCx. r=smaug 
Bug 865745 - Continue to ignore onTabClose exception in metro 8 Session Store. r=me 
is equivalent. This facilitates the refactoring in the next patch. 
Bug 888104 - Introduce AutoCxPusher and reimplement nsCxPusher in terms of it. r=gabor 
Bug 888104 - Reimplement Auto*JSContext in terms of AutoCxPusher. r=gabor 
Bug 888104 - Fix xpcshell linkage error on windows. r=me CLOSED TREE 
Bug 888225 - Check for child window naming collisions before defining global properties in GlobalResolve. r=bz 
Bug 888682 - Inline traverse/unlink for mGlobal and simplify CC goop for nsInProcessTabChildGlobal.cpp. r=smaug 
Bug 882905 - Remove hasVersion from js::CompartmentOptions. r=luke 
Bug 860085 - Use an AutoPushJSContext in XPCCallContext instead of doing it manually. r=gabor 
Bug 860085 - Rename xpc::{Push,Pop}JSContext and make them assert against DOM JSContexts. r=gabor 
Bug 860085 - Remove unused AutoPopJSContext. r=gabor 
without instantiating an AutoCxPusher on the stack. 
So we don't need to do any deferred destruction of the cx anymore. 
Bug 860085 - Remove nsIXPConnect::ReleaseJSContext. r=gabor 
code, and makes the XPCCallContext destructor start to look pretty sane. :-) 
Bug 867486 - Remove |Components| from content sandboxes. r=gabor 
Bug 890081 - Make 'document' permanent in nsIDocument::WrapObject. r=bz 
Bug 885668 - Removed specialized function object principal machinery from CAPS. r=bz 
Bug 889911 - Introduce xpc::SystemErrorReporter, roughly based on mozJSComponentLoader's error reporter. r=mrbkap 
Bug 889911 - Replace mozJSLoaderErrorReporter with SystemErrorReporter and remove the former. r=mrbkap 
these tests end up getting confused by warnings. 
I'll switch it to SystemErrorReporter in that bug. 
Bug 889911 - Introduce xpc::SystemErrorReporter, roughly based on mozJSComponentLoader's error reporter. r=mrbkap 
I'll switch it to SystemErrorReporter in that bug. 
lol @ 'ShouldCompoleOnly'. 
make sense in the IPC context, and doesn't appear to be used either. 
Bug 889714 - Reduce the number of places where we pull |env| off cx. r=mrbkap 
quit(), which only exist in the scope of that global. 
Bug 889714 - Stop manually holding onto system JSPrincipals. r=mrbkap 
here shortly. 
Bug 889714 - Use the SafeJSContext in XPCShellEnvironment. r=mrbkap 
There's no reason we should be doing this. 
Bug 889911 - Introduce xpc::SystemErrorReporter, roughly based on mozJSComponentLoader's error reporter. r=mrbkap 
Bug 889911 - Replace mozJSLoaderErrorReporter with SystemErrorReporter and remove the former. r=mrbkap 
these tests end up getting confused by warnings. 
I'll switch it to SystemErrorReporter in that bug. 
lol @ 'ShouldCompoleOnly'. 
make sense in the IPC context, and doesn't appear to be used either. 
Bug 889714 - Reduce the number of places where we pull |env| off cx. r=mrbkap 
quit(), which only exist in the scope of that global. 
Bug 889714 - Stop manually holding onto system JSPrincipals. r=mrbkap 
here shortly. 
Bug 889714 - Use the SafeJSContext in XPCShellEnvironment. r=mrbkap 
There's no reason we should be doing this. 
This thing is...yikes. 
is in a compartment, which isn't a valid assumption going forward. 
Fix it. 
JS_SetGlobalObject fixes the problem. 
This gets rid of the wonky setCompartment usage in that function. 
Bug 887334 - Don't rethrow in quickstubs if there's already an exception pending. r=luke 
easily backport it. 
the default compartment. 
it call into nsJSUtils. 
Bug 887334 - Miscellaneous JSAutoCompartments. r=luke 
I don't know why it's done this way, but it sure needs to change. 
Bug 887334 - Enter a compartment in indexedDB's ThreadLocalJSRuntime. r=bent 
Bug 887334 - Conditionally enter a compartment in WorkerPrivate::DoRunLoop. r=mrbkap 
Bug 887334 - Push a JSContext in nsGlobalWindow::SecurityCheckURL. r=gabor 
piece of embedder state on the cx. 
the now-dead cx. 
Bug 887334 - Reorder some bookkeeping and assert in setCompartment that both the old and new compartments are marked as entered. r=luke 
Bug 887334 - Enter a compartment in b2g-only unloading code. r=me CLOSED TREE 
Bug 896126 - Don't wrap pending exceptions into the atoms compartment. r=luke 
I accidentally squashed them while rebasing. :-( 
(since it's triggered from within the JS engine in various cases as well). 
Bug 870043 - Add support for scripted operation callbacks in XPCShell. r=mrbkap 
a task is out of scope for this bug, so we just add a way to fake it. 
Bug 870043 - Watchdog tests. r=mrbkap 
Bug 870043 - Disable the watchdog on b2g. r=mrbkap 
CLOSED TREE 
problem to solve, but with the above it becomes trivial. 
Things go wrong much earlier than the assertion we currently hit. 
Clear the exception and note the failure to the stream. 
Bug 897676 - Null out |si| if we end up using that of the proto in WrapNewGlobal. r=mrbkap 
This is more correct, since the object very often is not a global. 
Bug 899245 - Rename JS_SetGlobalObject and move it into jsfriendapi. r=luke 
This was done with perl/grep. 
pref. 
This is just an overzealous assertion, rather than a security issue. 
Bug 898939 - Crashtest. r=me 
Bug 897676 - Null out |si| if we end up using that of the proto in WrapNewGlobal. r=mrbkap 
Bug 898939 - Disable crashtest on android. r=me CLOSED TREE 
does. 
Bug 890576 - Disallow resumption values in onNewGlobalObject hooks. r=jimb 
Bug 890576 - Make onNewGlobalObject infallible. r=jimb 
Bug 885388 - Introduce a mechanism to make certain globals invisible to the debugger. r=jimb 
other fuzzing folk know about it. 
Bug 885388 - Hook up invisibleToDebugger to js shell and add test coverage. r=jimb 
Bug 885388 - Make compilation scopes invisible to the debugger. r=mrbkap 
Bug 897322 - Match up the script global and compile-and-go global when cloning function scripts. r=jimb 
Bug 897322 - Assert when scripts are created that we've fired onNewGlobalObject. r=jimb 
Bug 897322 - Allow callers to manually fire OnNewGlobalObject when bootstrapping is complete. r=luke 
Bug 901658 - Introduce an uninlined version of JSScript::global() to use in Debugger.h assertions. r=njn 
Bug 901162 - Remove unused mExecuteDepth machinery. r=bz 
Bug 901162 - Hoist EvaluateString into nsJSUtils. r=bz 
Bug 901162 - Inline CompileScript into the one caller. r=bz 
Bug 901162 - Inline ExecuteScript in the one caller. r=bz 
Bug 901362 - Refactor nsJSUtils::EvaluateString to take an EvaluateOptions structure. r=gabor 
Bug 901362 - Give EvaluateString consumers the option to propagate exceptions instead of reporting. r=gabor 
Apparently the current setup is incidentally safe, but far from kosher. 
Bug 902718 - Add a mechanism to assert that the stack-top cx is an XBL compilation scope. r=bz 
Bug 902718 - Stop taking an nsIScriptContext in XBL serialization routines. r=bz 
subsequent patches. 
correctly. 
Bug 902718 - Use the SafeJSContext for XBL serialization and deserialization. r=bz 
Bug 902718 - Use the SafeJSContext for prototype member compilation. r=bz 
Bug 902718 - Stop using nsIScriptGlobalObjectOwner to grab the compilation global. r=bz 
Bug 902718 - Remove nsIScriptGlobalObjectOwner from XBL. r=bz 
Bug 902718 - Stop using nsIScriptContext for XBL compilation. r=bz,mccr8 
Bug 902718 - Fold EnsureScriptEnvironment into GetCompilationGlobal. r=bz 
Bug 901364 - Hoist slow script prompt machinery into nsGlobalWindow. r=mrbkap 
Bug 901364 - Implement a replacement operation callback in XPConnect. r=mrbkap 
Bug 901364 - Switch to the XPConnect operation callback for DOM windows. r=mrbkap 
Bug 901364 - Make operation callbacks runtime-wide. r=mrbkap 
Bug 901364 - Remove a bunch of now-unused modal state tracking machinery. r=mrbkap 
been preffed off for a while. 
place is helpful in getting rid of spec-nonsensical machinery. 
Bug 903212 - Remove ScriptEvaluated, and simplify callers. r=mrbkap 
Bug 903212 - Remove nsIXPCScriptNotify machinery. r=mrbkap 
Bug 903212 - Remove explicit compartment GC machinery. r=smaug 
XPCWrappedJS). As such, this should solve a number of our startup ordering woes. 
hold the prototype document alive in the cache. 
Bug 901106 - Inline and remove nsIScriptContext::{Serialize,Deserialize}. r=smaug 
document, so it will never have script disabled. 
Bug 901106 - Pass nsXULPrototypeDocuments directly through serialization and use AutoSafeJSContext at the serialization point. r=smaug 
Bug 901106 - Stop implementing nsIScriptGlobalObjectOwner in nsXULPrototypeDocument. r=smaug 
stuff from being traversed during CC. 
All this stuff is now for nsGlobalWindow's use only. 
related failures in the IPC indexedDB tests. 
We'll rename the namespace shortly. 
We also move the runtime out of the namespace, which requires some updates. 
Bug 901106 - Eliminate the nsJSRuntime namespace. r=mrbkap 
This means that all subsequent slots on the global are unused. 
non-workers), but didn't drop the slot count in bug 797821. 
Bug 907508 - Define the slot count for xpconnect and worker globals in terms of the slots defined in DOMJSClass.h. r=bz 
mhordecki needs this in bug 898559. 
for myself to back this out by sept 3. 
out of the jsval overload, which will be helpful when we inline the first part. 
Whitespace change in the next patch. 
Bug 907937 - Whitespace change. r=billm 
looked over. 
win because primitive jsval wrapping is now entirely inlined. 
Bug 907937 - Optimistically check the CCW cache early in opt-build value wrapping. r=billm 
of code around, and I'm afraid of a mismerge. 
Bug 907937 - Followup fix for review-nit bustage. r=me CLOSED TREE 
Bug 907937 - Followup comment fixes. r=billm DONTBUILD 
Bug 903891 - Fix category manager tests to use a contract-id that we can create in content. r=emk 
XUL documents. 
Bug 903891 - Default the iid to nsISupports in NativeInterface2JSObject, and assert |Interface| when getting an XPCWrappedNative. r=mrbkap 
this patch should catch us if anything goes wrong. 
phase of a marking GC. 
Bug 899367 - Explicitly trace outer windows, rather than doing it via JSContext iteration. r=mccr8 
deliberate about each of these steps. 
get set implicitly during the first call to InitClasses. 
Bug 899367 - Stop depending on the default compartment object for DOM JSContexts. r=mccr8 
Bug 899367 - Have nsGlobalWindow go through nsJSContext to access the outer. r=mccr8 
JSContext. 
\o/ 
Default compartment objects are never gray anymore. 
Bug 899367 - Remove check for non-WindowProxy objects on an scx. r=mccr8 
another day. 
file for the various issues, but let's not let them block this landing. 
one, or moving the appropriate stuff into friend fields. 
than 4MB stacks. But this seems strictly better given the logic involved here. 
Bug 732665 - Use separate stack depths for XPConnect JS. r=luke 
Bug 732665 - Tests. r=luke 
This speeds up local xpcshell-test runs by ~6 seconds. 
Bug 910863 - Skip firing the operation callback if a debugger is attached. r=mrbkap,glandium 
this patch should catch us if anything goes wrong. 
phase of a marking GC. 
Bug 899367 - Explicitly trace outer windows, rather than doing it via JSContext iteration. r=mccr8 
deliberate about each of these steps. 
get set implicitly during the first call to InitClasses. 
Bug 899367 - Stop depending on the default compartment object for DOM JSContexts. r=mccr8 
Bug 899367 - Have nsGlobalWindow go through nsJSContext to access the outer. r=mccr8 
JSContext. 
\o/ 
Default compartment objects are never gray anymore. 
Bug 899367 - Remove check for non-WindowProxy objects on an scx. r=mccr8 
another day. 
Bug 899367 - Followup bustage fix for some functions that were renamed out from under me. r=me CLOSED TREE 
removal of the XBL bit. 
The crashtest changes are untested (aside from the fact that they don't crash). 
Bug 912322 - Stop making XBL methods available to the web. r=bz 
Bug 912322 - Sync pref from reftest-cmdline.js to bootstrap.js. r=jgriffin 
removal of the XBL bit. 
The crashtest changes are untested (aside from the fact that they don't crash). 
Bug 912322 - Stop making XBL methods available to the web. r=bz 
the case anymore, so let's hande this explicitly. 
Bug 905364 - Force the SafeJSContext to fire up in xpcshell. r=bz 
XPCWrappedJS). As such, this should solve a number of our startup ordering woes. 
Bug 856437 - Remove LookupMethod test coverage. r=gabor 
Bug 856437 - Remove lookupMethod API. r=gabor 
Bug 856437 - Remove same-compartment permissive Xray machinery. r=gabor 
Bug 914325 - Leave ourselves some room to make the call into chrome. r=luke 
Note also MMAdeathGrip earlier in the function. 
Note also MMAdeathGrip earlier in the function. 
Bug 891891 - Back out crash diagnostics. r=me 
Bug 860494 - Tests. r=bz 
Bug 916983 - Stop allowing writes for named access to cross-origin properties. r=bz 
drops to zero and then increases again. Let's do this right. 
destruction triggers a GC, which we depend on. But we can do that manually. 
Bug 905926 - Invoke JS_DestroyRuntime before we totally tear down the XPCJSRuntime. r=billm 
Bug 905926 - Remove watchpoints on all compartments during shutdown, not just the cx compartment. r=billm 
used in the GC. 
any meaning. 
Bug 905926 - Remove workaround in xpcshell. r=billm 
Bug 874502 part 2.  Fix addon sdk to not assume synchronous closing of windows.  r=mossop 
Bug 874502 part 3.  Fix a11y tests to not assume synchronous window closing.  r=tbsaunde 
Bug 874502 part 4.  Fix private browsing tests to not assume synchronous window closing.  r=jdm 
Bug 874502 part 5.  Fix JP test-windows to handle on{activate,deactivate} after close().  r=mossop 
Bug 874502 part 6.  Remove IsCallerChrome path for tearing down windows synchronously.  r=bzbarsky 
Bug 917009 - Remove old-style object principal calculation. r=bz 
Bug 914939 - Don't assert against OOM in XPCWrappedJS QI hooks. r=gabor 
Bug 916939 - Drop support for named and indexed access on cross-origin windows. r=bz 
Bug 905909 - Avoid infinite recursion in nsTreeBodyFrame. v1 
Backed out changeset 86128d3eac88 (bug 916939) for breaking the web. r=me 
Shuffle some code. 
Bug 917593 - Don't assert for zero-length strings. r=Waldo 
Bug 917915 - Don't leave an exception pending in JS_ReportPendingException. r=jorendorff 
Bug 917909 - Stop asserting that the last JSContext is destroyed outside of GC. r=billm 
Bug 917909 - Remove mLastContext hackery in workers. r=khuey r=billm 
when we spin up the runtime. 
Bug 916945 - Stop returning cross-origin subframes for named access in global scope (unless the iframe name matches). r=bz 
Bug 916945 - Tests. r=bz 
Bug 917593 - Don't assert for zero-length strings. r=Waldo 
Bug 921399 - Fix memory leak. r=gabor 
Bug 920553 - Hoist GlobalProperties out of SandboxOptions. r=gabor 
(b) the failure indicates OOM. 
Bug 920553 - Introduce Cu.importGlobalProperties API. r=gabor 
Bug 914618 - Reimplement XML pretty printing with events. r=smaug 
Bug 921448 - Implement sane default behavior for fun_toString for all proxies. r=ejpbruel 
Bug 921448 - Use callability rather than object classes when determining how to toSource(). r=ejpbruel 
like they're equal citizens with regular proxies. 
forward to the target, and we'll get that for free. 
Bug 921448 - Stop using FunctionObjectProxies for ScriptedIndirectProxies. r=ejpbruel 
\o/ 
Bug 921448 - Move ProxyObject::New to vm/ProxyObject.cpp. r=ejpbruel 
with an in-content XBL binding. 
lot from duplicating it. 
Bug 921454 - Refactor proxy creation to use an options object. r=jonco 
Bug 921454 - Add an option for explicitly forcing foreground finalization. r=jonco 
Bug 921454 - Match the background-finalize-ity of the DeadObjectProxy with that of origobj in js_TransplantObjectWithWrapper. r=jonco 
us to assert when transplanting them. 
to new bindings), we apparently never tested the waiver path. :-( 
Bug 921454 - Tests for NAC. r=jonco 
Bug 924431 - Remove dumbmake dependency of js/xpconnect on js/src. r=gps 
Bug 922009 - MOZ_CRASH when trying to transplant objects with SCSWs. r=mrbkap 
Bug 928476 - Add telemetry to measure cross-global adopts. r=mrbkap,nfroyd 
but both are useful for consistency. 
Bug 911864 - Frob the marquee in a different fashion. r=me 
and references a file that doesn't exist in the tree. 
Bug 911864 - Expose an API to copy a single property across compartments. r=jorendorff 
Bug 911864 - Introduce an explicit opt-in attribute for exposing methods and properties to untrusted content. r=smaug 
Bug 911864 - Install XBL members in the safe scope, then clone them into content (rather than the reverse). r=smaug 
Bug 911864 - Annotate the members of marquee that correspond to properties in HTMLMarqueeElement per HTML5. r=smaug 
Bug 911864 - Add annotations to our XBL tests as-needed. r=smaug 
Bug 911864 - When QIing objects bound with XBL scopes, route the XPCWrappedJS through an XrayWrapper from the XBL scope. r=smaug 
Bug 911864 - Only expose XBL members which have the exposeToUntrustedContent attribute set. r=smaug 
Bug 911864 - Make in-content XBL event handlers allowuntrusted=false by default. r=smaug 
Bug 840488 - Refactor Gecko to provide a more direct API to ask whether script is allowed for a given global. r=bz 
context, which lets us switch CheckFunctionAccess over to ScriptAllowed. 
does is silly. 
+</html> 
Bug 840488 - Introduce a mechanism to temporarily or permanently block script for a given scope, and use it for unsafe channels. r=bz 
Bug 840488 - Directly mark compartments whose docshells disable script execution. r=bz 
Bug 840488 - Move print system script disabling to the new API. r=bz 
good enough. 
Bug 840488 - Move nsXULDocument to new-style scripts checks. r=bz 
There are now no longer any consumers that set this to false. 
nsJSUtils::EvaluateString. 
Bug 840488 - Compute immunity from caps checks exactly once, and kill nsScriptSecurityManager::CanExecuteScripts. r=bz 
After one cycle or so, we'll rip out the old API. 
Bug 840488 - Tests. r=bz 
Bug 938297 - Stop using GetContextFromDocument in GetStateObject. r=bz 
Bug 936232 - Use setConstructor for TypedObject. r=jorendorff 
Bug 938429 - Bump the trusted script buffer for macosx64 a bit. r=luke 
Bug 940783 - Throw when accessing properties and methods on history objects in non-active documents. r=bz 
Bug 940783 - Tests. r=bz 
* nsGlobalWindow is actually the only thing that implements nsIScriptGlobalObject. 
Bug 939166 - Stop going through nsIScriptGlobalObject in CallSetup. r=bz 
Bug 866823 - Tests. r=gabor,mrbkap 
Bug 858101 - Tests. r=mrbkap 
Bug 887098 - Tests. r=gavin 
This is necessary to see this stuff over Xrays. 
Bug 933681 - Factor JSStdName table iteration into a helper function. r=jorendorff 
into the JSStdNames table. 
Bug 933681 - Rename the tables in jsapi.cpp to something that makes sense. r=jorendorff 
Bug 933681 - Introduce an API to map from names to JSProtoKeys. r=jorendorff 
Bug 933681 - Add lookups for standard classes in XrayWrapper. r=jorendorff 
Bug 933681 - Resolve canonical eval() onto Xrayed globals. r=jorendorff 
Bug 933681 - Tests. r=jorendorff 
Bug 928636 - Implement MOZ_RELEASE_ASSERT. r=Waldo 
Bug 928636 - Whitespace changes. r=Waldo 
Bug 928616 - Clean up JS_CopyPropertiesFrom. r=jorendorff 
Bug 911303 - Remove manual Destroy() routine from CycleCollectedJSRuntime. r=billm 
Bug 943152 - Tests. r=jgriffin 
Bug 932906 - Exempt Remote XUL from CanCreateWrapper checks. r=bz 
Bug 945826 - Trap overrides and comments. r=jorendorff 
Bug 937317 - Make TabChildGlobal implement nsIGlobalObject. r=bz 
Bug 937317 - Factor out the shareable parts of CallSetup into AutoEntryScript and AutoIncubentScript. r=bz 
Bug 937317 - Implement basic script settings stack machinery. r=bz 
Bug 937317 - Manipulate the script settings stack from the RAII classes. r=bz 
Bug 937317 - Implement and expose GetIncumbentGlobal. r=bz,luke 
CallbackObject. 
See the 'incumbent script' stuff in the WebIDL spec. 
Bug 937317 - Return null from ToWebIDLCallback if one doesn't already exist. r=bz 
This is an easy bonus chunk of the work to phase out cx pushing in the browser. 
See bug 937317 comment 38. 
Bug 937317 - Tests. r=bz 
Bug 947080 - Update clobber file. r=me 
Bug 937317 - Make TabChildGlobal implement nsIGlobalObject. r=bz 
Bug 937317 - Factor out the shareable parts of CallSetup into AutoEntryScript and AutoIncubentScript. r=bz 
Bug 937317 - Implement basic script settings stack machinery. r=bz 
Bug 937317 - Manipulate the script settings stack from the RAII classes. r=bz 
Bug 937317 - Implement and expose GetIncumbentGlobal. r=bz,luke 
CallbackObject. 
See the 'incumbent script' stuff in the WebIDL spec. 
Bug 937317 - Return null from ToWebIDLCallback if one doesn't already exist. r=bz 
This is an easy bonus chunk of the work to phase out cx pushing in the browser. 
See bug 937317 comment 38. 
Bug 937317 - Tests. r=bz 
Bug 937317 - touch clobber file. r=me 
Bug 944407 - Allow scripts for an XBL binding if and only if the XBL document comes from a scriptable domain. r=bz 
Bug 944407 - Tests. r=bz 
Bug 937317 - Make TabChildGlobal implement nsIGlobalObject. r=bz 
Bug 937317 - Factor out the shareable parts of CallSetup into AutoEntryScript and AutoIncubentScript. r=bz 
Bug 937317 - Implement basic script settings stack machinery. r=bz 
Bug 937317 - Manipulate the script settings stack from the RAII classes. r=bz 
Bug 937317 - Implement and expose GetIncumbentGlobal. r=bz,luke 
CallbackObject. 
See the 'incumbent script' stuff in the WebIDL spec. 
Bug 937317 - Return null from ToWebIDLCallback if one doesn't already exist. r=bz 
This is an easy bonus chunk of the work to phase out cx pushing in the browser. 
See bug 937317 comment 38. 
Bug 937317 - Tests. r=bz 
Bug 937317 - touch clobber file. r=me 
Bug 944407 - Allow scripts for an XBL binding if and only if the XBL document comes from a scriptable domain. r=bz 
Bug 944407 - Tests. r=bz 
Bug 944011 - Remove explicit cx pushing from event code. r=bz 
Bug 944011 - Tests. r=bz 
Bug 913734 - Remove custom privilege setup for cut/copy/paste. r=mrbkap 
The rest of this mechanism goes away in subsequent patches. 
We stop using the infrastructure in this patch, and rip it out in the next one. 
Bug 913734 - Remove now-unused policy machinery. r=mrbkap 
Bug 913734 - Remove EnabledID() machinery. r=mrbkap 
Bug 913734 - Remove namespace mozilla::hotness. r=mrbkap 
Bug 946815 - Hoist system-principal checks into CommonTestPermission. r=baku 
Bug 946815 - Handle nsIExpandedPrincipal instances in the permission manager API. r=baku 
Bug 950909 - Forward native aggregation to the root XPCWrappedJS. r=mccr8,sr=smaug 
Bug 950909 - Tests. r=smaug 
Bug 951847 - Push a cx in TestShellParent. r=gabor 
Bug 951847 - Don't construct an XPCCallContext just to find a JSContext. r=gabor 
Bug 951847 - Make the |cx| param to XPCCallContext mandatory. r=gabor 
Bug 951847 - Stop pushing a cx in the XPCCallContext constructor. r=gabor 
Bug 887928 - document.referrer should be based on the incument script settings object. r=bz 
This lets us remove the usage of nsISecurityCheckedComponent. See the next patch. 
Bug 951948 - Stop using nsISecurityCheckedComponent for nsJSID. r=mrbkap 
Bug 951948 - Remove most nsIXPCScriptable junk on nsXPCComponents. r=mrbkap 
that. 
Bug 951948 - Make AttachComponentsObject a non-static method on XPCWrappedNativeScope. r=mrbkap 
change that test. 
Bug 951948 - Separate out the unprivileged parts of nsXPCComponents into a separate interface and class. r=mrbkap 
Bug 951948 - Store nsXPCComponentsBase on XPCWrappedNativeScope, so that we can have either. r=mrbkap 
Bug 951948 - Add a way for automation to force the creation of a privileged Components object for an unprivileged scope. r=ted,r=mrbkap 
Bug 951948 - Use nsXPCComponentsBase for everything but system-principaled scopes. r=mrbkap 
while we're at it. 
This should have been in bug 951948 bug I missed it. 
Bug 794943 - Remove custom support for nsISecurityCheckedComponent in nsXPCWrappedJS. r=mrbkap 
Bug 794943 - Make window.controllers [ChromeOnly], and remove nsISecurityCheckedComponent from nsXULControllers. r=bz 
Bug 794943 - Remove checks for nsISecurityCheckedComponent in caps. r=mrbkap 
Bug 794943 - Remove nsISecurityCheckedComponent interface. r=mrbkap 
Bug 794943 - Remove CheckXPCPermissions. r=mrbkap 
Bug 794943 - Followup bustage fix. r=me CLOSED TREE 
Bug 961054 - Don't invoke SetLastResult until the completion of an XPCWN method call. r=mrbkap 
We've fixed Components, and SOWs are new-binding only. Youpie! 
This became obsolete with bug 922009. 
As noted, I've filed a bug for making this context- and saveFrameChain-agnostic. 
But how will we call from Gecko into the JS engine to query CAPS via a callback? 
is not to throw. 
simpler than the alternative. 
sets up NullSecurityCallbacks by default. 
Bug 957688 - Remove checkAccess nsIXPCScriptable hook. r=mrbkap 
who remembers why this was written. 
Bug 957688 - Kill off checkAccess. r=mrbkap 
Bug 957688 - Remove nsIScriptSecurityManager::CheckPropertyAccess. r=mrbkap 
\o/ 
Conceptually, these all boil down to "is this a security wrapper?" 
Bug 965082 - Only run the {get,set}PrototypeOf override for non-SecurityWrappers. r=mrbkap,r=gabor 
Bug 965082 - Tests. r=mrbkap,r=gabor 
function associated with it. 
Bug 959012 - Remove unused cx parameter from JS_IdentifyClassPrototype. r=jorendorff 
Bug 959012 - Move js_GetClassObject creation logic into GlobalObject. r=jorendorff 
The current behavior is crazy, and most definitely not Xray-safe. 
Bug 959012 - Clean up and separate the semantics of js_{Get,Find}Class{Prototype,Object}. r=jorendorff 
Bug 956385 - Don't count non-matching messages toward the total. r=ted 
will require a |cx| and may GC. 
wrappers). 
bail-out case at the bottom of js_ReportUncaughtException. 
This stuff is exactly rooted now, so this is all unnecessary. 
updating a few tests. 
Bug 872273 - Tests. r=smaug 
Bug 962449 - Don't directly invoke init functions in GlobalObject::initStandardClasses. r=luke 
Bug 962449 - Stop manually invoking initialization routines in GlobalObject.h. r=luke 
Bug 962449 - Remove init functions from JSStdName, and pipe everything through ensureConstructor. r=luke 
to skip it for now. 
Bug 962449 - Make various getOrCreate methods static to efficiently fix hazards. r=Waldo 
Bug 959013 - Create storage for declarative class bootstrapping information on js::Class. r=luke 
Bug 959013 - Add a mechanism to map from JSProtoKey to js::Class*. r=luke 
Bug 959013 - Add a standardized initialization mechanism based on the ClassSpec. r=luke 
Bug 959013 - Convert the Date object to use ClassSpec. r=luke 
Bug 966845 - Make ensureConstructor and initConstructor static. r=Waldo 
Bug 969156 - Don't fire onNewGlobalObject until the end of nsGlobalWindow::SetNewDocument. r=bz 
Bug 965921 - Handle addons that expose JS-implemented XPCOM components to content. r=mrbkap 
Bug 965901 - Track and assert the policy action in AutoEnterPolicy/assertEnteredPolicy. r=gabor sr=mrbkap 
Bug 965901 - Add an ENUMERATE policy action. r=gabor sr=mrbkap 
Bug 965981 - Wrap ids in XPCWrappedNativeXrayTraits::enumerateNames. r=mccr8 
Bug 960828 - Diagnostics. r=mccr8 
Bug 965901 - Followup bustage fix. r=me CLOSED TREE 
Bug 972478 - Docshell scriptability should only affect non-immune principals. r=bz 
Bug 956382 - Introduce an explicit API to do principal checks with document.domain. r=mrbkap 
now have a convenient overload defined in nsIPrincipal.idl. 
Bug 956382 - Consider document.domain when computing security wrappers. r=mrbkap 
Bug 956382 - Consider document.domain when deciding whether to return contentDocument. r=mrbkap 
Bug 956382 - Consider document.domain when doing Location security checks. r=mrbkap 
Bug 956382 - Consider document.domain for showModalDialog's dialogArguments and returnValue. r=mrbkap 
We can clean this stuff up in bug 968460. 
the security wrapper). 
Bug 956382 - Ignore document.domain by default. r=mrbkap 
Bug 956382 - Hoist nsScriptSecurityManager::CheckSameOriginPrincipal into nsPrincipal::EqualsConsideringDomain. r=mrbkap 
Bug 956382 - Remove unused CAPS gunk. r=mrbkap 
Bug 956382 - Remove usage of explicit *IgnoringDomain variants. r=mrbkap 
Bug 956382 - Remove implementations of *IgnoringDomain variants. r=mrbkap 
tests for bug 968335 on top of the same infrastructure. 
Bug 968335 - Add accessors to the script settings stack entries themselves, not just the globals. r=bz 
the comment a few patches forward. 
This will let us ask whether the AutoCxPusher is stack-top. 
thereby get at the AutoCxPusher. 
Bug 968335 - Implement GetCallerPrincipalOverride. r=bz 
Bug 968335 - Implement Cu.getWebIDLCallerPrincipal. r=bz 
Bug 968335 - Tests. r=bz 
tests for bug 968335 on top of the same infrastructure. 
Bug 968335 - Add accessors to the script settings stack entries themselves, not just the globals. r=bz 
the comment a few patches forward. 
This will let us ask whether the AutoCxPusher is stack-top. 
thereby get at the AutoCxPusher. 
Bug 968335 - Implement GetCallerPrincipalOverride. r=bz 
Bug 968335 - Implement Cu.getWebIDLCallerPrincipal. r=bz 
Bug 968335 - Tests. r=bz 
Bug 968460 - Use the incumbent global for nsGlobalWindow::GetCallerGlobal and remove JS_GetScriptedGlobal. r=bz 
Bug 968003 - Return null for frameElement with a cross-origin parent. r=bz 
Bug 973401 - Handle null from GetURI. r=smaug 
Bug 960828 - More diagnostics. r=mccr8 
Bug 974546 - SpecialPowers wrappers should catch, wrap, and rethrow exceptions for callables. r=mrbkap 
Bug 973780 - Expose a wrapper for the internal WeakMap class outside of the engine. r=mccr8,terrence 
Bug 973780 - Implement an expando WeakMap on XPCWrappedNativeScope. r=mccr8 
Bug 973780 - Hook Xrays up to the new expando map. r=bz 
Bug 973780 - Remove Xray expando slot from WNs. r=bz 
Bug 973780 - Remove Xray expando slot from new-binding objects. r=bz 
Bug 973780 - Expose a wrapper for the internal WeakMap class outside of the engine. r=mccr8,terrence 
Bug 973780 - Implement an expando WeakMap on XPCWrappedNativeScope. r=mccr8 
Bug 973780 - Hook Xrays up to the new expando map. r=bz 
Bug 973780 - Remove Xray expando slot from WNs. r=bz 
Bug 973780 - Remove Xray expando slot from new-binding objects. r=bz 
Bug 973780 - Don't double-unregister during IDB teardown. r=khuey 
mHasPrototype proxies. 
Bug 975277 - Clean up the XPCWN XrayHolder a bit. r=gabor 
for now. 
Bug 975277 - Introduce a mechanism to identify instances of standard classes. r=luke 
Bug 975277 - Followup bustage fix for the very recent removal of shortId. r=me CLOSED TREE 
Bug 976105 - Remove test-suite dependency on unprivileged calls to constructor-as-function. r=bz 
Bug 976151 - Anti eval/Function() check during wrapping should use |subsumes|. r=gabor 
Bug 975419 - Used a TenuredHeap pointer for SandboxPrivate and BackstagePass. r=mccr8 
Bug 975419 - Add a JS::TenuredHeap<JSObject*> overload to TraceCallbacks. r=mccr8,terrence 
Bug 975419 - Trace the Incumbent Global from a CallbackObject (but check it too, just to be safe). r=bz,mccr8 
Bug 976938 - Add a way to identify the Xray parent (if any) of a given function. r=bz 
Bug 977340 - Use an AutoJSContext when clearing modules. r=gabor 
Bug 977340 - Do some gymnastics to avoid tripping cx assertions when cloning exceptions from evalInWindow calls. r=gabor 
trips the new assertions, and is ugly to boot. Let's fix it. 
Bug 977340 - Assert during compartment checking that we're using the stack-top cx. r=luke,gabor 
Bug 916644 - Disable invoking WebIDL constructors without |new| unless you have the system principal. r=bz 
verifies the filtering behavior. 
Bug 960108 - Ignore saved frame chains and contexts in JS::DescribeStack. r=bz 
Bug 979481 - Separate the lifetime of the SafeJSContext global from that of the SafeJSContext itself. r=bz 
Bug 979481 - Prepare the cx stack machinery for a world where a cx has no default compartment object. r=bz 
Bug 979481 - Don't depend on the default global for the SafeJSContext in nsJSUtils::ReportPendingException. r=bz 
Bug 979481 - Make the SafeJSContext default to a null compartment, and have AutoSafeJSContext enter the compartment instead. r=bz 
Bug 979481 - Add a helpful assertion indicating that the caller probably needs a JSAutoCompartment. r=luke 
Bug 969441 - Check for recursion outside of the hairy transplant callsites. r=billm 
Bug 976704 - Make opaque security wrappers non-callable. r=gabor,sr=mrbkap 
Bug 825392 - Fix up a test to use transitive wrapping rather than getPrivilegedProps. r=bz 
Bug 825392 - Parent Touch objects to the EventTarget's global. r=bz 
Bug 825392 - Infer the global from the reflector in DoInitJSClass. r=bz 
Bug 825392 - Add xpc::GetXBLScopeOrGlobal and Sprinkle some calls to it where necessary. r=bz 
Bug 825392 - Generate anonymous content reflectors in the XBL scope. r=bz 
Bug 825392 - Remove SOWs. r=bz 
Bug 978042 - Make AutoEntryScript usable as a JSContext* and add some assertions. r=bz 
|new contentWindow.Date()| for any Date object they wish to expose to content. 
present, because we have an empty whitelist of JSProtoKeys. 
Bug 975042 - Implement the easy trait hooks. r=peterv 
Bug 975042 - Implement createHolder. r=peterv 
Bug 975042 - Implement getPrototypeOf. r=peterv 
Bug 975042 - Make enumerateNames trap virtual. r=peterv 
Bug 975042 - Implement resolveOwnProperty and enumerateNames trap. r=peterv 
Bug 975042 - Enable JS Xray for the Date object. r=peterv 
Bug 975042 - Update expando sharing tests to test the Xray-to-JS case. r=peterv 
We try to make this test machinery reusable for future Xrayable JS objects. 
Bug 986304 - Augment JSAPI to give callers the option to not define named functions on the scope object. r=terrence 
The unindentations here are clean - no changes. 
Bug 986304 - Enter the compartment of the target directly. r=bz 
Bug 986304 - Compile the event handler directly with the target as the scope object. r=bz 
Bug 986304 - Stop using (and kill) BindCompileEventHandler. r=bz 
Bug 986304 - Remove the scope object machinery attached to nsIJSEventListener. r=bz,f=smaug 
|new contentWindow.Date()| for any Date object they wish to expose to content. 
present, because we have an empty whitelist of JSProtoKeys. 
Bug 975042 - Implement the easy trait hooks. r=peterv 
Bug 975042 - Implement createHolder. r=peterv 
Bug 975042 - Implement getPrototypeOf. r=peterv 
Bug 975042 - Make enumerateNames trap virtual. r=peterv 
Bug 975042 - Implement resolveOwnProperty and enumerateNames trap. r=peterv 
Bug 975042 - Enable JS Xray for the Date object. r=peterv 
Bug 975042 - Update expando sharing tests to test the Xray-to-JS case. r=peterv 
We try to make this test machinery reusable for future Xrayable JS objects. 
Bug 975042 - Create NetworkStats dates in the window's scope. r=fabrice 
Bug 986542 - Don't categorically disable script for detached docshells. r=bz 
When we switch ObjectWrapper.jsm to use Cu.cloneInto, this became unused. 
Bug 986940 - Remove Cu.createArrayIn. r=gabor 
Bug 987672 - Use a more reliable Function constructor and |bind| implementation for marquee event handler compilation. r=bz 
Bug 981202 - Create js-ified param representations in the System Junk Scope. r=mrbkap,f=vicamo 
Bug 979481 - Separate the lifetime of the SafeJSContext global from that of the SafeJSContext itself. r=bz 
Bug 979481 - Prepare the cx stack machinery for a world where a cx has no default compartment object. r=bz 
Bug 979481 - Don't depend on the default global for the SafeJSContext in nsJSUtils::ReportPendingException. r=bz 
Bug 979481 - Make the SafeJSContext default to a null compartment, and have AutoSafeJSContext enter the compartment instead. r=bz 
Bug 979481 - Add a helpful assertion indicating that the caller probably needs a JSAutoCompartment. r=luke 
Bug 958326 - Remove same-compartment security wrapper machinery. r=mrbkap 
Bug 989183 - Check for nsXBLJSClass. r=bz 
Bug 988655 - Stop returning true for shadow DOM nodes in nsIContent::IsInAnonymousSubtree. r=mrbkap 
Bug 986730 - Fix up a bunch of tests that assume that they can touch AC in content. r=mrbkap 
this is the right approach. 
Bug 986730 - Run the FeedWriter sandbox with an expanded principal. r=mrbkap 
Bug 986730 - Rename NODE_IS_IN_ANONYMOUS_SUBTREE to NODE_IS_IN_NATIVE_ANONYMOUS_SUBTREE, since that's what it is. r=smaug 
Bug 986730 - Add a dynamic accessor to determine whether a node is in an anonymous subtree. r=smaug 
Bug 986730 - Put all anonymous content into the XBL scope. r=smaug 
Bug 980537 - Only store FakeBackstagePass instances in mThisObjects. r=khuey 
Bug 913138 - Release nsLayoutStatics when the layout module is unloaded. r=bsmedberg 
Bug 913138 - Shut down gfx at the end of layout shutdown. r=bsmedberg 
Bug 913138 - Move imgLoader singleton management out of nsContentUtils. r=bsmedberg 
Bug 913138 - Shut down imagelib at the end of layout shutdown. r=bsmedberg 
Bug 990290 - Stop using ye olde JS_InitClass for XBL class objects. r=bz 
Bug 990290 - Expose JSAPI functions for creating and manipulating scripted WeakMaps. r=terrence 
Bug 990290 - Remove unnecessary conditional and unindent. r=bz 
Bug 990290 - Remove silly LRU cache of nsXBLJSClass instances. r=bz 
Bug 990290 - Stop using the full-blown class object setup for precompilation. r=bz 
Unlink can happen twice, apparently. 
dynamic JSClasses entirely. 
Bug 990290 - Get rid of dynamic XBL JSClasses. r=bz 
Bug 990290 - Remove JS_GetObjectId. r=terrence 
Bug 993438 - Add the necessary APIs. r=billm 
(and was triggered by onNewScript-off-main-thread.js with this patch). 
Bug 993438 - Fix up the XUL prototype cache. r=smaug 
Bug 993438 - Fix up the Frame Message Manager. r=smaug 
Bug 993438 - Stop implicitly cloning, and assertSameCompartment. r=billm 
Bug 993918 - Shut down CAPS and XPConnect after imagelib and gfx. r=Ms2ger 
Bug 995123 - Associate sandboxPrototyped Sandboxes to their prototype Window, if it exists. r=bz 
Bug 996077 - Null-check |holder|, and warn if SetWeakMapEntry fails. r=bz 
Bug 994335 - Null-check aProtoDoc in nsXULPrototypeScript::Serialize. r=smaug 
Bug 989528 - Introduce a mechanism to explicitly enter a null compartment. r=luke 
Bug 989528 - Implement AutoJSAPI. r=bz 
Bug 989528 - Introduce AutoJSAPIWithErrorsReportedToWindow as a replacement for AutoPushJSContextForErrorReporting. r=bz 
Bug 989528 - Rename AutoSystemCaller to AutoNoJSAPI, and assert against pre-existing exceptions. r=bz 
Bug 993423 - Don't hoist <svg:use> content into the XBL scope. r=smaug 
Bug 942367 - DOMMediaStream supports PeerIdentity. r=bobbyholley 
Bug 997527 - Remove debugging code from bug 960828. r=me a=me DONTBUILD 
inner, but I think that the new behavior is more correct. 
check is doing anything useful in the modern world. 
This is already cycle-collected, so no extra work needs to happen. 
take care of us here. 
Bug 998377 - Remove mDelayedDisconnect and friends. r=smaug 
get right than tracking it on the script. 
Bug 990353 - Add a pref for system source discarding. r=bent 
Bug 990353 - Flag for discarding where appropriate. r=bent 
files that are associated with chrome mochitests. 
Bug 990353 - Tests. r=bent 
Bug 990353 - Flip on source discarding for b2g. r=bent 
Bug 990353 - Flip off source discarding for XPCShell. r=fabrice 
Bug 990353 - Followup bustage fix. r=me 
Bug 998083 - Introduce Cu.getObjectPrincipal and kill nsIScriptSecurityManager::GetObjectPrincipal. r=gabor 
field is useless. 
Bug 993772 - Introduce a singleton compilation scope. r=mrbkap 
Bug 993772 - Switch to the singleton compilation scope for XBL compilation. r=mrbkap 
Bug 993772 - Remove nsXBLDocGlobalObject. r=mrbkap 
Bug 993772 - Switch to the singleton compilation scope for XUL prototype compilation. r=mrbkap 
Bug 993772 - Remove nsXULPDGlobalObject. r=mrbkap 
Bug 988880 - Disable startup cache on b2g. r=fabrice 
get right than tracking it on the script. 
Bug 990353 - Add a pref for system source discarding. r=bent 
Bug 990353 - Flag for discarding where appropriate. r=bent 
files that are associated with chrome mochitests. 
Bug 990353 - Tests. r=bent 
Bug 990353 - Flip on source discarding for b2g. r=bent 
Bug 990353 - Flip off source discarding for XPCShell. r=fabrice 
Bug 990353 - Make discardSource a Sandbox option and use it (even in Desktop) for the precompilation scope. r=luke 
Bug 999213 - Make TabChildBase implement nsISupports and cycle-collect it. r=smaug 
Bug 999213 - Make TabChildGlobal::mTabChild a strong reference and cycle-collect it. r=smaug 
Bug 999213 - Remove now-unnecessary cleanup logic in ~TabChild. r=smaug 
Bug 1001094 - Give nsJSID classinfo. r=mrbkap 
Bug 1001662 - Enter the compilation scope before retrieving off-main-thread-compiled scripts. r=billm 
Bug 1004295 - Hard abort if we try to unload modules when loader global reuse is enabled. r=mccr8 
anything. 
Bug 999297 - Simplify xpc::HasInstance. r=bz 
Bug 1005806 - HTMLInputElement.controllers should be [ChromeOnly]. r=bz 
Bug 997987 - Remove nsIScriptSecurityManager::GetCxSubjectPrincipal. r=Ms2ger 
Bug 997987 - Remove usage of nsIScriptSecurityManager::GetSubjectPrincipal. r=Ms2ger 
Bug 997987 - Remove nsIScriptSecurityManager::GetSubjectPrincipal. r=Ms2ger 
Bug 997987 - Cache the system principal on nsContentUtils and remove nsIScriptSecurityManager::SubjectPrincipalIsSystem. r=Ms2ger,sr=bz 
Bug 1001198 - Explicitly fire up the SSM from nsXPConnect. r=gabor 
Bug 1001198 - Stop firing onNewGlobalObject for the SafeJSContext global. r=gabor 
we're asserting that we never run script in this global. 
leaks if we create a global before it's called, which the upcoming patch does. 
Bug 1001198 - Explicitly create the SafeJSContext from XPConnect. r=gabor 
initialization. Luckily, we don't need it at all. 
Bug 1006629 - Remove GetCalleeWrapper. r=gabor 
Bug 1006629 - Remove unused mFlattenedJSObject from XPCCallContext. r=gabor 
Bug 995943 - Clean up some silly stuff surrounding prefs in CAPS. r=bz 
Bug 995943 - Allow access to file:// URIs from pref-whitelisted sites. r=bz 
Bug 995943 - Clean up some silly stuff surrounding prefs in CAPS. r=bz 
Bug 995943 - Allow access to file:// URIs from pref-whitelisted sites. r=bz 
Bug 1008006 - Use a helper to avoid repeated computations of various dependencies. r=gabor 
bug 872772, which has now been fixed. 
Bug 1010577 - Shim window.controllers (with a warning) in RELEASE_BUILDs. r=bz 
Bug 997440 - Push some more cxes in jsd. r=bz 
This failure is currently being silently squelched on trunk. 
Bug 997440 - Fix some error reporting nastiness in the CPS tests. r=bz 
Bug 997440 - Introduce a special null principal to return when we're not in any compartment at all. r=bz 
is defined, which seems reasonable. 
Bug 997440 - Stop associating XPCWrappedNativeScopes with an XPCContext. r=bz 
Bug 997440 - Remove cx pushing in SetNewDocument. r=bz 
Bug 1013576 - Guard against duplicate property holder creation in XBL. r=billm 
Bug 1008481 - Try disabling https test to stop mysterious orange. r=me 
Bug 992958 - Fix test that depends on the order in which properties are enumerated. r=luke 
The need for this is long-gone, I believe. 
We don't need the nativeCall bits anymore. 
Bug 992958 - Add support for prototype JSPropertySpecs on ClassSpec. r=luke 
Bug 992958 - Rejigger the ordering of resolveConstructor to make it work for Object/Function. r=luke 
set up as soon as the relevant objects are created. 
We try to keep the diff small for now, and reformat in the next patch. 
Bug 992958 - Hoist extra logic in initFunctionAndObjectClasses into FinishClassInitOps. r=luke 
Bug 992958 - Reindenting and trivial cleanup. r=luke 
Bug 992958 - Switch Function and Object to ClassSpec. r=luke 
This is a pure move, aside from adding a js:: namespace to a few NullPtrs. 
Bug 992958 - More stylistics fixups. r=me 
Bug 1015380 - Fix up Settings API to avoid unnecessarily modifying content objects. r=fabrice 
Bug 1015380 - Fix up devtools server. r=past 
Bug 1015380 - Fix up UITour.jsm. r=gijs 
Bug 1015380 - Fix up tests that will break with Object Xrays. r=gabor 
Bug 1015380 - Fix up SpecialPowers. r=gabor 
Bug 1007207 - Don't treat self-implemented classinfo instances differently during XPCWN creation. r=peterv 
now. 
Bug 1008615 - De-field menulist.xml. r=mano 
automatically) in the upcoming patches. 
Bug 1015791 - Give Array a ClassSpec. r=luke 
Bug 1015791 - Stop assuming that all TypedArray classes are initialized simultaneously. r=luke 
Bug 1015791 - Clean up duplication in release-mode conditionality of *Array.prototype.move. r=luke 
Bug 1015791 - Hoist TypedArray properties into a JSPropertySpec. r=luke 
Bug 1015791 - Give TypedArray classes a ClassSpec. r=luke 
Bug 1015791 - Break up the remainder of js_InitTypedArrayClasses. r=luke 
removed the proxy layer, so let's just get rid of it. 
automatically) in the upcoming patches. 
Bug 1015791 - Give Array a ClassSpec. r=luke 
Bug 1015791 - Stop assuming that all TypedArray classes are initialized simultaneously. r=luke 
Bug 1015791 - Clean up duplication in release-mode conditionality of *Array.prototype.move. r=luke 
Bug 1015791 - Hoist TypedArray properties into a JSPropertySpec. r=luke 
Bug 1015791 - Give TypedArray classes a ClassSpec. r=luke 
Bug 1015791 - Break up the remainder of js_InitTypedArrayClasses. r=luke 
Bug 1015791 - Work around ICS compiler bugs. r=luke 
Bug 972987 - Implement Xrays to self-hosted methods and properties. r=till,gabor 
for that case, so that we can enable them everywhere else. 
declared later in the file, which isn't kosher. 
Bug 987111 - Introduce a method to determine whether a given PropertyDescriptor is an accessor prop. r=terrence 
Bug 987111 - Add test coverage to make sure we don't add new Xrayable functionality without auditing it. r=gabor 
the default is reversed in SpiderMonkey. 
full (non-own) lookup. 
Bug 987111 - Handle the Object.prototype case in Xray getPrototypeOf. r=gabor 
Bug 987111 - Make JSProto_Object COWs take precedence over Xrays. r=gabor 
Bug 987111 - Implement resolveOwnProperty and enumerateNames for Object instances. r=gabor 
Bug 987111 - Implement defineProperty for Object Xrays. r=gabor 
Bug 987111 - Implement delete_ for Object Xrays. r=gabor 
Bug 987111 - Flip on Object Xrays. r=gabor 
Bug 987111 - Tests. r=gabor 
Bug 1021124 - Bail out of InterruptCallback if we're too early in startup.  r=bz 
Bug 1021258 - Restore the __proto__ mutation warning for __proto__ sets. r=luke 
Bug 1021312 - Wrap strings in CloneNonReflectors. r=mccr8 
Bug 1021312 - use a fresh zone for xpcshell. r=mccr8 
Bug 1021312 - Tests. r=mccr8 
Bug 1021244 - Switch the browser-element API to Cu.exportFunction. r=baku 
for that case, so that we can enable them everywhere else. 
declared later in the file, which isn't kosher. 
Bug 987111 - Introduce a method to determine whether a given PropertyDescriptor is an accessor prop. r=terrence 
Bug 987111 - Add test coverage to make sure we don't add new Xrayable functionality without auditing it. r=gabor 
the default is reversed in SpiderMonkey. 
full (non-own) lookup. 
Bug 987111 - Handle the Object.prototype case in Xray getPrototypeOf. r=gabor 
Bug 987111 - Make JSProto_Object COWs take precedence over Xrays. r=gabor 
Bug 987111 - Implement resolveOwnProperty and enumerateNames for Object instances. r=gabor 
Bug 987111 - Implement defineProperty for Object Xrays. r=gabor 
Bug 987111 - Implement delete_ for Object Xrays. r=gabor 
Bug 987111 - Flip on Object Xrays. r=gabor 
Bug 987111 - Tests. r=gabor 
Bug 1008481 - More test diagnostics. r=me 
Bug 1021258 - Restore the __proto__ mutation warning for __proto__ sets. r=luke 
Bug 1021312 - Followup to fix incorrect test. r=me 
Bug 1020460 - Array.prototype.toSource should be generic. r=jorendorff 
Bug 1021312 - Followup to fix incorrect test. r=me on a CLOSED TREE 
Bug 1022016 - Redesign nsDependentJSString API to be less of a footgun. r=gabor 
Bug 1020460 - Array.prototype.toSource should be generic. r=jorendorff 
Bug 1008481 - Even more debugging output. r=me DONTBUILD 
their value and writability may be updated. 
Bug 1020609 - Inherit property descriptor attributes for pre-existing own value props in Proxy::set. r=efaust 
This just makes the special Object behavior apply to Array as well. 
string match didn't cause the whole test to hang without a useful error message. 
Bug 1020609 - Fix up mozApps for Array Xrays. r=mccr8 
Bug 1020609 - Implement Xrays to Arrays. r=bz 
Bug 990090 - Add a version of AutoJSAPIWithErrorsReportedToWindow that takes an nsIGlobalObject. r=bz 
Bug 990090 - Use AutoJSAPI for BroadcastErrorToSharedWorkers. r=khuey 
different JSClasses, we need to put the information on both. 
Let's just use |if| so that we can call a helper. 
Bug 987163 - Fix some squelched OOMs. r=gabor 
use Cu.cloneInto. 
Bug 987163 - Test fixups. r=gabor 
Bug 987163 - Implement Xrays for TypedArrays. r=gabor 
Bug 1026860 - Remove mThisObjects and use the function parent instead. r=luke,khuey 
Bug 976148 - Add a mechanism to identify a standard constructor. r=luke 
Bug 976148 - Implement Xrays to Function objects. r=gabor 
Bug 976148 - Support the 'prototype' property for standard constructors. r=gabor 
Bug 976148 - Support the .name and .length properties of Function instances. r=gabor 
Bug 976148 - Tests. r=gabor 
those files are both pretty big these days. 
that are neither Xrays nor reflectors. 
Bug 1027131 - Rename CloneNonReflectors into StackScopedClone, and give it an options struct. r=gabor 
Bug 1027131 - Switch to a struct for the StackScopedClone closure. r=gabor 
Bug 1027131 - Add support for Blob and FileList in the wrapReflectors = false case. r=gabor 
Bug 1027131 - Innerize before reflector detection. r=gabor 
Bug 1027131 - Add support for function cloning in StackScopedClone. r=gabor 
Bug 1027131 - Use StackScopedClone for cloneInto. r=gabor 
Bug 1027131 - Additional tests for wrapReflectors. r=gabor 
Bug 1031988 - Grab the principal from the object rather than the window when resolving the controller shim. r=bz 
Bug 1033253 - Null-check the result of JS_GetFunctionId. r=bz 
From ac73068c4494c0df74329482e57f64ba8ec93cb4 Mon Sep 17 00:00:00 2001 
Bug 1032317 - Remove nsIXPConnect::InitClasses. r=gabor 
Bug 1032317 - Remove XPCWrappedNativeScope::GetNewOrUsed. r=gabor 
Bug 1032317 - Make CompartmentPrivate and XPCWrappedNativeScope accessors infallible. r=gabor 
Bug 1032317 - Get rid of JSD early return in RemoteXULForbidsXBLScope. r=gabor 
Bug 1032457 - Rename ExportOptions to ExportFunctionOptions. r=gabor 
version is going away. 
Bug 1032457 - Implement the |allowCallbacks| parameter to exportFunction. r=gabor 
we can safely mark the object as non-extensible. 
objects where multiple JSProtoKeys share a js::Class. 
Bug 1029933 - Introduce the concept of "dependent" standard classes and handle them in the ClassSpec infrastructure. r=Waldo 
Bug 1029933 - Introduce and use ParentKeyForStandardClass. r=Waldo 
Bug 1029933 - Tweak GenericCreateConstructor to make it usable with Error. r=Waldo 
Bug 1029933 - Make Error use a ClassSpec. r=Waldo 
Bug 1033927 - Drop support for custom [object XrayWrapper [object ClassName]] stringification. r=peterv 
Bug 1034244 - Check only for WN Xrays when deciding whether the prototype is useless. r=mrbkap 
surprisingly. 
Bug 1034244 - Follow the prototype chain of the underlying object in SpecialPowers wrapping. r=mrbkap 
Bug 1034244 - Hoist SpecialPowers Xray waiving into a separate function so that we can apply it at each stage when climbing the prototype chain. r=mrbkap 
Bug 1034239 - Add Proxies to ForceCOWBehavior. r=gabor 
expandos), and we just don't want to resolve any properties. This patch does this. 
Bug 1034262 - Don't use wantXrays for requiresAddonGlobal sandboxes. r=gabor 
the flag (if set) from either compartment. This patch does that. 
Bug 940316 - Move werror to RuntimeOptions. r=jandem 
Bug 1036507 - Remove some unused code. r=luke 
defaults when they invoke JS_NewObject. Let's move it out of the way. 
Bug 1036507 - Introduce and use StandardProtoKeyOrNull. r=luke 
Bug 987669 - Implement JS::ProtoKeyToId. r=luke 
Bug 987669 - Implement IsErrorObjectKey and do more at compile-time. r=gabor 
Bug 987669 - Implement Xray support for the data properties on ErrorObject instances. r=gabor 
Bug 987669 - Add Xray support for FooError.prototype.name. r=gabor 
Bug 987669 - Turn on Xrays for Error objects. r=gabor 
Bug 987669 - Tests. r=gabor 
Bug 987669 - Just use macros because MSVC and gcc don't have real constexpr support. r=me CLOSED TREE 
that is applicable anymore. 
Bug 1034682 - Move remaining wacky wantXrays behavior to the JS entry point so that we don't have to worry about it when creating Sandboxes from C++. r=peterv 
Bug 1034682 - Set wantXrays to false for content XBL scopes. r=billm 
Bug 1036777 - Stop relying on useAllocator for 'in' string classes in ConvertIndependentParam. r=neil 
These types map to nsAString and nsACString respectively. 
Bug 856067 - Fix Object Actor Previews. r=past 
Bug 856067 - Fix up test_xrayToJS.xul. r=gabor 
Bug 856067 - Waive Xrays when SpecialPowers encounters an Opaque XrayWrapper. r=gabor 
Bug 856067 - Make unwaived non-Xrayable objects opaque from privileged code. r=gabor 
This is now the default behavior. \o/ 
Bug 856067 - Add some helpful logging to the console when we deny access to a non-Xrayable object. r=gabor 
Bug 856067 - Tests. r=me 
Bug 856067 - Actually push the test. r=me CLOSED TREE 
Bug 1036185 - Remove XPCCallContext::UnwrapThisIfAllowed. r=gabor 
Bug 1036185 - Clean up logic in IsPermitted (bonus fix). r=gabor 
Bug 940323 - Mode strictMode to RuntimeOptions. r=jandem 
Bug 1037756 - Move cloneSingletons to CompartmentOptions. r=jandem 
Bug 987678 - Stop doing all the crazy stuff in xbl-marquee. r=bz 
Bug 1037264 - Factor out short-lived string buffer into a templated helper class. r=neil 
Bug 1037264 - Add an 8-bit short-lived string cache. r=neil 
Bug 1038278 - Remove spam. r=me 

Bug 1038278 - Remove spam. r=me Bug 1038844 - Implement a COW opt-out for automation. r=gabor,sr=mrbkap 
Bug 1038844 - Flip the scary automation pref for crashtests and marionette. r=jgriffin 
Bug 1038844 - Use the opt-out for the SpecialPowers scope. r=mrbkap,r=ted 
Bug 1040181 - Use an opaque wrapper rather than failing in Rewrap. r=gabor 
the clone should be fine. 
Bug 930091 - Check objects at COW membranes. r=gabor,r=msucan 
Bug 1036790 - Only expect pjs methods for nightly builds in test_xrayToJS.xul. r=me 
Bug 742444 - Rejigger unsafeWindow definition to not rely on passing waivers across origins. r=gabor 
previously had a waiver and decide whether or not to extend it. 
Bug 742444 - Only propagate waivers between same-origin compartments. r=gabor 
Bug 1041626 - Generalize XrayEnumerateAttributes. r=bz 
Bug 1041626 - Mirror the logic for attribute enumeration in method enumeration. r=bz 
Bug 1041626 - Make NativeProperties naming more consistent. r=bz 
Bug 1041626 - Use a macro in XrayEnumerateProperties to make the logic easier to follow. r=bz 
Bug 1041626 - Only define unforgeable attributes on instances, and do a call to XrayEnumerateNativeProps when |type| is still set to eInstance. r=bz 
Bug 1041626 - Tests. r=bz 
values, but it looks like we missed one. 
values, but it looks like we missed one. 
Bug 1022229 - Hoist GetAppStatus into a static method on nsScriptSecurityManager. r=bz 
Bug 1022229 - Let Null Principals have App IDs and mozBrowser status. r=bz 
Bug 1022229 - Borrow App ID and mozBrowser-ness when creating sandbox null principals. r=bz 
Bug 1022229 - Tests. r=bz 
  successful CheckedUnwrap inside the JS engine. 
Bug 1042824 - Manually do the cross-compartment call in NonCloningFunctionForwarder. r=gabor 
Bug 1042824 - Borrow the JSID_VOID handling from the cloning forwarding. r=gabor 
Bug 1042824 - Remove implicit cloning behavior in function forwarders. r=gabor 
Bug 1042840 - Remove evalInWindow. r=gabor 
Bug 1022229 - Followup bustage fix. r=me CLOSED TREE 
once we stop doing that we need to be more explicit here. 
Bug 1042996 - Remove the special JSContext for Sandboxes. r=bobowen,r=gabor 
Bug 1022229 - Hoist GetAppStatus into a static method on nsScriptSecurityManager. r=bz 
Bug 1022229 - Let Null Principals have App IDs and mozBrowser status. r=bz 
Bug 1022229 - Borrow App ID and mozBrowser-ness when creating sandbox null principals. r=bz 
Bug 1022229 - Tests. r=bz 
Bug 1044205 - Detach the XPCWrappedNativeScope from the CompartmentPrivate during forcible shutdown. r=billm 
Bug 1044205 - Invoke XPCWrappedNativeScope::TraceSelf from TraceXPCGlobal. r=billm 
Bug 1044205 - Rename XPCWrappedNativeScope::TraceSelf to TraceInside. r=billm 
Bug 940305 - Move extraWarnings to RuntimeOptions with a per-compartment override. r=jandem,r=khuey 
XOWs only allow access to Window and Location, both of which are on WebIDL now. 
Bug 965898 - Implement an Xray subclass that we can use to implement HTML5 cross-origin semantics. r=gabor 
Bug 965898 - All properties on cross-origin DOM objects should be |own|. r=gabor 
Bug 965898 - All properties from cross-origin objects are "configurable", non-enumerable, and non-writable. r=gabor 
Bug 965898 - Cross-origin objects should have null prototypes. r=gabor 
Bug 965898 - Implement proper behavior for [[Enumerate]] And [[OwnPropertyKeys]]. r=gabor 
Bug 965898 - Throw for [[Delete]] and [[DefineOwnProperty]]. r=gabor 
This stuff is really a mess. I'm looking forward to it going away. 
and creates confusing situations (like having both a value and a getter). 
Bug 965898 - Generalize FilterSetter to work on all the relevant fields of JSPropertyDescriptor. r=gabor 
Bug 965898 - Switch policies for get{,Own}PropertyDescriptor. r=gabor 
Bug 965898 - Squelch exceptions during the shadowing detection in isCrossOriginAccessPermitted. r=gabor 
Bug 965898 - Allow both gettable and settable attributes in Filter(). r=gabor 
an example.com iframe. 
Bug 965898 - Import web-platform-test into the tree. r=Ms2ger 
Bug 965898 - Fix non-unified build bustage. r=me CLOSED TREE 
Backed out changeset 403a0e1d2324 (bug 965898) 
XOWs only allow access to Window and Location, both of which are on WebIDL now. 
Bug 965898 - Implement an Xray subclass that we can use to implement HTML5 cross-origin semantics. r=gabor 
Bug 965898 - All properties on cross-origin DOM objects should be |own|. r=gabor 
Bug 965898 - All properties from cross-origin objects are "configurable", non-enumerable, and non-writable. r=gabor 
Bug 965898 - Cross-origin objects should have null prototypes. r=gabor 
Bug 965898 - Implement proper behavior for [[Enumerate]] And [[OwnPropertyKeys]]. r=gabor 
Bug 965898 - Throw for [[Delete]] and [[DefineOwnProperty]]. r=gabor 
This stuff is really a mess. I'm looking forward to it going away. 
and creates confusing situations (like having both a value and a getter). 
Bug 965898 - Generalize FilterSetter to work on all the relevant fields of JSPropertyDescriptor. r=gabor 
Bug 965898 - Switch policies for get{,Own}PropertyDescriptor. r=gabor 
Bug 965898 - Squelch exceptions during the shadowing detection in isCrossOriginAccessPermitted. r=gabor 
Bug 965898 - Allow both gettable and settable attributes in Filter(). r=gabor 
an example.com iframe. 
Bug 965898 - Import web-platform-test into the tree. r=Ms2ger 
Bug 965898 - Handleify more stuff. r=me 
Bug 940321 - Eliminate ambient noScriptRval, and make it live exclusively on CompileOptions. r=jandem 
Bug 1048330 - Null-check the XBL scope in more places. r=smaug 
Bug 1042436 - Always enter the wrapper's compartment before invoking SilentFailure. r=gabor 
Bug 1042436 - Lowercase the "reason" param to SilentFailure. r=me 
Bug 1042436 - Warn once to the console when XrayWrappers deny access to an object. r=gabor,sr=smaug 
Bug 1026785 - Fix typo. r=me DONTBUILD 
Bug 1050049 - Whitelist bindings that we actually expect to use in content. r=smaug 
Bug 1050049 - Implement bindToUntrustedContent attribute restriction. r=smaug 
Bug 1050049 - Tests. r=smaug 
Bug 1052090 - Don't try to compute main-thread-ness until after we're done with cancel shenanigans. r=bkelly 
is safe so long as these things are only stack-allocated. 
Bug 1052042 - Move the pre-pop GC to AutoEntryScript. r=billm 
Bug 1052052 - Hoist AutoCxPusher into ScriptSettings.h. r=gabor 
Bug 1052052 - Hoist Auto*JSContext into nsContentUtils and kill nsCxPusher.{cpp,h}. r=gabor 
With this change, the only cx push left in the tree happens inside of AutoJSAPI. \o/ 
Bug 1052052 - Hoist AutoCxPusher into ScriptSettings.h. r=gabor 
Bug 1052052 - Hoist Auto*JSContext into nsContentUtils and kill nsCxPusher.{cpp,h}. r=gabor 
With this change, the only cx push left in the tree happens inside of AutoJSAPI. \o/ 
an nsNullPrincipal. Let's avoid having that happen again. 
nsContentUtils isn't ready by this point. 
This causes problems when used too early in startup. 
Bug 1052089 - Don't require the cx to be in a compartment during sandbox creation. r=billm 
Bug 1052089 - Don't fuss around with remote-XUL XBL-scope special cases for sandboxes. r=billm 
upcoming patches. 
them down and fix them. 
These two things ended up getting mushed together in my tree. 
Bug 1052089 - Swap out the SafeJSContextGlobal for the new UnprivilegedJunkScope. r=billm 
Bug 1050340 - Access regexp guts generically. r=luke 
Bug 1050340 - Handle dates generically. r=luke 
Bug 1050340 - Handle ArrayBuffers and TypedArrays pseudo-generically. r=luke 
Bug 1050340 - Handle boxed values with a new proxy trap. r=luke 
Bug 1050340 - Handle maps and sets. r=luke 
Bug 1050340 - Handle object and array. r=luke 
that have not already had CheckedUnwrap invoked on them. 
Bug 1050340 - Fix up content search test framework. r=adw 
that up, but it's not done yet). 
\o/ 
Bug 1050340 - Tests. r=gabor 
strict about this now. 
Bug 951991 - Implement GetEntryGlobal. r=smaug 
Bug 796938 - Switch nsGlobalWindow::Focus to GetEntryGlobal and eliminate nsContentUtils::GetWindowFromCaller. r=smaug 
Bug 796938 - Switch nsHTMLDocument::Open and XMLDocument::Load to a new GetEntryDocument API and remove nsContentUtils::GetDocumentFromContext. r=smaug 
Bug 796938 - Switch nsGlobalWindow::SecurityCheckURL to GetEntryGlobal. r=smaug 
Bug 796938 - Switch to GetEntryGlobal in GetCallerDocShellTreeItem. r=smaug 
Bug 796938 - Switch to GetEntryGlobal in nsWindowWatcher::GetCallerTreeItem. r=smaug 
Bug 796938 - Switch to GetEntryDocument in GetDocumentCharacterSetForURI. r=smaug 
Bug 796938 - Switch nsLocation::GetSourceBaseURL to GetEntryDocument. r=smaug 
Bug 796938 - Remove GetDynamicScriptGlobal API. r=smaug 
Bug 796938 - Use GetEntryGlobal in nsGlobalWindow::FireAbuseEvents. r=smaug 
Bug 796938 - Use GetEntryGlobal in NS_ScriptErrorReporter. r=smaug 
Bug 796938 - Use GetEntryGlobal in nsWindowWatcher::URIFromURL. r=smaug 
else later. 
Bug 796938 - Remove GetDynamicScriptContext API. r=smaug 
Bug 1036214 - Do a subsumes check on object and any parameters (and things containing them) to JS-implemented WebIDL. r=bz 
need to be rejiggered (like the checkGlobal stuff). 
Bug 821573 - Stop allowing COWs as native interfaces. r=gabor 
Bug 1056271 - Switch to GetEntryGlobal in DOMParser::Init. r=smaug 
no longer serves a purpose. 
Bug 981218 - Stop using default compartment objects in nsJSUtils.cpp. r=bobowen 
Bug 981218 - Stop using default compartment objects in workers. r=bobowen 
Bug 981218 - Remove default compartment object usage in js shell and tests. r=luke 
Bug 981218 - Stop using a default compartment object in the IndexedDB and ProxyAutoConfig JSRuntimes. r=bobowen 
\o/ 
Bug 1056332 - Remove cross-global adopt telemetry. r=gabor 
Bug 1051224 - Add an opt-out for cross-origin argument checking. r=gabor 
Bug 1051224 - Use the opt-out for the webconsole helpers. r=ochameau 
Bug 1063271 - Undo bug 796938 part 10. r=smaug 
Bug 1061136 - Assume both http:// and https:// for schemeless URIs in CAPS prefs. r=bz 
Bug 1062631 - Fix buggy |browser_SignInToWebsite.js| test. r=Gijs 
Otherwise the QI throws as soon as it tries to pass the IID into content code. 
safe, make it a bit more robust, and fix up the test while we're at it. 
please file a followup. 
Bug 1062631 - Handle null originatingURI in browser-addons.js. r=Gijs 
the WeakMap. 
Bug 1062631 - Handle null ownerDoc in browser.js and content.js for the benefit of browser_newtab_drag_drop_ext.js. r=ttaubert 
Bug 1062631 - Stop leaking observers in search tests. r=Gijs 
Bug 1062631 - Handle nuked window references in tilt tests. r=paul 
See bug 1062631 comment 0. 
away at this mess. 
Bug 1062077 - Hoist console logging duties into xpc::ErrorReport. r=bz 
Bug 1062077 - Switch SystemErrorReporter to xpc::ErrorReport. r=bz 
xpc::SystemErrorReporter. 
will go away entirely in bug 981187. 
merged. 
here. 
Bug 1061136 - Followup bugfix. r=bz 
Bug 1053725 - When one domain is whitelisted for file:// URI access, whitelist all subdomains. r=bz 
Bug 1064437 - Remove Proxy special-case in ForceCOWBehavior. r=gabor 
Bug 981198 - Internally move the JSErrorReporter to the JSRuntime. r=terrence 
Bug 981198 - Make JS_{Get,Set}ErrorReporter take a JSRuntime. r=terrence,r=bz 
Bug 1008481 - Request complete log for intermittently-failing test. r=me 
Bug 1065238 - Re-enable test_cpows.xul on mac. r=billm 
Bug 1052096 - Move CPOWs into the privileged junk scope. r=billm 
Bug 1052096 - Move CPOW targets into the privileged/unprivileged junk scope of the child/parent. r=billm 
Bug 1052096 - Add an API to access the 'Location' string (used by memory reporters) of a compartment. r=billm 
Bug 1052096 - Tests. r=billm 
Bug 1008481 - Add an expected assertion. r=me 
Bug 1008481 - Switch to the root dir instead of the profile dir. r=me 
Bug 1008481 - Re-enable failing test. r=me 
Bug 1066846 - Explicitly verify that incoming dipper parameters are objects. r=bz 
Bug 1065452 - Add an API to access the associated window of addon scopes. r=billm 
Bug 1065452 - Re-route exceptions directed at addon globals to their associated DOMWindow. r=bz 
Bug 1060521 - Remove infrastructure for Xrayed NewResolve, GetProperty, and SetProperty on XPCWrappedNatives. r=peterv 
[1] browser/base/content/test/general/browser_keywordSearch.js 
Bug 1066340 - Use an AutoEntryScript in nsFrameMessageManager::ReceiveMessage. r=smaug 
Bug 1068163 - Turn off release-mode assertion against addon scope prototype munging. a=me 
Bug 1066718 - Get sIOService before invoking ReadPrefs. r=bz 
Bug 1068163 - Turn off release-mode assertion against addon scope prototype munging. r=me 
Bug 1067900 -  Assert main thread in nsContentUtils::SubjectPrincipal. r=bz 
js::GetGlobalForObjectCrossCompartment manually is dumb. 
Bug 1070696 - Implement a JSObject* override to AutoJSAPI::Init(). r=smaug 
more likely to be the case, and manifest itself as the bc1 orange we see on TBPL. 
Bug 1030420 - Fix up unwrapDebuggerObjectGlobal to handle addon scopes. r=jimb 
Bug 1030420 - Followup fix. r=me 
Bug 1072174 - Handle all the cases XrayWrapper.cpp. r=peterv 
could potentially invoke this proxy trap can now GC. 
Bug 1065811 - Expose isCallable()/isConstructor() in JS_PUBLIC_API. r=billm 
Bug 1065811 - Stop statically computing callability/constructibility on CPOWs. r=billm 
case), since they could be forged by a compromised child. 
Bug 1065811 - Track Xray waivers with CPOWs. r=billm 
Bug 1070131 - Reduce the cases where we dispatch nsScriptErrorEvent. r=bz 
Bug 1070131 - Stop XDR-serializing origin principals. r=luke,r=bz 
Bug 1070131 - Switch originPrincipals to a mutedError flags. r=luke,r=bz 
Bug 1070842 - Remove ambiguous globals from xpc::ErrorReporter and make meanings explicit. r=bz 
Bug 1070842 - Factor script error event dispatch into a separate function. r=bz 
Bug 1070842 - Introduce an API on AutoJSAPI to allow Gecko to handle exceptions without meddling from the JS engine. r=bz 
Bug 1070842 - Move nsJSUtils::CompileFunction (and consequently event handler compilation and XBL compilation) off of nsJSUtils::ReportPendingException. r=bz 
Bug 1070842 - Switch to new-style exception reporting in LoadFrameScriptInternal. r=bz 
Bug 1070842 - Tests. r=bz 
Bug 865948 - Tests. r=gabor 
Bug 853709 - Tests. r=mrbkap 
Bug 1065185 - Fix permissions tests. r=bz 
Bug 1065185 - Fix crash IPC tests. r=bz 
Bug 1065185 - Fix extension manager test. r=bz 
webgls stuff. 
Bug 1065185 - Explicitly expose indexed properties in COW array test. r=bz 
Bug 1065185 - Stop using Promise.jsm over SpecialPowers in marionette tests. r=bz 
the target Window. 
Bug 1065185 - Create a content Array rather than a chrome Array in _convertWifiNetworks. r=chucklee 
Bug 1065185 - Do a better job of accessing privileged constants from voicemail marionette tests. r=bz 
Bug 1065185 - Turn off indexed/.length access on COW arrays. r=bz 
Bug 1067009 - Const-correct a few jsapi methods. r=billm 
Bug 1067009 - Make JSAPI RegExp accessors work correctly proxies. r=billm 
Bug 1067009 - Don't assume that someRegExp.source is an atom. r=billm 
Bug 1067009 - Implement regexp_toShared for CPOWs. r=billm 
Bug 1067009 - Tests. r=billm 
Simple fix, but interesting test case and worth having on CI. 
Bug 987794 - Don't unwrap XrayWrappers in HasPropertyOnPrototype. r=bz 
Bug 1065185 - Fix permissions tests. r=bz 
Bug 1065185 - Fix crash IPC tests. r=bz 
Bug 1065185 - Fix extension manager test. r=bz 
webgls stuff. 
Bug 1065185 - Explicitly expose indexed properties in COW array test. r=bz 
Bug 1065185 - Stop using Promise.jsm over SpecialPowers in marionette tests. r=bz 
the target Window. 
Bug 1065185 - Create a content Array rather than a chrome Array in _convertWifiNetworks. r=chucklee 
Bug 1065185 - Do a better job of accessing privileged constants from voicemail marionette tests. r=bz 
Bug 1065185 - Create content arrays rather than chrome arrays in DOM Apps. r=me 
Bug 1065185 - Expand XrayWrapper console messages for COWs. r=bz 
Bug 1065185 - Turn off indexed/.length access on COW arrays. r=bz 
Bug 1065185 - Console Message Tests. r=bz 
Bug 1082450 - Fix quitter extension. r=gabor 
Bug 1082450 - Rip exposedProps out of Social API code. r=Gijs 
Bug 1082450 - Use automation machinery instead of exposedProps in Mock{Color,File}Picker.jsm. r=gabor 
Bug 1082450 - Remove exposedProps from reftest harness. r=gabor 
exhaustively covered in test_crossOriginObjects.html. 
Yuck yuck yuck. 
Bug 1082450 - Deny access to accessor properties on COWs. r=gabor 
Bug 1082450 - Deny access to cross-origin callables on COWs. r=gabor 
Bug 1082450 - Tests. r=gabor 
Bug 1065186 - Fix up test suite to not rely on COWed Arrays. r=gabor 
Bug 1065186 - Drop support for exposing privileged arrays to untrusted content. r=gabor 
Bug 1083427 - Remove exposedProps from sandbox code. r=gabor 
Srsly. 
Bug 1083060 - Only use the XOW policy for Window and Location. r=bz 
Bug 1081537 - Fall back to the addon global (if one exists) in GetEntryDocument. r=bz 
Bug 1081537 - Tests. r=bz 
Bug 1084245 - Introduce a hacky opt-out of the new security checks for MozTCPSocket. r=bz 
Bug 1081537 - Followup bustage fix. r=me 
Bug 1084385 - Use exportFunction for emitToChrome. r=gabor 
Bug 1084385 - Clone chrome arrays before passing them to emitSync. r=gabor 
Bug 1081990 - Fix mozPay. r=gabor 
Bug 1081990 - Fix up BrowserElement API to use function forwarders rather than direct chrome function references. r=gabor 
Whitespace changes in the next patch. 
Bug 1081990 - Reindent. r=gabor 
Bug 1081990 - Fix up test suite. r=gabor 
Bug 1081990 - Give all non-COW filtering wrappers a null proto. r=gabor 
Bug 1081990 - Generalize CheckPassToChrome machinery to operate on call/construct for all FilteringWrappers. r=gabor 
Bug 1081990 - Turn off COWs for Functions. r=gabor 
Bug 1081990 - Tests. r=gabor 
Bug 1081985 - Move checkPassToPrivilegedCode to AccessCheck.cpp where it belongs. r=gabor 
\o/ 
Bug 1084656 - Properly propagate exceptions out of getExpandoObjectInternal. r=bz 
Bug 1086996 - Stop wrapping XBL handlers into the content compartment. r=bz 
Bug 1086996 - Tests. r=me 
Bug 1087824 - Bump win32 stack buffer size. r=luke 
Bug 857138 - Remove unused APIs. r=luke 
Bug 857138 - Add some cx parameters. r=bz 
Bug 857138 - Make Date operate with the boxedValue_unbox proxy trap. r=luke 
Bug 857138 - Remove CheckedUnwrap in binding code. r=bz 
Bug 1087824 - Bump the limits some more. r=luke 
This mimics the logic already inside nsNullPrincipal::CheckMayLoad. 
Bug 1088617 - Remove nsIScriptSecurityManager::CheckSameOrigin. r=me 
This mimics the logic already inside nsNullPrincipal::CheckMayLoad. 
Bug 1088617 - Remove nsIScriptSecurityManager::CheckSameOrigin. r=me 
Otherwise, UpdateReadyState() will think that nothing has changed. 
introducing yet another new enum. 
I'm going to add another one, and want this API to scale better than it does. 
reason for (B). 
Bug 1090991 - Introduce a new NotDecodedReason WAITING_FOR_DATA and use it for MSE. r=cpearce,r=cajbir 
Bug 1091008 - Factor out IsDataCachedToEndOfResource() into a higher-level question and answer it sensibly for MSE. r=cpearce 
coupling, and weird relationships for MSE. 
We now have this stashed on the superclass. 
dealing with. In particular, it doesn't really make sense for MSE. 
Bug 1091008 - Implement a sensible GetBuffered override for MediaSourceReader using the existing GetBuffered on MediaSource. r=cajbir 
The same code will now be reached by invoking this method on the decoder. 
make this function sane for MSE as well. 
Bug 1063323 - Tests. r=cajbir 
Bug 1093020 - Don't use a buffering wait for MSE. r=cpearce 
Bug 1093020 - Tests. r=karlt 
Bug 1095587 - Add nsWrapperCache and Exception (which is an interface itself) to the interface map of Exception. r=bz 
Bug 1096526 - Don't look for a structured formatter for buffering_on/buffering_off. r=jmaher 
Bug 1091008 - Factor out IsDataCachedToEndOfResource() into a higher-level question and answer it sensibly for MSE. r=cpearce 
Bug 1091008 - Make sure to always set mStartTime via SetStartTime. r=cpearce 
coupling, and weird relationships for MSE. 
We now have this stashed on the superclass. 
Bug 1091008 - Implement a sensible GetBuffered override for MediaSourceReader using the existing GetBuffered on MediaSource. r=cajbir 
The same code will now be reached by invoking this method on the decoder. 
make this function sane for MSE as well. 
Bug 1096597 - Switch to buffering mode on WAITING_FOR_DATA. r=cpearce 
Bug 1063323 - Tests. r=cajbir 
Bug 1093020 - Don't use a buffering wait for MSE. r=cpearce 
Bug 1093020 - Tests. r=karlt 
on this as the path of least resistance. 
Bug 1092388 - Clamp the entry and incumbent global to the current global if their principals don't match. r=bz 
Bug 1092388 - Remove now-unnecessary nsGlobalWindow::CallerGlobal. r=bz 
Bug 984467 - Remove current inner fallback in CallerInnerWindow. r=bz 
Bug 1099187 - Use fuzz factor for currentTime in addition to duration. r=karlt 
Bug 1100776 - Reference-count MediaData. r=cpearce 
Bug 1102521 - Use AutoEntryScript/AutoJSAPI for CPOW answers. r=billm 
Bug 1101769 - Tests. r=billm 
Bug 1104964 - Handle ShutdownPoolsEvent race. r=cpearce 
Bug 1104964 - Make sure that MediaDecoderReader::Shutdown is always called. r=cpearce 
these separate pieces. 
MediaDecoderReader. 
Bug 1104964 - Make MediaDecoderReader own the task queue. r=cpearce 
Bug 1103324 - Instantiate an AutoNoJSAPI when dispatching IPC messages. r=billm 
Bug 1097823 - Move NotDecodedReason from RequestSampleCallback to MediaDecoderReader. r=cpearce 
down. 
Bug 1097823 - Implement Media Promises. r=cpearce 
Bug 1097823 - Use MediaPromises for RequestAudioData and RequestVideoData. r=cpearce 
Bug 1097823 - Replace AudioDecodeRendezvous with promise-y goodness. r=cpearce,karlt 
Bug 1097823 - Followup fix to ensure that the borrowed task queue doesn't get destroyed before subdecoders shut down. rpending=cpearce 
Bug 1097823 - Followup to avoid null-derefing when promises have already been rejected during shutdown. rpending=cpearce 
Bug 1097823 - Followup to remove the assertions cpearce asked for because they don't hold. rpending=cpearce 
Backed out changeset 979bec024c07 (bug 1097823) 
Backed out changeset 1ea671313ad3 (bug 1097823) 
Backed out changeset 47c97b8b490c (bug 1097823) 
Backed out changeset ab6ddc8ac28a (bug 1097823) 
Backed out changeset b76636e9f49a (bug 1097823) 
Backed out changeset b56e5e762329 (bug 1097823) 
Backed out changeset 8dfbe042e946 (bug 1097823) 
Backed out changeset c405b4271e64 (bug 1097823) 
Bug 1097823 - Move NotDecodedReason from RequestSampleCallback to MediaDecoderReader. r=cpearce 
down. 
Bug 1097823 - Implement Media Promises. r=cpearce 
Bug 1097823 - Move NotDecodedReason from RequestSampleCallback to MediaDecoderReader. r=cpearce 
down. 
Bug 1097823 - Implement Media Promises. r=cpearce 
Bug 1108767 - Separate ThenValueRunnable so that the constructors don't collide when the resolve value is the same as the reject value. r=cpearce 
We need this so that MediaTaskQueue can use promises. 
Bug 1108767 - Add MediaPromise::{Resolve,Reject}IfExists. r=cpearce 
It turns out that there are use-cases where this restriction is clunky. 
Bug 1108767 - Add the ability to chain same-type promises. r=cpearce 
Bug 1108707 - Make reader shutdown asynchronous. r=cpearce 
Bug 1108707 - Make reader shutdown asynchronous. r=cpearce (relanding on a CLOSED TREE because it wasn't the source of the leaks) 
Bug 1108701 - Use MediaPromises for RequestAudioData and RequestVideoData. r=cpearce 
Bug 1108701 - Replace AudioDecodeRendezvous with promise-y goodness. r=cpearce,karlt 
Bug 1108701 - Try to fix b2g jb bustage on a CLOSED TREE. r=me 
Bug 1109954 - Make resolve/reject values optional in callback signatures. r=cpearce 
Backed out changeset 89c9d42ef78e (bug 1109954) for colliding with bug 1108701 on a CLOSED TREE. 
Bug 1109954 - Make resolve/reject values optional in callback signatures. r=cpearce 
Bug 1109216 - Chain MediaOmxReader::ReleaseDecoder off MediaDecoderReader::Shutdown resolution. r=cpearce 
Bug 1101416 - Don't assert against pending exceptions in AutoNoJSAPI. r=luke,r=smaug 
Bug 1112925 - Don't re-enter JS with a pending exception in CheckForPendingException. r=terrence 
Bug 1110546 - Allow null as the principal argument for the sandbox constructor. r=gabor 
Bug 1113282 - Check during async TrackBuffer decoder initialization to make sure we haven't been shut down. r=cajbir 
Bug 1113282 - Check during async TrackBuffer decoder initialization to make sure we haven't been shut down. r=cajbir 
which is happily not variable-sized. \o/ 
Bug 1109437 - Generalize GetBufferingWait to UseBufferingHeuristics. r=cpearce 
states. 
Bug 1109437 - Switch m{Audio,Video}RequestPending to a tri-state. r=cpearce 
call, so we need to fix this. 
Bug 1109437 - Implement non-polling buffering. r=cpearce 
Bug 1109437 - Only switch to buffering mode when the reader is waiting for data. r=cpearce 
Bug 1114383 - Acquire the index monitor in MP4Reader::PopSample. r=k17e 
Bug 1114383 - Assert that access to mMoofs goes through a monitor. r=k17e 
Bug 1114383 - Unlock the demuxer monitor before calling out via MP4Stream. r=k17e 
Bug 1092025 - Hold the lock for the entire duration of MediaSourceReader::ReadMetaData. r=karlt 
which is happily not variable-sized. \o/ 
Bug 1109437 - Generalize GetBufferingWait to UseBufferingHeuristics. r=cpearce 
states. 
Bug 1109437 - Switch m{Audio,Video}RequestPending to a tri-state. r=cpearce 
call, so we need to fix this. 
Bug 1109437 - Implement non-polling buffering. r=cpearce 
Bug 1109437 - Only switch to buffering mode when the reader is waiting for data. r=cpearce 
Bug 1114830 - Only enter buffering mode when the pending request is waiting for data. r=cpearce a=philor 
Bug 1115749 - Rename mIndexMonitor to mDemuxerMonitor. r=rillian 
This method invokes Seek* on mDemuxer. 
We're invoking a number of methods on mDemuxer here. 
probably be redesigned, but that's a problem for another day. 
given that this is all supposed to be async anyway. 
is appropriately set up. 
Bug 1114840 - Hoist arms-length conditions and rename StartPlayback() to MaybeStartPlayback(). r=cpearce 
way to avoid these sorts of bugs is to compute the values dynamically. 
Bug 1114840 - Don't start playback during prerolling. r=cpearce 
Bug 1116355 - Throw when setting SourceBuffer mode to 'sequence'. r=karlt 
Bug 1116355 - Throw when setting SourceBuffer mode to 'sequence'. r=karlt,rs=Ms2ger 
Bug 1117851 - Make GetCallingLocation take an nsA{,C}String. r=smaug 
Bug 1117851 - Make GetCallingLocation take an nsA{,C}String. r=smaug 
Bug 1116883 - Allow segment type box at the beginning of a media segment per spec. r=karlt 
Bug 1064128 - Implement support for timestampOffset in segments mode. r=k17e,r=cajbir 
the case, especially in the case where the MP4Reader rejects with WAITING_FOR_DATA. 
buys us. 
    reverse. Both karlt and I think this is the appropriate thing to do. 
gtest failures in TestMP4Demuxer. 
because it's pretty much just a distraction. 
Bug 1119456 - Make MP4Demuxer's blocking reads non-blocking and hoist blocking into callers with a hacky retry strategy. r=k17e 
Bug 1119456 - Work around the fact that media cache does not quite guarantee the property we want. r=roc 
Bug 1120629 - Cache data directly on MP4Stream rather than relying on the media cache. r=roc 
Bug 1119803 - Uninitialised value use in StopPrerollingVideo. r=bobbyholley. 
Bug 1121841 - Clear the failed read after checking it. r=jya 
Bug 1121248 - Stop logging unimplemented methods in SourceBufferResource. r=mattwoodrow 
Bug 1120266 - Factor some machinery out of test_BufferingWait into mediasource.js and make it Promise-friendly. r=jya 
Bug 1121692 - Remove unnecessary arguments to ::Seek. r=mattwoodrow,sr=cpearce 
Tracking it is a pain, and it's only used by OggReader. 
are only touched on the decode task queue. 
at all. So we repurpose them to track our seek stage. 
that it needs to be called without round-tripping between threads. 
Bug 1121692 - Make seeks cancelable. r=cpearce,r=mattwoodrow 
promise with CANCELED is a lot safer, so we do that for now. 
Bug 1121692 - Tests. r=mattwoodrow,r=cpearce 
Bug 1123983 - Implement exclusivity checking for MediaPromises. r=cpearce 
Bug 1123983 - Don't reset request status in MediaDecoderStateMachine::FlushDecoding. r=cpearce 
equivalents. 
Bug 1121148 - Make QUICK_BUFFERING_LOW_DATA_USECS a member variable and adjust it appropriately. r=cpearce 
Bug 1124898 - Stop exposing ex-nsIDOMChromeWindow things for random unprivileged things loaded in chrome docshells. r=bz 
Bug 1124898 - Tests. r=bz 
Bug 1126023 - Annotate assertion. r=me 
Bug 1124952 - Set request status to Pending in the special DecodeFirstFrame calls too. r=cpearce 
Bug 1126088 - Fallibly allocate MP4Stream CacheBlocks. r=jya,r=njn 
we want to do. 
Bug 1126465 - Don't leave stale value in mPendingSeek when there's no audio track. r=mattwoodrow 
Bug 1126465 - Make ThenValueBase inherit from a publicly-usable type, and refcount it. r=mattwoodrow 
Bug 1126465 - Introduce machinery to hold onto MediaPromise::Consumer references, and use it for MediaSourceReader subdecoders. r=mattwoodrow 
Bug 1126465 - Implement the ability to disconnect outstanding promises. r=mattwoodrow 
treatment to the seek promise. 
Bug 1126465 - Pass consistent arguments to RequestVideoData invocations on subdecoders. r=mattwoodrow 
Bug 1126465 - Factor out calls to Request{Audio,Video}Data into a helper method. r=mattwoodrow 
Bug 1126465 - Factor out the seeking phases into helper methods. r=mattwoodrow 
Bug 1126465 - Use a MediaPromiseConsumerHolder to track subdecoder seeks. r=mattwoodrow 
we want to do. 
Bug 1126465 - Don't leave stale value in mPendingSeek when there's no audio track. r=mattwoodrow 
Bug 1126465 - Make ThenValueBase inherit from a publicly-usable type, and refcount it. r=mattwoodrow 
Bug 1126465 - Introduce machinery to hold onto MediaPromise::Consumer references, and use it for MediaSourceReader subdecoders. r=mattwoodrow 
Bug 1126465 - Implement the ability to disconnect outstanding promises. r=mattwoodrow 
treatment to the seek promise. 
Bug 1126465 - Pass consistent arguments to RequestVideoData invocations on subdecoders. r=mattwoodrow 
Bug 1126465 - Factor out calls to Request{Audio,Video}Data into a helper method. r=mattwoodrow 
Bug 1126465 - Factor out the seeking phases into helper methods. r=mattwoodrow 
This combines part 10 and part 10.5 in the bug. 
mechanism before it can finish. Bumping up to 60. 
Bug 1120241 - Schedule the state machine when setting logical decoder state. r=cpearce 
aError is a really misleading name. 
Bug 1127203 - Be more consistent about when and how we apply the fuzz factor. r=mattwoodrow 
Bug 1127203 - Use the tolerance value in TrackBuffersContainTime so that seeking operates with tolerance too. r=mattwoodrow 
to pass/fail intermittently. Disabling and filing a followup bug. 
Bug 1129247 - Introduce MOZ_DIAGNOSTIC_ASSERT. r=Waldo 
Bug 1129247 - Use MOZ_DIAGNOSTIC_ASSERT instead of MOZ_RELEASE_ASSERT in media code. r=mattwoodrow 
Bug 1129523 - Implement MediaPromise proxies. r=cpearce,r=mattwoodrow 
Bug 1129523 - Use ProxyMediaCall for video decode tasks. r=cpearce,r=mattwoodrow 
Bug 1128811 - Reject data wait promises when we seek. r=cpearce 
Bug 1126911 - Fix rest of test suite. r=gabor 
Bug 1126911 - Special-case all chrome objects in wrapper selection. r=gabor 
Bug 1126911 - Tests. r=gabor 
Bug 1126052 - Reenable test_SeekTwice.mp4. r=RyanVM 
Bug 1129246 - Switch to MediaPromiseConsumerHolders for MDSM audio/video promises and remove RequestStatus. v3 r=cpearce 
Bug 1120030 - Test for timestampOffset. r=jya 
Bug 1129877 - Add a templatized move constructor for nsRefPtr. v1 r=froydnj 
promise. But there's actually no reason to involve the holder at all here. 
Bug 1129877 - Fix one other remaining case of invoking Resolve/Reject directly on a Promise. v1 r=mattwoodrow 
This causes the buggy code that caused the crash to fail to compile. 
Bug 1132023 - Fix unused variable warning on builds without MOZ_DIAGNOSTIC_ASSERT. v1 r=rillian 
validate our inputs. 
GetEstimatedBufferedTimeRanges returns an empty range if the duration is -1. 
Bug 1127554 - Get rid of infallible allocation in MP4Sample copy constructor. v2 r=mattwoodrow 
Bug 1127554 - Make MP4Sample::Pad fallible. v1 r=mattwoodrow 
Bug 1127554 - Make MP4Sample::Prepend fallible. v1 r=mattwoodrow 
Bug 1127554 - Make MP4Sample::Replace fallible. v1 r=mattwoodrow 
Bug 1127554 - Do a fallible allocation in SampleIterator::GetNext. v1 r=mattwoodrow 
Bug 1125970 - Reject promises in MediaDecoderReader::ResetDecode and don't re-request audio and video when the promises have been rejected. v1 r=cpearce 
Bug 1125970 - Make flushing an opt-in mechanism, and use it only for the PDM task queues. v1 r=cpearce 
Bug 1137511 - Account for audio frames already pushed to audio hardware but not yet played when computing OutOfDecodedAudio. r=kinetik 
we can wait indefinitely. 
Bug 1135785 - Introduce a 1-argument overload of ProxyMediaCall. r=cpearce 
indeed currently does all of the work for this feature in release builds anyway. 
state machine thread in the next patch. 
wean us off the monitor. 
avoid calling StopPlayback on the main thread. 
patches in this bug independently green. 
Bug 1135785 - Hoist some work onto the state machine thread and tighten down our assertions. r=cpearce 
Bug 1128357 patch 4: Asynchronize SetDormant() r=bobbyholley,cpearce 
Bug 1136399 - Add test_WaitingOnMissingData_mp4.html and disable the webm version for now. r=jya 
Bug 1128357 Patch 1 - Add extra dormant logging r=bobbyholley 
Bug 1128357 patch 4: Asynchronize SetDormant()  r=cpearce,bobbyholley 
Bug 1140675 - Disable failing tests on windows opt. r=me 
All consumers of MediaCacheStream::GetCachedRanges do this except this one. 
Bug 1135170 - Route queued seeks back through MDSM::Seek and eliminate MDSM::StartSeek. r=mattwoodrow 
regular seek machinery is probably fine. 
suggests that this too is a hand-me-down from previous threading models. 
unrelated. 
DropVideoUpToSeekTarget should actually handle this just fine. 
Bug 1135170 - Reap some cleanup and assertions that were waiting on this bug. r=mattwoodrow 
Bug 1135170 - Mark previously-failing WPT as passing. r=karlt 
* MDSM::Seek doesn't _need_ to be called on the main thread anymore. 
patch. 
Bug 1135170 - Rewrite the MediaDecoder-to-MediaDecoderStateMachine interface to be Promise-based. r=mattwoodrow 
Bug 1135170 - Remove now-unused state machine scheduler freezing/thawing. r=mattwoodrow 
put us back into seeking mode (seeking to 0), making the test fail. 
case, but I think we're doing a disservice to ourselves by having it in the tree. 
invalidation to happen at the end of seeking. 
We also make some assertions fatal in nightly/aurora builds while we're at it. 
Bug 1135424 - Implement MediaTimer. r=mattwoodrow 
Bug 1135424 - Switch the MDSM to a task queue. r=mattwoodrow 
Bug 1141785 - Logging fixes. r=jya 
Bug 1141785 - Force all audio samples to be keyframes. r=k17e 
We also make some assertions fatal in nightly/aurora builds while we're at it. 
Bug 1135424 - Implement MediaTimer. r=mattwoodrow 
Bug 1135424 - Switch the MDSM to a task queue. r=mattwoodrow 
Bug 1135424 - Run MDSM disposal off the MediaPromise returned by initiating shutdown on the task queue. r=mattwoodrow 
Bug 1144487 - Implement AbstractThread. r=mattwoodrow 
This allows for parallel MDSM execution. \o/ 
Bug 1144984 - add missing includes in MediaTimer.cpp. r=bobbyholley 
Bug 1136873 - Use promises for metadata decoding. r=mattwoodrow 
in MediaSourceReader.cpp. 
dormant (see the comment). 
Bug 1145203 - Unify FlushDecoding, ResetDecode, and ResetPlayback into a single Reset() method. r=mattwoodrow 
where it belongs. 
what's happening. 
Bug 1136827 - Call OnAudioSinkError on state machine thread. r=jww 
where it belongs. 
what's happening. 
Bug 1147495 - Add missing string to state list. r=me 
Bug 852821 - Disable test on b2g. r=me 
This allows for parallel MDSM execution. \o/ 
Bug 1147215 - Add a helper to get the current window with a null check. r=smaug 
Bug 1144519 - Rename OnStateMachineThread-like functions to reflect the fact that it's a task queue. r=jya 
Bug 1144519 - Rename MDSM::OnDecodeThread to MDSM::OnDecodeTaskQueue. r=jya 
Bug 1144519 - Rename MediaDecoderReader::OnDecodeThread to MediaDecoderReader::OnTaskQueue. r=jya 
Bug 1144519 - Switch MediaDecoderReader subclasses to use OnTaskQueue(). r=jya 
Bug 1144519 - Rename MediaDecoder::OnDecodeThread to MediaDecoder::OnDecodeTaskQueue. r=jya 
Bug 1145686 - Make MDSM::Shutdown happen on the state machine thread. r=jww 
Bug 1145686 - Make MDSM::StartBuffering happen on the state machine thread. r=jww 
last caller of SetState that doesn't already assert it. 
Bug 1147555 - Invert the ordering of our priority queue. r=mattwoodrow 
Bug 1147555 - Implement logging for MediaTimer. r=mattwoodrow 
Bug 1150687 - Add a convenience/efficiently routine to get an AbstractThread for the main thread. r=jww 
Bug 1150687 - Make MediaTaskQueue implement AbstractThread directly. r=jww 
Bug 1150687 - Have callers pass an AbstractThread directly to promise APIs and remove wrapper-style AbstractThreads for MediaTaskQueue. r=jww 
Bug 1150771 - Let ArrayBuffer through object Xrays. r=gabor 
Bug 1148571 - Dispatch AudioSink notifications asynchronously. r=jww 
Bug 1148571 - Followup to fix silly typo on a CLOSED TREE. r=me 
Bug 1151656 - Add some more assertions. r=mattwoodrow 
Bug 1151656 - Stop doing sync dispatch of PlaybackEnded. r=mattwoodrow 
Bug 1151656 - Do static initialization explicitly. r=mattwoodrow 
negligible. 
Bug 1151656 - Implement TaskDispatcher.h. r=mattwoodrow 
Bug 1151656 - Implement a post-run TaskDispatcher for MediaTaskQueue. r=mattwoodrow 
dispatch, we want verification that is more robust than simple inspection. 
Bug 1151656 - Make MediaPromises operate with TaskDispatchers. r=mattwoodrow 
Bug 1151656 - Use TailDispatch for the MDSM's task queue. r=mattwoodrow 
Wrapper::wrappedObject. 
Bug 1153370 - Remove AbstractThread::Create. r=jww 
Bug 1153370 - Make mRunningThread atomic and manage it in AutoTaskGuard. r=jww 
We can do this now that we're not manually nulling out mRunningThread anymore. 
This reduces the potential for deadlocks. 
Bug 1154782 - Detemplatize nsIThread wrapper and move it into AbstractThread.cpp. r=jww 
this is a necessary step on the road to automatic tail dispatch. 
and simplify the rest of the code. 
We've been meaning to do this for a while, just haven't gotten around to it. 
tell us if any of these actually fail in practice. 
Bug 1154805 - Hoist the GetCurrent TLS logic into AbstractThread. r=jww 
Bug 1154805 - Rejigger tail dispatching assertions. r=jww 
Bug 1154805 - Do tail dispatch automatically. r=jww 
This is now the default behavior. 
Bug 1154805 - Stop manually passing TaskDispatchers everywhere. r=jww 
This is unnecessary now that we pass this explicitly during dispatch. 
Bug 1154805 - Followup bustage fix. r=me CLOSED TREE 
is a totally bogus assumption. 
Bug 1154802 - Assert against potential deadlocks between synchronous MediaTaskQueue operations and tail dispatchers. r=jww 
This is a followup from bug 1154805 comment 13. 
Bug 1154802 - Implement tail dispatch for the main thread. r=jww 
Bug 1155268 - Add checked methods to convert from an AbstractThread to a concrete type. r=cpearce 
Bug 1155268 - (Bonus) small reduction in FlushableMediaTaskQueue usage. r=cpearce 
This was causing us to re-enter RunSyncSectionsInternal. 
Bug 1157488 - Assert against re-entrant sync sections. r=bent 
cajbir said we should do this in the media meeting. 
Bug 1144486 - Implement direct tasks. r=jww 
Bug 1144486 - Implement state watching machinery. r=jww 
Bug 1144486 - Use state watching machinery for mReadyState updates. r=jww 
Bug 1144481 - Switch nsIThread implementation of AbstractThread::IsCurrentThreadIn() to use PRThreads. r=jww 
call CheckIfSeekComplete twice, and queue up two SeekCompleted events. 
We need this so that we can hook up the state mirroring in the subsequent patch. 
Bug 1144481 - Implement state mirroring machinery. r=jww 
Bug 1144481 - Use state mirroring for NextFrameStatus. r=jww 
Bug 1157840 - Refcount NesteggPacketHolder. r=kinetik 
Bug 1153707 jsval is wrongly passed to XPT Javascript method on ppc/32 and SPARC/32 r=bobbyholley 
notified automatically whenever anything relevant changes. 
just stick these calls in a few choke points. 
The ergonomics here aren't ideal. I'm going to file a bug to improve them. 
Bug 1158916 - Revert change to NotifyDataArrived. r=me 
Bug 1157803 - Add an extra assertion to MediaTaskQueue::BeginShutdown. r=jww 
Bug 1157803 - Loosen dispatch requirements for state mirroring. r=jww 
to conveniently connect its mirrors during construction. 
Another consequence of the MDSM's thread model. 
Bug 1157803 - Const-correct some methods. r=jww 
Bug 1157803 - Clean up Canonical assigment to avoid accidentally tripping the default operator= implementation. r=jww 
Bug 1157803 - Mirror mPlayState and mNextState to the state machine task queue and eliminate cross-thread access. r=jww 
Bug 1158226 - Store timestamps on the NesteggPacketHolder. r=kinetik 
Bug 1158226 - Use NesteggPacketHolder::Timestamp to simplify code. r=kinetik 
Bug 1158226 - Separate packet demuxing from the higher-level track-sorting logic. r=kinetik 
Bug 1158226 - Eagerly compute keyframe-ness and stash it on the packet holder. r=kinetik 
Bug 1157476 - Remove synchronous dispatch in AndroidMediaResourceServer::Start. r=cajbir 
They've proven themselves to be a hassle, and I think we can live without them. 
Bug 1159558 - Redesign watching to use a manager. r=jww 
This patch does Canonical - I'll do Mirror in the next patch. 
Bug 1159987 - Let consumers declare Mirror<T> rather than Mirror<T>::Holder. r=jww 
macros are called. Let's just do this right. 
Bug 1160064 - Initialize the state machine task queue in the initializer list. r=jww 
a not-yet-initialized canonical. 
connecting from the owner thread feels like a stronger invariant. 
Bug 1160064 - Give WatchManager an owner thread and make sure everything happens there. r=jww 
tackle several of them. 
Bug 1159974 - Mirror mVolume. r=jww 
Bug 1159974 - Mirror mPlaybackRate. r=jww 
Bug 1159974 - Mirror mPreservesPitch. r=jww 
While we're at it, I figured it was time to experiment with lambdas. :-) 
Bug 1159974 - Dispatch SetMinimizePrerollUntilPlabackStarts. r=jww 
Bug 1151385 - Fail early for cross-origin sandboxPrototype. r=gabor 
This cleanup was made possibly by the introduction of AbstractThread. :-) 
Bug 1161742 - Introduce ResolveOrRejectValue to make MediaPromise implementation less verbose. r=jww 
Bug 1161742 - Hoist part of ResolveOrReject into ThenValueBase. r=jww 
Bug 1161742 - Factor out the guts of RefableThen to make them usable for Function-y {,Refable}Then(...) calls. r=jww 
Bug 1161742 - Add support for lambdas in MediaPromise. r=jww 
Bug 1161742 - Use lambdas for WaitForData. r=jww 
Bug 1161742 - Use lambdas for Seek. r=jww 
Bug 1131707 - Transparently forward the construct bit for function forwarders. r=gabor 
Bug 1161901 - Dispatch MediaDecoderReader::SetIdle directly. r=jww 
Bug 1161901 - Use ProxyMediaCall instead of MDSM::ShutdownReader. r=jww 
Bug 1161901 - Hoist MDSM shutdown logic into MDSM::Shutdown and remove brittle requirement that RunStateMachine only happen once in SHUTDOWN state. r=jww 
Bug 1161901 - Relax assertion. r=jww 
Bug 1161901 - Make MDSM::ScheduleStateMachine runs on the state machine task queue only. r=jww 
Bug 1161901 - Sprinkle more assertions and fix some formatting. r=jww 
This field corresponds to the "current playback position" in HTML5. 
Bug 1162803 - Mirror playback position. r=jww,r=sotaro 
Bug 1164567 - Grab the principal when we need it in MediaDecodeTask. r=jww 
JSPrincipals, so it makes sense to consolidate this on nsJSPrincipals. 
The existing setup adds a lot of complication and not a lot of value. 
implementations, rather than just nsPrincipal and nsExpandedPrincipal. 
more code. 
Bug 1164292 - Switch nsIPrincipal::origin to ACString. r=gabor 
Bug 1164292 - Order the nsEP whitelist array. r=gabor 
Bug 1164292 - Properly implement nsExpandedPrincipal::GetOrigin. r=gabor 
Bug 1164292 - Twiddle format of GetScriptLocation to match what we use for GetOrigin. r=gabor 
Bug 1164292 - Tests. r=gabor 
Bug 1164977 - Prevent MediaStreamAudioSourceNode from passing null to nsIPrincipal::subsumes. r=padenot 
Bug 1164977 - Hoist all the app attribute handling into BasePrincipal. r=gabor 
Bug 1164977 - Unify subsumes/equals logic on BasePrincipal and reduce duplicated code. r=gabor 
This sets the stage for the upcoming work for signed apps. 
Bug 1164977 - Hoist attribute serialization into BasePrincipal. r=gabor 
Bug 1161748 - Rehydrate ActivityOptions in a system scope. r=fabrice,gabor 
Bug 1165162 - Make requestsync test failures more useful. rpending=baku 
Bug 1165162 - Fix up test_manager.js to use real principals. rpending=ferjm 
Bug 1165162 - Stop recreating principals from the message manager. r=smaug 
Bug 1165162 - Make OriginAttributes a dictionary, and make it accessible as both a jsval and a canonical string. r=gabor,r=bholley,sr=sicking 
Bug 1165162 - Rework the nsIScriptSecurityManager principal-minting API to be originAttributes-centric. r=gabor,r=bholley,sr=sicking 
The current check will fail once we start munging the format of nsIPrincipal::Origin. 
Bug 1165162 - Hoist GetOrigin onto BasePrincipal. r=gabor 
path. 
Bug 1165162 - Tests. r=gabor 
Bug 1165162 - Add nsIPrincipal::cookieJar. r=sicking 
I didn't end up needing this in bug, but I think it's handy to have around. 
Bug 1165162 - Fix typo in comment. r=me DONTBUILD 
Bug 1164664 - Swap out the 'default JSContext callback' for something capable of setting up an AutoEntryScript. v3 r=jimb 
Bug 1164664 - Switch to new-style error-reporting for PrepareScriptEnvironment. r=jimb 
Bug 1164664 - Defang PushJSContextNoScriptContext. r=jimb 
Bug 1162187 - Fix up precompile_cache. r=glandium 
Bug 1162187 - Pass around AutoJSAPI instead of cx to give us more control over error handling. r=glandium 
it for now. 
Bug 1162187 - Use the AutoJSAPI machinery to handle xpcshell exceptions. r=glandium 
\o/ 
getting rid of one of my best comments in the tree. :-( 
Bug 1167372 - Use originNoSuffix for full-screen prompt. v2 r=smaug,r=dao,r=fabrice 
Bug 1168008 - Fix a typo from the addition of closure support to MediaPromise. r=jww 
Bug 1168008 - Improve MediaPromise::ResolveOrRejectValue. r=jww 
to use and understand. 
generalization in the ensuing patches. 
Bug 1168008 - Make FunctionThenValue dispatch via InvokeCallbackMethod. r=jww 
Bug 1168008 - Make IsConvertible handle void. r=gerald 
Bug 1168008 - Do the template munging to allow promise callbacks to optionally return a promise, and surface that from InvokeCallbackMethod. r=gerald 
Bug 1168008 - Implement completion promises. r=jww 
leak log tables. 
of the consumers of this stuff are actually using. 
Suggestions of other topics to describe are welcome. 
Bug 1168008 - MediaPromise gtests. r=jww 
non-implicitly-copyable, as a Resolve/Reject value. 
Again, necessary for passing around nsTArrays. 
Bug 1169542 - Implement MediaPromise::All. r=jww 
Bug 1169542 - Use .forget() instead of Move() to convert from nsRefPtr<Derived> to nsRefPtr<Base>. r=gerald 
Bug 1170311 - Stop asserting non-null argument to nsIPrincipal::{subsumes,equals}{,ConsideringDomain}. r=gabor 
Bug 1171175 - Improve BasePrincipal::IsCodebasePrincipal. r=baku 
files, so I'm not doing it now. 
Bug 1160695 - Track "network duration" separately and mirror it to the MDSM. r=jww 
Bug 1160695 - Track "metadata duration" separately and mirror it to MediaDecoderReader. r=jww 
Bug 1160695 - Remove unused codepath for off-main-thread MediaSource duration change. r=jww 
Bug 1160695 - Make MediaDecoder::DurationChanged take a duration argument rather than reading it back synchronously from the MDSM. r=jww 
Bug 1160695 - Track explicit (mediasource) duration separately. f=jww,rpending=jya 
Bug 1160695 - Track demuxer-estimated duration separately. r=jww 
Bug 1160695 - Track observed duration separately. r=jww 
Bug 1160695 - Clean up SetDuration and remove negative duration case. r=jww 
current situation a bit without adding more risk to this patch stack. 
much work. 
acceptable regression. 
Bug 1160695 - Drop Support for Content-Duration. r=cpearce 
about the fact that we only support mp4 and (sort of) webm. 
need to know the task queue in their constructor. 
Bug 1173001 - Fix up some task queue naming to make MediaDecoderReader consistent with MDSM. r=jww 
Bug 1173001 - Enable tail dispatch for the decode task queue. r=jww 
Bug 1173641 - Hoist shutdown promise resolution into a helper. r=jww 
Bug 1173641 - Null out the thread pool when resolving shutdown. r=jww 
queue until destruction anyway. 
Bug 1174039 - Guard against early states in UpdateNextFrameStatus. r=jww 
No sample adjusting is done yet - this just makes the data available. 
Bug 1163223 - Use AwaitStartTime to handle metadata end time. r=jww 
Bug 1163223 - Use AwaitStartTime to invoke MediaDecoderReader::SetStartTime. r=jww 
Bug 1163223 - Be more explicit about when we notify metadata. r=jww 
Bug 1163223 - Adjust incoming samples for start time. r=jww 
Bug 1163223 - Remove MediaDecoderStateMachine::mStartTime. r=jww 
Bug 1163223 - Reuse rendezvous when coming out of dormant mode. r=jww 
around this for now to get this stack landed. 
particular behavior from .buffered after loadedmetadata, so this should be fine. 
Bug 1163223 - Check for shutdown in AwaitStartTime callbacks. r=me 
Bug 1174939 - Implement TaskDispatcher::DispatchTasksFor. r=jww 
Bug 1174939 - Handle non-empty tail dispatchers in BeginShutdown. r=jww 
Bug 1174971 - Introduce two variants of getOwnPropertyFromTargetIfSafe. r=gabor,r=arai 
particular behavior from .buffered after loadedmetadata, so this should be fine. 
around this for now to get this stack landed. 
No sample adjusting is done yet - this just makes the data available. 
Bug 1163223 - Use AwaitStartTime to handle metadata end time. r=jww 
Bug 1163223 - Use AwaitStartTime to invoke MediaDecoderReader::SetStartTime. r=jww 
Bug 1163223 - Be more explicit about when we notify metadata. r=jww 
Bug 1163223 - Adjust incoming samples for start time. r=jww 
Bug 1163223 - Remove MediaDecoderStateMachine::mStartTime. r=jww 
particular behavior from .buffered after loadedmetadata, so this should be fine. 
around this for now to get this stack landed. 
No sample adjusting is done yet - this just makes the data available. 
Bug 1163223 - Use AwaitStartTime to handle metadata end time. r=jww 
Bug 1163223 - Use AwaitStartTime to invoke MediaDecoderReader::SetStartTime. r=jww 
Bug 1163223 - Be more explicit about when we notify metadata. r=jww 
Bug 1163223 - Adjust incoming samples for start time. r=jww 
Bug 1163223 - Remove MediaDecoderStateMachine::mStartTime. r=jww CLOSED TREE 
Bug 1172264 - Require Manual disconnection for all mirrors. r=jww 
Bug 1172264 - Track the MDSM's duration as a TimeUnit and eliminate the separate concept of 'end time'. r=jww 
Bug 1172264 - Switch MediaDecoder's mDuration represenation to a double. r=jww 
Bug 1172264 - Mirror duration from the MDSM to the MediaDecoder. r=jww 
Bug 1172264 - Mirror duration from the MDSM to the MediaDecoderReader and remove MDSM::GetDuration. r=jww 
Bug 1172264 - Route mExplicitDuration directly from the mediasource code to MediaDecoder, and stop passing an argument to DurationChanged. r=pending=jww 
Bug 1172264 - Watch mStateMachineDuration, and stop manually firing DurationChanged. r=jww 
Bug 1172264 - Mark WPT as succeeding. r=jya 
Bug 1175768 - Remove bogus check. r=jya 
With this change, we don't need to condition this work on infinite streams. 
NotifyDataArrived will soon run off-main-thread, so the assumptions here won't hold. 
Bug 1175768 - Implement SilentReadAt. r=jya 
needs to happen at the same time as the off-main-thread stuff. 
Bug 1175768 - Misc changes to Intervals/TimeUnit. r=jya 
Bug 1175768 - Use mirroring for buffered ranges. r=jya 
Bug 1175768 - Throttle NotifyDataArrived. r=jya 
Bug 1177501 - Hold a strong ref to mThread. r=jya 
Bug 1175768 - Remove bogus check. r=jya 
With this change, we don't need to condition this work on infinite streams. 
NotifyDataArrived will soon run off-main-thread, so the assumptions here won't hold. 
Bug 1175768 - Implement SilentReadAt. r=jya 
needs to happen at the same time as the off-main-thread stuff. 
Bug 1175768 - Misc changes to Intervals/TimeUnit. r=jya 
Bug 1175768 - Use mirroring for buffered ranges. r=jya 
Bug 1175768 - Throttle NotifyDataArrived. r=jya 
Bug 1177282 - Create and destroy static SharedThreadPool state at startup/shutdown. r=cpearce 
Bug 1177282 - Clean up SharedThreadPool::Release. r=cpearce 
Bug 1177282 - Remove the restriction against getting a SharedThreadPool off-main-thread. r=jww 
Bug 1178437 - Assert OnTaskQueue for most of the remaining MDSM methods. r=jww 
\o/ 
Bug 1178437 - Dispatch SetFragmentEndTime. r=jww 
Bug 1178437 - Make mRealTime const and allow it to be accessed on any thread. r=jww 
the off-main-thread decoding machinery. 
is happening here. 
This is a regression from https://hg.mozilla.org/mozilla-central/rev/3ead3466f84a 
a lot more concise than it could be. 
this problem there. 
Bug 1178938 - Make MediaDecoderReader::DecodeToFirstVideoData async. r=jww 
Bug 1178938 - Mirror shutdown-ness from the MDSM to the MD. r=jww 
Bug 1179499 - Assert NS_IsMainThread on a bunch of MediaDecoder methods. r=jww 
Bug 1179499 - Dispatch NotifyPlayback{Started,Stopped}. r=jww 
Bug 1180921 - Give Optional<T> Maybe<T>-like operator== semantics. r=bz 
Bug 1180921 - Generalize test_origin to make it easier to add new origin attributes. r=gabor 
Bug 1180921 - Add the addonId OriginAttribute. r=bholley 
Bug 1180921 - Create a dumping ground for simple services in toolkit/components/utils. r=Gijs 
Bug 1180921 - Support custom callbacks for allowing access per-addon load access to cross-origin URIs. r=bz,r=billm 
Bug 1180921 - Give Optional<T> Maybe<T>-like operator== semantics. r=bz 
Bug 1180921 - Generalize test_origin to make it easier to add new origin attributes. r=gabor 
Bug 1180921 - Add the addonId OriginAttribute. r=bholley 
Bug 1180921 - Create a dumping ground for simple services in toolkit/components/utils. r=Gijs 
Bug 1180921 - Support custom callbacks for allowing access per-addon load access to cross-origin URIs. r=bz,r=billm 
Bug 1182347 - Implement OriginAttributesPattern. r=sicking,f=allstars.chh 
Bug 1182347 - Migrate existing code away from .cookieJar. r=sicking,r=allstars.chh 
Bug 1182347 - Remove nsIPrincipal::cookieJar. r=sicking 
Bug 1182409 - Add 'allowWaivers' sandbox option. r=gabor 
XPIDL type system. This should let us make nicer APIs. 
Bug 1182357 - Add an API to mint nsExpandedPrincipals. r=mrbkap 
Bug 1182610 - Check for UNKNOWN_APP_ID in nsIPrincipal::GetOrigin. r=gabor 
Bug 1184382 - Handle a sandboxPrototype we don't subsume. r=gabor 
Bug 1184634 - Rename MediaPromise to MozPromise. r=gerald 
We rename to Queue() in TestMozPromise, because that's more accurate. 
Bug 1184634 - Rename MediaTaskQueue to TaskQueue. r=gerald 
problems. I left some big pre-existing messes alone. 
(which leads to annoying and unnecessary diamond-inheritance). 
As far as I can tell, this thing isn't threadsafe at all. 
Bug 1161831 - Factor the sharable bits out of nsIResProtocolHandler. r=billm 
The heavy lifting all happened in the previous patch, so this is easy now. 
Bug 1161831 - Forbid mapping to anything but file:// and jar:// URIs. r=billm,sr=bz 
Bug 1161831 - Associate extension URIs with the appropriate addon ID. r=billm,sr=bz 
Bug 1161831 - Tests. r=billm 
Bug 1186213 - Add an API to deep-freeze the result of Cu.cloneInto. r=gkrizsanits 
Bug 1186155 - Use UNIFIED_SOURCES in netwerk/protocol/res. r=billm,sr=mcmanus 
Bug 1186152 - Implement nsIProtocolHandlerWithDynamicFlags and use it for moz-extension. r=bz 
Bug 1186732 - Implement an about:blank page inside of moz-extension. r=billm 

Bug 1186732 - Implement an about:blank page inside of moz-extension. r=billm Bug 1188696 - Remove the XPCOM dependencies in nsRefPtr.h. r=froydnj 
Bug 1188696 - Hoist nsRefPtr.h into MFBT. r=froydnj 
Bug 1167215 - Composite on every vsync until the scheduled one. r=roc 
Bug 1167215 - Re-apply CompositeUntil calls when we get a new batch of textures. r=roc 
Bug 1190117 - Track mLastProducerID and mLastFrameID explicitly in ImageLayerProperties. r=roc 
Bug 1190496 - Remove dependency on VideoUtils.h for stack size. r=cpearce 
Bug 1190496 - Namespace the SharedThreadPool.h include. r=cpearce 
Bug 1190496 - Add a comment warning about MSCOM modes. r=cpearce 
Bug 1190496 - Use the normal XPCOM way to dispatch to the main thread. r=cpearce 
listen for to shutdown off-main-thread event queues. 
Bug 1190496 - Init SharedThreadPool from XPCOM rather than MediaDecoder. r=froydnj 
Bug 1190496 - Hoist SharedThreadPool into xpcom. r=froydnj 
Bug 1191063 - Followup comments. r=me DONTBUILD 
which makes it really terrible for stuff like this. 
Bug 1184387 - Bail out of file:// loads for all non-chrome:// URIs. r=Gijs 
which makes it really terrible for stuff like this. 
Bug 1184387 - Bail out of file:// loads for all non-chrome:// URIs. r=Gijs 
Bug 1190492 - Init AbstractThread statics from XPCOM. r=froydnj 
Bug 1190492 - Hoist AbstractThread and TaskDispatcher to xpcom. r=froydnj 
Not sure how this slipped by before. 
This thing is garbage, and I don't want to hoist it into XPCOM. 
Looks like the last consumers of this went away. \o/ 
Bug 1190495 - Switch TaskQueue entirely to nsRefPtr. r=cpearce 
Bug 1190495 - Hoist TaskQueue into xpcom. r=froydnj 
Bug 1190495 - Followup #include fix. r=me 
Not sure how this didn't get fixed before. 
Bug 1188976 - Rename ProxyMediaCall to InvokeAsync. r=froydnj 
Bug 1188976 - Use mozilla::Tuple for InvokeAsync. r=froydnj 
Bug 1188976 - Hoist MozPromise into xpcom. r=froydnj 
Bug 1195867 - Hoist StateWatching and StateMirroring into XPCOM. r=froydnj 
Bug 1196371 - Add a runtime assertion against illegal string characters in OriginAttributes suffix creation. r=janv,r=mystor 
Bug 1188976 - Improve MozPromise.h comment. r=me DONTBUILD 
Bug 1196371 - Add a runtime assertion against illegal string characters in OriginAttributes suffix creation. r=janv,r=mystor 
Bug 1196638 - Infer the proper button for synthesized mouse clicks on all callsites. r=jmaher 
placeholder transaction around both calls. 
Bug 1170484 - Test. r=ehsan 
Bug 1170484 - Followup fix to make the guard object actually a guard object. r=me CLOSED TREE 
Backed out 3 changesets (bug 1165272) for b2g sanity blocker. 
Bug 1205456 - Check for UNKNOWN_APP_ID when serializing principals. r=sicking 
Bug 1189668 - Expose GetUnfilteredUrl on InternalResponse. r=ehsan 
Bug 1189668 - Check CSP before completing channel interception. r=ehsan 
Bug 1206817 - Take ownership of error reporting in the component loader. r=bz 
Bug 1201747 - Don't inspect the subject principal in StorageAllowedForPrincipal. r=mystor 
I can't believe we do this. 
Bug 1072150 - Introduce a transitional legacy API that works like things used to. r=bz 
Bug 1072150 - Use the opt-out for various sloppy consumers. r=bz 
Bug 1072150 - Crash in SubjectPrincipal if there's no active AutoJSAPI. r=bz 
Bug 1208517 - Use the legacy opt-out in CanAccessNativeAnon for now to avoid crashes. r=me 
Bug 1208622 - Separate API entry points. r=bz 
Bug 1209843 - Stop checking for UNKNOWN_APP_ID in all places except those where AppId() is explicitly queried. r=sicking 
Bug 1208622 - Separate API entry points. r=bz 
Bug 1210508 - Handle null OriginAttributes from JS-implemented nsILoadContext. r=me 
Bug 1180756 - Convert chromium's service-worker-csp-worker.php into server-side python. r=bkelly 
Bug 1210293 - Remove legacy check from the XPIDL HTMLInputElement::SetUserInput. r=bz 
Bug 1210294 - Remove the release-mode IsCallerChrome assertions from nsDOMWindowUtils. r=bz 
Bug 1210240 - Do some telemetry for potential subject-principal crash sites. r=gfritzsche,r=vladan 
This is a pure refactoring. 
https://developer.chrome.com/extensions/manifest/web_accessible_resources 
Bug 1208756 - Tests. r=billm 
instantiated as-needed. 
Bug 1212658 - Remove needless IsCallerChrome check in nsMenuPopupFrame. r=bz 
Bug 1212693 - Remove skipCOWCallableChecks. r=bz 
Bug 1072150 - Crash in SubjectPrincipal if there's no active AutoJSAPI. r=bz 
Bug 1214295 - Fix up entry points for ClickWithInputSource. r=bz 
Bug 1214488 - Allow native callers in GetEntryGlobal. r=me 
Bug 1214491 - Rejigger entry points for nsGlobalWindow::Close. r=bz 
Bug 1214491 - Remove CanCallerAccess check for XPIDL version of nsGlobalWindow::AddEventListener. r=bz 
Bug 1214495 - Move CallerSubsumes checks in nsLocation into the WebIDL entry points. r=bz 
This should have been done in bug 839867. 
Bug 1198934 - Support special-case WebExtension behavior for TypedArrays. r=billm 
Bug 1198934 - Mark WebExtensions content script sandboxes as such. r=billm 
Bug 1215398 - Hoist the IsCallerChrome call in CanMoveResizeWindows to the script-only entry points. r=bz 
Bug 1208559 - Do a CSP Check in ServiceWorkerManager::Register (r=ckerschb) 
Bug 1216072 - Pass aCallerIsChrome in more places. r=bz 
Bug 1216308 - Hoist IsCallerChrome check in HTMLMediaElement::Play to API entry point. r=bz 
Bug 1217614 - Remove XPIDL mozSetDataAt and refactor associated code. r=bz 
This one was kinda gross. 
Bug 1218039 - Add a nice interface for both C++ and JS to access the principal kind. r=gabor 
Bug 1216308 - Followup for incomplete fix. r=me 
Bug 1220682 - Clear exceptions on single-arg init. r=bz 
Bug 773429 - Remove dom.disable_image_src_set. r=khuey 
Bug 1213943 - Remove RELEASE_BUILD conditionality. r=bz 
Bug 1228950 - Disallow scheme sets on nsHostObjectURI. r=bz 
Bug 1231309 - guard sz with assert. r=bobbyholley 

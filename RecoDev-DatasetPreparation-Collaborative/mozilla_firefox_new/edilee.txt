ryanflint.com

Bug 382373 - NS_ERROR_NOT_RESUMABLE and NS_ERROR_FTP_LIST are the same value (25). Patch by Edward Lee <edilee@gmail.com>, r=cbiesinger 
Bug 384219 - Download manager doesn't fail downloads properly.  Patch by Edward Lee <edilee@gmail.com>. r=sdwilsh 
Bug 384180 - [leak] nsDownload doesn't break mCancelable cycle on fail or cancel.  Patch By Edward Lee <edilee@gmail.com>. r=sdwilsh 
Bug 384161 - autoRemoveAndClose checks wrong pref type.  Patch by Edward Lee <edilee@gmail.com>.  r=sdwilsh 
Bug 384732 - Download manager should use a transaction when importing from downloads.rdf.  Patch by Edward Lee <edilee@gmail.com>.  r=sdwilsh 
Bug 314846 - exthandler doesn't remove : colon from mac file names (Random filename after downloading).  Patch by Edward Lee <edilee@gmail.com>.  r=benjamin, sr=cbiesinger 
Bug 237693 - Download Manager Should Understand when it breaks the KB,MB,GB barrier.  Patch by Edward Lee <edilee@gmail.com>.  r=sdwilsh 
Bug 385733 - Remove "rate change limit" check from DownloadProgressListener.  Patch by Edward Lee <edilee@gmail.com>.  r=sdwilsh 
Bug 384734 - Open method should be able to pass in old downloads to the window.  Patch by Edward Lee <edilee@mozilla.com>.  r=sdwilsh 
Bug 357016: follow-up to fix another void* nit, patch by Edward Lee edilee@mozilla.com, r=crowder 
Bug 388506 - Use emdash for download status [time â€” progress (rate)].  Patch by Edward Lee <edilee@mozilla.com>.  r=sdwilsh 
p=Edward Lee (Mardak) <edilee@mozilla.com>
p=Edward Lee (Mardak) <edilee@mozilla.com>
Bug 391423 - Reposition JS_(BEGIN|END)_EXTERN_C to avoid nesting #includes.  Patch by Edward Lee <edilee@mozilla.com>, r=jorendorff, r=bsmedberg 
Bug 389569 - "Less than a minute" in Download Manager is silly.  Patch by Edward Lee <edilee@mozilla.com>.  r=sdwilsh, r=mano, ui-r=beltzner 
Bug 392541 - Queued items don't have a context menu.  Patch by Edward Lee <edilee@mozilla.com>.  r=sdwilsh 
Bug 392362 - Make a pref to control the number of days for which we display download history.  Patch by Edward Lee <edilee@mozilla.com>.  r=sdwilsh 
Bug 394457 - Make backspace key remove files from download manager p=Edward Lee (Mardak) <edilee@gmail.com> r=sdwilsh 
Bug 392841 - With a download in progress, selection after deletion of a Completed item should go down. p=Edward Lee (Mardak) <edilee@gmail.com> r=sdwilsh 
Bug 394615: 0 byte downloads don't appear in the download manager, patch by Edward Lee <edilee@gmail.com>, r=sdwilsh 
Bug 394798 - Info bubble for just-completed downloads says 'Wednesday, December 31, 1969 6:00 PM'. Patch by Edward Lee <edilee@gmail.com>, r=sdwilsh 
Bug 385734 - Don't clear download status on pause, clean up DownloadProgressListener.  Patch by Edward Lee <edilee@gmail.com>.  r=sdwilsh, a=mconnor 
Bug 395539 - FTP TransportStatus's progressMax reports the full file size for REST retrieval (resuming partial download).  Patch by Edward Lee <edilee@gmail.com>.  r=cbiesinger, sr=cbiesinger, a=bzbarsky 
Bug 395134 - When resuming a download, strange things happen in the UI.  Patch by Edward Lee <edilee@gmail.com>.  r=sdwilsh, a=mconnor 
Bug 396488 - Clean up nsDownloadManager - spaces and stars.  Patch by Edward Lee <edilee@gmail.com>.  r=sdwilsh, a=mconnor 
Bug 396450 - Move logic out of nsDownloadManager.h.  Patch by Edward Lee <edilee@gmail.com>. r=sdwilsh, a=mconnor 
Bug 396451 - Index with i++ for DownloadManager sql queries.  Patch by Edward Lee <edilee@gmail.com>.  r=sdwilsh, a=mconnor 
Bug 396453 - Convert DownloadManager flag variables into flag functions.  Patch by Edward Lee <edilee@gmail.com>.  r=sdwilsh, a=mconnor 
Bug 396456 - "Refactor PauseResume into Pause, Cancel, Resume, RealResume" [p=edilee@gmail.com (Edward Lee [Mardak]) r=sdwilsh a1.9=mconnor] 
Bug 394546 - "Paused retried downloads keep updating status" [p=edilee@gmail.com (Edward Lee [Mardak]) r=sdwilsh a1.9=mconnor] 

Bug 414489 - Change default search chunk size and timeout and let users adjust them. r=sspitzer, a1.9=mconnor 
Bug 406358 - Location bar drop down ignores frequency of visits. (fixed by bug 394038) 
Bug 416214 - Tag matches in location bar autocomplete don't decode URLs 
Bug 418739 - The same invalid and old frecencies keep getting updated over and over again. b=417810, r=dietrich, b-ff3=beltzner 
Bug 418738 - Results visited from google are hard to find in the location bar. b=417810, r=dietrich, b-ff3=beltzner 
Bug 418838 - Expired visits unnecessarily reset frecencies to -1. b=417810, r=dietrich, b-ff3=beltzner 
Bug 416211 - Tagged results don't show bookmark title when matching the tag 
Bug 424454 - Typed urls (like domain roots) need more frecency bonus. r=beltzner, ui-r=beltzner, a1.9b5=beltzner Bug 416313 ? Define the identity of the visit_count column (for mak77@supereva.it, r=edilee,dietrich) 

More cleanup for Bug 422869 - Clean up autocomplete tests for use as a template for future tests 
Bug 413836 - Opening and then closing a new window with urlbar focused breaks the urlbar. r=gavin, b-ff3=beltzner. Fixes Bug 426525 - Broken auto-complete, nsIAutoCompleteController.input failure 
More testcase cleanup for bug 422869 in preparation for bug 418257 
Bug 428001 - Flashing when autocomplete shows results after not showing results. r=gavin, b-ff3=beltzner, a1.9=beltzner. Fixes Bug 407776 - move code to determine height of rich autocomplete popup out of _appendCurrentResult() and into invalidate() 
Move tests from toolkit/components/places/tests/unit to ../autocomplete for bug 422869 cleanup 
Now that bug 418257 landed, use shared header to run autocomplete tests for Bug 422869 - Clean up autocomplete tests for use as a template for future tests 
Fix up already processed results check for bug 422869 
Fix up comments now that these tests are using the shared test logic for bug 422869 
Unconfuse comment and add prefs for bug 422869 Bug 453821 - Places building in embedding-minimal profile failed. r=edilee. 
Bug 456520 -  Implementation of Multi-Touch Gestures on Mac OS X, p=tdyas@zecador.org+edilee@gmail.com, r=sdwilsh@forerunnerdesigns.com, ui-r=beltzner@mozilla.com 
Bug 482069 - Awesome bar adaptiveness totally sucks 
Bug 474862 - Create plural rule for Icelandic. r=gandalf, r=smontagu 
Bug 486655 - test_privatebrowsing_title.xul fails on Windows and Linux; r=edilee 
Create a new method FixInvalidFrecencies that finds invalid (negative) frecencies and recalculates them. Use it for handling creating/migrating DBs as well as recalculating invalid places on daily idle (place frecencies are already estimated by decay). This obviates a few preferences, queries and methods related to recalculating on idle. The test uses mork history with a number of pages that now all get their frecencies calculated on migrate, where before this fix, the test fails with a bunch of pages still with negative frecencies. 
Don't bother GROUP_CONCATing tag titles that are empty. Restructure the BOOK_TAG_SQL #define to be somewhat more readable. Test by adding tags to a uri then renaming the tag to empty and making sure they don't show up in autocmoplete results. 
Separate the last half of UpdateFrecency into UpdateFrecencyInternal to be reused by FixInvalidFrecencies. Existing tests touch both paths, e.g., test_000_frecency and test_migrateFrecency. 
For public entry points of nsNavHistory, add ENSURE_ARG for in-pointers and ENSURE_ARG_POINTER for out-pointers; NS_ASSERTION for private APIs. Test automatically finds functions from nav history service and calls them with null arguments. 
Pretend a page isn't bookmarked/tagged when searching for only history unless the user explicitly wants them. Test by updating special searches test to ignore tags when searching for history ^. 
Show seconds when we're under 4 minutes like how we show "few seconds" when we're under 3 seconds. This pushes the "double minute" problem to 4 minutes instead of 1 minute, but the user experience goes from 100% longer to 25% longer. Test by checking low times for seconds, minutes, hours and check that we generate the right string for the boundaries. 
Give empty commands for twist gestures, so they do nothing, but still show up as prefs in about:config. 
Don't tell autocomplete that we have 0 results ongoing when we just started the search, so it doesn't cause the UI to show 0 results and immediately show more. 
Hard code return of NS_ERROR_OUT_OF_MEMORY on failure to createInstance. Push down declarations of rv to its first assignment. 
Bug 481873 - Failed login notifications remain after successful login 
Bug 482003 - Refactor _sync and _syncAsNeeded. r=thunder 
Bug 482007 - Refactor "should sync" and schedule sync logic. r=thunder 
Bug 482178 - Clean up services -> lazy services. r=thunder 
Bug 481345 - Weave should be disabled while offline or private browsing mode is active. r=thunder 
Make method signatures for sync and _sync match up. (followup for bug 482003) 
Pushed too early :( really match up signatures 
Bug 482561 - Remove localLock notifications 
Bug 482513 - ClientRecord inherits from WBORecord, so it lacks cleartext. r=thunder 
self.cb not this.cb for engine._wipeClient 
Bug 482878 - service (_remoteSetup) needs to migrate payload formats. r=thunder 
Bug 482792 - Provide a wipeClient, wipeRemote, resetService for weave service. r=thunder 
Bug 482793 - Process commands sent by remote clients. r=thunder 
Bug 468691 - Need UI for when something is wrong. r=thunder 
Bug 482903 - Wiping local passwords data prevents syncing. r=thunder 
Fix whitespace in service.js 
Start sync timer after manually logging in 
Bug 483037 - Need to wrap sync callback for timer callback - scheduled syncs don't work 
More services cleanup; Expose a Utils.openWindow/openDialog 
:( trailing whitespace 
More window/dialog cleanup for commonly used dialogs 
Bug 484144 - Make sync status dialog not modal. r=thunder 
Bug 482898 - Allow an optional array of engines for wipeRemote, wipeServer, resetClient, etc.. r=thunder 
Bug 482900 - Provide a friendlier UI to choose which ways to sync data. r=thunder 
Bug 483671 - Password engine isn't getting correct hostname. r=thunder 
Bug 481741 - Switch to JSON from nsIJSON 
Bug 486230 - Share json disk caching with Utils.json{Load,Save} 
Bug 486234 - Give changes json file name for history, passwords 
Initialize unified client store from disk json and local prefs and update on pref changes + sync. Clean up client engine code (local vs inherited, alphabetical), and create a helper modify() to save snapshots. 
Set the title in the record just like any other bookmark (folder) 
Just relabel Cancel to Hide (but keep around the original (localized) label in case we fail) 
Set the local client info after resetting the clients store hash 
Expose a .deleted property that engines can set to true to store an even thinner deleted payload (empty string "" instead of "[null]") on the server. Handle deserializing of deleted records by setting the property. Note: Engines must set their payloads to something JSON-able if it's not a delete record. 
Bug 482670 restored un-wrapped payloads, so until a version bump, those using trunk will need to do a manual server wipe. 
Add a Utils.isArray and use it 
Import engines to the Weave global object and use them to register engines, which checks if the arg is an array. To support handling of errors (unused), the engine is returned on register failure. 
Create a specialIds hash and use it to for getting weaveId/id, determine top level, if a folder is a root, getting all ids, wiping, and tracker ignoring. 
Share the ignore logic that takes a parent folder and ignore if the engine says so or it's a livemark. 
Use nsIXULAppInfo to get the name and remove Fennec specific bits. 
Register the built-in engines on service start-up instead of from the overlay, and have Engines.register check if the engine has already been registered. 
Just skip the scheduled sync if we're already syncing 
Get rid of the QueryInterface and just use instanceof while copying the logic of nsFormHistory::Notify to avoid divergent logic until satchel provides a notification. 
Set _recordObj for Bookmarks/History engines and override PlacesItem.decrypt to switch itself to the right type after CryptoWrapper decrypts the payload. 
Get rid of extra record.cleartext references within the for/each/switch -- even for unused keys like incomingSharedAnno. 
Add a couple Utils helper to create a pair of simple [gs]etters that use a hash property instead. Apply this to various records: WBORecord, {Priv,Pub}Key, Crypto{Meta,Wrapper}, and every engine's type records. Migrate by making sure key data exists (name change). 
Switch cleartext properties to Uri that always takes a text spec, so eventually URI refers to nsIURI. GeneratorURIs seems to have been broken either way.. makeURI of an already URI and storing of a URI into cleartext. This landed with changes to keys, so the server wipe also handles the local name changes. 
Switch pretty much all references to cleartext in modules/engines/ to just use the record. Also clean up some references to null cleartext to use deleted. The only reference to cleartext is to iterate over that hash in bookmarks. 
Min version is 3.1/5, so we grab DBConnection from places directly now. 
Fix form engine displayname to displayName 
Remove existing hardcoded engine list + prefs and build checkboxes based on registered engines. Engines that give null for enabled (instead of true/false) are considered disabled. Update base Engine enabled get/set to give null and allow setting. 
Import the outdated engines, but delete their pref so they show up as disabled. Clean up the old engines a little bit so they don't allocate unnecessarily and to not use syncCore. 
Add the 4 engines with just the base code to set their name and register them for Firefox. 
Have engines check if the deleted flag is the same for _isEqual. 
Use triple-equals to determine if two things are the same; otherwise, check if both are objects with the same keys and same values for the keys. 
Add test for Utils.deepEquals 
yield for PubKeys.get() when passed a string uri 
Remove trailing newline bug 480480 work-around: trim(). 
Internally store .lastSync as a string but keep exposing set/getters as float values. parseFloat takes both strings and numbers and gives a number. 
Bug 481327 - Script gets stuck during startup. r=Mardak 
Change _ignore to take itemId to find folderId and pull out addChanged/getItemGUID/upScore to addId. 
Lazily load places ids for a given weave id/place name pair into kSpecialIds and update all consumers. Expose a Svc.Bookmark in utils. 
Share browser detection code for register and unregister tab listeners and better check for tabbrowser windows. 
Use a richlistbox with richpref styling for input/buttons like the rest of the weave prefs. Hide password/passphrase after entering, but keep them visible when entering for the first time. 
Only try loading WeaveCrypto maemo binary on Linux (until we get Linux_arm-msvc). 
The childNodes NodeList keeps its indices even after removal, so it's safer to convert the array-like thing into an actual array. Condense the QueryInterface code to the instanceof magic. 
Convert a log.info to log.debug for passwords so it doesn't clutter the brief log. 
Add ext/Sync.js to do sync-async 
Switch Resource._request to Sync. (ChannelListener, filterUpload/Download) 
Change Resource.get() to be sync (no callback) and fix up call sites used for login + sync now. 
Fix Resource.* call sites used for wiping the server and initial sync (+ key gen upload) 
Change SyncEngine._reconcile to not be async/yield. 
merge weave 
RecordMgr_import: async + async/yield -> sync. 
RecordMgr_get: async + async/yield -> sync. 
Remove Async.sugar from wbo.js. 
PubKeyManager_getDefaultKey: async + async/yield -> sync. 
PubKeyManager_uploadKeypair: async + async/yield -> sync. 
Remove Async.sugar from keys.js. 
CryptoMeta_getKey: async + async/yield -> sync. 
CryptoMeta_addUnwrappedKey: async + async/yield -> sync. 
merge weave 
CryptoWrapper_encrypt: async + async/yield -> sync. 
Fix ClientRecord_encrypt to not need to do async. 
CryptoWrapper_decrypt: async + async/yield -> sync. Fix up bookmark/client decrypt. 
Remove Async.sugar from type/bookmark.js and type/clientData.js. 
Remove Sync(filterUpload/Download) and make them plain sync function as well as beforePUT and afterGET. 
merge weave 
WeaveSvc_findCluster: async + async/yield -> sync. 
SyncEngine__syncStartup, SyncEngine__uploadOutgoing, SyncEngine__syncFinish all async/yield -> sync. 
Store_applyIncoming, SyncEngine__applyIncoming: async + async/yield -> sync. 
CollectionIterator_next: async + async/yield -> sync. 
SyncEngine__processIncoming: async/yield -> sync. 
Remove Async.sugar from auth.js, resource.js, stores.js, trackers.js. 
merge weave 
Temporarily convert _notify to _notifyAsync and add a Utils.notify. 
Engine_sync: async -> sync. SyncEngine__sync: async/yield -> sync. 
Engine_resetClient: async -> sync. SyncEngine__resetClient: async/yield -> sync. 
Engine_wipeClient: async -> sync. Engine__wipeClient: async/yield -> sync. 
Engine_wipeServer: async -> sync. SyncEngine__wipeServer: async/yield -> sync. 
Remove Async.sugar from engines.js. 
Clean up various engines to remove Async.sugar and random self/yields. 
merge weave 
Fix form engine to correctly pass in the engine. 
Add a Utils.catch as a sync. version of Wrap.catchAll. 
WeaveSvc_verifyLogin: async + async/yield -> sync. 
WeaveSvc_resetService: async + async/yield -> sync. 
WeaveSvc_wipeClient: async + async/yield -> sync. 
WeaveSvc_resetClient: async + async/yield -> sync. 
WeaveSvc_wipeRemote: async + async/yield -> sync. 
WeaveSvc_processCommands: async + async/yield -> sync. 
WeaveSvc_wipeServer: async + async/yield -> sync. Fix up chrome uses of wipeServer, resetClient, wipeRemote, wipeClient. 
WeaveSvc__freshStart: async/yield -> sync. 
WeaveSvc__syncEngine: async/yield -> sync. 
Identity_getPassword: async + async/yield -> sync. Make onGetPassword take one cb to pass back the password. 
Add a Utils.lock as a sync. version of Wrap.localLock. 
WeaveSvc_login: async + async/yield -> sync. Fix up chrome code. 
WeaveSvc__remoteSetup: async/yield -> sync. 
merge weave 
WeaveSvc_sync: async + async/yield -> sync. Fix chrome callers to setTimeout(sync) to async run sync. 
WeaveSvc_onStartup: async + async/yield -> sync. Convert chrome callers from using async callback to just run after. 
WeaveSvc_verifyPassphrase: async + async/yield -> sync. Fix chrome to setTimeout(verifyPassphrase). 
WeaveSvc_setCluster: async + async/yield -> sync. (Unused?) 
WeaveSvc_createAccount: async + async/yield -> sync. Fix chrome to call its onComplete with the return of createAccount. 
CryptoMeta_addKey: async + async/yield -> sync. (Unused?) 
Remove async.js and wrap.js and remove remaining references to Async.sugar, etc. 
Convert test_resource to sync. 
Convert test_records_wbo to sync. 
Convert test_records_keys to sync. 
Convert test_records_crypto to sync. 
Remove test_async* tests. 
Convert test_auth_manager to sync. 
Remove some async related code in head.js. 
merge weave. resolve addition of kSpecialIds to bookmarks.js near removal of Async.sugar. 
merge weave. resolve comments added to resource.js. 
Remove async and wrap from test_load_modules. 
Set the item type for generic PlacesItems, but don't do anything when trying to create it. 
Strip newline from various debug output. 
Print the exception with the stack on fault tolerance. 
Share a tagging code for create/update that will tag a dummy uri temporarily while it untags the bookmark to make sure every tag has at least one child during this untag/tag process. 
Create a new record type, BookmarkQuery, to handle place: uri smart bookmarks. Store what tag name the query wants and lookup the id for that tag on other machines on create/update. 
Debug log the size of PUT/POSTs messages. 
Sync.sleep(0) to let the main thread do UI, etc. after every record encrypt or decrypt. 
Toggle forms/prefs preferences to true by default. 
Pass the ID object instead of reading out the password and passing it in to encrypt/decrypt. 
Have the disabled engines return null for enabled instead of the pref's true/false. 
Use the log.logger.engine.* prefs to determine what the Store and Tracker should log with. This requires putting the same engine name on each Store/Tracker object, so there's some duplicate string values right now. 
Log jsonLoad/Save as trace instead of debug. 
Remove pref tracker init debug message. 
Also update createKeypair for keys to pass around the passphrase object and update the tests to pass around an object. 
Update the substitution names to separately replace the storage version with the new storage version Makefile variable. 
Rename MIN_SERVER_STORAGE_VERSION -> STORAGE_VERSION and use it when setting meta/global's storageVersion. 
Make it so WEAVE_VERSION is only used to detect add-on version upgrades. 
Wait a while after wiping so that the DELETEs replicate. 
merge weave. resolve Makefile storage_version changes. 
merge weave 0.5pre2. 
Re/Move substitute declarations. 
$hare the $ub$titute command from root Makefile. 
Fix trailing spaces. 
Don't open the sync status after wiping, and move the after-wipe sleep to inside freshStart with shorter wait. 
Set the record manager for CryptoMetas, PubKeys, PrivKeys after uploading keys. 
Remove description reference to automatically sending local data. 
Detect if the user has been recently active, and if so, skip the sync. Arbitrarily picking 30 seconds for now. 
Incrementally process records as the collection finds record boundaries and converts them to records for the engine to use. Get rid of the collection iterator and original RecordParser. Add tests for incremental record parsing and remove old iter tests. 
Store the most newest Weave version on the server and update it if necessary on each remoteSetup. Make a concept of a compatible version where this version of Weave can read but might change records with its full sync. 
bug 497938 - Client should back off server when it is busy, r=edilee 
Convert various debug messages to trace. 
Remove short-circuit logic of comparing number of keys for deepEquals and iterate through each key on both objects to make sure both have the same value. 
Rebuild Linux_arm-gcc3 (maemo) WeaveCrypto.so binary. 
Trim the full path from JS stacks and just show the file and convert nsIException traces to look like js stacks: func()@file:line. Only difference is js stacks show arguments while nsIException always shows just (). Fix up some places where we print the exception instead of the fixed up string. 
Add i86pc machine detection for crypto Makefile. Add SunOS for test Makefiles. 
Generate SunOS x86 binaries and put them under platform/SunOS because the contrib Firefox builds are SunOS_x86-sunc while we build SunOS_x86-cc. 
Refactor reconcile to call findLikeId that by default will look for recordLike in the outgoing queue as it does now. Override findLikeId for password engine to search local logins. 
Change client engine to override findLikeId instead of recordLike to save on some work (iterating over changed ids). 
Wrap the original SyncEngine._sync function with a call to runInBatchMode, so SQL disk writes happen at the end of batch mode instead of on every change. 
Make sure we generate ASCII data for upload by escaping on serialize and unescaping on deserialize. Test to make sure serialized data is ASCII and the original records aren't modified by serialize. 
Wrap the error code with a JS Error to track the stack, and re-wrap it to get the full stack trace. Also, remove args for __request for the stack because it's sometimes the whole record.. 
bug 481733 - provide better error messages, handle errors better, make autoconnect more robust, r=edilee 
Remove unused bookmark annotations/constants. 
Put Annotations in Svc and expose a get/set Utils.anno call to use from bookmarks. 
Remove meta/mini records. Bye! 
Get rid of depth and sort on index instead. 
Temporarily append everything and don't use sortindex for ordering within a folder. 
Rename weaveId to just GUID and share a id<->guid function across store and tracker. 
Move _preprocess to before applyIncoming to share code for create/update/remove. 
Store the parent GUID as an annotation if the item is missing a parent and share some parent lookup code. 
Use a shared setGUID for new items and changing guids so that the item always ends up with the GUID (because conflicts shouldn't have been Weave generated). 
Reparent orphans when creating the parent folder. 
Remove the missing parent annotation after reparenting an orphan. 
Set the predecessorid when creating records for upload. 
Use the predecessorid to figure out where to put the item or save the predecessor as an annotation. 
Print out the stack when failing to apply an incoming record. 
Simplify the debug output when creating bookmarks and include the parent and position. 
For items that have the correct parent, see if there's an item following it and reposition the chain of items to after the correct parented item. A chain of followers starts at the item with the predecessor annotation and goes until the end of the folder, an item that is looking for a predecessor, or ends up at where we started (the predecessor). 
When updating the position of an item, move all of its followers with it. Share chain moving logic used for fixing followers on create and updating positions. 
Add the successor ids when adding/removing items as well as both old and new successors when moving. 
Attach followers for both created items and updated items (call from applyIncoming) when it's under the right parent. Share logic for attaching followers when creating a folder then fixing the reparented children and when creating/updating an item in the right parent. 
Share the logging _ code for tests. 
Add tests to make sure bookmarks are in the right position after creating/updating. 
Handle holes in bookmark folders and fix up bookmarks to be at an earlier position if a hole was detected. 
Merge weave to weave-relative. 
Remove trailing whitespace in service.js and util.js. 
Switch to the new about page.. currently empty. 
Add Myk's StringBundle to modules/ext 
bug 481733 - provide better error messages, handle errors better, make autoconnect more robust, r=edilee 
Merge weave to about-weave. 
Resolve commit conflicts from merging in weave. 
Merge weave to about-weave. 
Handle createAccount resource exceptions correctly (null ret, throw fail) and cleanup. Check for non-failure in the UI instead of only success 200. 
Try/catch in checkUsername if resource throws and default to generic-server-error. 
Remove unused cancelRequested code that causes JS strict warnings. 
Conditionally log trace records to avoid always doing record.toString(). 
Use the plain get/set for wbo.modified because it's not needed anymore and was causing JS strict warnings: reference undefined property. 
Also use subqueries instead of multiple queries and drop the query count down to 2. 
Remove old dumping code for debugging bug 476903. 
Extend Utils.anno to handle pages and clean up GUID code for history engine. Also fix a bug where changeItemID would set annotations to expire on session. 
Remove the Wizard Dialog, Account Pane, Login Dialog, Add-ons Pane, Advanced Dialog and their related xul/js/css/strings/images. Clean up some unused functions, xul:preferences, css, strings. Orphaned functionality: autoconnect preference, reset/forgot password/passphrase. 
Remove unused alias for wbo/identity. 
Don't include changes to special places Library "exclude from backup" items. 
test_resource:  FAIL 
It's possible for livemarks to not have a siteURI, so don't assume it to be there. 
Get rid of lastChannel and return a String object from _request with additional properties of status, succeeded, headers -- even if the response was handled by cache. Update engines to check for non-success and throw the failure. Update tests to use these additional properties instead of lastChannel, etc. 
Save an exception/catch when failing to import a record. 
Make an alias to the clusterURL + username as userURL. Fix whitespace problems. 
Just strip out " from cluster response because Spidermonkey JSON.parse does not allow literals. 
Fix wipeServer to use the new 0.5 API: get list at info/collections, a hash; delete storage/<engine>. 
Read out the timestamp of the POST response header because the modified time is not part of the response data. 
Merge weave to weave-0.5-api w/ conflicts. 
Resolve lastChannel removal and 0.5 api changes. r=thunder 
Server expects catcha-challenge not captcha_challenge for new users. 
Remove old modified arg for collections. 
New User API returns server code 2 instead of http 417. 
Land weave-0.5-api on weave. r=thunder. 
Switch to newline mode when using a collection record handler, and look for newlines! Easy! Update test to provide newline-separated strings instead of JSON. 
Remove Firefox Weave pref pane and point Preferences... to about:weave. 
Add erase server data button to the cloud bubble. 
bug 503703 - add make target for building a single-OS XPI, r=edilee.  actually allows specifying multiple package targets 
Remove unused fennec preference overlays, scripts, strings, styles. 
Save the exception from inside runBatched and not have runInBatchMode return failure, so we can then expose the exception. 
Remove mostly unused FaultTolerance service and fix up remaining references. 
Insert the server_url for the default preference at package time. For now, have both rel and dev use auth.smc. 
Remove unimplemented engines so they do not initialize. 
Instrument all functions that are part of the sync engine (except some constructors, etc.) and generate statistics (min/max/sum/num/avg) for processing. For now with the default appender, implement toString to report just the total time. 
Don't aggressively persist the password with smart (dumb?) setters that clear out the temp password; and provide a separate function to persist the login. This effectively makes setting password/passphrase always temporary until persisted, which will check if the value is different from the one already stored on disk. A number of verify/cluster functions are privitized to not need to take user/pass/passph as arguments so that the default authenticator will work, and verifyPassphrase will use the stored passphrase to correctly handle auto-login. 
Fetch info/collections before syncing engines and set the lastModified property on the engine so that they can check if they need to process incoming. 
Remove the brief log now that we only show verbose. 
Always allow getting an object representation of potentially JSON response for any Resource instead of explicitly on filterDownload. Update existing Resource GETs that manually parse the response. This prevents the String response from accidentally toString()ing a filteredDownload that converted to a different type. 
Get rid of Filters and automatically JSON.stringify PUT/POST data that aren't strings, so plain Records can be passed in to PUT and POST. This leverages toJSON of Records to provide an object that can be serialized. Fix up client record serialize/deserialize to still escape/unescape non-ASCII. 
Use a short-circuiting check to determine if a history visit already exists. 
Remove some unnecessary logs that follow right after the notify/event now that we only show verbose. Only log non-success response body for Trace. 
Be less chatty when showing GUIDs and ignore cases. 
Chop off the end of long URIs for debug output onStartRequest. 
Create records with the correct parent/pred if it's still waiting for them to sync. 
Convert uses of recordLike/findLikeId to findDupe except Bookmarks is unimplemented. 
Use places utils to find an existing bookmark dupe for an incoming record. 
Switch end-of-sync deletes to something SyncEngine is aware of and runs at _syncFinish. 
Implement multiple ids deletion for use with 0.3 APIs. 
Pick a canonical guid to keep in a way that all machines can agree without having all data -- "smaller" guid. 
Detect dupe folders by title for now. Might need to update the hash during sync if titles are added. 
Merge weave to weave-partial-view w/ conflicts. 
Resolve bookmarks.js merge conflicts switching to batchSync (with trailing comma). 
Switch to 0.5 server API for deleting multiple ids from a collection. 
Expose a _handleDupe on engines and provide a custom one for bookmarks that tracks GUID changes so that it can keep an alias mapping to fix incoming item properties (id, parent, predecessor). Move out _reparentOrphans so that it is triggered on update and not just create because folders can change ids to the right parent. 
Detect dupe separators by identifying them by their position and generate the lookup lazily with the folder/title mapping for now. 
Merge weave to weave-partial-view. 
Update lastSync to the lastModified time from info/collections instead of updating times on each record. This is to prepare for fetching a list of GUIDs and processing a list of GUIDs. 
Merge weave to weave-partial-view. 
Add limit as a param to Collection. Make requesting guids the default. 
Don't create a GUID when looking for dupes and set the GUID when adding a url. 
Only fetch a limited number of items on first/update syncs and if we get the same number, ask the server for the ids to fetch later. Also on every download, process some of the backlog and save the list of GUIDs to disk as json for cross-session support. 
Merge weave to weave-partial-view. 
Add some comments to partial download code and remove other comments. 
Fix exception name. 
Address review comments nits. r=thunder 
Merge weave-partial-view to weave. Bug 507429 - Partial sync download support. r=thunder 
Work around bug 514803 by not calling toLocaleString() and generate a date string manually. 
bug 511549 - make detailedStatus much smarter about errors and backoff, r=edilee 
Get rid of the ugly EXPORTED_SYMBOLS array of strings for constants and generate it from a constants hash that sets the value and provides the exported name. Remove some unused constants and line-up the values at 40th column. 
Use the lazyStrings object for error strings to avoid using the wrong file (locales vs locale). 
Remove trailing period for passphrase error code. 
Remove meta serialization now that resource takes objects. 
Use trace logging for reporting GUIDs. 
Merge weave to weave-about-weave with conflicts. 
Resolve constants.js.in conflicts by switching to the new format. 
Merge mconnor's about-weave branch to weave-about-weave with conflicts. 
Resolve conflicts by taking the already-fixed about.js and locally-fixed constants.js.in. 
Merge Mardak's weave-about-weave to about-weave. 
Merge weave to about-weave. 
Land about-weave on weave. Bug 516350 - about:weave round 3 followup fixes. r=thunder 
Keep track of previously opened windows of pages that should only have one instance open and close the old one if it's still open. 
Rework server/user/misc prefs to allow relative paths and full urls for generating API paths. Cache string properties of generated URLs under the storageAPI instead of using dynamic getters. 
Report 404 info/collections responses as "login rejected" if we're on the right cluster. 
Don't update the cluster on each login unless verify login failed or there was no cluster set. 
Provide an initial implementation to read and set preferences: autoconnect, serverURL. For now show them in a "Custom settings" expando tab like the one for create account, but the styling isn't great. 
Load Weave off of the event that triggered sessionstore so that it and its callers can finish loading before autoconnect does network activity. 
Randomly generate 10 characters from a pool of 70 possible characters for an equivalent 61.29-bit GUID which should have around 1% chance of collision (within a collection) after ~100 million records. 
Correctly cancel any sync triggers after starting a sync with a shared function that removes timers and idle observers. 
Add a simpler-to-use nsITimer wrapper, Utils.delay, that can use a named property of an object to additionally delay or clear the timer. Get rid of Utils.EventListener and simplify/fix up users. 
Weave already triggers on a late notification and puts itself on the event loop, so just additionally delay startup based on the number of open tabs (which will all be busy at startup). 
Add initial error reporting and "available" tagging. Also add "start over" functionality and change some custom settings display. 
Wire up "custom" inputs to set/read and show/hide server url box. 
Save a nextSync value in a pref and use it to trigger a sync-on-idle if the "next sync time" already passed when logging in. Make sure to default to backoff time first, then next sync, then use the default. 
Adjust how often Weave syncs based on the number of clients and only sync tabs if there are multiple clients. 
Don't send any deletes as the server will do the delete with bug 518945. 
Persist sync intervals because we only update it when changing the number of clients. 
Check the score, which gets bumped up on tab open/close/select, to decide if tabs should be marked as changed. 
Allow each engine to provide a custom Collection object and have History provide a collection that filters out certain data. This is inefficient because we have to first create then encrypt the record before we can filter it out. 
Run sync on idle on a separate event so that login can return and release the lock before trying to sync. 
Use the default or backoff intervals only after checking a previously scheduled sync and pick the bigger of the two. 
Add some account creation error handling, but it's still pretty clunky with username detection and alerts for other stuff. 
Sort the sync timing report to show certain functions first. 
Don't unconditionally forceGC on processIncoming especially when there's nothing to process. 
Default to mobile sync interval (5 min) for account creation and upgrade. 
Call eval() in Sync-async loop to work around crashes on 1.9.2 Fennec. 
Just get the pref without slashifying with getURLPref. 
Don't unnecessarily throw from verifyLogin and remove its _catch wrapper. 
Don't wrap changePassword with _catch and persist the password on success. 
Remove unused threshold code that will be replaced soon with bug 518075. 
bug 518273 - need to handle not having an active node assigned, r=edilee 
Set a flag on the status object to indicate partial sync after syncing an engine. For now, just show some text under the sync arrows to let the user know nothing needs to be done. 
Don't try logging out when already logged out -- about:weave calls logout which tries to _log, but Fennec weave hasn't loaded Weave yet. 
Remove eval() workaround now that jit.chrome doesn't crash on latest 1.9.2 fennec (bug 517247). 
Move the status record into a separate Status object exported with the Weave object. 
Switch back to STATUS_OK (from STATUS_DELAYED) when the delayed startup is actually called. 
Lazily listen for quit-application on the first sync-async call and bail out if the notification is sent while waiting for the callback. 
Land external changes to Sync.js: setTimeout timer reference, checkAppReady comments/calls. 
Simplify logic for Engines.getAll/Enabled and use Enabled for main sync loop. 
For each engine, try decrypting a record from the server before wiping local data. 
After potentially wiping out all local passwords, save the Weave passwords to disk. 
Split multiple id deletes into 100-id chunks instead of hitting max apache URI length. 
Limit the initial the first fetch of new items by a total number of fetch and subtract the number of items processed. Use the difference to keep fetching more items from the backlog in chunks. 
Have the syncInterval getter return with a lower interval for non-mobile clients while still enforcing backoff if it's bigger than the sync interval. 
Keep the unsorted bookmark folder unsorted and not worry about the ordering. 
Update predecessor test to additionally test unsorted bookmark predecessors. 
Ignore sortindex when comparing if records are different because it's only used for ordering of records. 
Additionally get the frecency for a history GUID/page when getting the url and title. 
Use places to figure out the frecency of a bookmark and give items (not just bookmarks) a bonus if it's sitting in the toolbar. 
Remove unused pick-sync dialog (<==, <==>, ==>). 
Remove unused change password/passphrase/generic dialog. 
Remove unused TabsNotification for remote virtual tabs notification. 
Remove bits related to authenticator/auto-login and openid (munge and redirect). 
Provide an optionsURL to show settings on Fennec and update the options on various events like sync, login, options loaded. 
Load a local firstrun page with instructions on what to do instead of about:weave. 
Show the new pref pane (bug 521357) by having the options.xul file for Fennec (bug 523384) close iteself and open the real prefs window. 
Remove onStartup call from fennec overlay now that we listen to final-ui-startup. 
Remove files under content/about and content/ext (jQuery) and about:weave service. 
Show "Connectingâ€¦" after tapping connect and "in progressâ€¦" after tapping sync now. 
Remove unused openStatus util call for status.xul. 
Avoid undefined property warnings by checking for null first instead of comparing. 
Assume Weave is always enabled (don't store it in a pref) and only disable if checks fail on startup. 
Correctly remove the separator getter just like for folders to prevent triggering the lazy loader on every sync. 
Missing let for declaring meta. 
Just open the file as a tab to show the activity log. Remove related xul/js/strings. Saving can be done through normal Save Page As... No manual cleaning of the log, but the size is much smaller. 
Persist the new passphrase in the login manager to have it sync the modify (delete+add). 
Add a new pref storageAPI (currently 0.5) that gets used for storage urls. 
Backout bug 518972 (6954c93b8903) so now we push all data instead of pages with more than 1 visit. 
Reset the score when calculating the global score. 
Remove unwanted info logging for bookmark indices. 
Store the reason for starting fresh (new syncId) in meta/global and fail remoteSetup on certain reasons to let the UI show a notification to the user for a response (pick merge or change passphrase). Code paths (sync, prep, etc.) related to remote commands are removed. 
Toggle the autoconnect pref on login/logout. 
Syncing 1000 items should be good enough for anybody...... 
Set the current client on any tab change for tracker.changedIDs and reset that when sync finishes. 
Try fetching tabs when loading the remote tabs view and if the sync got new tabs, reload the page. 
Bug 528356 - Bump storageAPI version to 1.0 
Comment out some trace logging in service.main for now (they always appear). 
Switch some messages like private browsing, network change to trace and make the default service.main level Debug instead of Trace. 
Add missing fennec-tabs.dtd for bug 529104. 
Switch to Svc.Bookmark.removeItem from this._bms.removeFolder. 
Use onBeforeDeleteURI to get the page's GUID and upload the delete record and process it by removing the page. 
Show Connecting... when signin in on page 0 and Verifying... when checking the passphrase on page 1. 
Detect if sync failed because it's out of date and show a warning notification with a button to open the add-on manager's extension view. 
Show some help text if the passphrase is incorrect as well as showing the reset secret link on failure. 
Just default to "Firefox" as both desktop and mobile are branded "Firefox". 
For both folders and separators, use the parent name (not guid) in addition to the item's title/position to determine if it's a dupe. This modifies the bookmark format for folders and separators, so a storage version bump is needed. 
Generate a client name based on the logged in username, appname, hostname, and profile name. 
Remove trailing whitespace from the codebase. 
Add in prefs that are linked to the Firefox Preferences UI. 
Remove unused sync engines (cookies, extensions, input, microformats, plugins, themes). 
Add listeners for Fennec tab events the same way we do it for Firefox and share listener logic for various event types. 
Only expose that the tab engine knows about the current client's tabs, so always create/apply incoming and only create records tabs for local. 
Simplify tab record to just use deferGetSet like the other records and sort tabs based on their last usage to pick out a subset. 
Bug 530926 - remove "Weave /" from tab list page title 
Make headers larger, adjust text margins, add nokia sans font family. 
Remove unused prefs and imports. (Bug 524916) 
Remove unused SnapshotStore. (Bug 524916) 
Use prefName for checking if an engine is enabled and have forms share a prefName with history. 
Make sure we only add one idle observer by keeping a flag. 
Use checkSyncStatus instead of directly calling syncOnIdle or scheduleNextSync so that we only schedule if we're okay to sync. 
Provide a fake service for platforms that don't have the service like Private Browsing (for Fennec/Seamonkey). 
Share tab-gathering code for both createRecord and locallyOpenTabMatches. 
Get rid of persistent storage for clients and tabs to always fetch fresh records. 
Always take the incoming item after a wipe and otherwise do the normal reconcile. 
Ignore certain filtered urls when creating a list of tabs for remote machines. 
Check that the cryptometa is unwrappable when syncing; if not purge the key and data and make a new crypto record. 
Avoid concurrent key generation by updating meta/global immediately after resetting the client and have wipeServer not delete the meta collection. Also on detecting a syncid mismatch, sleep to allow remote keypair to be uploaded, and don't force a mismatch on upgrade. 
Make sure username is always lowercase so that pubkey uri, storage uri, etc. are all the same no matter how the user logged in. Server needs to be wiped to make sure existing keys with other casing are removed. 
Always update the lastModified time to avoid tabs only sometimes getting updated. 
Add observers for bookmarks-restore-* and ignore changes during import and trigger a fresh start on success. 
Make the weave add-on guid available as a constant and watch for AddonOptionsLoad with the matching addonID. 
Expose engine.tabs.filteredUrls as a string to be used as regex and filter case insensitively. 
Create a mobile root in Firefox and link it to the Library UI as a query that fixes its own title if changed. Mark the mobile root on Firefox/Fennec as special so Weave uses "mobile" for the guid in the record, and items will appear in the appropriate folder. 
Detect if tabs sync is pending or if tabs are all open or there's no tab data to show the appropriate message. 
Have wipeRemote wipe just the engines' data and make sure the clients process the command. 
Remove engines from failing load tests now that engines are gone. 
Trigger lightweight theme manager's currentTheme setter when changing the usedThemes pref. 
Have importing service.js trigger startup instead of only starting up from Weave.js, which now is used as a backup kickstarter. Only call import(service.js) when necessary from various Fennec files. 
Fix up existing users as well as only creating the place query under AllBookmarks if there are mobile bookmarks. 
Notify with "weave:service:ready" so observers can lazily load and wait to add engines, Weave UI. 
Add pref for prefs logger and remove lightweight persisted prefs as those will be generated. 
Fetch info/collections? with an extra "?" once a day on a normal sync so that it gets the same data but is easily differentiated in access logs. 
Remove special casing of tabs prefs and remove tabs.backup to simplify the UI logic. Also remove dynamically enabling/disabling based on number of clients. For Fennec, show a notification about recent tabs need syncing. 
Add a tri-state pref that is unset, 0, or a number (modified time in seconds) and don't show the notification if it's in the "0" state. Unset pref means no modified time has been saved, and a non-0 state is the modified time of the last synced tab. So when tabs arrive with a different modified time, switch to the 0 state. Additionally, still remember if the user ever dismissed the notification and never show it again. 
Update the preference to point to the new password reset page on auth.smc, and for now, just open it per mconnor's suggestion. 
Include the URI on success/fail requests and only trace log the onStartRequest. Switch various debug messages to trace and remove importing Log4Moz in fx-weave-overlay and generic-change. Drop the rootLogger to Debug to not log trace messages from unpreffed loggers. 
Detect if there was a login failure when opening the prefs and re-use the first-sign-in flow and feedback instead of using the change pwd/pph dialog. 
Append a v=<version> to include the version and make it easier to add things in the future. 
Listen for load before adding the unload listener (and the Tab listeners). 
Remove the forceGC at the end of each onProgress from Collections and let normal actions trigger GC. 
Wrap createRecord and encrypt incase an engine fails to create one or more of the records similar to how process incoming records are wrapped. 
Just sync a flat 50 instead of .1 of 1500 to avoid increasing slowdown when processing many items. 
Don't mark item as changed on a favicon notification to avoid churn that can result in merge messing up bookmark ordering. 
Lower tab logging to trace when wrapping tabs. 
Do dupe detection for bookmarks like how we do folders/separators but check against the url/title. Add parentName to bookmark records, so bump version. 
Detect finding cluster failure due to invalid username and treat like failed login. 
Reverse thresholds to make more sense for single vs multi. 
Don't have each engine reset their last sync but still have the service clear out its cached data (keys, records). 
Don't keep the annotation around in-case the predecessor/parent finally syncs because the user positioned it otherwise. 
Filter out tabs that start with wyciwyg:. 
Don't include weave passwords when getting all ids and ignore their changes. 
Inline various _init calls and do super's init with <Super>.call(this, args..). Add various get/set sugar to those missing e.g., meta.keyring. Also simplify crypto record creation by setting cleartext in the parent. 
Pass the engine name when constructing a subclass engine and construct the store/tracker with the same name. 
Check if we haven't deleted yet, and if not, grab the guids for weave credentials and delete them from the server. 
Revert svc/svc == null change from 87f9860d8e5a. 
Remove incorrectly used cache from some engines and clean up references from SyncEngine. 
Always add the id and encryption value so client and delete records can be encrypted. 
For not-mobile clients, sync everything by specifying Infinity to keep existing math/logic working. Don't add a limit ?query if it's Infinity. 
Add a "." to the end of WEAVE_SYNC_PREFS value and fix up uses that did extra work to remove the dot (or something that might not have been a dot). 
Move back to a model where multiple client versions can read the same data of the same storageVersion. The only time meta/global is written is on a freshStart/server wipe. Initialize the version to 1.2pre1.1 so that individual storage-incompatible changes can bump the value. Old versions are strings, so estimate with a parseFloat, but future versions will be integers. 
Store data in cleartext instead of directly in the payload to have it encrypted with the CryptoWrapper. This cleans up some hacks needed to get the plain WBO client record to behave nicely with other encrypted data. 
Tweak the get/setters to refer to the PlacesItem instead of WBORecord. 
Remove the unnecessary indirection now that JSON.stringify can take strings. 
Write the record's id to both .data and .cleartext and check that they match when decrypting. 
Don't specially serialize/not encrypt delete records and store the deleted flag as part of the cleartext payload. 
Generate a random IV on every encrypt instead of taking it from the CryptoMeta. Don't bother generating a bulkIV per CryptoMeta. 
Switch from Clients.syncID to this.syncID for service.js. Don't special case resetSyncID and just use = "". 
Get rid of get/setInfo on ClientEngine and ClientStore and expose functions to read/modify client data: stats, clearCommands, sendCommand. Also expose the local client information as local[ID,Name,Type,Commands] and rework the storage to use these instead of trying to keep the JS object clients entry in sync with prefs, etc. Update users of the old interface (service/tabs/chrome) to use the new local*. Set the client type based on app id instead of from each app's overlay. 
Add an engines object to meta/global to track version and syncID for each engine. If the server is outdated, wipe the data and set a new version and syncID. If the client is oudated, ask for an upgrade. Differing syncIDs cause a reupload. All engines are right now the default version 1. 
Move tabs to be first instead of last to sync for fennec. 
Generate a SHA256 HAMC hex string from the base64 ciphertext and base64 symmetric key. Generate a HMAC key from the symmetric key and cache them together when unwrapping. Refactor the Utils.sha1 to share the same digest code. 
Store a HMAC with the encrypted symmetric key instead of just the wrapped key and verify that the HMAC matches before unwrapping. Test that normal getting works and a tampered payload/HMAC fails but succeeds on restoring the correct HMAC. 
Fit as many tabs as possible in 20000 characters by linearly estimating how many will fit then remove extras one by one. 
Allow descriptions to be set on folder records and set description on creation. 
Get rid of STATUS_DELAYED and initialize Weave listeners, etc immediately. At the end of onStartup, wait a little bit to let sessionstore restore tabs and then count how many busy tabs to delay autoconnecting to avoid doing network while tabs are doing network. 
Add a component that notifies when satchel methods are getting called. The notifications come as "form-notifier" with JSON data of the function name, arguments, and type (before vs after). 
Start an abortTimer onStartRequest and refresh the timer on each onDataAvailable only to cancel on an onStopRequest. If the timer triggers, the sync/async call will be aborted. 
Write a FormWrapper that knows about GUIDs and get/sets them in moz_formhistory as needed. It lazily adds the columns on failure and lazily generates GUIDs for entries that are missing it. Don't eagerly create a sha1 formItem mapping -- don't create it at all, so empty syncs will be much faster too. 
Save the time the tracker adds a new changed id and use that to compare the age of the record on the server vs the age of the local change to decide if it's server wins or client wins. Fix up various direct uses of changedIDs to use the API and make the save-to-disk lazy to avoid excessive writes. Add a test to make sure addChangedID only increases in time. 
Replace tabs in files under source/ with appropriate number of spaces. 
Remove trailing spaces in files under source/. 
Don't resetLastSync as that will make local changes look old and instead mark each as changed now that addChangedID doesn't jsonSave on each call. 
Fix up both url getters to have the extra dot oh. 
Check for existance of both cid and iface in Cc/Ci to decide to use the platform's service or fake one. Remove unused lazyInstance to clean up API (iface == string not object). 
Check if the new value is the same as the current one and provide a warning. 
Ignore tracker changes triggered by wiping the local client store. 
Wrap the createStatement calls to guard against missing guid columns and lazily add it. 
Limit the number of initial form entries to 500 ordered by "frecency". 
Check remoteSetup first to determine if we're okay to sync before wiping client/remote. Additionally only wipe enabled engines instead of everything. 
Return any value provided by the base form implementation while making sure we still notify before and after the call. 
Add two constants: WEAVE_CHANNEL and UPDATED_URL that get preprocessed with @xpi_type@. 
Delay the abort timer from the constructor in addition to onStartRequest and onDataAvailable in-case the callbacks never get called. 
Share an archiveBookmarks function that wraps the PlacesUtils call to be used from storage.wipe and first sync. 
SnapshotStore got removed with bug 524916 and hasn't been getting called for a long time now. 
Wait until all lightweight theme prefs have synced before poking at the lightweight theme manager. 
Trace pageshow events to indicate that new tab data should be uploaded. Because scores must be integers, still increment the score by 1, but only do that 10% of the time for pageshows. 
Remove the extra name from get/set declarations now that Spidermonkey doesn't want them. 
Lazily load the binary component service onto FakeSvc if ;2 fails to register on Svc. 
Mark entries as dupe if they're known to be dupes locally so that receiving ends won't bother looking for dupes for these items. 
Sync asyncExecute to avoid forcing synchronous waits on disk but keep existing calling conventions (no callbacks) for callers by using Sync. 
Bustage fix from sync-asyncExecute: don't throw as the old code would catch and implicit return undefined. 
Just check if the engine is enabled at the beginning of sync. For now keep getEnabled as it's used for other behavior and not just sync. 
Add onDeleteVisits in addition to onPageExpired to maintain compatibility with old and new API. 
Just select from moz_places instead of _view where data might be slightly stale but good enough. 
Track a start time and print the total sync time to hundredths of a second. 
Clear out any changed ids when wiping the client to prevent delete records from getting uploaded for these items. 
Try the new PlacesUtils file before the old utils.js. 
Only register WeaveCrypto if it was able to import scripts. 
Always sync client data by making sure it's always enabled and only update local cilent with remote commands. Make sure to sync clients to get a list of clients that need to receive commands. Also, make sure to upload data after wiping remote now that remoteSetup happens before wipeRemote. 
Bustage fix for bug 561480 to check typeof == undefined instead of == null. 
Hide the item by default and show only for the dev channel. Also only show the separator and time if there's a time. Register about:weave-log to access the activity log. 
Switch the component and uses in the UI to about:sync-*. 
Bug 557591 - Add tests for Utils.catch. 
Bug 557591 - Add tests for Utils.lock. 
Bug 557591 - Add tests for Utils.notify. 
Bug 557591 - Add tests for Utils.makeGUID. 
Bug 557591 - Add tests for Utils.anno. 
Bug 557591 - Add tests for Utils.deferGetSet. 
Bug 557591 - Add tests for Utils.lazy/cb. 
Bug 557591 - Add tests for Utils.lazy2/cb. 
Add a fake service that definitely won't exist for testing purposes. 
Bug 557591 - Add tests for Utils.stackTrace. 
Bug 557591 - Add tests for Utils.sha256HMAC. 
Bug 557591 - Add tests for Utils.makeURI. 
Add tests for Utils.jsonSave and Utils.jsonLoad. 
Make sure to clear local cache when deleting crypto records from the server. Handle missing crypto by deleting any existing data and reuploading. Fix broken records by uploading new ones. 
Check for both old and new class IDs and use the one that exists when wrapping. Also add FormTracker as the observer object so that its notify function is correctly called by nsHTMLFormElement. 
Clear out cached crypto and keys if info collections says they've been modified. 
Remove "Server attack" from exceptions. 
Pretend to call a function with "key" to keep it around. 
Bug 557591 - Add tests for Utils.anno with invalid uris. 
Bug 557591 - Add tests for Utils.sha1. 
Bug 569428 - Add tests for FormEngine (Store) 
Use an async sql query to get uris by frecency instead of query result nodes, and wrap it with sync/async to keep the sync interface without blocking UI. Rough timings of getAllIDs: old 1k = 1.6sec blocking; old 5k = 2.7sec blocking; new 1k = .2sec non-block; new 5k = .6sec non-block. 
Bug 565411 - Accept max_results as a parameter to allow configuring the number of history items. [r=mconnor] 
Reduce test run time (w/ coverage tool) from 25 minutes to 2 minutes while maintaining the same code coverage by processing hundreds instead of thousands of records. 
Allow observers to watch for resource 401s and to specify a new uri to request. Test to make sure "weave:resource:status:401" gets notified and resource handles uri changes. 
Create a Utils.queryAsync to wrap executeAsync that fetches all rows and columns by name. Update form and history engines to use it. 
Bustage fix for bug 570635 to allow more time for the timeout to trigger. 
Bustage fix for bug 570635 to check null for item.guid instead of item. 
Split the code structure to service/{crypto,sync} and ui/{fennec,firefox}. Update the top level makefile to build the addon staging directory to merge various parts of directories. 
Make sure the pref exists (is a bool) before trying to access its value. 
Remove status bar icon/text for setup/connect/sync status. Add menuitem for setting up sync instead of drilling down a 1-item submenu that leads to a button. Remove unused Engine.displayName and related strings. 
Allow setting of the computer name during Firefox account setup and from prefs. Also allow setting device name from Fennec prefs. Fix up strings for Fennec. 
Explicitly check the status code to make sure we stop syncing on non-404 crypto meta failures. Add tests to check correct behavior of 404 and non-404 errors during syncStartup. 
Map the modules directory to services-sync instead of weave and update imports. 
Migrate prefs from extensions.weave. to services.sync. when loading the service for the first time before migration. 
Remove openWindow/Dialog helpers and inline into ui bits for prefs-common and pass arguments into generic-change. 
Split off about: chrome aliasing from other services aliases. 
Create a bookmark so that the url will exist when setting annotations. 
Register a fake AppInfo with correct OS if it doesn't exist yet. Just use Svc.Crypto instead of trying to dynamically pick the contract id. Name the head files so they load in appinfo -> helper -> http order. 
Move about:weave-tabs component to ui/firefox and flatten structure of the components. Split prefs for services vs firefox. 
Use do_load_httpd_js for xpcshell tests and have consumers directly call new nsHttpServer(). 
Just take parts of a static string instead of randomly generating bytes and btoa-ing. 
Switch around which lazy services we use to test with but cover even more data types. 
Use Utils.delay instead of setTimeout. 
Get a profile for xpcshell tests so that login manager works (and probably other stuff). Fix up anno test from this change to use a real bookmark id. 
Just wrap with empty strings until bug 573841 is fixed. 
Just match anything that doesn't look like another stack file entry. 
Add the alias to resource://services-sync when loading the component instead of waiting for app-startup, which doesn't fire for xpcshell tests. 
Merge fx-sync to mozilla-central. 
Strip out www. from found urls and the query after already stripping off http://, etc. Update tests now that www. can't be matched. 
Select from views to get disk and memory data now that async makes it not block. 
Replace the unused rule #4 (probably because it was wrong) with the correct forms for Scottish Gaelic. 
Explicitly set the NO_SYNC_NODE sync status to keep the "i". 
Replace the existing Tabs/TabsManager object with the Tabs module that exposes allTabs, onChange, onClose, onMove, onOpen, onSelect. 
Prepare for bug 584532 by renaming Tabs and T -> AllTabs, allTabs -> tabs, browsers -> browserWindows, and removing QI(nsIObserver). 

Prepare for bug 584532 by renaming Tabs and T -> AllTabs, allTabs -> tabs, browsers -> browserWindows, and removing QI(nsIObserver). Move private variables/methods into local declarations not exported by AllTabs and change the interface to .register("change") instead of .onChange() for bug 584532. 

Move private variables/methods into local declarations not exported by AllTabs and change the interface to .register("change") instead of .onChange() for bug 584532. Address review comments from bug 584532 comment 18: !listeners, event.target, observers function. 

Address review comments from bug 584532 comment 18: !listeners, event.target, observers function. Bug 584532 - Land Tabs module to get Tab* events from any window [r=dao] 

Bug 584532 - Land Tabs module to get Tab* events from any window [r=dao] Remove trailing spaces/tabs from tabcandy files. 

Bug 580870 - Alias gBrowser to the tabcandy context to remove getCurrentWindowAdd aliases for gWindow, gBrowser, gTabDeck, gTabFrame for the tabcandy chrome context. Update uses and simplify some code like removing Navbar. 

Bug 581078 - Get rid of Utils.activeTab to avoid iterating over all TabsDirectly access gBrowser.selectedTab and compare other raw tabs against it until BrowserTab goes away. Get the reference to the BrowserTab instead of iterating over Tabs through .tabcandyBrowserTab. 
Followup bug 580870 to rename gTabDeck/gTabFrame to gTabView*. 

Followup bug 580870 to rename gTabDeck/gTabFrame to gTabView*. Inline isFunction as typeof == function checks. 
Switch to Array.isArray from Utils.isArray. 
Clean up spaces around (), [], , in iq and utils for bug 577968. 
Move lazy gWindow, gBrowser, etc into tabcandy.js out of utils.js for bug 582023. 
Move utils.js into a javascript module that exports Point, Rect, Range, Subscribable, and Utils for bug 582023. 

Bug 583044 - Rename code references of TabCandy to TabViewMove files and update references to tabview from tabcandy. Only remaining candy reference is the link to aza's webm video. 
Simplify Utils.merge to use Array.forEach and Array.push for bug 582023. 
Just use instanceof Ci.nsIDOMElement for Utils.isDOMElement for bug 582023. 
Remove unnecessary try/catch wrapping around a timeout-ed call. 
Bug 582023 - Land TabCandy Utility Code (utils.jsm, iq.js) [r=dao a=npotb] 
Add showOnlyTheseTabs and visibleTabs to tabbrowser and update various uses such as tab selection. Test that tabs get hidden/shown when using this API and tab selection only deal with visible tabs while making sure there's always a visible tab. 

Bug 586147 - Restore visible tabs (and hide hidden ones) [r=zpao a=beltzner]Port (copy) sessionstore changes from bug 583306 and add tests. 
Bug 582865 - Provide a shared "shape" module for Point, Rect, etc. [r=mossop a=gavin] 
Merge tabcandy to mozilla-central. 
Merge updates to tabcandy to mozilla-central. 
Bug 574188 - Add UI hooks to trigger tab candy 

Bug 574188 - Add UI hooks to trigger tab candy Bug 574188 - Include individual js pieces into tabcandy.js and expose content and skin files with jar.mn 

Bug 574188 - Include individual js pieces into tabcandy.js and expose content and skin files with jar.mn Remove full-stop for tooltip. 

Fixed Bug 576393 - Tabs.onFocus() isn't working reliably 
Another fix for Bug 576393 
Another patch for bug 576393 Merge mozilla-central to tabcandy-central. 
Add .visibleTabs to tabbrowser and use local dereferences instead of gBrowser when possible. 
Remove trailing spaces/tabs from tabcandy files. 
Merge mozilla-central (4.0b2) to tabcandy-central with conflicts. 
Resolve merge conflicts. 

Bug 580900 - Remove feedback and dev doc linksGet rid of _newTab to create tabs from the ui and remove feedback references. 

Bug 580870 - Alias gBrowser to the tabcandy context to remove getCurrentWindowAdd aliases for gWindow, gBrowser, gTabDeck, gTabFrame for the tabcandy chrome context. Update uses and simplify some code like removing Navbar. 

Bug 580901 - Directly call loadOneTab instead of Tabs.openRemove Tabs.open and BrowserWindow.addTab and directly deal with xul tabs. 
Don't save gWindow.tabcandyBrowserWindow but still create the BrowserWindow object for events. 

Bug 581052 - Don't grab Tabs[0] to get the tabbar for its tabsJust grab gBrowser.tabs to get an array-list of tabs instead of jumping through Tabs[0].raw.parentNode.children hoops. 

Bug 581078 - Get rid of Utils.activeTab to avoid iterating over all TabsDirectly access gBrowser.selectedTab and compare other raw tabs against it until BrowserTab goes away. Get the reference to the BrowserTab instead of iterating over Tabs through .tabcandyBrowserTab. 
Don't expose BrowserTab and have Tabs give sugarless xul:tabs that don't need .raw-ing. Remove most of the BrowserTab functionality only to leave the event bits. 
Followup bug 580870 to rename gTabDeck/gTabFrame to gTabView*. 

Followup bug 580870 to rename gTabDeck/gTabFrame to gTabView*. Remove unnecessary isIframe as tab content document will be just inside a browser. 
Prevent tabs from showing up in the tabbar by hiding them instead of collapsing so that existing tabbox code knows to skip over them. Remove key handling code except for activating tabcandy and switching groups. 
Followup to bug 580937 to implement TabItem.close with xul:tabs instead of BrowserTab. 
Merge "backout" of TabItem.close removal. 
Inline isFunction as typeof == function checks. 
Don't save a tab that has no parent (it's closing). 
Bug 581732 - Merge mozilla-central to tabcandy-central 2010/07/24 (with conflicts). 

Bug 581732 - Merge mozilla-central to tabcandy-central 2010/07/24 (with conflicts). Resolve merge conflicts for bug 581732. 

Resolve merge conflicts for bug 581732. 
Bug 581736 - Show app tabs from any groupDon't hide app tabs but this will cause strange reorderings for now. 
Move and simplify showOnlyTheseTabs functionality into tabbrowser now that there's no reordering happening on show. 
Switch to Array.isArray from Utils.isArray. 
Merge mozilla-central to tabcandy-central. 
Call updateTabBarForActiveGroup so that Group is correctly set for this. 
Prepare to backout d4a42b589b7c from bug 576393. 

Prepare to backout d4a42b589b7c from bug 576393. Bug 578147 - Backout tabbrowser.xml changes from bug 576393. 

Bug 578147 - Backout tabbrowser.xml changes from bug 576393. Replace the existing Tabs/TabsManager object with the Tabs module that exposes allTabs, onChange, onClose, onMove, onOpen, onSelect. 
Merge mozilla-central to tabcandy-central. 
Followup to bug 580952 so that only tabs from the current window are handled. 
Clean up spaces around (), [], , in iq and utils for bug 577968. 
Move lazy gWindow, gBrowser, etc into tabcandy.js out of utils.js for bug 582023. 
Move utils.js into a javascript module that exports Point, Rect, Range, Subscribable, and Utils for bug 582023. 

Bug 583044 - Rename code references of TabCandy to TabViewMove files and update references to tabview from tabcandy. Only remaining candy reference is the link to aza's webm video. 
Simplify Utils.merge to use Array.forEach and Array.push for bug 582023. 
Just use instanceof Ci.nsIDOMElement for Utils.isDOMElement for bug 582023. 
Make sure user facing names refer to Tab Sets for now for bug 583044. 

Make sure user facing names refer to Tab Sets for now for bug 583044. Add showOnlyTheseTabs and visibleTabs to tabbrowser and update various uses such as tab selection. Test that tabs get hidden/shown when using this API and tab selection only deal with visible tabs while making sure there's always a visible tab. 
Merge mozilla-central and bug 582116 to tabcandy-central. 
Merge mozilla-central to tabcandy-central. 
Merge mozilla-central to tabcandy-central. 
Backout d6a355524fcb from bug 581894 now that bug 579869 is fixed. 
Prepare for bug 584532 by renaming Tabs and T -> AllTabs, allTabs -> tabs, browsers -> browserWindows, and removing QI(nsIObserver). 

Prepare for bug 584532 by renaming Tabs and T -> AllTabs, allTabs -> tabs, browsers -> browserWindows, and removing QI(nsIObserver). Remove unnecessary try/catch wrapping around a timeout-ed call. 
Merge mozilla-central to tabcandy-central. 
Merge mozilla-central to tabcandy-central. 
Move private variables/methods into local declarations not exported by AllTabs and change the interface to .register("change") instead of .onChange() for bug 584532. 

Move private variables/methods into local declarations not exported by AllTabs and change the interface to .register("change") instead of .onChange() for bug 584532. Merge mozilla-central to tabcandy-central. 
Address review comments from bug 584532 comment 18: !listeners, event.target, observers function. 

Address review comments from bug 584532 comment 18: !listeners, event.target, observers function. Fix mozilla-central merge failure from 63b9ba3664a0. 
Move visibleTabs tests back to browser/content/test out of tabview directory. 
Backout df9bbe8b6d78 now that bug 583306 is fixed. 
Dummy whitespace to trigger a merge. 
Restore browser_visibleTabs test that accidentally got removed in 87c7be4465a4. 
Use NSINSTALL instead of directly using nsinstall.py for our flat modules structure. 
Use preprocessor comments instead of <!-->. 

Bug 581813 - Firefox with Tab Candy caused the Title and Tab Bars or the Menu and Tab Bars to appear black in colour Merge mozilla-central to tabcandy-central. 
Backed out changeset ed2484b982b9 due to accidental landing. 
Merge backout 
Fix indentation in beginRemoveTab. 
Merge mozilla-central to tabcandy-central. 

Bug 581813 - Firefox with Tab Candy caused the Title and Tab Bars or the Menu and Tab Bars to appear black in colourPush the TabView iframe down behind the tabbrowser when hiding TabView and restore the max height on show. This has slight issues in that it squishes the iframe contents as well as flashes black as we animate. Followup in bug 586679. 
Bug 586753 - Use ctrl-alt-space for win/linux to avoid ctrl-space 
Bug 574217 - Land TabCandy on trunk [r=dolske sr=vlad a=beltzner] 
Bustage fix for alt-ctrl-space win/linux key combination. 
Switch back to ctrl-space and check for certain nodes where we shouldn't handle it. 
Backed out changeset 05b4f0fbffcc 
Bustage backout to avoid browser_privatebrowsing_windowtitle.js failure. 
Backout changesets a8b5109c2a6c to 6281bc7f1bbf. 
Merge backout. 
Switch back to ctrl-space and check for certain nodes where we shouldn't handle it. 
Explicitly wipe out tab storage data on close so that undo close tab acts like a brand new tab. 

Bug 587922 - Tabs are not actually closed after using TabCandy interface [r=dÃ£o a=blocking2.0:beta4]Skip hiding tabs that are being removed to let it finish animating instead of hiding it to prevent the animation from finishing. 

Bug 587922 - Tabs are not actually closed after using TabCandy interface [r=dÃ£o a=blocking2.0:beta4]Skip hiding tabs that are being removed to let it finish animating instead of hiding it to prevent the animation from finishing. 
Walk up the parent of the click target until we're just inside the icon box. 
Augment PopupNotifications to take neverShow option that results in no popups getting shown for the notification. 
Check for both 1624 and 1644 length private keys. 
Export the registerPathHandler for use from .sjs. 
Check for both 1624 and 1644 length private keys. 
Give function names as object_func for various object prototypes and singletons. Also cleans up some var Name = function() patterns into just function Name. 
Instead of only setting the active group on reconnect of the selected tab, do so for any visible tabs. 
Pass the number instead of the xul:button. 
Bug 462064 - Download manager shows decimal digit for bytes when file below 100 bytes. r=edilee,sdwilsh a=mossop 
Have disabled richpref push the disabled attribute to the child inputs and have the custom checkbox push disabled to the radiogroup. richpref[type=button] need to manually set the child button to disabled. 
Explicitly set the preference type to bool instead of inheriting button. 
Bug 662355 - Component returned failure code 0x80004005 (NS_ERROR_FAILURE) @ [extensions.xml::toggleOptions]. Set optionsURL to "" if undefined so it doesn't get read out by the binding as "undefined". r=mfinkle 
Bug 671533 - Fix test_DownloadUtils.js with locales with a different decimal separator. r=edilee 
Import Webapps.jsm to initialize DOMApplicationRegistry, which handles Webapps:GetSelf, etc. messages. 
Use the compatibility mode to include Firefox/<version> with WebappRuntime/<version>. 
Also fixes Bug 746217 - Cannot open windows even from the same domain 
Add a content policy to detect off-origin navigation to redirect to the default browser. 
Explicitly allow Persona https://browserid.org and Facebook Connect https://www.facebook.com for now. 
Strip whitespace at the end instead of trailing non-alphanumeric. 
Followup to add the new ContentPolicy.js file to the Firefox package manifest. 
Also allow plain https twitter.com 
Default downloads to the Downloads directory set by the platform just like Firefox. 
Show a prompt asking the user to share or not geolocation info with the option to remember. 
Remove "all" flag to have various toolbar visibility default to false. 
Use the runtime folder to get a reference to webapprt-stub instead of process folder, which is one level too deep from the runtime. Handle webapps install requests by showing a prompt like the geolocation prompt. 
Add an options parameter and use that variable for the existing pointerLock options. Update existing callers to pass in null. 
Remove newtab-rows and convert the grid to wrap/overflow tiles as necessary by setting the appropriate width and heights. Compute grid dimensions on load/preload and adjust for resizes. 
Provide an array of expected directory link types to count how many were clicked. 
Add a histogram for each of the 3 directory link types and count how many were shown. 
Bug 975228 - Replace all directoryLinks with mozilla.org for now to land without leak failures. 
Provide an array of expected directory link types to count how many were clicked. 
Add a histogram for each of the 3 directory link types and count how many were shown. 
Switch from url blacklist to url whitelist. 
Hardcode empty object for now. 
Move the click listener to the xul window to correctly get the click event to filter for site-related clicks. 
Always Grid_init before "load", defer size calculation to "load", and only wait for links cache for site rendering. Clean up timers triggered from previous tests to avoid unexpected updates. 
Only add click listener once at the page level and filter/delegate click handling looking for primary/middle clicks. 
Update test to check middle click not blocking by potentially triggering the block() codepath in onClick. 
Cover up the sites that become position: absolute (and escape the flow for overflow: hidden) with an explicit background color for the bottom margin. 
Calculate offsetHeight from parent containers that includes the margin/padding specified by the children. 
Backed out changeset 61b922c31b12 (bug 993029) 
Trigger load event if the document was loaded before init such as the user toggling the page. 
Backout 79989d4a8d24 changes for Bug 1000459 (shouldn't have landed yet) [r=me] 
Update more ordering, types, urls, crushed images. 
Remove the confusing "Trial Sponsor" from the message. 
Remember the directory index and trigger the telemetry probe for link0-8 and tile0-8. 
Send a ping from the DirectoryLinks module on various click actions from newtab page. 
Include history type and make link creation the same by removing bgColor/imageURI. 
Bump up default columns to fit most Firefox users including 2560px wide resolutions. 
Bump up default columns to fit most Firefox users including 2560px wide resolutions. 
Backed out changeset 9d1b8acf821d for tart crashes (bug 1026561) 
Bug 1039881 - Update tests to use a dummy pref, so it changes no matter what's the default. [r=adw] 
Make the search as big as possible but contained within 2 columns. 
Set appropriate sizes, coloring, opacity, etc. 
Backed out changeset 0d2f538bddde (bug 1036284) for Windows 7 bc1 crashes. 
Set appropriate sizes, coloring, opacity, etc. 
Place an image above the usual thumbnail to hide on hover. Have DirectoryLinksProvider keep a cache of enhanced links/images to use on history tiles. 
Only show enhanced history when the pref allows it. Update newtab pages when enhanced pref changes. 
Switch to blue unitalicized. 
Use svg version of new icons and slice image rectangles of the appropriate section. 
Add new newtab control file for the customize functionality. Reuse existing panel styling of the search engine panel. 
Don't include directoryLinks.json on android for now. 
Fallback to asciiHost when IP/insufficient levels. Update tests to localhost to trigger failure codepath. 
Move undo box to the top left above the seach box which now contains its appropriate padding. 
Bug 1048148 - Reduce rounded corners and glow on tiles [r=adw] 

Bug 1048148 - Reduce rounded corners and glow on tiles [r=adw] Bug 1048137 - Page title color is poor contrast in New Tab Page [r=adw] 

Bug 1048137 - Page title color is poor contrast in New Tab Page [r=adw] Use a solid color background and remove now unused texture. Tweak gradient, hover images, borders. 
Bump up default columns to fit most Firefox users including 2560px wide resolutions. 
Bump up default columns to fit most Firefox users including 2560px wide resolutions. 
Bug 1055261 - Reduce new tab performance impact by only attempting to show 5 columns (from 8) [r=adw] 
Add sponsored text next to title that triggers explanation text. Remove unused sponsored icon and related files. 
Bug 1057404 - Update talos to prevent nonlocal connections to newtab fetch/ping [r=jmaher] 
Report click and view pings the same way by including sites with their metadata when tiles are enhanced defaulting to true unless DNT is on. Remove telemetry probes and related now unused codepaths. Explicitly not send urls for history and only for enhanced. 
Add a panel that opens from the customize menu. Automatically show it on first opening. 

Bug 1042876 - Update newtab endpoints to new v2/links [r=adw]Point to new endpoints that can be strict on types, so request the appropriate content type. 
Bug 1042876 - Reftest bustage to correctly disable remote connections for reftests [r=froydnj] 

Bug 1042876 - Reftest bustage to correctly disable remote connections for reftests [r=froydnj] Bug 1058935 - Use tiles.services.mozilla.com instead of tiles.up.mozillalabs.com for fetch/ping [r=adw] 

Bug 1058935 - Use tiles.services.mozilla.com instead of tiles.up.mozillalabs.com for fetch/ping [r=adw] Use all levels of subdomain except for common subdomains that are actually the same site. 
Bug 1062683 - Remove urls from new tab pings [r=adw] 

Bug 1062683 - Remove urls from new tab pings [r=adw] Bug 1064515 - update learn more link for sponsored tiles overlay [r=adw] 
Add a separate const for separate links. 
Use catch handler of promises to default to empty array on exceptions. 

Bug 1071088 - Hover-area is cut off at the bottom of the tiles [r=adw]Use the same hover css selector as others for title/shadow/border. 
Bug 1070022 - Improve Contrast of Text on New Tab Page [r=adw] 
Remove text styling and use an image instead with balanced spacing. 
Move customize item to outside the panel. Update various panel styling: spacing, sizing, colors. 
Hide the link with css display: none when page is disabled. 

Bug 1075620 - Switch to GET for fetch to allow caching of links data from redirect [r=ttaubert]Use GET instead of POST and update the fetch endpoint to use %LOCALE%. 
Bug 1088729 - Only allow http(s) directory links and https/data images [r=adw] 
Bug 739820 - Sync about:newtab pinned items. r=rnewman f=edilee 
Default to a hardcoded frequency cap that decreases by 1 per view or all for a click. 
Calculate the appropriate cell width for computing the grid width. 

Bug 1149021 - Suggested tile with just an image shows a thumbnail instead [r=adw]Use Object.assign to copy over base values into a new link with extra attributes. 
Temporarily switch to a local source with test suggested data. 
Use a set of predefined lists of allowed sites with explicit names. 
Bug 1148862 - Update pref to the new v3 endpoint [r=adw] 
Bug 1156876 - Convert wiki page technical doc into in-tree .rst [r=bsmedberg] 

Bug 1156876 - Convert wiki page technical doc into in-tree .rst [r=bsmedberg] Bug 1045766 - Add telemetry of users who can see new tab Tile suggestions [r=ttaubert] 
Unbackout string from Bug 1138818 for Bug 1138817 [r=emtwo] CLOSED TREE 
Bug 1158208 - Enforce that tiles HTTP requests don't have cookies [r=adw] 

Bug 1158208 - Enforce that tiles HTTP requests don't have cookies [r=adw] Bug 1160369 - Allow for sponsored suggested tiles [r=adw] 
Bug 1165386 - Always show SPONSORED for any type of sponsored tiles and SUGGESTED for other suggested [r=adw] 
Bug 1165430 - Switch unlocalizable "Example Title" to "mozilla.org" [r=adw] 
Bug 1157810 - Enforce that tile images are loaded from mozilla.net [r=adw, f=bsmedberg] 
Bug 1166552 - browser_newtab_reportLinkAction.js fails on timeout [r=adw] 
Bug 1165525 - Onboarding messaging poorly words how to turn off suggestions by implying blank is the only way [r=adw] 
Bug 1159884 - Inadjacency documentation [f=bsmedberg] 
Bug 1167805 - Not enough padding for page title causing pin icon to overlap [r=adw] 
Bug 1188547 - Small screen view stretches media prompt background [r=andreio] 
Bug 1181987 - Display a tile when the link clicker is waiting alone in a conversation [r=dmose, f=mikedeboer] 
Bug 1191014 - Add google analytics event on tile clicks [r=dmose] 
Bug 1195677 - Implement updated design of Gravatar permission request box [r=mikedeboer] 
Bug 1126733 - Brief message appears when entering a standalone room that the user is the only person in the room [r=Standard8] 
Bug 1201031 - Menu for conversation options in the panel should be under the arrow [r=andreio] 
Bug 1198841 - Brief message to invite someone to join when joining a room with someone already there [r=Standard8] 
Bug 1194622 - Provide indication of loading when waiting for the room list [r=Standard8] 
Bug 1202402 - Nothing shown on the standalone UI when a peer exits the room [r=Standard8] 
Bug 1201031 - Menu for conversation options in the panel should be under the arrow [r=andreio] 
Bug 1199120 - Overlapping buttons in conversation window [r=Standard8] 
Bug 1184940 - Implement the refreshed design for the edit context view. r=dmose 
Bug 1184924 - Implement the refreshed design for the invitation overlay - add the strings. rs=dmose 
Additional patch for review comments. 
Additional patch for localization note. 
Bug 1205658 - Hello Spinner Blue should match other blue elements in Hello [r=Standard8] 
Bug 1184924 - Implement the refreshed design for the invitation overlay [r=Standard8] 
Bug 1210331 - Clean up strings for conversations panel and conversation invite [r=Standard8] 
Bug 1211592 - The Copy Link and Email Link buttons show cursor:default, but the other buttons (Camera,Mic,Share Screen,Settings) show cursor:pointer [rs=jaws] 
Bug 1211563 - Invite buttons should be underneath "Invite a friend" text in popped-out view [r=Standard8] 
Bug 1212361 - Re-arrange panel layout for user journey (put the button above the room list) [r=Standard8] 
Bug 1215455 - Use eslint --fix to turn on additional rules [r=Standard8] 
Bug 1215455 - eslint no-multi-spaces [r=Standard8] 
Bug 1215455 - eslint array-bracket-spacing [r=Standard8] 
Bug 1215455 - eslint object-curly-spacing [r=Standard8] 
Bug 1215455 - eslint space-after-keywords [r=Standard8] 
Bug 1215455 - eslint space-before-blocks [r=Standard8] 
Bug 1215455 - eslint space-before-function-paren [r=Standard8] 
Bug 1215455 - eslint operator-assignment [r=Standard8] 
Bug 1215455 - eslint space-in-parens [r=Standard8] 
Bug 1215455 - eslint react/jsx-curly-spacing [r=Standard8] 
Bug 1215455 - eslint consistent-return [r=Standard8] 
Bug 1213848 - Change the Loop panel display when a user enters their own room to stop them entering other rooms [r=mikedeboer] 
Bug 1216918 - Style the conversation window title bar in blue [r=mikedeboer] 
Bug 1220878-switch Hello from React.addons.classSet to classnames package, r=edilee,gerv 

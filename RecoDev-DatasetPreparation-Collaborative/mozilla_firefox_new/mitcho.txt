iangilman.com

+ mitcho's first pass at group snapping 
class Range 
Range update 
Rect now computes its own xRange and yRange 
+ Range.overlaps; bugfix: border trenches unfortunately had an inappropriately large activeRange... fixed. This fixes the long-distance border-snapping which unfortunately shipped with 0.4 
just some comments to pushAway and related functions; rm legacy squishModes; pushAway now uses Trenches.gutter for margins, and respects safe window bounds 
bug 577968: removing elses preceded by returns; replacing tabs 
bug 577968: control words like if, switch, etc. should have a space after them 
cleanup: rm iQ.makeArray 
cleanup: rm various instances of iQ.each where it's an array, so we can use .forEach 
cleanup: rm iQ.inArray 
cleanup: rm iQ.grep; using .filter instead. 
cleanup: iQ.each: never used with args, so that code is removed 
iQ cleanup: rm unused regexps and other constants; rm iQ.toArray, iQ.pushStack, iQ.slice, iQ.trim 
iQ cleanup: of course we're Gecko > 1.9.2 so we have classList! use it in .{add,remove,has}Class 
cleanup: rm unused functions, constants from Utils + Mirror 
Bug 577387: iQ.each is gone! iQ(...).each still exists, and its callback must now explicitly take the element as its argument 
Bug 577387: cleanup of the new iQ(...).each 
rm trailing whitespace 
rm stacktrace.js! 
Bug 580878: removing some underutilized Utils functions: getMilliseconds, and testLogging 

Bug 581143: Cleanup geometry utilities in utils.js4. Range.overlaps is now Range.contains, to be more consistent with Rect. 
+ rewrote TabItem close button opacity and title font size using the new Range utilities. Should make code a tad easier to follow. 
- simplified Utils.extend. Deep copy is no longer supported, nor is extending iQ and iQ.fn using extend. They were not being used. 
Bug 582200: rm cross-browser code from iQ, follow Mozilla style better, r=mitcho 
- Utils: rm some comments, but haven't touched JSM, isDOMElement, or merge. 
Bug 582023: rm iQ.get, as we were only using it in one way. 
Bug 584699: quick fix to -moz-transform rendering bug 
Bug 582023: move to use getBoundingClientRect instead of reading off the computed CSS for bounds; simplify getPropertyValue usage (based on comments from Dao) 
Bug 582023: rm Utils.timeout 
- the Initial Developer is the Mozilla Foundation 
Bug 582023: making changes requested by Dao. Now iQ + Utils are ready for m-c with r=dao! 
Move Geometry utility classes (+tests) to the toolkit for bug 582865. 
+ mitcho's first pass at group snapping 
quick refactoring 
refactoring dragOptions, dropOptions 
snapping for tabs as well as groups 
tabs now also project trenches; unregistering trenches on group/tab close; allow proportional resizing while snapping; preferLeft and preferTop flags for which edges to preferentially snap to 
quick bugfix for resizing 
new tab group should not project trenches 
moved to tracking trenches by id; better trench cleanup and garbage collection; refactored a bit to make things faster? but with questionable results 
reverted to previous version of the trench checking algorithm 
fixed bug 572888: groups resizing when stuck in trench and moved slowly 
turned tabs into spaces; "Only snap to a trench when it is physically proximate" (result: http://img.skitch.com/20100619-cp6pdsbrien3phhi9rbn85jr3t.jpg); added isDragging flag to item itself 
more tabs into spaces 
one more tweak for "Only snap to a trench when it is physically proximate" 
move defaultGutter into Items; defaultRadius into Trenches; now items cannot escape the window when dragged (bug 572919) 
snap to the edges of the window; don't snap if the meta (command) key is being held down 
class Range 
Range update 
some Trench docs; using Range 
trust the Rect and use .right and .bottom 
trench.js docs 
Rect now computes its own xRange and yRange 
fixed regression of improper resizing on movement 
moved shared resizeOptions core into Items; move edge-snapping code out into Drag.snapToEdge; make resizeOptions invoke Drag.snap so that it can take advantage of the advances in drag-snapping technology; made snapToEdge work with resizeable rects 
make sure to call Drag.stop at the end of resizing 
deprecating iQ.fn.data isDragging flag... instead, using Item.isDragging flag 
+ Fixed the minVersion of the XPI as per Mitcho's suggestion
+ Range.overlaps; bugfix: border trenches unfortunately had an inappropriately large activeRange... fixed. This fixes the long-distance border-snapping which unfortunately shipped with 0.4 
don't snap if we're dragging over a drop-site. 
moved close button outside of the title bar so that it doesn't jump around on squish. 
just some comments to pushAway and related functions; rm legacy squishModes; pushAway now uses Trenches.gutter for margins, and respects safe window bounds 
don't snap to anything (except edges) if you're on top of another group (fixes bug reported by Aza: snapping onto another group) 
first pass at drawing "guides" when you snap. In reality, they should only show up after you hold it in position for a half second or so, and the identification of which trench was actually used in snapping must be improved. Recommendation: do not ship this in this current iteration. 
now can drag tabs onto new tab tray... now getSafeWindowBounds does *not* use getPageBounds at all. 
some edges of TabItems were not projecting trenches on startup 
previous fix to new tab tray allowed tabs to be *resized* into the new tab tray as well. fixed. 
much better tracking of exactly which trench did the snapping 
move trench styling into CSS; fix trenches so that, if in showDebug mode, the trenches will stay drawn 
updating styling of guide trenches 
I was getting some errors about illegal values in arguments of getWindowValue; this seems to fix it. 
guide trenches now originally start at their minRange range and then extend after a second 
fixed a bug where showing a guide trench and then dragging over it slowly allows it to extend, even though it no longer is snapped to. 
changing pageBounds and default guide ranges so that the extend animation looks better 
pulling out extending guide trenches as per Aza's feedback. revert to 787f64274830 to try them again. keeping some bugfixes which were made during extending guide trench dev, though. 
createGroupOnDrag now snaps with trenches! 
+ the notion of stationaryCorner to the Trench logic. this value specifies which corner of a bound must remain stationary while resizing. Normally this is the topleft, but in the case of dragging out new tab groups, it actually could be another corner, which means the snapping computation is different. Fixes a couple minor resizing bugs. 
Group.isEmpty 
fixed a bug in delayInit 
quick bugfix to an assert in Drag 
- correcting my foolish ways: replacing some tabs with spaces. 
UIClass.resize now triggers Item.snap on each resized item. But in general, UIClass.resize/Item.squish/unsquish logic is crazy, should be rewritten. 
+ xDensity and yDensity computation for Group's 
UI: added getAllTabs, inspired by Raymond's patch. cleaned up urlbar method. 
quickly patching a bug for new tab position in tab bar 
UI: reusing getAllTabs more; killed getVisibleTabs as it was not doing what it stated... replaced with getVisibleTabCount 
UI: bugfix: rm reference to getVisibleTab(); doc fix 
UI: showOnlyTheseTabs: a faster way to find visibleTabs, by checking the associated tabbrowser 
bug 577968: removing elses preceded by returns; replacing tabs 
bug 577968: control words like if, switch, etc. should have a space after them 
bug 577968: remove references to == true, == false 
UI: tabOnFocus: refactored to no longer use doSetup; saveVisibility: no longer print log 
cleanup: rm iQ.makeArray 
cleanup: rm various instances of iQ.each where it's an array, so we can use .forEach 
cleanup: rm iQ.inArray 
cleanup: rm iQ.grep; using .filter instead. 
cleanup: iQ.each: never used with args, so that code is removed 
iQ cleanup: rm unused regexps and other constants; rm iQ.toArray, iQ.pushStack, iQ.slice, iQ.trim 
iQ cleanup: of course we're Gecko > 1.9.2 so we have classList! use it in .{add,remove,has}Class 
cleanup: rm unused functions, constants from Utils + Mirror 
Bug 577387: cleanup: removed a couple other instances of iQ.each 
- BrowserTab: cleanup of getters 
Bug 577387: iQ.each is gone! iQ(...).each still exists, and its callback must now explicitly take the element as its argument 
Bug 577387: cleanup of the new iQ(...).each 
- Some cleanup and better docs for Group.setBounds 
+ trenches now come registered with the Item that projects them, not just the DOM element 
- Drag: split snap into snapBounds and snap which uses the current item's bounds as snapBounds' input 
+ improved styling of such groups 
quick code cleanup suggestion by Steffen Wilberg 
rm trailing whitespace 
rm stacktrace.js! 
To get things to load correctly (after their dependencies have been loaded), the order of #includes was changed. We now load mirror.js right after tabitems.js, hopefully making it a bit easier to later merge them. 
mirror.js: rm _createEl and just create the Mirror directly in link 
rm ImmutableArray, XULApp, Tabs.tab, and some other unused things. 
The unload management is now gone, which means this may break reset/reload. 
removing trailing whitespace. I bow down to the Great Mardak and ask for his mercy. 
Bug 580878: removing some underutilized Utils functions: getMilliseconds, and testLogging 

Bug 581143: Cleanup geometry utilities in utils.js4. Range.overlaps is now Range.contains, to be more consistent with Rect. 
Bug 580878: simplifying date expression 
Also, fixed font size changing on tab resizing. 
+ fixing font size adjustment while tabitem is resized 
Bug 579223: got snapping to work for tab-on-tab phantom groups. 
+ rewrote TabItem close button opacity and title font size using the new Range utilities. Should make code a tad easier to follow. 
- simplified Utils.extend. Deep copy is no longer supported, nor is extending iQ and iQ.fn using extend. They were not being used. 
Bug 582200: rm cross-browser code from iQ, follow Mozilla style better, r=mitcho 
Frank Yan 
UI: merge init and _secondaryInit 
- Mirror used .el to store its DOM element... now just using .container, which TabItem used 
Merge: reimplementing some changes to mirror.js by Mardak into the corresponding parts of tabitems.js 
- Utils: rm some comments, but haven't touched JSM, isDOMElement, or merge. 
Bug 582023: rm iQ.get, as we were only using it in one way. 
Groups cleanup: rm min, max, numCmp, replaced with trivial native JS. 
- broken: first run experience grouping of orphaned tabs 
Fixed failing test after the name change to GroupItem(s) (Bug 583414) 
Bug 575851: some touchups to previous New Tab Experience code, based on comments by Ian 
Bug 575851: kill the now defunct New Tab Group. 
- set the active group item in other cases, like when we drag out groups, when we resize or move a group, or when a group is a drop target 
Bug 567391 + 575851: If we enter an orphan tab, only that tab should show up in the tab bar. 
s/updateTabBarForActiveGroupItem/updateTabBar/; rm some tabs (don't worry, the whitespace kind) 
quick touchup to GroupItems.getnextGroupItemTab 
Bug 584699: quick fix to -moz-transform rendering bug 
rm setSize during tabs' group-removal. Bottom line: tabs no longer shrink and block jerk the dragging when being dragged out of a group. 
Bug 582865: add Geometry.jsm to toolkit, brought over from Mobile 
Bug 582023: move to use getBoundingClientRect instead of reading off the computed CSS for bounds; simplify getPropertyValue usage (based on comments from Dao) 
Bug 582023: rm Utils.timeout 
Bug 585858: test tab context menu items with combinations of visible and hidden tabs 
Bug 585858: fixing whitespace 
- the Initial Developer is the Mozilla Foundation 
Bug 574217: fixes to "the rest of Tab Candy" based on comments from dolske 
Note that this test has not been added to the Makefile. 
Bug 582023: making changes requested by Dao. Now iQ + Utils are ready for m-c with r=dao! 
GroupItem: unify title-setting to use setTitle (which in turn uses iQ.val). Note TabItem titles are set using iQ.text, so there is no security issue there. 
Fixes for Dolske's strict JS warnings 
Bug 574217: Some touchups based on comments from dolske 
Bug 574875: First run experience: tabs are put together into a single group--now without unnecessary animation! [r=dolske a=dolske] 
And Bug 586814 - Unable to close Tab groups 
And Bug 586814 - Unable to close Tab groups 
Bug 591087: Remove GroupItem.setNewTabButtonBounds which is not used [r=gavin, a=gavin] 

Bug 591087: Remove GroupItem.setNewTabButtonBounds which is not used [r=gavin, a=gavin] Bug 589224 - Drag.snapBounds stationaryCorner default is broken [r=gavin,a=gavin] 

Bug 589224 - Drag.snapBounds stationaryCorner default is broken [r=gavin,a=gavin] Bug 586455: Separate structural versus visual CSS [r+a=dolske] 
Bug 591715: Utils.log: add option to use dump instead of console and add timing info [r=dao, a=gavin] 
Bug 591167: border trenches should be triggered even if the edge only overlaps, but is not contained by the active range of the trench [r+a=dietrich] 
Bug 591705 Don't animate on tab view startup [r+a=dietrich] 
Bug 591706 GroupItem.add: don't compute findInsertionPoint if we don't have a dropPos [r+a=dietrich] 
Bug 592586 Remove code for "group tab by sites" [r+a=dietrich] 
Bug 591147 Let TabItem spacing used in Items.arrange be specified via CSS [r+a=dietrich] 
Bug 593783 - a comment in the Makefile says tabview tests are disabled, but they're not. (r+a=dietrich) 
Bug 592586 Remove code for "group tab by sites" [r+a=dietrich] 
Bug 591147 Let TabItem spacing used in Items.arrange be specified via CSS [r+a=dietrich] 
Bug 590742 - Incorporate new CSS for Tab Candy appearance polish [r+a=dietrich] 
Bug 588999 - Add Tab Candy escape button to Tab Candy view [r+a=dietrich] 
Bug 591706 - GroupItem.add: don't compute findInsertionPoint if we don't have a dropPos [r+a=dietrich] 
Bug 592586 Remove code for "group tab by sites" [r+a=dietrich] 

Bug 594213 - Make our tests more robust [r+a=dietrich] Bug 592586 Remove code for "group tab by sites" [r+a=dietrich] 
Bug 591147 Let TabItem spacing used in Items.arrange be specified via CSS [r+a=dietrich] 
Bug 590742 - Incorporate new CSS for Tab Candy appearance polish [r+a=dietrich] 
Bug 591706 - GroupItem.add: don't compute findInsertionPoint if we don't have a dropPos [r+a=dietrich] 
Bug 591167 - border trenches should be triggered even if the edge only overlaps, but is not contained by the active range of the trench 
Bug 588999 - Add Tab Candy escape button to Tab Candy view [r+a=dietrich] 
Bug 586685 - Pull out hard coded strings for localization [r=dietrich a=blocking-b6] 
Bug 587099 - Display current tab set's name in browser window; f=mitcho r=dolske,dao a=blocking-final+ 
Bug 593157 - Use a pref to keep track of Panorama "first run" experience.  r=dolske, a=dolske 
Bug 580412: adding missing test 
Bug 595804 - Add a pref to disable Panorama zoom-in/out animation [r=dolske, a=beltzner] 
Bug 591705 - Don't animate on tab view startup [r+a=dietrich] 
Bug 596075 - Move First-Run Video To Be A Tab Pointing To A Mozilla-Hosted Web Page [r=dolske, a=blocking2.0:betaN+] 
Bug 602777 - Quit pretending in Items.arrange [r=dolske, a=blocking2.0=betaN+] 
Bug 606827: Released and collapsing drag regions fade into... somewhere [r+a=dolske] 
Bug 586553 - Optimize tab movement in reorderTabsBasedOnTabItemOrder [r=ian, a=dolske] 
Bug 587835 - Remove all dev menu code [r+a=dolske] 
Bug 598807 - Remove code for "GroupItems.arrange" which is no longer used [r+a=dolske] 
Bug 609446 - Remove GroupItem's xDensity and yDensity properties [r+a=dolske] 
Bug 604866 - Zoom-in not working above a certain preview size [r=ian, a=blocking2.0=final+] 
Bug 610266 - Remove Drag.isResizing [r+a=dolske] 
Bug 589206 - Drawing a tab group should be transparent or in background view [r+a=dolske] 
Bug 604201 - browser_tabview_snapping.js test fails if you run it by itself [r=ian, a=better-test!] 
Bug 619937 - Clicking on empty area of Panorama makes empty group [r=ian, a=blocking2.0-betaN+] 
Bug 622285 - CSS warnings: "Error in parsing value for 'size'/'position'." Solution: allow iQ's css method to accept Rect arguments [r=ian, a=beltzner] 
Bug 622238 - In tests: JavaScript Warning: "assignment to undeclared variable item" {file: "chrome://browser/content/tabview.js" line: 7374} [r=dao, a=beltzner] 
Bug 610242 - Don't show tab icon if there isn't one? [r=ian, a=beltzner] 
Bug 587503 - Improve reordering tabs in groups [r=ian, a=blocking2.0-final+] 
Bug 587503 - Improve reordering tabs in groups [r=ian, a=blocking2.0-fail+] 
Bug 619440 - Group item title field should use HTML5 placeholder [r=ian, a=beltzner] 
Bug 610242 - Don't show tab icon if there isn't one? [r=ian, a=beltzner] 
Bug 622631 - JavaScript Warning: "Error in parsing value for 'width'/'height'. Declaration dropped." [r=ian, a=beltzner] 
Bug 625443 - Arranging of expanded stacked groups is broken. r=ian a=b 
Bug 625443 - Arranging of expanded stacked groups is broken [r=ian, a=blocking2.0-final+] 
Bug 625654 - Entering another tab doesn't trigger collapse of an expanded tab group [r=ian, a=beltzner] 
Bug 626754 - do not open a new tab when panorama is run for the first time [r=ian, a=blocking2.0-final+] 
Bug 625269 - Reduce some unnecessary resizing of Items when resizing the window [r=ian, a=dietrich] 
Bug 606837 - Gray out Panorama background on inactive windows [r=ian, ui=shorlander, a=beltzner] 
Bug 625156 - Tab Groups menu button does not toggle Tab View when browser window is out of focus [r=dao, a=beltzner] 
Bug 627736 - fix tab focusing after closing a group in panorama [r=ian, a=beltzner] 
Bug 628051 - Remove killNewTabGroup; r=ian a=beltzner 
Bug 627239 - Don't store thumbnails for https pages [r=ian, a=dietrich] 
Bug 609163 - Get rid of Item.locked [r=ian, a=dietrich] 
Bug 597931 - New CSS' Item bounds incorrectly include highlighting [r=ian, a=beltzner] 
Bug 629189 - Rect.contains should be inclusive [r=ian, a=sdwilsh] 
[Bug 631868] Tab drift in TabItem_setBounds code [r=ian, a=sdwilsh] 

[Bug 631868] Tab drift in TabItem_setBounds code [r=ian, a=sdwilsh] Bug 618854 - Make Panorama group highlighting more visible [rs=gavin, ui-review=faaborg, a=gavin] 
Bug 631747 - Minimize DOM manipulation on startup/TabItem-creation [r=ian, a=dietrich] 
Bug 597980 - Switching into and out of Panorama mode quickly can cause the wrong tab to be selected on return [r=ian, a=dolske] 
Bug 629189 followup - Typo fixes a=DONTBUILD 
Bug 635737 - Zoom animation frame is rotated when we zoom out of a non-top stacked tab [f=ttaubert, r=ian, a=beltzner] 
Bug 635728 - Favicon background must match group item background color [r=ian, ui=faaborg, a=beltzner] 
Bug 635733 - Weird transparency when dragging tabs out of groups [r=ian, ui=faaborg, a=beltzner] 
Bug 623768 - Pressing Backspace in Panorama causes last focused tab to navigate backwards; f=mitcho r=ian approval2.0=beltzner 
Bug 636408 - When opening stack window the titles of the website are not visible; f=mitcho r=ian approval2.0=johnath 
Bug 636637 - "e is not defined" error while trying to log "Error while loading thumbnail"; f=mitcho r=ian approval2.0=beltzner 
Bug 633308 - Add toString method to various Panorama objects; r=ian 

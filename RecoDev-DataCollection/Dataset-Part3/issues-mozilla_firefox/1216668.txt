Right now, if you enter any of these you won't get autocompletion in the console:

[1,2,3].
1.
`foo`.

There's special casing for string literals, but I suspect that if we use Parser.jsm we can detect other types and do better autocompletion

Right now, if you enter any of these you won't get autocompletion in the console:

[1,2,3].
1.
`foo`.

There's special casing for string literals, but I suspect that if we use Parser.jsm we can detect other types and do better autocompletion
Created attachment 8676431
MozReview Request: Bug 1216668 - Move Parser.jsm to devtools/shared so the webconsole server can use it;r=jryans

Bug 1216668 - Move Parser.jsm to devtools/shared so the webconsole server can use it;r=jryans
Created attachment 8676432
MozReview Request: Bug 1216668 - Implement console autocomplete for inline arrays, numbers, and multiline strings;r=fitzgen

Bug 1216668 - Implement console autocomplete for inline arrays, numbers, and multiline strings;r=fitzgen
Comment on attachment 8676431
MozReview Request: Bug 1216668 - Move Parser.jsm to devtools/shared so the webconsole server can use it;r=jryans

https://reviewboard.mozilla.org/r/22693/#review20179

I am about to change how our resource:// URLs work in bug 1203159, so you'll have some conflicts if that lands before you.  I'll be sending a mail to the list about it later today.
Comment on attachment 8676432
MozReview Request: Bug 1216668 - Implement console autocomplete for inline arrays, numbers, and multiline strings;r=fitzgen

https://reviewboard.mozilla.org/r/22695/#review20183

r=me with comments below addressed

::: devtools/shared/webconsole/utils.js:878
(Diff revision 1)
> +    let lastTree = syntaxTree._trees[syntaxTree._trees.length - 1];

Accessing private members willy-nilly is a bit of a smell, can you add a .lastSubTree() or lastChild() or something method? As a reader, I'd like to be able to focus on what high level steps we are taking rather than the internal implementation of Parser.jsm.

::: devtools/shared/webconsole/utils.js:886
(Diff revision 1)
> +      if (expression.type === "ArrayExpression") {

Do we want to provide autocomplet suggestions for object literal expressions and Object.prototype? `({ foo: 1 }).`

Would be fine with a follow up.
(In reply to Nick Fitzgerald [:fitzgen][:nf] from comment #4)
> Comment on attachment 8676432
> MozReview Request: Bug 1216668 - Implement console autocomplete for inline
> arrays, numbers, and multiline strings;r=fitzgen
> 
> https://reviewboard.mozilla.org/r/22695/#review20183
> 
> r=me with comments below addressed
> 
> ::: devtools/shared/webconsole/utils.js:878
> (Diff revision 1)
> > +    let lastTree = syntaxTree._trees[syntaxTree._trees.length - 1];
> 
> Accessing private members willy-nilly is a bit of a smell, can you add a
> .lastSubTree() or lastChild() or something method? As a reader, I'd like to
> be able to focus on what high level steps we are taking rather than the
> internal implementation of Parser.jsm.
> 

Good point, I'll add a getLastSyntaxTree() method on that object (I believe that's the right term since SyntaxTree is the object that has the AST attached to it).

> ::: devtools/shared/webconsole/utils.js:886
> (Diff revision 1)
> > +      if (expression.type === "ArrayExpression") {
> 
> Do we want to provide autocomplet suggestions for object literal expressions
> and Object.prototype? `({ foo: 1 }).`
> 
> Would be fine with a follow up.

Yeah, let's move that into a follow up.  I think there are different expectations with object literals, where you might want to do something like `var foo = { bar: 1 }.` and expect to see 'bar' in that list (which this technique will never do).  But we could discuss this further in another bug.
I believe this will fix Bug 964631 too
May also fix 624311
https://hg.mozilla.org/integration/fx-team/rev/b491da27641b
https://hg.mozilla.org/integration/fx-team/rev/9c494af00cfb
https://hg.mozilla.org/mozilla-central/rev/b491da27641b
https://hg.mozilla.org/mozilla-central/rev/9c494af00cfb

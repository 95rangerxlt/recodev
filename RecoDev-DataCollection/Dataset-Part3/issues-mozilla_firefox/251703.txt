This compile error started happening during my aviary branch builds today:

g++31 -o nsGConfService.o -c -DOSTYPE=\"Linux2.4\" -DOSARCH=\"Linux\" -DHAVE_DEP
ENDENT_LIBS -I../../../dist/include/xpcom -I../../../dist/include/string -I../..
/../dist/include/necko -I../../../dist/include/mozgnome -I../../../dist/include 
-I/snout/firefoxsrc/mozilla/dist/include/nspr -I. -I/usr/X11R6/include -fPIC -I/
usr/X11R6/include -fno-rtti -fno-exceptions -Wall -Wconversion -Wpointer-arith -
Wcast-align -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual
-dtor -Wno-long-long -pedantic -fshort-wchar -pthread -pipe -DNDEBUG -DTRIMMED -
O2 -march=k6-2 -mcpu=athlon -I/usr/X11R6/include -DMOZILLA_CLIENT -include ../..
/../mozilla-config.h -Wp,-MD,.deps/nsGConfService.pp nsGConfService.cpp
nsGConfService.h:43:32: gconf/gconf-client.h: No such file or directory
nsGConfService.h:60: syntax  before `*' token
nsGConfService.h: In constructor `nsGConfService::nsGConfService()':
nsGConfService.h:54: class `nsGConfService' does not have any field named `
 mClient'
nsGConfService.cpp:43:32: gconf/gconf-client.h: No such file or directory
nsGConfService.cpp: In destructor `nsGConfService::~nsGConfService()':
nsGConfService.cpp:47: `mClient' undeclared 
 each function it appears in.)
nsGConfService.cpp:48: `g_object_unref' undeclared 
nsGConfService.cpp: In member function `nsresult nsGConfService::Init()':
nsGConfService.cpp:54: `gconf_client_get_default' undeclared (first use this 
 function)
nsGConfService.cpp: In member function `virtual nsresult 
 nsGConfService::GetBool(const nsACString&, PRBool*)':
nsGConfService.cpp:63: `G' undeclared 
etc etc.

Clearly it's trying to use 'gconf', though I'm not sure what that is.  I don't
have 'gconf'.  There doesn't seem to be a configure option for avoiding 'gconf'
usage.

This compile error started happening during my aviary branch builds today:

g++31 -o nsGConfService.o -c -DOSTYPE=\"Linux2.4\" -DOSARCH=\"Linux\" -DHAVE_DEP
ENDENT_LIBS -I../../../dist/include/xpcom -I../../../dist/include/string -I../..
/../dist/include/necko -I../../../dist/include/mozgnome -I../../../dist/include 
-I/snout/firefoxsrc/mozilla/dist/include/nspr -I. -I/usr/X11R6/include -fPIC -I/
usr/X11R6/include -fno-rtti -fno-exceptions -Wall -Wconversion -Wpointer-arith -
Wcast-align -Woverloaded-virtual -Wsynth -Wno-ctor-dtor-privacy -Wno-non-virtual
-dtor -Wno-long-long -pedantic -fshort-wchar -pthread -pipe -DNDEBUG -DTRIMMED -
O2 -march=k6-2 -mcpu=athlon -I/usr/X11R6/include -DMOZILLA_CLIENT -include ../..
/../mozilla-config.h -Wp,-MD,.deps/nsGConfService.pp nsGConfService.cpp
nsGConfService.h:43:32: gconf/gconf-client.h: No such file or directory
nsGConfService.h:60: syntax  before `*' token
nsGConfService.h: In constructor `nsGConfService::nsGConfService()':
nsGConfService.h:54: class `nsGConfService' does not have any field named `
 mClient'
nsGConfService.cpp:43:32: gconf/gconf-client.h: No such file or directory
nsGConfService.cpp: In destructor `nsGConfService::~nsGConfService()':
nsGConfService.cpp:47: `mClient' undeclared 
 each function it appears in.)
nsGConfService.cpp:48: `g_object_unref' undeclared 
nsGConfService.cpp: In member function `nsresult nsGConfService::Init()':
nsGConfService.cpp:54: `gconf_client_get_default' undeclared (first use this 
 function)
nsGConfService.cpp: In member function `virtual nsresult 
 nsGConfService::GetBool(const nsACString&, PRBool*)':
nsGConfService.cpp:63: `G' undeclared 
etc etc.

Clearly it's trying to use 'gconf', though I'm not sure what that is.  I don't
have 'gconf'.  There doesn't seem to be a configure option for avoiding 'gconf'
usage.
Still broken. :)

Created attachment 153530
patch

Always export the GNOME interfaces for gtk2, but only build the component if
the prerequisite libraries are available.
Just realized I forgot to include config/autoconf.mk.in in the patch:

@@ -172,6 +172,8 @@ MOZ_GCONF_LIBS = @MOZ_GCONF_LIBS@
 MOZ_LIBGNOME_CFLAGS = @MOZ_LIBGNOME_CFLAGS@
 MOZ_LIBGNOME_LIBS = @MOZ_LIBGNOME_LIBS@

+MOZ_ENABLE_GNOME_COMPONENT = @MOZ_ENABLE_GNOME_COMPONENT@
+
 MOZ_INSURE = @MOZ_INSURE@
 MOZ_INSURIFYING = @MOZ_INSURIFYING@
 MOZ_INSURE_DIRS = @MOZ_INSURE_DIRS@

(In reply to comment #3)

+    if test "$MOZ_ENABLE_GTK2" -a "$MOZ_ENABLE_GCONF" -a \
+            "$MOZ_ENABLE_GNOMEVFS" -a "$MOZ_ENABLE_LIBGNOME"; then
+      MOZ_ENABLE_GNOME_COMPONENT=1
+    else
+      MOZ_ENABLE_GNOME_COMPONENT=1
+    fi

should be:

+    else
+      MOZ_ENABLE_GNOME_COMPONENT=0
+    fi

:-)
(In reply to comment #4)

> should be:
> 
> +    else
> +      MOZ_ENABLE_GNOME_COMPONENT=
> +    fi

Builds fine after that...

*** Bug 251872 has been marked as a duplicate of this bug. ***
Comment on attachment 153530
patch

don't you also need to add MOZ_ENABLE_GNOME_COMPONENT to autoconf.mk.in?
Comment on attachment 153530
patch

r+sr=darin

w/ the autoconf.mk.in changes and the fix to the else clause in configure.in
fixed

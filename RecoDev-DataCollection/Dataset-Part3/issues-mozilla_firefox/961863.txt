Created attachment 8362713
update-remoteness

Each time we load a new URL, we have to decide whether to load it in a content process or in the main process. Most of the time we use a content process, but for about: URLs we usually use the main process. That makes it a lot easier to get chrome pages like about:memory and about:support to work.

Session restore doesn't go through the same paths to load URLs, and so it misses the _updateBrowserRemoteness call. The consequence is that the first tab is usually restored in the main process even if it's for a normal content URL. This patch fixes the problem.

Created attachment 8362713
update-remoteness

Each time we load a new URL, we have to decide whether to load it in a content process or in the main process. Most of the time we use a content process, but for about: URLs we usually use the main process. That makes it a lot easier to get chrome pages like about:memory and about:support to work.

Session restore doesn't go through the same paths to load URLs, and so it misses the _updateBrowserRemoteness call. The consequence is that the first tab is usually restored in the main process even if it's for a normal content URL. This patch fixes the problem.
Comment on attachment 8362713
update-remoteness

Review of attachment 8362713:
-----------------------------------------------------------------

::: browser/base/content/tabbrowser.xml
@@ +1413,5 @@
> +      <!--
> +        We're about to load aURL into aBrowser. This function ensures
> +        that the remote attribute is set correctly for aBrowser.
> +      -->
> +      <method name="prepareBrowserForURL">

Should we maybe just expose _updateBrowserRemoteness() and rename it to gBrowser.updateBrowserRemoteness() and let it take the URL as the second parameter? That seems somehow more expressive to me than somehow preparing the browser for something :)

::: browser/components/sessionstore/src/SessionStore.jsm
@@ +2747,5 @@
>  
> +      let activePageData = tabData.entries[activeIndex] || null;
> +      let uri = activePageData ? activePageData.url || null : null;
> +
> +      tabbrowser.prepareBrowserForURL(browser, uri);

Can you please add a short comment here that says in e10s we're going to make it a remote browser if possible?
Comment on attachment 8362713
update-remoteness

Review of attachment 8362713:
-----------------------------------------------------------------

yeah I like tim's suggestion
Created attachment 8362732
update-remoteness v2

OK, how about this?
https://hg.mozilla.org/integration/mozilla-inbound/rev/a23749908ea1
https://hg.mozilla.org/mozilla-central/rev/a23749908ea1

Have yet to find a resolution or a matching bug, so opening a new bug:

~/.xsession-errors is spammed with errors of the form:
no loadgroup notificationCallbacks for <site>

$ grep -c 'no loadgroup notificationCallbacks for' ~/.xsession-errors
348

This session alone, that error has been thrown 348 times and counting.
A quick search shows this affects others as well:

http://krijnhoetmer.nl/irc-logs/developers/20120214
[00:55] <JonathanS> I am wondering why I am seeing no loadgroup notificationCallbacks for <url> in the Mac's system log?

http://pastebin.com/TGkH9fUy
Appears to be a log (eg ~/.xsession-errors), with lines of the form:
no loadgroup notificationCallbacks for <site>

In the latter case, user may have inadvertently posted the log without realizing the potential privacy concerns of revealing history of some (not all) websites visited (directly or indirectly?).

Is this a legitimate error or is this a debug statement that should be limited to debug builds?  Noting nightly does have a -DNDEBUG define (no debug?)...

Have yet to find a resolution or a matching bug, so opening a new bug:

~/.xsession-errors is spammed with errors of the form:
no loadgroup notificationCallbacks for <site>

$ grep -c 'no loadgroup notificationCallbacks for' ~/.xsession-errors
348

This session alone, that error has been thrown 348 times and counting.
A quick search shows this affects others as well:

http://krijnhoetmer.nl/irc-logs/developers/20120214
[00:55] <JonathanS> I am wondering why I am seeing no loadgroup notificationCallbacks for <url> in the Mac's system log?

http://pastebin.com/TGkH9fUy
Appears to be a log (eg ~/.xsession-errors), with lines of the form:
no loadgroup notificationCallbacks for <site>

In the latter case, user may have inadvertently posted the log without realizing the potential privacy concerns of revealing history of some (not all) websites visited (directly or indirectly?).

Is this a legitimate error or is this a debug statement that should be limited to debug builds?  Noting nightly does have a -DNDEBUG define (no debug?)...
Seeing it here as well on Firefox 20.
Seeing it on Firefox 22.0.
Ironically, this privacy concern is caused by extension HTTPSEverywhere.
Can someone forward this...

The default logging level is set to 5:
pref("extensions.https_everywhere.LogLevel", 5);

Currently recognized levels are:
VERB=1; // verbose
DBUG=2; // debug
INFO=3; // informational
NOTE=4; // notice
WARN=5; // warning

Further, in function https_everywhereLog(level, str):
if (level >= threshold) // then log

And in getWindowForChannel: function(channel):
this.log(WARN,"no loadgroup notificationCallbacks for "+channel.URI.spec);

So, by default, warnings are enabled, including this loadgroup notificationCallbacks warning.

And given that the conditional is level >= threshold, the LogLevel preference has to be >5 to disable logging of known levels.  However, if you set it to 6 and then they add another level -- perhaps true "errors only" -- then logging will start again.

2147483647 is the largest int that can be set for a preference.
Setting LogLevel to that number will prevent logging with the current conditional unless they come up with 2.1 billion more log levels.

It's unfortunate that the addon does not have a GUI to change the log levels, but rather forces one to discover the logging and then audit the code to discover the methods and how to achieve something as simple and routine as disable logging of a message that probably should be off-by-default anyway.

For that matter, it should have an explicit "no-logging" level.
Alternately, it should have a logging-on/logging-off boolean pref.

Further, the "no loadgroup notificationCallbacks for <site>" error hardly seems a user-friendly warning.  This particular error is perhaps better classified as INFO or higher given the scale.  Reviewing the messages logged by WARN, it seems that perhaps they need to reclassify their message levels and perhaps update their logging scale and default log level...

Lastly, note that it seems they also use in-browser notification bars on rare occasion, which do not appear to be affected by the LogLevel preference.
I have something like the tor ticket, namely 

no loadgroup notificationCallbacks for https://addons.cdn.mozilla.net/img/uploads/addon_icons/6/6510-32.png?modified=1375556358
no loadgroup notificationCallbacks for https://addons.cdn.mozilla.net/img/uploads/addon_icons/6/6510-64.png?modified=1375556358
no loadgroup notificationCallbacks for https://addons.cdn.mozilla.net/img/uploads/addon_icons/6/6510-64.png?modified=1375556358
no loadgroup notificationCallbacks for https://addons.cdn.mozilla.net/img/uploads/addon_icons/1/1122-64.png?modified=1374469388
no loadgroup notificationCallbacks for https://addons.cdn.mozilla.net/img/uploads/addon_icons/1/1122-64.png?modified=1374469388

etc. (After opening about:addons.) Firefox 26 and HTTPS Everywhere 4.0development14.
Hi, I've fixed this by reducing the logging level [1]. But I'm confused about there are no loadgroup notificationCallbacks for those images. 

[1] https://gitweb.torproject.org/https-everywhere.git/blobdiff/0722131dc47390d2c5bb70a252c07043937200e6..46bec901770a14ec3fe6ab49e031204a37ada172:/src/components/https-everywhere.js

-Yan 
HTTPS Everywhere maintainer
Resolving per comment #5.  Please reopen if it turns out to be an unfixed Firefox bug.

Created attachment 8629092
js-debugger-window.png

User Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.130 Safari/537.36

Steps to reproduce:

- open the devtools in window host
- select JS Debugger tab
- reduce the width of the window


Actual results:

The JS Debugger remains in horizontal layout mode.


Expected results:

When docked to the "side", the JS Debugger switches to a very nice vertical layout. I expect it to be the same when in window mode, if the window's width is small enough.

Could be based on a fixed width, or a ratio of the total screen width available

Created attachment 8629092
js-debugger-window.png

User Agent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.130 Safari/537.36

Steps to reproduce:

- open the devtools in window host
- select JS Debugger tab
- reduce the width of the window


Actual results:

The JS Debugger remains in horizontal layout mode.


Expected results:

When docked to the "side", the JS Debugger switches to a very nice vertical layout. I expect it to be the same when in window mode, if the window's width is small enough.

Could be based on a fixed width, or a ratio of the total screen width available
Created attachment 8629093
js-debugger-docked.png
:jlong Hi
:jlong : Sorry, my previous comment got submitted by mistake ! 

If you think the bug is valid, can I be assigned to it ?
Hey! Sorry it's taken a little while to get to this. I just played with this. I think it would be cool if it worked the way you described. Honestly I don't know much about the different host types, and how it switches the layout like that, but if it's not too complicated we should do it.

I'd say just base it on a fixed width, like when the window is 600px or less or something. I'd wait until the window is pretty small, otherwise it could switch when someone doesn't want it to.
Created attachment 8630888
Bug1179977.feedback.patch

Thanks !

Here is a first patch for feedback, to validate the general approach (listener on window resize) as well as the logic to switch between vertical and horizontal layout when in window mode.

After thinking more about it, I think that a fixed width is not the best solution (different screen sizes, pixel density). 

Also you mentioned 600px, whereas from my own experience, I would need the limit to be at least at 960px for it to be useful. I have a 1920x1200 monitor and I setup the devtools window to take the left half of the screen, while Firefox has the right half.

What about :
- switching if window width < screen width / 2 (current implementation)
- switching if window width < window height
Comment on attachment 8630888
Bug1179977.feedback.patch

Review of attachment 8630888:
-----------------------------------------------------------------

::: browser/devtools/debugger/debugger-view.js
@@ +625,5 @@
> +    if (this._hostType != "window") {
> +      return false;
> +    }
> +
> +    return window.outerWidth <= window.screen.availWidth / 2;

Personally, I disagree with this. A big monitor just means you have more space, it doesn't mean that half the width of the monitor always means it's too small for the toolbox. I could easily see putting the window on my big monitor (which is high res), shrinking it to half the size, and putting my editor or something in the other half of the window. I'm used to the normal layout, and there's still plenty of room for it... It's very common for responsive sites to use a fixed width because that's when you know you've actually run out of room.

I don't have very strong opinions about this though. I'm going to loop in someone else to look at this patch too.
Comment on attachment 8630888
Bug1179977.feedback.patch

Review of attachment 8630888:
-----------------------------------------------------------------

Hey Victor, you're probably the best person to get a 2nd opinion on this. Do you mind taking a quick look?
Comment on attachment 8630888
Bug1179977.feedback.patch

Review of attachment 8630888:
-----------------------------------------------------------------

Taking my f? off for now, I'll check back though
Thanks for having a look !

> It's very common for responsive sites to use a fixed width because that's 
> when you know you've actually run out of room.

That's a good point. Might be difficult to find a cutoff value that satisfies everyone.

Did you think about my second proposition ?

> - switching if window width < window height

If we have more height than width available, use vertical layout.

I think this would give us a good consistency between the window mode and the docked mode.
Currently in docked mode : 
  - docked to the side : always use vertical layout
  - docked to bottom/top : always use horizontal layout

The toolbox docked to the side is likely to have more height than width available and uses vertical layout.

With the docked devtools the layout we both mentioned (half-window for devtools, half-window for the browser) is already presenting the Debugger with the vertical layout.

> I'm used to the normal layout, and there's still plenty of room for it...

Did you test it while the variables/events panel was expanded ? At 960px (half width of my monitor), I already find the column code pretty small, and I have to scroll horizontally pretty regularly.
(In reply to James Long (:jlongster) from comment #7)
> Comment on attachment 8630888
> Bug1179977.feedback.patch
> 
> Review of attachment 8630888:
> -----------------------------------------------------------------
> 
> Hey Victor, you're probably the best person to get a 2nd opinion on this. Do
> you mind taking a quick look?

Will do! Sorry about the wait.
Comment on attachment 8630888
Bug1179977.feedback.patch

Review of attachment 8630888:
-----------------------------------------------------------------

Implementation-wise, this makes sense. I don't have any opinions on what we consider to be "small windows".
Thanks for the feedback Victor !

> I don't have any opinions on what we consider to be "small windows".

I don't have a strong opinion either, it's very subjective.

@James : Can you let me know what you think of the second option I mentioned ? Let me know what you decide, I'll resubmit my patch after that.
(In reply to Julian Descottes from comment #12)
> Thanks for the feedback Victor !
> 
> > I don't have any opinions on what we consider to be "small windows".
> 
> I don't have a strong opinion either, it's very subjective.
> 
> @James : Can you let me know what you think of the second option I mentioned
> ? Let me know what you decide, I'll resubmit my patch after that.

There's a bunch of times when we're stretched for space, I think it's more important that we make it easy to show/hide the variables view to clear up space (which it is easy to show/hide). My only concern is that you might want to make the toolbox window tall to see a lot of code, as well as a lot of sources (making it tall also gives the source listing a lot of vertical space).

I think this tends to be one of those things is a surprise when you're moving stuff around, and I'd like to make it clear when it happens, which is why I like a hard breakpoint. It changes the layout in the side hosts because it's usually a tiny space (<600px).

If you personally want this layout in your window that is 960px, maybe we can add an option to simply change the layout? Note that over the rest of the year we're probably going to change a decent amount of the debugger UI, so this change probably won't last very long anyway.
> I think it's more important that we make it easy to show/hide the variables view to clear up space

When on a breakpoint, I find it important to always see the current state of variables/watches. I wouldn't like to show/hide the variables panel at every step when doing step by step debugging. Which is why I feel 600px is a bit small as cutoff value, considering the 3 columns should be displayed simultaneously for debugging.

> If you personally want this layout in your window that is 960px, 
> maybe we can add an option to simply change the layout?

I don't think adding an option for this is worth the extra UI/complexity.

> this change probably won't last very long anyway

Ok. I'll resubmit the patch with the cutoff of 600px, up to you to integrate it or not if it's not going to last.
Created attachment 8633666
Bug1179977.v1.patch

@James : Here is a new version of the patch using a cutoff value of 600px.
(In reply to Julian Descottes from comment #14)
> > I think it's more important that we make it easy to show/hide the variables view to clear up space
> 
> When on a breakpoint, I find it important to always see the current state of
> variables/watches. I wouldn't like to show/hide the variables panel at every
> step when doing step by step debugging. Which is why I feel 600px is a bit
> small as cutoff value, considering the 3 columns should be displayed
> simultaneously for debugging.
> 
> > If you personally want this layout in your window that is 960px, 
> > maybe we can add an option to simply change the layout?
> 
> I don't think adding an option for this is worth the extra UI/complexity.
> 
> > this change probably won't last very long anyway
> 
> Ok. I'll resubmit the patch with the cutoff of 600px, up to you to integrate
> it or not if it's not going to last.

What about 850px? You're right that it is a bit small now that I look at it again. I'm fine making it bigger but I looking much bigger than that I (personally) wouldn't want it to change (and I sometimes pull it out and make it long to see more code)
> What about 850px? 

Looks good to me ! Will resubmit the patch with 850px.
Created attachment 8635637
Bug1179977.v2.patch

Here is a new patch for review, this time using 850 px as cutoff value.
Created attachment 8637515
Bug1179977.v3.patch

Just rebased, so attaching a more recent version of the patch.
Try : https://treeherder.mozilla.org/#/jobs?repo=try&revision=07919aa3d9b3
Julian, I am so sorry for not following up on this. I was on vacation sporadically through July & August. Looks like the above try run has some failures, any chance you could address them?
Comment on attachment 8637515
Bug1179977.v3.patch

Review of attachment 8637515:
-----------------------------------------------------------------

Generally looks good to me. Let's get it passing on try.
Thanks for feedback ! I will spend some more time on the test, no worries.
I fixed the issue with the failing test. I also cleaned it up to stop relying on timers and only use events.

However the whole test browser_dbg_host-layout.js is now too slow, and may take over 60 seconds total. We have 7 test cases in this test that we could split up between two tests. But I think extending the test timeout would also be valid here.

What do you think ?
Created attachment 8654406
Bug1179977.v4.patch

Only the mochitest has been updated here. The test is no longer relying on timers but only on events.

I also had to extend the test timeout, otherwise on Linux test platforms, the test was taking more than one minute. Discussed this on #devtools on IRC so removing the needinfo.

Try push : 
- linux mochitest-dt only : https://treeherder.mozilla.org/#/jobs?repo=try&revision=070f95c97d5e
- full : https://treeherder.mozilla.org/#/jobs?repo=try&revision=5483df67452e
Lots of failures on try ! But none seem linked to my change.


Maybe should rebase at a later point and send to try again ?
The event listeners failures is bug 1146603. But yeah, looks like a lot of that is unrelated. Not sure why the full try blew up like that. Try again on Monday I suppose.
Created attachment 8654619
Bug1179977.v5.patch

New try push after new rebase : https://treeherder.mozilla.org/#/jobs?repo=try&revision=b1ce72d03585 (looks ok so far)
Comment on attachment 8654619
Bug1179977.v5.patch

Review of attachment 8654619:
-----------------------------------------------------------------

Hard to tell what you changed, but looks good to me.
The only thing that changed between the one you first reviewed and this one is the test : browser\devtools\debugger\test\browser_dbg_host-layout.js

What could I do to make it clearer ?
https://hg.mozilla.org/integration/fx-team/rev/3b796de754d9
https://hg.mozilla.org/mozilla-central/rev/3b796de754d9
Thanks Julian. Some people put up a patch that is just the new changes. Here it wasn't a big deal, if the changes are small you can just tell me where to look when you post the patch. Thanks for this!
Cool, thanks for the info, I will think about it next time !

We need to create a file that we can tag in the tree with the definitive list of locales we shipped for a particular release.

From my original email:

This file should live in:

./browser/locales/

There's probably a file in mailnews/locales/all-locales too for Thunderbird, but check with mscott.

It should be called "shipped-locales."

The format of this file should be:

One locale per line IF the locale is shipped for all platforms.

If it's not (ja-JP-mac, gu-IN), then the locale, followed by a space, followed by a list of the bouncer platforms (so, linux, win, osx, osxppc) it ships for.

So, examples:

en-US
en-GB
ja-JP-mac mac unimac
ja win32 linux-i686
gu-IN win32 linux-i686

We need to create a file that we can tag in the tree with the definitive list of locales we shipped for a particular release.

From my original email:

This file should live in:

./browser/locales/

There's probably a file in mailnews/locales/all-locales too for Thunderbird, but check with mscott.

It should be called "shipped-locales."

The format of this file should be:

One locale per line IF the locale is shipped for all platforms.

If it's not (ja-JP-mac, gu-IN), then the locale, followed by a space, followed by a list of the bouncer platforms (so, linux, win, osx, osxppc) it ships for.

So, examples:

en-US
en-GB
ja-JP-mac mac unimac
ja win32 linux-i686
gu-IN win32 linux-i686
Requesting blocking status for 1.5.0.4; this *does* block the release.
I'd vote for the name to be "ready-locales", as that is more of a state thing.
"shipped-locales" is something that gives more of a timestamp to the file than
it actually implies. Anything "verb"y-locales probably does.

Naming aside, can we track changes to the release process through bugzilla? Like,
creating a file is not really the issue, but having a separate-of-build list of
locales (-platforms) to control release is, right? (Can you say public cvs ;-) )

Nevertheless, I agree that having the file is a step towards the goal, so even
creating it should block 1.5.0.4, that should be an easy enough task to accomplish.
This is coming in very late for 1.5.0.4.  Does the build team really want to change the process at this point in the release?  If the Build team thinks it's safe for this release then I am happy with the blocker status.
(In reply to comment #3)
> This is coming in very late for 1.5.0.4.  Does the build team really want to
> change the process at this point in the release?  If the Build team thinks it's
> safe for this release then I am happy with the blocker status.

We've consistently had problems shipping the right locales for l10n; this is a trivial fix, and it's more about developing the infrastructure to put automation on later.

For 1.5.0.4, I envision using it as a quick way to do verifications of the work we've done. For 1.5.0.5/6/7, we can change the actual process to use the file.

So... in a nutshell, yah... this should block. It should only take a couple hours to do.
checked in for firefox:

Checking in shipped-locales;
/cvsroot/mozilla/browser/locales/Attic/shipped-locales,v  <--  shipped-locales
new revision: 1.1.2.1; previous revision: 1.1
done

checked in for thunderbird

/cvsroot/mozilla/mail/locales/Attic/shipped-locales,v  <--  shipped-locales
new revision: 1.1.2.1; previous revision: 1.1
done


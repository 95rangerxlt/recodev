User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.8) Gecko/20050513 Fedora/1.0.4-1.3.1 Firefox/1.0.4
Build Identifier: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.8) Gecko/20050513 Fedora/1.0.4-1.3.1 Firefox/1.0.4

When I use Persian keyboard layout to enter Persian in page's text fields or
address bar, Alt+<NUMBER> doesn't switch to tab <NUMBER>.

Reproducible: Always

User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.8) Gecko/20050513 Fedora/1.0.4-1.3.1 Firefox/1.0.4
Build Identifier: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.8) Gecko/20050513 Fedora/1.0.4-1.3.1 Firefox/1.0.4

When I use Persian keyboard layout to enter Persian in page's text fields or
address bar, Alt+<NUMBER> doesn't switch to tab <NUMBER>.

Reproducible: Always
This is an automated message, with ID "auto-resolve01".

This bug has had no comments for a long time. Statistically, we have found that
bug reports that have not been confirmed by a second user after three months are
highly unlikely to be the source of a fix to the code.

While your input is very important to us, our resources are limited and so we
are asking for your help in focussing our efforts. If you can still reproduce
this problem in the latest version of the product (see below for how to obtain a
copy) or, for feature requests, if it's not present in the latest version and
you still believe we should implement it, please visit the URL of this bug
(given at the top of this mail) and add a comment to that effect, giving more
reproduction information if you have it.

If it is not a problem any longer, you need take no action. If this bug is not
changed in any way in the next two weeks, it will be automatically resolved.
Thank you for your help in this matter.

The latest beta releases can be obtained from:
Firefox:     http://www.mozilla.org/projects/firefox/
Thunderbird: http://www.mozilla.org/products/thunderbird/releases/1.5beta1.html
Seamonkey:   http://www.mozilla.org/projects/seamonkey/

This bug has been automatically resolved after a period of inactivity (see above
comment). If anyone thinks this is incorrect, they should feel free to reopen it.
Confirming the bug, as I can reproduce it.
Generalizing the scope of the bug to cover Devanagari, Bengali, etc. etc.
Created attachment 200201
patch

I probably won't get a chance to test this in context before next Sunday, but
I've tested the new code in isolation for all Unicode code points from U+0001
to U+FFFF and it works as expected, recognizing the following digit ranges:

ASCII
Arabic-Indic	      (U+0660-U+0669)
Extended Arabic-Indic (U+06F0-U+06F9)
Devanagari	      (U+0966-U+096F)
Bengali 	      (U+09E6-U+09EF)
Gurmukhi	      (U+0A66-U+0A6F)
Gujarati	      (U+0AE6-U+0AEF)
Oriya		      (U+0B66-U+0B6F)
Tamil		      (U+0BE7-U+0BEF) (sic - see below)
Telugu		      (U+0C66-U+0C6F)
Kannada 	      (U+0CE6-U+0CEF)
Malayalam	      (U+0D66-U+0D6F)
Thai		      (U+0E50-U+0E59)
Lao		      (U+0ED0-U+0ED9)
Tibetan 	      (U+0F20-U+0F29)
Fullwidth	      (U+FF10-U+FF19)

Other decimal digits added since Unicode 2.0 are not (yet?) recognized by the
Javascript regular expression:

Tamil digit zero
Myanmar
Khmer
Mongolian
Limbu
New Tai Lue
Osmanya
various mathematical forms
Comment on attachment 200201
patch

Requesting review after confirming that it works with all the keyboard layouts that I have available.

The only exception is Thai, where the digits are entered with the shift key pressed, and the Alt-Shift combination gives the unshifted charCode, which I think is a known bug.
Comment on attachment 200201
patch

>Index: browser/base/content/browser.js

>+  var regExp = /\d/;
>+  if (!regExp.exec(String.fromCharCode(event.charCode)))
>+    return;

...

>+  if (!regExp.exec(String.fromCharCode(digit1)))
>+    digit1 += 6;

Probably best to use .test instead of .exec in these cases, since you don't care about the return value.
(In reply to comment #7)
> Probably best to use .test instead of .exec in these cases, since you don't
> care about the return value.

Yes, indeed. I'll change that.

Comment on attachment 200201
patch

review queue load balancing
Comment on attachment 200201
patch

r=mano with comment 7 addressed.
Checking in browser.js;
/cvsroot/mozilla/browser/base/content/browser.js,v  <--  browser.js
new revision: 1.549; previous revision: 1.548
done

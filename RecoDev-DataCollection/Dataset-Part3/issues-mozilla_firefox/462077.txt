Right now, we always create the Extensions() object on extApplication when we receive the app-startup notification.  However, in a dtrace profile this takes 17 ms of time to do, and nothing in browser actually uses it.  We should lazily create this object with a smart getter so we do not have to take this hit on every startup.

Right now, we always create the Extensions() object on extApplication when we receive the app-startup notification.  However, in a dtrace profile this takes 17 ms of time to do, and nothing in browser actually uses it.  We should lazily create this object with a smart getter so we do not have to take this hit on every startup.
Created attachment 345202
v1.0
Comment on attachment 345202
v1.0

<gavin|> sdwilsh: just don't initialize _extensions, and make the existing "extensions" getter smart
Created attachment 345206
v1.1

That last one was stupid.  This makes more sense.
Created attachment 345212
v1.2

how gavin really wants it
http://hg.mozilla.org/mozilla-central/rev/1e6548dbdcbc
Did you look at all into why creating it was so slow? It seems all it does is get a reference to the extension manager. If it is that that is taking time then that's happened is you've moved the EM init to slightly later in the startup process (literally moments later, it gets created during app-startup too)
No - now it shouldn't ever get created unless someone uses it (we don't).
Dave's point is that the creation of the Extensions object itself is trivial. The only work it does is instantiate the EM, which gets instantiated soon after even with this patch. It doesn't hurt to remove (or delay) getService() calls, of course, but there isn't really any evidence to believe that this will have had any impact on startup.
It had a measurable impact.  See bug 459197 comment 26.
I find it pretty hard to see a significant drop there; looks to me like it's within the noise (especially when you look at more than 2 or 3 runs).
Well that somewhat depends on how you interpret the graphs. To me it appears that Vista and XP all showed a short period of Ts improvement, starting shortly before this patch landed (about 10am) and ending shortly after (about 10pm). Linux doesn't really seem to show any Ts improvement till around 10am the next day.

The point is if there was a real impact to this then it seems worth trying to understand why. Maybe the locks surrounding getService calls really are more expensive than we'd like? I wonder what the speed of creating the Extensions object post startup is.

Currently, `actorHasMethod` calls getActorDescription, which is only available after the actor registers itself. If the actor exists (available sync via client properties), we should poll until we find an actor description for the actor.

Ran into this using FxOS 2.2 (Gecko 37) where memory actor exists, but at time of performance tools opening, the actor description is not yet registered.

Currently, `actorHasMethod` calls getActorDescription, which is only available after the actor registers itself. If the actor exists (available sync via client properties), we should poll until we find an actor description for the actor.

Ran into this using FxOS 2.2 (Gecko 37) where memory actor exists, but at time of performance tools opening, the actor description is not yet registered.
(In reply to Jordan Santell [:jsantell] [@jsantell] from comment #0)
> Currently, `actorHasMethod` calls getActorDescription, which is only
> available after the actor registers itself. If the actor exists (available
> sync via client properties), we should poll until we find an actor
> description for the actor.

I am a bit wary of polling in a loop (if that's what you mean)...

I hope we can devise a way to wait until the actor is known to exist and then call these methods as needed.
I've never ran into this before, as the description existed after the Front was loaded, but running into a different scenario on Fx2.2, and there is no event or any mechanism to say that the actor was loaded, AFAIK :[
(In reply to Jordan Santell [:jsantell] [@jsantell] from comment #2)
> I've never ran into this before, as the description existed after the Front
> was loaded, but running into a different scenario on Fx2.2, and there is no
> event or any mechanism to say that the actor was loaded, AFAIK :[

Is it possible to wait until you have the front in hand before calling |actorHasMethod|, or is it required to call this before that?
We had some lazy loaders in this case, so seeing if changing those/moving around will fix it :D
Possibly due to bug 988237, which lazily loads actors until first invocation. Only seen on B2G AFAICT. This doesn't solve the perf++ use case, but can still be used where one would use the actor anyway (rather than mock the entire front, which is unique to perf++).

Will investigate some more, but will not do polling.
Created attachment 8568049
1132474-tabtarget-descriptions.patch

Rather than changing the tab target methods, I further elaborated on their restrictions so others don't run into the same issues I did!
Comment on attachment 8568049
1132474-tabtarget-descriptions.patch

Review of attachment 8568049:
-----------------------------------------------------------------

Looks good, thanks!
comments only patch
https://hg.mozilla.org/integration/fx-team/rev/0d39893538fc
https://hg.mozilla.org/mozilla-central/rev/0d39893538fc

==4919== 
==4919== Conditional jump or move depends on uninitialised value(s)
==4919==    at 0x5F82C09: dosprintf (prprf.c:867)
==4919==    by 0x5F83C76: PR_vsnprintf (prprf.c:1189)
==4919==    by 0x58E4DC0: nsPrintfCString::nsPrintfCString(char const*, ...) (nsPrintfCString.cpp:60)
==4919==    by 0x137DF43F: nsNavHistory::InitStatements() (nsNavHistory.cpp:1001)
==4919==    by 0x137E81DB: nsNavHistory::InitDB(short*) (nsNavHistory.cpp:820)
==4919==    by 0x137E856C: nsNavHistory::Init() (nsNavHistory.cpp:363)
==4919==    by 0x13826FEE: nsNavHistoryConstructor(nsISupports*, nsID const&, void**) (nsPlacesModule.cpp:10)
==4919==    by 0x584A582: nsGenericFactory::CreateInstance(nsISupports*, nsID const&, void**) (nsGenericFactory.cpp:80)
==4919==    by 0x58A91DF: nsComponentManagerImpl::CreateInstance(nsID const&, nsISupports*, nsID const&, void**) (nsComponentManager.cpp:1670)
==4919==    by 0x58AB3B8: nsComponentManagerImpl::GetService(nsID const&, nsID const&, void**) (nsComponentManager.cpp:1882)
==4919==    by 0x11E008AA: nsJSCID::GetService(nsISupports**) (xpcjsid.cpp:894)
==4919==    by 0x58D00CF: NS_InvokeByIndex_P (xptcinvoke_x86_64_linux.cpp:208)
==4919== 
==4919== Conditional jump or move depends on uninitialised value(s)
==4919==    at 0x5F81562: cvt_l (prprf.c:266)
==4919==    by 0x5F82E57: dosprintf (prprf.c:886)
==4919==    by 0x5F83C76: PR_vsnprintf (prprf.c:1189)
==4919==    by 0x58E4DC0: nsPrintfCString::nsPrintfCString(char const*, ...) (nsPrintfCString.cpp:60)
==4919==    by 0x137DF43F: nsNavHistory::InitStatements() (nsNavHistory.cpp:1001)
==4919==    by 0x137E81DB: nsNavHistory::InitDB(short*) (nsNavHistory.cpp:820)
==4919==    by 0x137E856C: nsNavHistory::Init() (nsNavHistory.cpp:363)
==4919==    by 0x13826FEE: nsNavHistoryConstructor(nsISupports*, nsID const&, void**) (nsPlacesModule.cpp:10)
==4919==    by 0x584A582: nsGenericFactory::CreateInstance(nsISupports*, nsID const&, void**) (nsGenericFactory.cpp:80)
==4919==    by 0x58A91DF: nsComponentManagerImpl::CreateInstance(nsID const&, nsISupports*, nsID const&, void**) (nsComponentManager.cpp:1670)
==4919==    by 0x58AB3B8: nsComponentManagerImpl::GetService(nsID const&, nsID const&, void**) (nsComponentManager.cpp:1882)
==4919==    by 0x11E008AA: nsJSCID::GetService(nsISupports**) (xpcjsid.cpp:894)

==4919== 
==4919== Conditional jump or move depends on uninitialised value(s)
==4919==    at 0x5F82C09: dosprintf (prprf.c:867)
==4919==    by 0x5F83C76: PR_vsnprintf (prprf.c:1189)
==4919==    by 0x58E4DC0: nsPrintfCString::nsPrintfCString(char const*, ...) (nsPrintfCString.cpp:60)
==4919==    by 0x137DF43F: nsNavHistory::InitStatements() (nsNavHistory.cpp:1001)
==4919==    by 0x137E81DB: nsNavHistory::InitDB(short*) (nsNavHistory.cpp:820)
==4919==    by 0x137E856C: nsNavHistory::Init() (nsNavHistory.cpp:363)
==4919==    by 0x13826FEE: nsNavHistoryConstructor(nsISupports*, nsID const&, void**) (nsPlacesModule.cpp:10)
==4919==    by 0x584A582: nsGenericFactory::CreateInstance(nsISupports*, nsID const&, void**) (nsGenericFactory.cpp:80)
==4919==    by 0x58A91DF: nsComponentManagerImpl::CreateInstance(nsID const&, nsISupports*, nsID const&, void**) (nsComponentManager.cpp:1670)
==4919==    by 0x58AB3B8: nsComponentManagerImpl::GetService(nsID const&, nsID const&, void**) (nsComponentManager.cpp:1882)
==4919==    by 0x11E008AA: nsJSCID::GetService(nsISupports**) (xpcjsid.cpp:894)
==4919==    by 0x58D00CF: NS_InvokeByIndex_P (xptcinvoke_x86_64_linux.cpp:208)
==4919== 
==4919== Conditional jump or move depends on uninitialised value(s)
==4919==    at 0x5F81562: cvt_l (prprf.c:266)
==4919==    by 0x5F82E57: dosprintf (prprf.c:886)
==4919==    by 0x5F83C76: PR_vsnprintf (prprf.c:1189)
==4919==    by 0x58E4DC0: nsPrintfCString::nsPrintfCString(char const*, ...) (nsPrintfCString.cpp:60)
==4919==    by 0x137DF43F: nsNavHistory::InitStatements() (nsNavHistory.cpp:1001)
==4919==    by 0x137E81DB: nsNavHistory::InitDB(short*) (nsNavHistory.cpp:820)
==4919==    by 0x137E856C: nsNavHistory::Init() (nsNavHistory.cpp:363)
==4919==    by 0x13826FEE: nsNavHistoryConstructor(nsISupports*, nsID const&, void**) (nsPlacesModule.cpp:10)
==4919==    by 0x584A582: nsGenericFactory::CreateInstance(nsISupports*, nsID const&, void**) (nsGenericFactory.cpp:80)
==4919==    by 0x58A91DF: nsComponentManagerImpl::CreateInstance(nsID const&, nsISupports*, nsID const&, void**) (nsComponentManager.cpp:1670)
==4919==    by 0x58AB3B8: nsComponentManagerImpl::GetService(nsID const&, nsID const&, void**) (nsComponentManager.cpp:1882)
==4919==    by 0x11E008AA: nsJSCID::GetService(nsISupports**) (xpcjsid.cpp:894)
That's this code:


  // mDBVisitsForFrecency
  // NOTE: we are not limiting to visits with "visit_type NOT IN (0,4)"
  // because if we do that, mDBVisitsForFrecency would return no visits
  // for places with only embed (or undefined) visits.  That would
  // cause use to estimate a frecency based on what information we do have,
  // see CalculateFrecencyInternal().  that would result in a 
  // non-zero frecency for a place with only
  // embedded visits, instead of a frecency of 0.
  rv = mDBConn->CreateStatement(NS_LITERAL_CSTRING(
    "SELECT visit_date, visit_type FROM moz_historyvisits " 
    "WHERE place_id = ?1 ORDER BY visit_date DESC LIMIT ") +
     nsPrintfCString("%d", mNumVisitsForFrecency),
    getter_AddRefs(mDBVisitsForFrecency));
  NS_ENSURE_SUCCESS(rv, rv);

(In reply to comment #1)
>      nsPrintfCString("%d", mNumVisitsForFrecency),

mNumVisitsForFrecency gets initialized in LoadPrefs(), but InitDB() (and, therefore, InitStatements() where this code is located) is called way before LoadPrefs(), so mNumVisitsForFrecency hasn't been initialized by the time it's used here.
fixed in bug 394038
Bug 451915 - move Firefox/Places bugs to Firefox/Bookmarks and History. Remove all bugspam from this move by filtering for the string "places-to-b-and-h".

In Thunderbird 3.0b, you do that as follows:
Tools | Message Filters
Make sure the correct account is selected. Click "New"
Conditions: Body   contains   places-to-b-and-h
Change the action to "Delete Message".
Select "Manually Run" from the dropdown at the top.
Click OK.

Select the filter in the list, make sure "Inbox" is selected at the bottom, and click "Run Now". This should delete all the bugspam. You can then delete the filter.

Gerv

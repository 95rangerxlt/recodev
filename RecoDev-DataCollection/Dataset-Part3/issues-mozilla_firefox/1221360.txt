


Created attachment 8682831
Add a `filter` transform to CensusTreeNode
Comment on attachment 8682831
Add a `filter` transform to CensusTreeNode

Review of attachment 8682831:
-----------------------------------------------------------------

v nice

::: devtools/shared/heapsnapshot/census-tree-node.js
@@ +383,5 @@
>   * Create a single, uninitialized CensusTreeNode.
>   *
>   * @param {null|String|SavedFrame} name
>   */
> +function CensusTreeNode(name) {

Is this the agreed upon eslinting style? Blah

@@ +589,5 @@
> +
> +    if (isSavedFrame(node.name)) {
> +      return node.name.source.contains(filterString)
> +        || (node.name.functionDisplayName || "").contains(filterString)
> +        || (node.name.asyncCause || "").contains(filterString);

Is there any reason we would want to specify the search fields (source, name, cause)? I can't think of any right now, but seems like it'd be easy to add in the future if we wanted.
(In reply to Jordan Santell [:jsantell] [@jsantell] from comment #2)
> Comment on attachment 8682831
> Add a `filter` transform to CensusTreeNode
> 
> Review of attachment 8682831:
> -----------------------------------------------------------------
> 
> v nice

ty

> ::: devtools/shared/heapsnapshot/census-tree-node.js
> @@ +383,5 @@
> >   * Create a single, uninitialized CensusTreeNode.
> >   *
> >   * @param {null|String|SavedFrame} name
> >   */
> > +function CensusTreeNode(name) {
> 
> Is this the agreed upon eslinting style? Blah

Yup.

> @@ +589,5 @@
> > +
> > +    if (isSavedFrame(node.name)) {
> > +      return node.name.source.contains(filterString)
> > +        || (node.name.functionDisplayName || "").contains(filterString)
> > +        || (node.name.asyncCause || "").contains(filterString);
> 
> Is there any reason we would want to specify the search fields (source,
> name, cause)? I can't think of any right now, but seems like it'd be easy to
> add in the future if we wanted.

Yeah, that was why I split out the predicate function. I think it would be cool to do something like "class:foo -bar" to find all things whose class name is "foo" and doesn't match "bar" at all.
https://hg.mozilla.org/integration/fx-team/rev/33d3b4739eeb
https://hg.mozilla.org/mozilla-central/rev/33d3b4739eeb

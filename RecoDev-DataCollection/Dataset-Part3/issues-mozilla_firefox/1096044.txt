Part of meta bug 985861.
This is the devtools actor part of it.

The web animations actors should try to map as much as possible the webidl interfaces.
Using the actors, it should be possible to get a list of animation players for a given node.
It would also be good to expose a method that lists all currently defined animations (and emits events to notify consumers when new animations are created/started/deleted/stopped).

These methods should return animationplayer actors that would give access to pause/play/seek methods, so that it's easy to build timeline tools in the devtools to control any animation.

Part of meta bug 985861.
This is the devtools actor part of it.

The web animations actors should try to map as much as possible the webidl interfaces.
Using the actors, it should be possible to get a list of animation players for a given node.
It would also be good to expose a method that lists all currently defined animations (and emits events to notify consumers when new animations are created/started/deleted/stopped).

These methods should return animationplayer actors that would give access to pause/play/seek methods, so that it's easy to build timeline tools in the devtools to control any animation.
Created attachment 8519562
bug1096044-web-animations-actors.patch

Work in progress only ... barely works, but the idea is there.
Looking at the animation WebIDL files, I don't think there's much more we can expose as of yet.
Not assigning this bug to me right now, as I don't know how much time I'll be able to devote to this yet.
If anyone wants to jump in and do it, great. Otherwise, I'll probably spend some time on it beginning of December.
Brian, the actors defined in this patch expose the following things to the devtools:

- the |Animations| actor has a |getAnimationPlayersForNode(node)| method that returns an array of |AnimationPlayer| actors,
- each |AnimationPlayer| actor gives access to a |play| and |pause| methods as well as |startTime|, |currentTime|, |playState| and |name| (retrieved from player.source.effect.name).

Do you think there are other things we could expose right now to the devtools front-end?
Hi Patrick, looks good to me. The one other item that would be useful to the devtools front-end is the 'isRunningOnCompositor' chrome-only property. Developers don't currently have a good way of knowing if their animation is hitting the fast path or not. Currently this will only be true for Firefox OS (where we have compositor animations enabled) but I think that's still useful.

In terms of coming features, the things that are likely to be landed in Q4 are:

* The 'pending' state and ready promise - basically we're making animations sit in a pending state until their first frame has been rendered and then commence timing (bug 927349). That may or may not be useful to expose to devtools.
* Making startTime and currentTime writeable
* The finished promise, finished state, and finish() method - probably the finished state is worth indicating in the devtools
* We may add playbackRate and reverse() too but that will likely spill into Q1 2015
* cancel()

(Early next year we'll fill out the Animation interface so you can inspect all the properties of running animations and then we'll make it possible to overwrite them but you'll have to break the connection with style in order to modify Animation objects.)

Also, at some point we may add |CSSAnimationPlayer| with its own |name| member at some point. If we do, it might make sense to change the mapping on your AnimationPlayer actor but that should be an easy change.
Created attachment 8519768
bug1096044-web-animations-actors v2.patch

Implements more getters and adds important comments.
This depends on the latest setCurrentTime patch in bug 1033114.
Created attachment 8529835
bug1096044-web-animations-actors v3.patch

New version of the actors.
Now relies on the last setCurrentTime patch attached by birtles in bug 1033114.
Created attachment 8530135
bug1096044-web-animations-actors v4.patch

A few minor editions while working on the UI panel patch in bug 1105825.
Created attachment 8530344
bug1096044-web-animations-actors v5.patch

added a release method to be able to get rid of AnimationPlayer actors.
Created attachment 8533623
bug1096044-new-webanimationsapi-actor.patch

I think it makes sense to start getting reviews for this version of the actors.
Here's a quick description of the patch:

- it adds 2 new actors (in a new animation.js module),
- the main actor is AnimationsActor, which is intended to be instantiated by the client-side,
- its main (and only) method for now is |getAnimationPlayersForNode|, which basically is a wrapper for |elem.getAnimationPlayers()| in the waapi spec (https://w3c.github.io/web-animations/#dom-animationtimeline-getanimationplayers),
- it returns an array of AnimationPlayerActors,
- the AnimationPlayerActor provides simple information about the player object,
- it exposes methods to: get the updated information, play/pause the animation (setting the currentTime isn't yet implemented on the platform side, so I'll do this in another bug),
- it accesses the computedStyle of the animated element for now to return the iterationcount and duration, because those things aren't yet available on the platform side either,
- I've added a few tests for this actor.
Comment on attachment 8533623
bug1096044-new-webanimationsapi-actor.patch

Review of attachment 8533623:
-----------------------------------------------------------------

Overall great, love the tests.

::: toolkit/devtools/server/actors/animation.js
@@ +5,5 @@
> +"use strict";
> +
> +/**
> + * Set of actors that expose the Web Animations API to devtools protocol clients.
> + * 

Nit: some trailing whitespace here.

@@ +15,5 @@
> + * animation as well as pause/resume/seek it.
> + *
> + * The Web Animation spec implementation is ongoing in Gecko, and so this set
> + * of actors should evolve when the implementation progresses.
> + * 

trailing whitespace.

@@ +73,5 @@
> +
> +    return data;
> +  },
> +
> +  getDuration: function() {

I think it would be good to get a comment for this method, and some of the others in the file that are missing them.

@@ +206,5 @@
> +
> +  /**
> +   * Retrieve the list of AnimationPlayerActor actors corresponding to
> +   * currently running animations for a given node.
> +   * @param {String} actorID The actor retrieved by this ID must be a NodeActor

All the methods in styles.js take a NodeActor as an argument rather than an actorId. Maybe for consistency we should do the same here.
Created attachment 8534909
bug1096044-new-webanimationsapi-actor v2.patch

Thanks Heather for the review.

Here's a new version of the patch with fixes as per your comments.
You're right, passing a NodeActor is better than just the ID.

Pending try push: https://treeherder.mozilla.org/ui/#/jobs?repo=try&revision=6a0abc11f786
Created attachment 8535114
bug1096044-new-webanimationsapi-actor v3.patch

Fixed a minor test failure in try.
New green try: https://treeherder.mozilla.org/ui/#/jobs?repo=try&revision=070c80c2095f

Pushed to fx-team: https://hg.mozilla.org/integration/fx-team/rev/0812ccbf1b65
https://hg.mozilla.org/mozilla-central/rev/0812ccbf1b65

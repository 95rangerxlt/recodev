STR:

1) Using a new profile in a UX build, enter Customize mode, and remove the search input from the nav-bar
2) Restart the browser

Result:

The customization target in the nav-bar is very wide - too wide for the number of elements it contains (the download button and the "Share" button).

Expected result:

The customization target should calculate its appropriate flex by using the flex attributes of its children.

STR:

1) Using a new profile in a UX build, enter Customize mode, and remove the search input from the nav-bar
2) Restart the browser

Result:

The customization target in the nav-bar is very wide - too wide for the number of elements it contains (the download button and the "Share" button).

Expected result:

The customization target should calculate its appropriate flex by using the flex attributes of its children.
Created attachment 739133
Patch v1

Seems to do the job. CustomizableUI.jsm already does the job of setting the target's flex to the right value when adding or removing widgets.
Comment on attachment 739133
Patch v1

Review of attachment 739133:
-----------------------------------------------------------------

So the flex value will be correct at initial startup when the search box and other toolbaritems are added to the customization target?
(In reply to Jared Wein [:jaws] from comment #2)
> Comment on attachment 739133
> Patch v1
> 
> Review of attachment 739133:
> -----------------------------------------------------------------
> 
> So the flex value will be correct at initial startup when the search box and
> other toolbaritems are added to the customization target?

Yeah, when we start up CustomizableUI, we build the customizable areas, and start stuffing things into the customization targets. When we do that, we automatically set the flex on the parents.
Comment on attachment 739133
Patch v1

This will be fixed as a consequence of bug 864355.
Fixed as a consequence of bug 864355.
*** Bug 858584 has been marked as a duplicate of this bug. ***

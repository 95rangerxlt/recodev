Bug 581813 kidna works around the issue of the TabView iframe preventing glass from showing through, so it ends up being black. Note that with personas on, glass is turned off and tabview doesn't black out the background and instead shows the personas.

Bug 581813 kidna works around the issue of the TabView iframe preventing glass from showing through, so it ends up being black. Note that with personas on, glass is turned off and tabview doesn't black out the background and instead shows the personas.
Oh, the reason why we would want a better solution is that the iframe is shrinking with the fix for bug 581813 to hide behind the tabbrowser. But this can cause the contents of the tabview iframe to behave oddly.
My understanding is that as long as iframes get their own native widgets (i.e. until 130078 lands), this isn't possible.
The bane strikes again!
Mass moving all Tab Candy bugs from Mozilla Labs to Firefox::Tab Candy.  Filter the bugmail spam with "tabcandymassmove".
Looks like the black is not the iframe, but the #browser. <hack>I just added a margin-top:5000px style to #browser (and removed #bg in the tabview itself) and it works! 

http://img.skitch.com/20100827-fbejyra29kqq9d4mf9mm2a4ikq.jpg

</hack>

Should we pursue this hacky hacky approach?
May I chime in here?  Is a huge window which is entirely glass really something that we want to ship to our users?  The screenshot in comment 5 is probably the *worst* thing I've ever seen on a computer screen!
(In reply to comment #6)
> May I chime in here?  Is a huge window which is entirely glass really something
> that we want to ship to our users?  The screenshot in comment 5 is probably the
> *worst* thing I've ever seen on a computer screen!

Agreed. That looks like a major bug. You can't tell what the active window is, you see floating min/max/close buttons and a floating MInefield button. With the three tab groups open it looks like three separately running WIndows programs.
(In reply to comment #6)
> May I chime in here?  Is a huge window which is entirely glass really something
> that we want to ship to our users?  The screenshot in comment 5 is probably the
> *worst* thing I've ever seen on a computer screen!

That effect is sure to be too slow on older machines. I think it may also go against Microsoft's guidelines for using glass (citation not handy). We really need to reconsider the design here.
(In reply to comment #6)
> May I chime in here?  Is a huge window which is entirely glass really something
> that we want to ship to our users?  The screenshot in comment 5 is probably the
> *worst* thing I've ever seen on a computer screen!

I concur that the screenshot looks horrendous as is, but if we decide that glass makes sense, we should look into make the glass less transparent. Dao made a patch to do that for the classic menu bar. (I'll look up the bug later.) Shorlander posted this mockup: http://www.stephenhorlander.com/images/blog-posts/incontent-ui/win7-tabcandy-glass.jpg I think it could be even more opaque than that.
There is also the alternative option of using the in-content styling:

http://www.stephenhorlander.com/images/blog-posts/incontent-ui/win7-tabcandy-textured.jpg

Some kind of translucent overlay could work but that would likely be just as slow on older machines.
Let's keep this bug for the technical issue of *whether* showing glass is possible... I've created a new bug (591652) for discussing whether this is a Good Idea or not.
It's possible, I managed it while making an extension for TabCandy. If there's interest in this I'll see if I can whip up a patch.

xul:iframe with glass example (the sidebar):
http://screencast.com/t/YWZhODQ4MjY
Olivier, please do. If you come into irc.mozilla.org#tabcandy we could collaborate as well.

Did this become suddenly possible because the Bane (bug 130078) was fixed?
@Oliver: That is very cool!

I'm removing this from blocking.
Effectively impossible without a beta 5pre nightly.
With a beta 5pre nightly or more recent, remove the bg div.

For prosperity, let it be recorded here that I spent hours trying to get it working correctly on beta 4 only to give up, and then spent less than five minutes getting it working on beta 5pre.

Please note however, that tab thumbnails still display artifacts (black rectangles) when zooming in/out. This is probably related to the Bane not yet being completely fixed.
(In reply to comment #15)
> Effectively impossible without a beta 5pre nightly.
> With a beta 5pre nightly or more recent, remove the bg div.

If I understand this correctly, this is targeting the trunk, which is always the latest code, so it doesn't matter if it doesn't work on beta 4 or earlier.
Why was this marked RESOLVED INCOMPLETE?
I was referring to beta 4 because Micheal initially told me to work on it instead of a nightly. As for resolved incomplete, it is a mistake. First time using bugzilla and I assumed 'resolved: incomplete' meant 'partial-solution-found/implemented' (there is still have the tab thumbnail zoom in/out artifacts), not 'incomplete-bug-description'. I'm guilty of not reading the manual, and should be flogged.

Marked as resolved-fixed even if there is no patch checked in, since the issue was to see if it was possible, not to implement it.
Again, guilty of not reading the manual closely. Marked correctly as resolved-invalid.
(In reply to comment #15)
> With a beta 5pre nightly or more recent, remove the bg div.
This hasn't been done yet? So this bug is still open, no?
I would not believe so, the issue was 'is it possible to show glass', not 'show glass through the iframe for TC'. I believe there is a separate bug for how (and if) to show/style the glass, assuming it was possible. (bug 591652)
This is now trivial, thanks to fixes to bug 130078, etc.

Simply disable the following lines from browser/themes/winstripe/browser/tabview/tabview.css when glass is enabled.

#bg {
  background: url("chrome://browser/skin/tabview/grain.png") repeat scroll center top,
              -moz-linear-gradient(center top , #CCD9EA, #C7D5E7) repeat scroll 0 0 transparent;
}

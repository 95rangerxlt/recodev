


Created attachment 501975
patch

This introduces a 'delta' argument to duplicateTab, as pioneered by SeaMonkey. This is a backward compatible interface extension.
*** Bug 611514 has been marked as a duplicate of this bug. ***
*** Bug 617255 has been marked as a duplicate of this bug. ***
Carrying over blocking from bug 617255.
Comment on attachment 501975
patch

>   /**
>    * Duplicates a given tab as thoroughly as possible.
>    *
>    * @param aWindow is the browser window into which the tab will be duplicated.
>    * @param aTab    is the tabbrowser tab to duplicate (can be from a different window).
>+   * @param aDelta  is the offset to the history entry that you want to load.

"entry to load in the duplicated tab" would be clearer.

>+  duplicateTab: function sss_duplicateTab(aWindow, aTab, aDelta) {
>     if (!aTab.ownerDocument || !aTab.ownerDocument.defaultView.__SSi ||
>         !aWindow.getBrowser)
>       throw (Components.returnCode = Cr.NS_ERROR_INVALID_ARG);
> 
>     var tabState = this._collectTabData(aTab, true);
>     var sourceWindow = aTab.ownerDocument.defaultView;
>     this._updateTextAndScrollDataForTab(sourceWindow, aTab.linkedBrowser, tabState, true);
>+    tabState.index += aDelta;

if there is an aDelta parameter passed in, should validate it.

r=me otherwise.
What are the minimum and maximum indices? 1 and tabState.entries.length?
(In reply to comment #6)
> What are the minimum and maximum indices? 1 and tabState.entries.length?

hmm yeah, that looks right based on _collectTabData.
http://hg.mozilla.org/mozilla-central/rev/9862560161c4

This is driving me Insane...

At least on Windows and Linux, apart from the spacetime distortions (bug 956758), whenever an inspection popup opens, it immediately starts moving around in unexpected ways and towards unexpected places. The act of simply expanding/collapsing a property would cause the popup to shift weirdly.

This used to work properly.

This is driving me Insane...

At least on Windows and Linux, apart from the spacetime distortions (bug 956758), whenever an inspection popup opens, it immediately starts moving around in unexpected ways and towards unexpected places. The act of simply expanding/collapsing a property would cause the popup to shift weirdly.

This used to work properly.
I I can't get to the bottom of this, I'll be seriously considering displaying the variables view inline, in the editor, instead of opening it in a popup. This might end up looking like a console.dir() in the webconsole.

What do you guys think about this? Would it be awful?
I think that would be fine.
(In reply to Nick Fitzgerald [:fitzgen] from comment #2)
> I think that would be fine.

Apart from looking funny and weird, that would be super slow as it will cause everything to shift down, causing a lot of reflows and stuff (due to how CM works)

I suggest using the cursor node as the anchor and having only the X offset while opening the popup. 
Introducing Y offset causes bad things to happen. Especially things never align when you have the devtools zoomed up or down.
Created attachment 8357030
dbg-tooltip.patch

This might work. I'll play with it some more.
Created attachment 8357095
v2

This seems to be working reasonably well from what I've tested.
Comment on attachment 8357095
v2

Review of attachment 8357095:
-----------------------------------------------------------------

I still can't reproduce it locally, but the changes look fine to me.

::: browser/devtools/sourceeditor/editor.js
@@ +558,5 @@
> +    let mark = cm.markText(from, to, { replacedWith: span });
> +    return {
> +      anchor: span,
> +      clear: () => mark.clear()
> +    };

Just checking, but does mark.clear() discard replacedWith nodes automatically?
(In reply to Panos Astithas [:past] from comment #6)
> 
> Just checking, but does mark.clear() discard replacedWith nodes
> automatically?

Yup.
https://hg.mozilla.org/integration/fx-team/rev/ce93163fa554
https://hg.mozilla.org/mozilla-central/rev/ce93163fa554

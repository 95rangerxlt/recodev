https://treeherder.mozilla.org/logviewer.html#?job_id=5497912&repo=fx-team

https://treeherder.mozilla.org/logviewer.html#?job_id=5497912&repo=fx-team
27 automation job failures were associated with this bug in the last 7 days.

Repository breakdown:
* mozilla-inbound: 16
* fx-team: 7
* mozilla-central: 2
* try: 1
* b2g-inbound: 1

Platform breakdown:
* windows8-64: 22
* windows7-32: 5

For more details, see:
https://brasstacks.mozilla.com/orangefactor/?display=Bug&bugid=1220246&startday=2015-10-26&endday=2015-11-01&tree=all
26 automation job failures were associated with this bug yesterday.

Repository breakdown:
* mozilla-inbound: 21
* fx-team: 3
* mozilla-central: 1
* b2g-inbound: 1

Platform breakdown:
* windows8-64: 24
* windows7-32: 2

For more details, see:
https://brasstacks.mozilla.com/orangefactor/?display=Bug&bugid=1220246&startday=2015-11-02&endday=2015-11-02&tree=all
16 automation job failures were associated with this bug yesterday.

Repository breakdown:
* mozilla-inbound: 8
* fx-team: 4
* mozilla-central: 3
* try: 1

Platform breakdown:
* windows8-64: 15
* windows7-32: 1

For more details, see:
https://brasstacks.mozilla.com/orangefactor/?display=Bug&bugid=1220246&startday=2015-11-04&endday=2015-11-04&tree=all
Created attachment 8683652
Patch to reproduce the failure

The failure occurs when it takes more than 1000ms for the local test HTTP server to reply to the /lookup_defaults requests. The test slaves that showed this failure must be pretty overloaded. The attached patch forces a 1000ms wait to reproduce locally and debug the test.
https://treeherder.mozilla.org/#/jobs?repo=try&revision=de466242fe4a
32 automation job failures were associated with this bug yesterday.

Repository breakdown:
* mozilla-inbound: 18
* b2g-inbound: 6
* fx-team: 5
* mozilla-central: 3

Platform breakdown:
* windows8-64: 28
* windows7-32: 4

For more details, see:
https://brasstacks.mozilla.com/orangefactor/?display=Bug&bugid=1220246&startday=2015-11-05&endday=2015-11-05&tree=all
Created attachment 8684216
fix test_geodefaults.js to avoid failing when the http server takes more than 1000ms to reply, r=?

Try looks green, so I would like to try landing this simple patch.

The problem here is that whenever something related to search is changed, the search service caches things to disk with a 1000ms delay. The test currently expects one notification of the file being written to disk, but when the HTTP server takes more than a second to respond, the file gets written to disk twice, and the promise only waits for the first notification. The patch addresses this by creating the promise after the search service is already done initializing. There's no risk of the (relevant) notification having been already fired at that point, because the file is written to disk with a delay.
Created attachment 8684224
Patch v2

Looks like the reason why we are writing the file to disk twice during the should_get_geo_defaults_only_once test is that the promiseAfterCache from the no_request_if_prefed_off test can be resolved due to writing the initial cache rather than due to the currentEngine/resetToOriginalDefaultEngine code block. And also, this code is pointless now that the metadata is no longer stored in a separate file.
https://hg.mozilla.org/integration/fx-team/rev/c921afa9fc3e164ab52dc4564349a92e16663317
Bug 1220246 - fix test_geodefaults.js to avoid failing when the http server takes more than 1000ms to reply, r=Gijs.
https://hg.mozilla.org/mozilla-central/rev/c921afa9fc3e
22 automation job failures were associated with this bug yesterday.

Repository breakdown:
* mozilla-inbound: 14
* b2g-inbound: 5
* mozilla-central: 2
* fx-team: 1

Platform breakdown:
* windows8-64: 20
* windows7-32: 2

For more details, see:
https://brasstacks.mozilla.com/orangefactor/?display=Bug&bugid=1220246&startday=2015-11-06&endday=2015-11-06&tree=all
129 automation job failures were associated with this bug in the last 7 days.

Repository breakdown:
* mozilla-inbound: 77
* fx-team: 19
* b2g-inbound: 18
* mozilla-central: 13
* try: 2

Platform breakdown:
* windows8-64: 118
* windows7-32: 11

For more details, see:
https://brasstacks.mozilla.com/orangefactor/?display=Bug&bugid=1220246&startday=2015-11-02&endday=2015-11-08&tree=all

With the current plan to harden the security of Firefox, we want to disallow internal privileged pages to use inline JavaScript. Since their amount is fairly limited, we start this by rewriting them bit by bit.

With the current plan to harden the security of Firefox, we want to disallow internal privileged pages to use inline JavaScript. Since their amount is fairly limited, we start this by rewriting them bit by bit.
Hi, I'd like to work on this, could you please give some more information regarding what is expected?
Hi dorsatum, thanks for taking a look :)
I have written two comments in this other bug that could help you getting started: https://bugzilla.mozilla.org/show_bug.cgi?id=923920#c3 (Comment 3 and the following). You can also look at the corssed-out bugs linked as "depends on" in bug 923920 to see how they were fixed.
Created attachment 8356570
extension.patch

If I've messed up in the evemtListeners, I'm sorry, my understanding about them is still a bit sketchy.
Comment on attachment 8356570
extension.patch

Review of attachment 8356570:
-----------------------------------------------------------------

It seems like you have indeed identified the event handlers. But it looks like have not fully understood how event handlers work. :(
The goal of this bug is to establish a separation of concerns: JavaScript code should be in the .js files only. All JavaScript that is currently in the HTML must be moved.

An event handler like |<a id="myLink" onclick="alert()">| in HTML adds JavaScript code to be executed when a certain event on an element occurs. This event handler could also be added from JavaScript by doing something like this:
If you just specify the function name and don't need any custom parameters: |document.getElementById("myLink").addEventListener("click", alert });| 
If you have a custom parameter: |document.getElementById("myLink").addEventListener("click", function() { alert("Hello!"); });| 

In our case, you can just give the function name, as the event is automatically passed to the function IIRC.
Created attachment 8358764
extensions.patch

I added some newlines, is this version okay?
Comment on attachment 8358764
extensions.patch

Review of attachment 8358764:
-----------------------------------------------------------------

This patch needs a clean up:

I recommend you look into how other code is indented (newlines, spaces) and copy that behavior.
The general guidelines as well as the JavaScript specific ones are interesting here: https://developer.mozilla.org/en-US/docs/Developer_Guide/Coding_Style

In addition, please submit a clean patch. It looks like this patch file references a previous iteration of your work and not the original version, which makes it hard to give proper feedback on.
But its approach looks OK, so feedback+ for now.
Created attachment 8362142
remove.patch

Hi, I'm really sorry for taking a while. Is this fine? The patch is with respect to the original file.
Comment on attachment 8362142
remove.patch

Review of attachment 8362142:
-----------------------------------------------------------------

This looks much better.
I think the very first hunk (this is what we call parts of a patch) is missing a clsoing }-brace.
Please also remove the trailing whitespaces (you must have pressed space before pressing enter?).

Your patch still does not adhere to the coding style as linked in comment 6.
Once you have addressed this, you can request a review for this patch.
Created attachment 8367452
remove.patch

Hopefully this adheres to the coding style :)
Created attachment 8367468
remove.patch

Please ignore the previous patch, that had an error with respect to braces.
Comment on attachment 8367468
remove.patch

Review of attachment 8367468:
-----------------------------------------------------------------

> let viewCommandSet = document.getElementById("viewCommandSet");
> ...
> let viewCommandSet = document.getElementById("viewCommandSet");
> ..
> let detail-screenshot = document.getElementById("detail-screenshot");

Very good progress! Some variable declarations are repeated throughout the document, when you could have just re-used the previous one.
Please fix this and flag again for review
Created attachment 8368733
remove.patch

Duplicate cases removed.
Comment on attachment 8368733
remove.patch

Review of attachment 8368733:
-----------------------------------------------------------------

You must have misunderstood me :-)
The problem wasn't the "let" before those lines: You could have omitted the lines completely, since the HTML element in question was already in the variable you intend to use!
Please try again ;)
Created attachment 8370242
remove.patch
Comment on attachment 8370242
remove.patch

Review of attachment 8370242:
-----------------------------------------------------------------

This looks much better! :)
Flagging for additional review from a Toolkit module peer
(In reply to Frederik Braun [:freddyb] from comment #15)
> This looks much better! :)
> Flagging for additional review from a Toolkit module peer

Thank you! :)
Comment on attachment 8370242
remove.patch

Review of attachment 8370242:
-----------------------------------------------------------------

Still a few things to fix up.

::: toolkit/mozapps/extensions/content/extensions.js
@@ +67,5 @@
>  });
>  
>  document.addEventListener("load", initialize, true);
>  window.addEventListener("unload", shutdown, false);
> +document.addEventListener("DOMContentLoaded", function() {

This should all just be done inside initialize(), since we have that already.

@@ +86,5 @@
> +  focusSearch.addEventListener("command", function(event){
> +    gHeader.focusSearchBox()
> +  });
> +
> +  let detail-screenshot = document.getElementById("detail-screenshot");

detail-screenshot isn't a valid JavaScript variable name, it has to be something like detailScreenshot.

@@ +88,5 @@
> +  });
> +
> +  let detail-screenshot = document.getElementById("detail-screenshot");
> +  detail-screenshot.addEventListener("load", function(event){
> +    this.removeAttribute('loading')

Convention everywhere in this file is to use double quotes.

::: toolkit/mozapps/extensions/content/extensions.xul
@@ -21,5 @@
> -      disablefastfind="true"
> -      ondragenter="gDragDrop.onDragOver(event)"
> -      ondragover="gDragDrop.onDragOver(event)"
> -      ondrop="gDragDrop.onDrop(event)"
> -      onkeypress="gHeader.onKeyPress(event)">

Need to add event listeners for these too.
Created attachment 8375978
remove.patch

Building with the patch went off successfully.
Comment on attachment 8375978
remove.patch

Review of attachment 8375978:
-----------------------------------------------------------------

You are making progress :)
But your programming knowledge seems a bit limited.
This JavaScript introduction can help https://developer.mozilla.org/en-US/docs/Web/JavaScript/Getting_Started
It might also be interesting to play with websites using JavaScript on webmaker.org!

Now, for the patch:

::: toolkit/mozapps/extensions/content/extensions.js
@@ +138,5 @@
> +  let dragEnter = document.getElementById("addons-page");
> +  dragEnter.addEventListener("dragenter", function(event){
> +    gDragDrop.onDragOver(event)
> +  });
> +

This doesn't make a lot of sense. You are creating a variable to contain the "addons-page" Element, so you should give it a name that fits to the element. I trust you can find a better name on your own.
Also, you don't need different variables for the same Element. You can reuse it for upcoming .addEventListener() calls, as you did above with detailScreenshot.
Hi, I'm really sorry for taking such a long time to reply. If you could check this it would be great :)

http://paste.ubuntu.com/6932486/
It looks OK, but this is missing context of course. Please upload another patch and flag me for feedback.
Created attachment 8378271
remove.patch
Comment on attachment 8378271
remove.patch

Review of attachment 8378271:
-----------------------------------------------------------------

Thank you for this patch.
Please address my comments and set "review?" to a toolkit module peer (See https://wiki.mozilla.org/Modules/Toolkit)
Comment on attachment 8378271
remove.patch

Review of attachment 8378271:
-----------------------------------------------------------------

Sorry I messed up. Here's the actual review comment :)

::: toolkit/mozapps/extensions/content/extensions.js
@@ +2647,5 @@
>      } else {
>        version.hidden = true;
>      }
>  
> +    var screenshot = document.getElementById("detailScreenshot");

Note how you look for the id "detailScreenshot".

::: toolkit/mozapps/extensions/content/extensions.xul
@@ +509,5 @@
>                      <label id="detail-creator" class="creator"/>
>                    </vbox>
>                    <hbox id="detail-desc-container" align="start">
>                      <vbox pack="center"> <!-- Necessary to work around bug 394738 -->
> +                      <image id="detail-screenshot" hidden="true"/>

But you specify it as "detail-screenshot" in the XUL document.
Created attachment 8378363
remove.patch
Comment on attachment 8378363
remove.patch

Review of attachment 8378363:
-----------------------------------------------------------------

Getting there!

::: toolkit/mozapps/extensions/content/extensions.js
@@ +107,5 @@
>    }
>  
>    gViewController.loadInitialView(view);
> +
> +  document.addEventListener("DOMContentLoaded", function() {

The initialize() function gets called on the "load" event, so you don't need to listen for this event (which actually happens slightly earlier).

Also, you should add all your code a lot earlier in the initialize() function - directly after this line:

  document.removeEventListener("load", initialize, true);

::: toolkit/mozapps/extensions/content/extensions.xul
@@ +509,5 @@
>                      <label id="detail-creator" class="creator"/>
>                    </vbox>
>                    <hbox id="detail-desc-container" align="start">
>                      <vbox pack="center"> <!-- Necessary to work around bug 394738 -->
> +                      <image id="detailScreenshot" hidden="true"/>

You can't change IDs of elements - we rely on these for CSS, tests, etc.

In the JS file, it's perfectly fine to have something like this:
  let detailScreenshot = document.getElementById("detail-screenshot");
(In reply to Blair McBride [:Unfocused] from comment #26)
> Comment on attachment 8378363
> remove.patch
> ::: toolkit/mozapps/extensions/content/extensions.js
> @@ +107,5 @@
> >    }
> >  
> >    gViewController.loadInitialView(view);
> > +
> > +  document.addEventListener("DOMContentLoaded", function() {
> 
> The initialize() function gets called on the "load" event, so you don't need
> to listen for this event (which actually happens slightly earlier).

If the EventListner listens for just "load", would that suffice?
Created attachment 8379664
remove.patch

Thank you for reviewing these patches :)
Comment on attachment 8379664
remove.patch

Review of attachment 8379664:
-----------------------------------------------------------------

Good to go :)

I did notice a failing test, with CTRL-f not working. Trying to investigate that had me confused for quite some time. I turned out to be a 7-year old bug (bug 371900) - I've added a temporary workaround for that.

Landed it on the fx-team branch, which gets merged into mozilla-central roughly twice a day:
https://hg.mozilla.org/integration/fx-team/rev/51d6a5ca07ff
(In reply to Projjol [:dorsatum] from comment #28)
> Thank you for reviewing these patches :)

Thankyou for contributing :)
https://hg.mozilla.org/mozilla-central/rev/51d6a5ca07ff

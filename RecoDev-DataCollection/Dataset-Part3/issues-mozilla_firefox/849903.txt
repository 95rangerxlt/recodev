Created attachment 723555
screenshot of a pdf with issues

We are having an issue with JBIG2 compressed pdf's in the new PDF Viewer in FF 19. Looks like a bunch of noise on the image. I've attached a screenshot of the issue.

There are 2 patches scheduled to be released with Firefox 22 on September 17, 2013 that should fix the issue.

https://github.com/mozilla/pdf.js/pull/2782 and https://github.com/mozilla/pdf.js/pull/2794.

Neither of these changes appears to be high risk. They are small changes specifically related to JBIG2 compressed pdf files. I work for Quicken Loans where last month we had 45,000 clients in one of our applications using Firefox 19 (which introduced the new PDF Viewer). We have received up to 100 support calls per day related to PDF's not rendering correctly due to these issues with pdf.js.

If there is a way to get these patches uplifted to version 20 or 21, that would be preferable. Is this something that can happen?

Created attachment 723555
screenshot of a pdf with issues

We are having an issue with JBIG2 compressed pdf's in the new PDF Viewer in FF 19. Looks like a bunch of noise on the image. I've attached a screenshot of the issue.

There are 2 patches scheduled to be released with Firefox 22 on September 17, 2013 that should fix the issue.

https://github.com/mozilla/pdf.js/pull/2782 and https://github.com/mozilla/pdf.js/pull/2794.

Neither of these changes appears to be high risk. They are small changes specifically related to JBIG2 compressed pdf files. I work for Quicken Loans where last month we had 45,000 clients in one of our applications using Firefox 19 (which introduced the new PDF Viewer). We have received up to 100 support calls per day related to PDF's not rendering correctly due to these issues with pdf.js.

If there is a way to get these patches uplifted to version 20 or 21, that would be preferable. Is this something that can happen?
I hate this mirrored github bug mirroring. Working in 2 bug databases complicates the whole pdf.js work for us triagers.

marking new and request blocking
We'd have to see that this work was verified fixed on nightly first, and then get uplift nomination to Aurora/Beta.  Seeing as the beta going to build tomorrow is our last one that can take speculative fixes that means we'd have to know all this was verified and safe for uplift before tomorrow morning.  Please confirm if that seems feasible otherwise we might track this for 21 and just let this bake on Aurora.
If these changes get into the nightly, I can test one of our files that currently shows up broken tonight or early tomorrow morning. Not sure who you were asking about the feasibility of it.
It's in Nightly
I tested several PDFs in v22.0a1 and all of the issues we've had appear to be gone. Please let me know if there is anything else I can do to get these into Aurora/Beta. Thanks.
We'll need a patch attached to this bug (single rollup is fine) that can be nominated for mozilla-{aurora,beta} approval - when you do this, a form will show up in the comment field with questions that need answering to help assess the risk to taking this uplift.
Sorry, I'm a total noob to this process. I didn't write the code for this, so I am guessing I can't attach a patch, right? So I would assume you are talking to Yury?
Created attachment 724104
Uplift jbig2 code (beta)
Created attachment 724105
Uplift jbig2 code (aurora)
(Windows builds w/patches available at http://ftp.mozilla.org/pub/mozilla.org/firefox/try-builds/async.processingjs@yahoo.com-579011e4056d/try-win32/ and http://ftp.mozilla.org/pub/mozilla.org/firefox/try-builds/async.processingjs@yahoo.com-0f026c835243/try-win32/ )
Comment on attachment 724104
Uplift jbig2 code (beta)

[Approval Request Comment]
Bug caused by (feature/regressing bug #): n/a
User impact if declined: PDFs with scanned images and encoded with JBIG2 encoder will not look right
Testing completed (on m-c, etc.): per comment 5
Risk to taking this patch (and alternatives if risky): the patch affects only JBIG2 portion of the pdf.js code, so it's a really low risk for general non-scanned PDFs
String or UUID changes made by this patch: n/a
Comment on attachment 724105
Uplift jbig2 code (aurora)

[Approval Request Comment]
Bug caused by (feature/regressing bug #): n/a
User impact if declined: PDFs with scanned images and encoded with JBIG2 encoder will not look right
Testing completed (on m-c, etc.): per comment 5
Risk to taking this patch (and alternatives if risky): the patch affects only JBIG2 portion of the pdf.js code, so it's a really low risk for general non-scanned PDFs
String or UUID changes made by this patch: n/a
Comment on attachment 724104
Uplift jbig2 code (beta)

Low risk, already on nightly, and only affects the jbig/pdf code - approving for uplift.
https://hg.mozilla.org/releases/mozilla-aurora/rev/5caf33a81d94
https://hg.mozilla.org/releases/mozilla-beta/rev/5ea7c319a449

Fixed on m-c by bug 848641.
Mozilla/5.0 (Windows NT 6.1; rv:20.0) Gecko/20100101 Firefox/20.0
Mozilla/5.0 (X11; Linux i686; rv:20.0) Gecko/20100101 Firefox/20.0
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:20.0) Gecko/20100101 Firefox/20.0

Verified the fix on latest Firefox 20.0 beta5 using the document from
https://bug835726.bugzilla.mozilla.org/attachment.cgi?id=707492: the document is displayed correctly.
Verified as fixed on Firefox 22 beta 6:
Mozilla/5.0 (Windows NT 6.1; WOW64; rv:22.0) Gecko/20100101 Firefox/22.0
Mozilla/5.0 (X11; Linux i686; rv:22.0) Gecko/20100101 Firefox/22.0
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:22.0) Gecko/20100101 Firefox/22.0
Build ID: 20130617145905

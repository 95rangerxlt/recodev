> ::: toolkit/devtools/server/ChromeUtils.cpp
> @@ +425,5 @@
> > +
> > +  uint32_t bytesRead = 0;
> > +  while (bytesRead < size) {
> > +    uint32_t bytesLeft = size - bytesRead;
> > +    int32_t bytesReadThisTime = PR_Read(fd, buffer.get() + bytesRead, bytesLeft);
> 
> For the future: there is a PR_MemMap.

> ::: toolkit/devtools/server/ChromeUtils.cpp
> @@ +425,5 @@
> > +
> > +  uint32_t bytesRead = 0;
> > +  while (bytesRead < size) {
> > +    uint32_t bytesLeft = size - bytesRead;
> > +    int32_t bytesReadThisTime = PR_Read(fd, buffer.get() + bytesRead, bytesLeft);
> 
> For the future: there is a PR_MemMap.
Created attachment 8614945
Use PR_MemMap when deserializing heap snapshots
Comment on attachment 8614945
Use PR_MemMap when deserializing heap snapshots

Review of attachment 8614945:
-----------------------------------------------------------------

::: toolkit/devtools/server/AutoMemMap.h
@@ +32,5 @@
> +{
> +  MOZ_DECL_USE_GUARD_OBJECT_NOTIFIER;
> +
> +  PRFileInfo64 fileInfo;
> +  PRFileDesc*  fd;

Just curious, does NSPR actually require you to keep fd open while the memory is mapped? On POSIX, at least, you can map the file, and then close the fd, and the mapping holds its own reference to the file that is automatically dropped when the memory is freed. If NSPR works this way, then we could open the fd in init, do the mapping, and then close it. No need to keep it around.
https://treeherder.mozilla.org/#/jobs?repo=try&revision=5f2fdcefa7db
https://hg.mozilla.org/integration/mozilla-inbound/rev/ddadcaa630f0
https://hg.mozilla.org/mozilla-central/rev/ddadcaa630f0

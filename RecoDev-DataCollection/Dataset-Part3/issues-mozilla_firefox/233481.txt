This bug is inspired by bug 221484 and bug 233479.

I noticed that the internal usage of MdbResult is a void array, so references 
to nsIMdbRow objects are not held.  This seems dangerous; what if a row were to 
be deleted while the MdbResult was still in use?

Coming up is a patch to change this from nsVoidArray to nsCOMArray<nsIMdbRow>.  
This removes all the static casts.

Is there a reason why we are not refcounting these objects?

This bug is inspired by bug 221484 and bug 233479.

I noticed that the internal usage of MdbResult is a void array, so references 
to nsIMdbRow objects are not held.  This seems dangerous; what if a row were to 
be deleted while the MdbResult was still in use?

Coming up is a patch to change this from nsVoidArray to nsCOMArray<nsIMdbRow>.  
This removes all the static casts.

Is there a reason why we are not refcounting these objects?
Created attachment 140915
patch to remove casts in nsAutoCompleteMdbResult.cpp
Comment on attachment 140915
patch to remove casts in nsAutoCompleteMdbResult.cpp

I can't find anything in the ownership model that would otherwise guarantee
that the row pointers would remain valid, so r=me.
patrick, this patch no longer applies cleanly, can you update to tip and attach
an updated patch?
Created attachment 149524
updated patch to remove casts in nsAutoCompleteMdbResult.cpp

updated for changes to RemoveRowAt.  builds cleanly for me on win32.
Comment on attachment 149524
updated patch to remove casts in nsAutoCompleteMdbResult.cpp

this is a tiny change (see GetRowAt) for this previously r+sr patch.  I'm not
sure if this even needs r+sr, but I'll ask just in case.
Comment on attachment 149524
updated patch to remove casts in nsAutoCompleteMdbResult.cpp

not necessary in this case, the patch didn't change substantially, its just
bitrot

I'll check this in during my next batch of checkins.
fixed branch and trunk

I've long been annoyed by the fact that getGeneratedLocation and getOriginalLocation are not homogeneous. The former takes a location object with a sourceActor, the latter a location object with a Debugger.source instance. This discrepancy is needlessly confusing in my opinion.

The main reason why getOriginalLocation takes a Debugger.Source instance seems to because that is what getFrameLocation returns. It shouldn't be too hard to refactor getFrameLocation so that it returns the source actor corresponding to the Debugger.Source instance by wrapping it in a call to createNonSourceMappedActor.

I've long been annoyed by the fact that getGeneratedLocation and getOriginalLocation are not homogeneous. The former takes a location object with a sourceActor, the latter a location object with a Debugger.source instance. This discrepancy is needlessly confusing in my opinion.

The main reason why getOriginalLocation takes a Debugger.Source instance seems to because that is what getFrameLocation returns. It shouldn't be too hard to refactor getFrameLocation so that it returns the source actor corresponding to the Debugger.Source instance by wrapping it in a call to createNonSourceMappedActor.
Created attachment 8562111
patch
Comment on attachment 8562111
patch

Review of attachment 8562111:
-----------------------------------------------------------------

This should be pretty harmless. Only reason it wasn't like this was because we almost always already had a `Debugger.Source` object, but you're right to make it more consistent.
Try push for this patch:
https://treeherder.mozilla.org/#/jobs?repo=try&revision=b79ff087bef8
The previous try run was bogus. Here's the second attempt:
https://treeherder.mozilla.org/#/jobs?repo=try&revision=9c3e6dc26975
Try run looks green, posted to fx-team:
https://hg.mozilla.org/integration/fx-team/rev/7462142c1322
https://hg.mozilla.org/mozilla-central/rev/7462142c1322

Sometimes we're selecting a node using the breadcrumbs or the HTML panel which is not visible in the visualization viewport. It would be nice if the camera automatically translated/zoomed/centered/danced so we can see it.

Sometimes we're selecting a node using the breadcrumbs or the HTML panel which is not visible in the visualization viewport. It would be nice if the camera automatically translated/zoomed/centered/danced so we can see it.
Created attachment 592485
v0

WIP.
Created attachment 592500
v1
Created attachment 592517
v2

Fixed a few small problems with moveIntoView().
Comment on attachment 592517
v2

Green is the color: https://tbpl.mozilla.org/?tree=Try&rev=ce9d3ecd89e5
Created attachment 593880
v2.1

Made sure bringing the node into view only happens when the selection is changed via the highlighter or breadcrumbs, and not by picking inside Tilt. I think this way is better. Rob, what do you think?
Comment on attachment 593880
v2.1

    *                 the index of the node in the this.traverseData array
+   * @param {String} aFlags
+   *                 flags specifying highlighting options
    */
-  highlightNodeFor: function TVP_highlightNodeFor(aNodeIndex)
+  highlightNodeFor: function TVP_highlightNodeFor(aNodeIndex, aFlags)
   {
     this.redraw = true;

do you see adding other flags in the future? Could the be better served by a flags object or even a moveIntoView boolean parameter?
I think other flags are pretty feasible someday ("bounce"? "makeItPop"?). Maybe using a string for this is too hacky (the nice thing about it that instead of simply a string you could also use an array like ["moveIntoView, "makeItPop"] because indexOf).

An object may be more obvious. But then we're dealing with redundancy (like highlight(aNode, { moveIntoView: false });), since I don't see a scenario when flags should be turned off, since they're all off by default. Which approach do you prefer?
Comment on attachment 593880
v2.1

I don't feel strongly about it. Providing room for future flags is an ok reason to do this and the string check isn't horrible.
https://hg.mozilla.org/integration/fx-team/rev/0f5003f35498
https://hg.mozilla.org/mozilla-central/rev/0f5003f35498

While working on bug 346337, I've stumbled over several issues with the current string serialization we use for storing text data and tab attributes. The text data serialization is going away in bug 346337, so the tab attribute serialization should just change as well, from

xultab: "key=a%20value key2=next%20value"

to

attributes: { key: "a value", key2: "next value" }

Additionally, this will make the lives of extension authors (and whoever wants direct access to this data) simpler.

While working on bug 346337, I've stumbled over several issues with the current string serialization we use for storing text data and tab attributes. The text data serialization is going away in bug 346337, so the tab attribute serialization should just change as well, from

xultab: "key=a%20value key2=next%20value"

to

attributes: { key: "a value", key2: "next value" }

Additionally, this will make the lives of extension authors (and whoever wants direct access to this data) simpler.
Created attachment 334096
simple fix

Why ever we haven't used this format from the start... :(
Comment on attachment 334096
simple fix

>+    for (let name in tabData.attributes)
>+      tab.setAttribute(name, tabData.attributes[name]);

Why not

for (let [ name, value ] in tabData.attributes)
     tab.setAttribute(name, value)

?
Comment on attachment 334096
simple fix

r=me
(In reply to comment #2)
> for (let [ name, value ] in tabData.attributes)

Because I'm a traditionalist. ;-) Besides, your suggestion wouldn't work anyway, as tabData.attributes can be undefined and the Iterator doesn't accept that. (BTW: Your code sample is missing that very same Iterator - cf. <http://developer.mozilla.org/en/docs/New_in_JavaScript_1.7#Looping_across_objects>).
Pushed to mozilla-central: https://hg.mozilla.org/mozilla-central/index.cgi/rev/3d769b6b1c4c

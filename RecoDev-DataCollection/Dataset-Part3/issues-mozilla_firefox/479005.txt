Earlier:

      for (ix in this._windows) {
        if (ix in openWindows)
          this._windows[ix]._closedTabs = [];

In a different switch case:

      for (let ix in this._windows) {
        let closedTabs = this._windows[ix]._closedTabs;
        for (let i = closedTabs.length - 1; i >= 0; i--) {
          if (closedTabs[i].state.entries.some(containsDomain, this))
            closedTabs.splice(i, 1);
        }
      }

In yet another (nested switch) case:

        var ix;
        for (ix in this._windows) {
          this._windows[ix]._closedTabs.splice(this._prefBranch.getIntPref("sessionstore.max_tabs_undo"));
        }

The var ix; hoists and saves the early for (ix in...) from creating an undeclared global. mrbkap says we have failed to give strict warnings for chrome due to a DOM script error reporter bug. We really need to look for whatever has crept in -- there's never just one cockroach :-P.

/be

Earlier:

      for (ix in this._windows) {
        if (ix in openWindows)
          this._windows[ix]._closedTabs = [];

In a different switch case:

      for (let ix in this._windows) {
        let closedTabs = this._windows[ix]._closedTabs;
        for (let i = closedTabs.length - 1; i >= 0; i--) {
          if (closedTabs[i].state.entries.some(containsDomain, this))
            closedTabs.splice(i, 1);
        }
      }

In yet another (nested switch) case:

        var ix;
        for (ix in this._windows) {
          this._windows[ix]._closedTabs.splice(this._prefBranch.getIntPref("sessionstore.max_tabs_undo"));
        }

The var ix; hoists and saves the early for (ix in...) from creating an undeclared global. mrbkap says we have failed to give strict warnings for chrome due to a DOM script error reporter bug. We really need to look for whatever has crept in -- there's never just one cockroach :-P.

/be
Created attachment 362857
consistently use |for (let ix = ...)|

I guess, ideally we'd be using |for (let ...)| for most if not all loops.

Going through SessionStore code, it's only sss_observe which needs this due to its huge-switch-only nature - even though AFAICT the code was correct (even a let could shadow a let, the shadowing happens in a different case branch and IIRC we were about to drop the "redeclaration of var" warning at some point anyway).
Comment on attachment 362857
consistently use |for (let ix = ...)|

Thanks.

/be
I need to take a look at the actual code, but we might have the same issue in SeaMonkey, we recently ported session store over there.
SeaMonkey doesn't have "sessionstore.max_tabs_undo" processing logic, so we have one ix per function.
But we use ix without declaring it in in sss_observe, is this bad ?
> But we use ix without declaring it in in sss_observe, is this bad ?
It's bad programming practice.
Undeclared variables are global, and should be considered a bug.

/be
http://hg.mozilla.org/mozilla-central/rev/d1bff51e9ed3
Comment on attachment 362857
consistently use |for (let ix = ...)|

a191=beltzner
http://hg.mozilla.org/releases/mozilla-1.9.1/rev/8ffab42eca82

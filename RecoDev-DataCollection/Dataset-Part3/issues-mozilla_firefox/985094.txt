Currently, packets from protocol.js actors are harder to follow in packet logs because their actor ID has no visible name:

DBG-SERVER: Received packet 2: {
  "from": "root",
  "selected": 0,
  "tabs": [...],
  "url": "chrome://browser/content/browser.xul",
  "consoleActor": "conn0.console2",
  "inspectorActor": "conn0.3",
  "styleSheetsActor": "conn0.4",
  "styleEditorActor": "conn0.5",
  "memoryActor": "conn0.6",
  "eventLoopLagActor": "conn0.7",
  "profilerActor": "conn0.profiler8",
  "chromeDebugger": "conn0.chromeDebugger9",
  "webappsActor": "conn0.webapps10",
  "deviceActor": "conn0.11",
  "preferenceActor": "conn0.12"
}

The ones above that look like "conn0.12" are all protocol.js based.  Since further packets to the actors uses these names, it's much harder to follow with just a number.

By exposing the typeName, you get:

DBG-SERVER: Received packet 2: {
  "from": "root",
  "selected": 0,
  "tabs": [...],
  "consoleActor": "conn0.console2",
  "inspectorActor": "conn0.inspector3",
  "styleSheetsActor": "conn0.stylesheets4",
  "styleEditorActor": "conn0.styleeditor5",
  "memoryActor": "conn0.memory6",
  "eventLoopLagActor": "conn0.eventLoopLag7",
  "profilerActor": "conn0.profiler8",
  "chromeDebugger": "conn0.chromeDebugger9",
  "webappsActor": "conn0.webapps10",
  "deviceActor": "conn0.device11",
  "preferenceActor": "conn0.preference12"
}

Currently, packets from protocol.js actors are harder to follow in packet logs because their actor ID has no visible name:

DBG-SERVER: Received packet 2: {
  "from": "root",
  "selected": 0,
  "tabs": [...],
  "url": "chrome://browser/content/browser.xul",
  "consoleActor": "conn0.console2",
  "inspectorActor": "conn0.3",
  "styleSheetsActor": "conn0.4",
  "styleEditorActor": "conn0.5",
  "memoryActor": "conn0.6",
  "eventLoopLagActor": "conn0.7",
  "profilerActor": "conn0.profiler8",
  "chromeDebugger": "conn0.chromeDebugger9",
  "webappsActor": "conn0.webapps10",
  "deviceActor": "conn0.11",
  "preferenceActor": "conn0.12"
}

The ones above that look like "conn0.12" are all protocol.js based.  Since further packets to the actors uses these names, it's much harder to follow with just a number.

By exposing the typeName, you get:

DBG-SERVER: Received packet 2: {
  "from": "root",
  "selected": 0,
  "tabs": [...],
  "consoleActor": "conn0.console2",
  "inspectorActor": "conn0.inspector3",
  "styleSheetsActor": "conn0.stylesheets4",
  "styleEditorActor": "conn0.styleeditor5",
  "memoryActor": "conn0.memory6",
  "eventLoopLagActor": "conn0.eventLoopLag7",
  "profilerActor": "conn0.profiler8",
  "chromeDebugger": "conn0.chromeDebugger9",
  "webappsActor": "conn0.webapps10",
  "deviceActor": "conn0.device11",
  "preferenceActor": "conn0.preference12"
}
Created attachment 8393084
Show typeName from protocol.js in listTabs reply

Try: https://tbpl.mozilla.org/?tree=Try&rev=18260aa6de48
Yes please!
Comment on attachment 8393084
Show typeName from protocol.js in listTabs reply

Review of attachment 8393084:
-----------------------------------------------------------------

Must... resist... stealing... review... BAM!
Sorry!
https://hg.mozilla.org/integration/fx-team/rev/79617d6625f6
https://hg.mozilla.org/mozilla-central/rev/79617d6625f6

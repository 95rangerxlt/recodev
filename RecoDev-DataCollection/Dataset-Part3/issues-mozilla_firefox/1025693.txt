The @media sidebar should have a splitter to let you grab and resize the width of it.

The @media sidebar should have a splitter to let you grab and resize the width of it.
Created attachment 8441087
Resizable @media sidebar, and remember sidebar widths
Created attachment 8441090
Resizable @media sidebar, and remember sidebar widths

Wrong patch, sorry. This one's right
Comment on attachment 8441090
Resizable @media sidebar, and remember sidebar widths

Review of attachment 8441090:
-----------------------------------------------------------------

Looks like this needs to be rebased for styleeditor.css

::: browser/devtools/styleeditor/StyleEditorUI.jsm
@@ +465,5 @@
> +
> +        let splitter = details.querySelector(".devtools-side-splitter");
> +        splitter.addEventListener("mousemove", function() {
> +          let sidebarWidth = sidebar.getAttribute("width");
> +          Services.prefs.setIntPref(PREF_SIDEBAR_WIDTH, sidebarWidth);

You are already setting this pref in the destroy function, which seems like it should be enough (doing it in destroy is consistent with how we store prefs on other widths / heights).  So I think you can remove this event listener on the splitter.
(In reply to Brian Grinstead [:bgrins] from comment #3)
> Looks like this needs to be rebased for styleeditor.css

Sorry, I had this applied on top of bug 1025521 for the Try build: https://tbpl.mozilla.org/?tree=Try&rev=36b0120d31a0

> 
> ::: browser/devtools/styleeditor/StyleEditorUI.jsm
> @@ +465,5 @@
> > +
> > +        let splitter = details.querySelector(".devtools-side-splitter");
> > +        splitter.addEventListener("mousemove", function() {
> > +          let sidebarWidth = sidebar.getAttribute("width");
> > +          Services.prefs.setIntPref(PREF_SIDEBAR_WIDTH, sidebarWidth);
> 
> You are already setting this pref in the destroy function, which seems like
> it should be enough (doing it in destroy is consistent with how we store
> prefs on other widths / heights).  So I think you can remove this event
> listener on the splitter.

That's a different preference for the navigation sidebar. The @media sidebars are per-editor so I have to save it whenever the user changes the width in one of them.
Comment on attachment 8441090
Resizable @media sidebar, and remember sidebar widths

Patch applies to fx-team now that bug 1025521 has landed.
Comment on attachment 8441090
Resizable @media sidebar, and remember sidebar widths

Review of attachment 8441090:
-----------------------------------------------------------------

Works nice, just one issue I noticed when using it wrt the width changing as I switch between editors

::: browser/devtools/styleeditor/StyleEditorUI.jsm
@@ +459,5 @@
>            }
>          }, false);
>  
> +        let sidebar = details.querySelector(".stylesheet-sidebar");
> +        sidebar.setAttribute("width",

Regarding whether the pref should be set when dragging vs destroying, I see your point about needing to do it as it resizes (since each sidebar is separate).

However, I would suggest setting the sidebar width in the onShow callback so that it is synced across editors as you switch.  This makes it feel more consistent with other sidebars (like the variables/events sidebar in the debugger).

@@ +460,5 @@
>          }, false);
>  
> +        let sidebar = details.querySelector(".stylesheet-sidebar");
> +        sidebar.setAttribute("width",
> +            Services.prefs.getIntPref(PREF_SIDEBAR_WIDTH));

The pref access *could* be changed such that the width is just a number on StyleEditorUI which is set to the value of the pref in the constructor, and the pref is set to this value in the destroy function.  Not necessarily just for performance, but also to prevent any jumping around when switching between style editors in two different toolboxes.  This is a pretty niche case and I don't feel that strongly about it one way or another - your choice if you want to change it.
Created attachment 8442512
Resize all sidebars

This one will adjust the width of all @media sidebars in the style editor when you adjust one of them. It doesn't seem to have much performance impact and would be a rare occurrence.

Try: https://tbpl.mozilla.org/?tree=Try&rev=bb1092ff48e9
https://hg.mozilla.org/integration/fx-team/rev/17cff603110b
This patch was missing the commit message information. Could we make sure it's included in future patches?
(In reply to Wes Kocher (:KWierso) from comment #9)
> This patch was missing the commit message information. Could we make sure
> it's included in future patches?

Will do.
https://hg.mozilla.org/mozilla-central/rev/17cff603110b

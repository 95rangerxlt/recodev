In the source outline view, it would be useful to not have the tree sorted. Adding an option to the TreeWidget API would easily allow the tree items to be appended to the child instead of inserting it to the appropriate siblings.

In the source outline view, it would be useful to not have the tree sorted. Adding an option to the TreeWidget API would easily allow the tree items to be appended to the child instead of inserting it to the appropriate siblings.
You just need to make the nextSibling as null in line 489.
The setting to not to push in a sorted manner should be a globla config while initializing the tree.
Created attachment 8427360
1014923.patch

Proposed API change. An example call to make an unsorted tree: 
>    this.widget = new TreeWidget(document.getElementById("source-outline"), {
>      emptyText: L10N.getStr("noSourcesText"),
>      sortedTree: false
>    });
Comment on attachment 8427360
1014923.patch

Review of attachment 8427360:
-----------------------------------------------------------------

LGTM. Should update the comment above the TreeWidget constructor to reflect this new options.

Now tests :)
Created attachment 8429663
1014923.patch

Added test cases and docs for the new sortedTree options in TreeWidget
https://tbpl.mozilla.org/?tree=Try&rev=d59a7693716a
Comment on attachment 8429663
1014923.patch

Review of attachment 8429663:
-----------------------------------------------------------------

r+ with below comments addresses and a green try

::: browser/devtools/shared/test/browser_treeWidget_basic.js
@@ +130,5 @@
> +  tree.add(["g-1", { id: "d-2", label: "d-2.1"}]);
> +  tree.add(["g-1", { id: "b-2", label: "b-2.2"}]);
> +  tree.add(["g-1", { id: "a-2", label: "a-2.3"}]);
> +
> +  tree.sortedTree = true;

no need of this..

@@ +152,5 @@
> +    "Text content of d-2 matches");
> +  is(tree.root.children.firstChild.lastChild.firstChild.nextSibling.textContent, "b-2.2",
> +    "Text content of b-2 matches");
> +  is(tree.root.children.firstChild.lastChild.lastChild.textContent, "a-2.3",
> +    "Text content of a-2 matches");

80 char column limit please.

::: browser/devtools/shared/widgets/TreeWidget.js
@@ +19,5 @@
>   *        - emptyText {string}: text to display when no entries in the table.
>   *        - defaultType {string}: The default type of the tree items. For ex. 'js'
> + *        - sortedTree {boolean}: Set to true if the tree should be sorted in
> + *          alphabetical order. Otherwise, the item will be appended to its
> + *          parent. Trees are sorted by default.

"true if the tree items are inserted in a lexically sorted manner. false if items are to be appended to the parent. Items are sorted by default"

@@ +28,5 @@
>    this.window = this.document.defaultView;
>    this._parent = node;
> +  this.emptyText = options.emptyText || "";
> +  this.defaultType = options.defaultType;
> +  this.sortedTree = options.sortedTree !== false;

no need of strict match here.

@@ +463,5 @@
>     * @param {string} defaultType
>     *        The default type of the item to be used when items[i].type is null
> +   * @param {boolean} sortedTree
> +   *        Set to true if the tree should be sorted in alphabetical order.
> +   *        Otherwise, the item will be appended to its parent.

"true if the items are sorted in lexically sorted manner. false for appending items to their parent"

@@ +468,2 @@
>     */
> +  add: function(items, defaultType, sortedTree) {

should be simply "sorted"
Gabriel, you're going to need to ask for review from a devtools peer: https://wiki.mozilla.org/Modules/All#Devtools
Created attachment 8430216
1014923.patch

(In reply to Girish Sharma [:Optimizer] from comment #5)
> Comment on attachment 8429663
> 1014923.patch
> 
> Review of attachment 8429663:
> -----------------------------------------------------------------
> 
> r+ with below comments addresses and a green try
> 
> ::: browser/devtools/shared/test/browser_treeWidget_basic.js
> @@ +130,5 @@
> > +  tree.add(["g-1", { id: "d-2", label: "d-2.1"}]);
> > +  tree.add(["g-1", { id: "b-2", label: "b-2.2"}]);
> > +  tree.add(["g-1", { id: "a-2", label: "a-2.3"}]);
> > +
> > +  tree.sortedTree = true;
> 
> no need of this..
> 

Fixe - removed tree.sortedTree = true.

> @@ +152,5 @@
> > +    "Text content of d-2 matches");
> > +  is(tree.root.children.firstChild.lastChild.firstChild.nextSibling.textContent, "b-2.2",
> > +    "Text content of b-2 matches");
> > +  is(tree.root.children.firstChild.lastChild.lastChild.textContent, "a-2.3",
> > +    "Text content of a-2 matches");
> 
> 80 char column limit please.
> 

Fixed - 80 char column limit enforced.

> ::: browser/devtools/shared/widgets/TreeWidget.js
> @@ +19,5 @@
> >   *        - emptyText {string}: text to display when no entries in the table.
> >   *        - defaultType {string}: The default type of the tree items. For ex. 'js'
> > + *        - sortedTree {boolean}: Set to true if the tree should be sorted in
> > + *          alphabetical order. Otherwise, the item will be appended to its
> > + *          parent. Trees are sorted by default.
> 
> "true if the tree items are inserted in a lexically sorted manner. false if
> items are to be appended to the parent. Items are sorted by default"
> 

Fixed - modified the docs.

> @@ +28,5 @@
> >    this.window = this.document.defaultView;
> >    this._parent = node;
> > +  this.emptyText = options.emptyText || "";
> > +  this.defaultType = options.defaultType;
> > +  this.sortedTree = options.sortedTree !== false;
> 
> no need of strict match here.
> 

Fixed - removed the strict match.

> @@ +463,5 @@
> >     * @param {string} defaultType
> >     *        The default type of the item to be used when items[i].type is null
> > +   * @param {boolean} sortedTree
> > +   *        Set to true if the tree should be sorted in alphabetical order.
> > +   *        Otherwise, the item will be appended to its parent.
> 
> "true if the items are sorted in lexically sorted manner. false for
> appending items to their parent"
> 
> @@ +468,2 @@
> >     */
> > +  add: function(items, defaultType, sortedTree) {
> 
> should be simply "sorted"

Fixed - renamed sortedTree to sorted and adjusted the docs.
Comment on attachment 8430216
1014923.patch

Review of attachment 8430216:
-----------------------------------------------------------------

::: browser/devtools/shared/widgets/TreeWidget.js
@@ +17,5 @@
>   *        The container element for the tree widget.
>   * @param {Object} options
>   *        - emptyText {string}: text to display when no entries in the table.
>   *        - defaultType {string}: The default type of the tree items. For ex. 'js'
> + *        - sorted {boolean}: true if the tree items are inserted in a

I have a documentation suggestion here (reorganizes and fixes a typo):

- sorted {boolean}: Defaults to true.  If true, tree items are kept in lexical order.  If false, items will be kept in insertion order.

@@ +30,5 @@
>    this._parent = node;
>  
> +  this.emptyText = options.emptyText || "";
> +  this.defaultType = options.defaultType;
> +  this.sorted = options.sorted != false;

I would keep the strict check here just because requires less thinking about undefined values.  Further, I don't see any value to supporting things like { sorted: 0 }.  I don't feel too strongly about it - you can land with or without the change.
Created attachment 8430847
1014923.patch

(In reply to Brian Grinstead [:bgrins] from comment #8)
> Comment on attachment 8430216
> 1014923.patch
> 
> Review of attachment 8430216:
> -----------------------------------------------------------------
> 
> ::: browser/devtools/shared/widgets/TreeWidget.js
> @@ +17,5 @@
> >   *        The container element for the tree widget.
> >   * @param {Object} options
> >   *        - emptyText {string}: text to display when no entries in the table.
> >   *        - defaultType {string}: The default type of the tree items. For ex. 'js'
> > + *        - sorted {boolean}: true if the tree items are inserted in a
> 
> I have a documentation suggestion here (reorganizes and fixes a typo):
> 
> - sorted {boolean}: Defaults to true.  If true, tree items are kept in
> lexical order.  If false, items will be kept in insertion order.
> 
> @@ +30,5 @@
> >    this._parent = node;
> >  
> > +  this.emptyText = options.emptyText || "";
> > +  this.defaultType = options.defaultType;
> > +  this.sorted = options.sorted != false;
> 
> I would keep the strict check here just because requires less thinking about
> undefined values.  Further, I don't see any value to supporting things like
> { sorted: 0 }.  I don't feel too strongly about it - you can land with or
> without the change.
(In reply to Brian Grinstead [:bgrins] from comment #8)
> Comment on attachment 8430216
> 1014923.patch
> 
> Review of attachment 8430216:
> -----------------------------------------------------------------
> 
> ::: browser/devtools/shared/widgets/TreeWidget.js
> @@ +17,5 @@
> >   *        The container element for the tree widget.
> >   * @param {Object} options
> >   *        - emptyText {string}: text to display when no entries in the table.
> >   *        - defaultType {string}: The default type of the tree items. For ex. 'js'
> > + *        - sorted {boolean}: true if the tree items are inserted in a
> 
> I have a documentation suggestion here (reorganizes and fixes a typo):
> 
> - sorted {boolean}: Defaults to true.  If true, tree items are kept in
> lexical order.  If false, items will be kept in insertion order.
> 

Fixed.

> @@ +30,5 @@
> >    this._parent = node;
> >  
> > +  this.emptyText = options.emptyText || "";
> > +  this.defaultType = options.defaultType;
> > +  this.sorted = options.sorted != false;
> 
> I would keep the strict check here just because requires less thinking about
> undefined values.  Further, I don't see any value to supporting things like
> { sorted: 0 }.  I don't feel too strongly about it - you can land with or
> without the change.

Fixed - added back the strict check.
Do you have a link to a recent Try run by chance, Gabriel? :) If not, the link below provides some recommendations.
https://wiki.mozilla.org/Sheriffing/How:To:Recommended_Try_Practices
https://tbpl.mozilla.org/?tree=Try&rev=78fa6d2da786
RyanVM, hopefully the try is okay. There is some test failures due to InstallErrors.
https://hg.mozilla.org/integration/fx-team/rev/ef58cd5dfba9
https://hg.mozilla.org/mozilla-central/rev/ef58cd5dfba9

cygwin/mingw don't provide pstore.h, which is used by the IE profile migration
stuff. This breaks cygwin/mingw firefox builds.

cygwin/mingw don't provide pstore.h, which is used by the IE profile migration
stuff. This breaks cygwin/mingw firefox builds.
Created attachment 143374
don't build IE migration stuff on cygwin

This makes sure IE profile migration stuff is turned on only if there is no
CYGWIN_WRAPPER.
Comment on attachment 143374
don't build IE migration stuff on cygwin

Ben, can you rubber-stamp this?
Created attachment 143376
same patch with proper directories

Same as above, except with proper directories and can be applied from the root
of the tree.
Created attachment 143395
fix more stuff

Forgot to patch browser/components/build/ . This one should work.
Please use ifndef GNU_CC inside the WINNT ifdefs for consistency with other
Makefiles.

Ben, does PSTOREC_DLL need to be defined in both components/build/Makefile.in &
components/migration/src/Makefile.in?
Comment on attachment 143395
fix more stuff

If you're going to remove the IE profile migrator, you need to remove the front
end for it too (in migration.xul/js).... but it seems a little heavy-handed to
remove the entire IE profile migrator when it's only the password import that
is incompatble. Why not be a little more selective with your ifdefs and just
turn off password migration?
(In reply to comment #5)
> Please use ifndef GNU_CC inside the WINNT ifdefs for consistency with other
> Makefiles.
> 
Otherwise patched Version wont compile using MS VC...

Like swalker said, you should be using GNU_CC (or GNU_CXX) to explicitly test
for gcc.  CYGWIN_WRAPPER is not the proper ifdef to use.  CYGWIN_WRAPPER is
always set when building on win32 using cygwin tools (referring to the devel
env, not the compiler).

Is there a better way to get access to that information than using #import? 
http://forums.mozillazine.org/viewtopic.php?t=60412 has some info about how to
possibly extract that information for gcc builds rather than disabling it
completely.
(In reply to comment #6)
> (From update of attachment 143395)
> If you're going to remove the IE profile migrator, you need to remove the front
> end for it too (in migration.xul/js).... but it seems a little heavy-handed to
> remove the entire IE profile migrator when it's only the password import that
> is incompatble. Why not be a little more selective with your ifdefs and just
> turn off password migration?

Probably because you have to turn off history migration, signon list migration
and resolving shortcuts as well.  Anything that relies upon *PStore* is
unavailable.  Does that leave much of anything to be migrated?  Bookmarks perhaps? 

Should we be concerned that the url from the mozillazine thread shows that
pstore functionality requires win2k or winxp ?  

Also, after thinking about the suggestion in the mozillazine thread, if
pstorec.dll was implemented using c++, then loading it wouldn't work anyway
because the ABI is different.  Same reason java doesn't work with gcc builds.

Created attachment 143726
for giggles
Created attachment 143732
proper fix
So I wasn't so far off on my first attempt after all... :-)
Comment on attachment 143732
proper fix

PStore is *only* used for passwords and form data, not History, not Favorites
or any other IE source. I'm not overly concerned though since we don't do
official gccwin releases. sr=ben@mozilla.org  ... some enterprising soul
wishing for this support in gccwin builds can do the finer grained stuff.
Comment on attachment 143732
proper fix

I'd concur with ben's comments, this should ideally be finer grained or someone
should actually figure out how to use typelibs in dll resources with mingw gcc.

But as for this patch, my only suggestion is to make the #define be something
like NO_IE_MIGRATOR rather than HAVE_MINGW.  It just looks weird to have
frontend code be concerned with compiler details.  r=me with that change.
(In reply to comment #14)
> (From update of attachment 143732)
> I'd concur with ben's comments, this should ideally be finer grained or someone
> should actually figure out how to use typelibs in dll resources with mingw gcc.

The 'for giggles' patch _is_ the finer grained version.  As you can see, there's
quite a bit more than just the password functionality is missing.  As it all
doesn't come from pstorec.dll, so figuring out how to use typelibs would only
partially help.  Are typelibs something that's MSVC specific or can we expect
this #import usage to crop up in other parts of the tree?

From the end-user standpoint, if a feature isn't fully implemented (and won't be
anytime soon) and lacks parity with peer builds, wouldn't you want that disabled
rather than giving people the wrong expectations?

The 'proper fix' patch has been checked in with bryner's requested modifications.


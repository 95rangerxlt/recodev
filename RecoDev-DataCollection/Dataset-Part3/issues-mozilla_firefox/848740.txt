The variables view displays [object Proxy] for |window| and for other objects as well. See document.iframes, or document.images and so on. This is confusing for users. We should look into how we can make these show as expected by web page developers - we are currently exposing a part of how our DOM implementation works.

The variables view displays [object Proxy] for |window| and for other objects as well. See document.iframes, or document.images and so on. This is confusing for users. We should look into how we can make these show as expected by web page developers - we are currently exposing a part of how our DOM implementation works.
Jim said he wanted to look into it. An easy way to observe this is to inspect the |window| property of |window|.
this is a bit of a regression from the previous console implementation. Ideally would be nice to have this fixed for the release of 22.

Jim, any idea what's up?
Also, talking with Gijs in IRC this afternoon, is the end-goal for this bug and its deps to allow users to expand into the underlying object the proxy's covering? Ideally for content, we want to make these things invisible/transparent to the user.
(In reply to Rob Campbell [:rc] (:robcee) from comment #3)
> Also, talking with Gijs in IRC this afternoon, is the end-goal for this bug
> and its deps to allow users to expand into the underlying object the proxy's
> covering? Ideally for content, we want to make these things
> invisible/transparent to the user.

This bug is about displaying [object foo] instead of [object Proxy].

Did you see any native proxy that prevents you access to the underlying object? with the variables view, in the web console / debugger.

Even if we display [object Proxy] for the |window| (for example) the underlying object is inspectable: you can see the window props and methods.
*** Bug 866486 has been marked as a duplicate of this bug. ***
Fix with bug 862531 landing.

Fallout from bug 858597, which made switching tabs to/from about:customizing enter/exit customization mode. Because the tab-strip moves when entering/exiting customization mode, if you switch tabs by using your mouse and hold down the mouse button for just a little too long, you can end up accidentally dragging the tab - which then gets detached.

Fallout from bug 858597, which made switching tabs to/from about:customizing enter/exit customization mode. Because the tab-strip moves when entering/exiting customization mode, if you switch tabs by using your mouse and hold down the mouse button for just a little too long, you can end up accidentally dragging the tab - which then gets detached.
I'm not sure we can actually fix this with the current behaviour :\ 

But in general, being able to switch back and forth between about:customizing and any other tab feels really weird to me, since it changes everything about the whole window. So one solution would be to disable interacting with any other tabs, and just allow closing about:customizing (which IIRC was the old original plan).

Thoughts, Madhava?
I think this is a legitimate concern. It might not block landing per se, but it might affect perception. I suspect this case might also be easier to trigger on less powerful machines.
Taking this off the M7 blocker list for now.
Created attachment 819747
shouldn't be able to dnd tabs in customize mode,

So this fixes the issue, as well as the unintentional variant of bug 890319 and the weirdness in bug 879313. All at the cost of tab dnd while in customize mode. I *think* that's OK. Maybe people feel differently, though... in a more elaborate ploy, we could try to store something on the drag transfer data and only refuse to detach tabs if you started dragging them in customize mode.
Comment on attachment 819747
shouldn't be able to dnd tabs in customize mode,

Review of attachment 819747:
-----------------------------------------------------------------

Hey Gijs - this looks OK to me, but what do you say about my idea for reducing duplication?

::: browser/base/content/tabbrowser.xml
@@ +4252,5 @@
>        <handler event="dragstart"><![CDATA[
>          var tab = this._getDragTargetTab(event);
>          if (!tab)
>            return;
> +        let isCustomizing = document.documentElement.getAttribute("customizing") == "true" ||

Perhaps it'd be better to move this logic into a private, read-only field for the tabbrowser binding? That way we can avoid doing this twice.
(In reply to :Gijs Kruitbosch from comment #4)
> So this fixes the issue, as well as the unintentional variant of bug 890319
> and the weirdness in bug 879313. All at the cost of tab dnd while in
> customize mode. I *think* that's OK.

+1 - I think this is a good trade-off, and as an added benefit simplifies the possible interactions quite a bit (we're in the mode to customize widgets - tabs are not widgets).
Created attachment 820247
shouldn't be able to dnd tabs in customize mode,

Sounds good to me!
Created attachment 820248
shouldn't be able to dnd tabs in customize mode,

Sorry, that was sloppy - coalesced the dragstart condition.
Comment on attachment 820248
shouldn't be able to dnd tabs in customize mode,

Review of attachment 820248:
-----------------------------------------------------------------

Yeah, this is good. My brain kinda tweaks looking at "this are customizing", so I *think* I'd prefer "_isCustomizing" instead if you have the time to change it, but it's not too big a deal.

Thanks Gijs!
https://hg.mozilla.org/projects/ux/rev/a5e5a65de58a
https://hg.mozilla.org/mozilla-central/rev/a5e5a65de58a

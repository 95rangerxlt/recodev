Created attachment 8383910
aus-view.xpi

I'm writing some demos for CustomizableUI and ran into this problem.

STR:
1) Install add-on in the attachment.
2) Click on the smiley face. You should see a panel with a select box and button.
3) Click anywhere in the panel. You should see this error in the Browser Console, once per click:

target is null CustomizableUI.jsm:1277

I haven't checked, but it could be that the error only happens because the panel has an internal iframe. While this doesn't appear to break anything, we generally don't allow AMO add-ons to generate errors in the Console.

Created attachment 8383910
aus-view.xpi

I'm writing some demos for CustomizableUI and ran into this problem.

STR:
1) Install add-on in the attachment.
2) Click on the smiley face. You should see a panel with a select box and button.
3) Click anywhere in the panel. You should see this error in the Browser Console, once per click:

target is null CustomizableUI.jsm:1277

I haven't checked, but it could be that the error only happens because the panel has an internal iframe. While this doesn't appear to break anything, we generally don't allow AMO add-ons to generate errors in the Console.
(In reply to Jorge Villalobos [:jorgev] from comment #0)
> I haven't checked, but it could be that the error only happens because the
> panel has an internal iframe. While this doesn't appear to break anything,
> we generally don't allow AMO add-ons to generate errors in the Console.

Yup. But we can just fix this...
Created attachment 8384110
nullcheck target in Australis' panel click detection code,

Writing a test for this is sadly tricky because error messages, though... in any case, the fix is so low-impact that I think we should just land this.
Comment on attachment 8384110
nullcheck target in Australis' panel click detection code,

Review of attachment 8384110:
-----------------------------------------------------------------

::: browser/components/customizableui/src/CustomizableUI.jsm
@@ +1270,5 @@
>  
>      // While keeping track of that, we go from the original target back up,
>      // to the panel if we have to. We bail as soon as we find an input,
>      // a toolbarbutton/item, or the panel:
> +    while (true && target) {

Yes, we should have done this from the beginning.
remote:   https://hg.mozilla.org/integration/fx-team/rev/00d0a9b4b0d4
https://hg.mozilla.org/mozilla-central/rev/00d0a9b4b0d4
Comment on attachment 8384110
nullcheck target in Australis' panel click detection code,

[Approval Request Comment]
Bug caused by (feature/regressing bug #): Australis
User impact if declined: add-ons cause spurious exceptions, don't get correct close handling
Testing completed (on m-c, etc.): on m-c, locally
Risk to taking this patch (and alternatives if risky): none, simple null-check
String or IDL/UUID changes made by this patch: none
https://hg.mozilla.org/releases/mozilla-aurora/rev/4468cc07a26d

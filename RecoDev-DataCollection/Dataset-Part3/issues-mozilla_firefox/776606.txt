The social API feature requests a user's portrait from a provider and sets the portrait to be the CSS list-style-image of an element.

Investigations in bug 773743 found that arbitrary JS execution could be performed within the CSS value, for example:
element.style.listStyleImage = "url(javascript:alert(1))";

Running this code generates a JS error (showing that the JS is being executed) because this code does not have access to |window|. However, https://bugzilla.mozilla.org/show_bug.cgi?id=773743#c9 says that this code is probably running with chrome-privileges, so we shouldn't disregard any potential for risk here.

The social API feature requests a user's portrait from a provider and sets the portrait to be the CSS list-style-image of an element.

Investigations in bug 773743 found that arbitrary JS execution could be performed within the CSS value, for example:
element.style.listStyleImage = "url(javascript:alert(1))";

Running this code generates a JS error (showing that the JS is being executed) because this code does not have access to |window|. However, https://bugzilla.mozilla.org/show_bug.cgi?id=773743#c9 says that this code is probably running with chrome-privileges, so we shouldn't disregard any potential for risk here.
I'll take this. We will need to get this fixed before uplifting the user portrait feature to Firefox 16.
Slight typo in the STR:
element.style.listStyleImage = "url('javascript:alert(1)')";
Created attachment 645900
Patch

With this patch I'm no longer able to reproduce the JS error, and it also now uses the same approach and fallback as the updateProfile function (http://hg.mozilla.org/mozilla-central/file/46bd216c417f/browser/base/content/browser-social.js#l285).
Comment on attachment 645900
Patch

I don't know that the updateProfile code is any better, it doesn't do any extra validation either.

I don't think it's safe to set a chrome xul:image's src to some arbitrary content-supplied value. We certainly don't let that happen for favicons (see shouldLoadFavicon, which checks schemeIs(http[s])). Seems like we should do something similar.
Created attachment 645967
Patch v2

This patch sanitizes the portrait whenever the profile is updated so that we don't have to worry about consumers forgetting to sanitize.
Comment on attachment 645967
Patch v2

>diff --git a/toolkit/components/social/SocialService.jsm b/toolkit/components/social/SocialService.jsm

>   updateUserProfile: function(profile) {

>+      try {
>+        let portraitUri = makeURI(profile.portrait);

Does this work? I don't see makeURI defined anywhere here (it is defined in browser chrome windows via contentAreaUtils.js, but that's not loaded in this module scope).

>+        if (!portraitUri || !(uri instanceof Ci.nsIURI) ||

Similarly, "uri" doesn't seem to be defined (and a null check and instanceof checks are redundant, makeURI will throw if it fails).
Created attachment 646357
Patch v3

Sorry about that earlier patch, this one should be better.
Comment on attachment 646357
Patch v3

Nit: Just get .scheme once rather than calling schemeIs three times (schemeIs is more of an optimization to avoid an unnecessary copy when called from C++, when called in JS through xpconnect the overhead from three function calls+argument conversion outweighs that of the simple getter).
https://hg.mozilla.org/integration/mozilla-inbound/rev/56e0971c81ea
Backed out for test failures in mochitest-oth
https://hg.mozilla.org/integration/mozilla-inbound/rev/83caf3e51946
Created attachment 647458
Test fixes
Pushed test fixes and patch to tryserver:
https://tbpl.mozilla.org/?tree=Try&rev=bd16758f3481
Updated push to tryserver:
https://tbpl.mozilla.org/?tree=Try&rev=2dcbdb058d3f

Landed again:
https://hg.mozilla.org/integration/mozilla-inbound/rev/68e5b042c0f5
Created attachment 648023
Patch for checkin
Backed out since it looks like it's causing leaks:
https://hg.mozilla.org/integration/mozilla-inbound/rev/9a6f3b00a101
I've moved the updating of browser_shareButton.js to bug 780010 while I investigate the leaks that are being reported with those test changes.

Try push:
https://tbpl.mozilla.org/?tree=Try&rev=6a01e9632c15

Pushed to inbound, hopefully it sticks this time:
https://hg.mozilla.org/integration/mozilla-inbound/rev/157026a9b9c6
Created attachment 648520
Updated patch for checkin
https://hg.mozilla.org/mozilla-central/rev/157026a9b9c6

Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9a2pre) Gecko/20070111 Minefield/3.0a2pre ID:2007011107 [cairo]

repro:
1.create a file "test.html" and store it on you C: drive (or any local drive)
2.open the file in Firefox
3.bookmark the page
4.close the page
5.open the page with the bookmark

result in errorconsole:

Error: Component returned failure code: 0x80520012 (NS_ERROR_FILE_NOT_FOUND) [nsIWebNavigation.loadURI]
Source file: chrome://global/content/bindings/browser.xml
Line: 169

Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9a2pre) Gecko/20070111 Minefield/3.0a2pre ID:2007011107 [cairo]

repro:
1.create a file "test.html" and store it on you C: drive (or any local drive)
2.open the file in Firefox
3.bookmark the page
4.close the page
5.open the page with the bookmark

result in errorconsole:

Error: Component returned failure code: 0x80520012 (NS_ERROR_FILE_NOT_FOUND) [nsIWebNavigation.loadURI]
Source file: chrome://global/content/bindings/browser.xml
Line: 169
oops...
repro:

1.create a file "test.html" and store it on you C: drive (or any local drive)
2.open the file in Firefox
3.bookmark the page
4.close the page
5.delete/remove/rename the file test.html
5.open the page with the bookmark
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9a2pre) Gecko/20070112 Minefield/3.0a2pre

I can't seem to reproduce this. Following the instructions exactly I simple get a "File not found" error page.
Oh, I see what's happening. I can only reproduce when loading the bookmark in a new tab. I'm guessing Peter has a pref set or extension that causes this to happen (or just failed to mention that he was opening in a new tab)? Bookmarks end up calling openUILinkIn, which uses browser.js' loadURI for current-window loads, and tabbrowser.loadOneTab for new-tab loads. browser.js' loadURI wraps everything in a try/catch, so the exception thrown from the real loadURI is caught, while loadOneTab calls addTab (which calls loadURIWithFlags which calls loadURI unwrapped), which throws NS_ERROR_FILE_NOT_FOUND. I think tabbrowser.loadURI can probably just safely ignore any exceptions from loadURI in this case, but at the very least it should ignore the rvs that are converted into error pages by nsDocShell::DisplayLoadError (http://bonsai.mozilla.org/cvsblame.cgi?file=mozilla/docshell/base/nsDocShell.cpp&rev=1.820#2818).
(In reply to comment #3)
> I think
> tabbrowser.loadURI can probably just safely ignore any exceptions from loadURI
> in this case, but at the very least it should ignore the rvs that are converted
> into error pages by nsDocShell::DisplayLoadError
> (http://bonsai.mozilla.org/cvsblame.cgi?file=mozilla/docshell/base/nsDocShell.cpp&rev=1.820#2818).
> 

Thanks for the reply Gavin. if we can just ignore _all_ errors returned from loadURI I guess that means we can just wrap the call in a try-catch statement and be done with it. Are there any errors that can be thrown we _may_ want to watch out for do you think?

Created attachment 252349
Patch v1

Patch v1

* Simply add a try-catch block around the |webNavigation.loadURI| call.
Created attachment 252353
Better Patch v1

A better patch v1

* A better patch updated to pass the JST Review spec.
Created attachment 256351
Patch v2.0

Patch v2

* Better than Patch v1 because it doesn't break the implementation comment stating that |loadURIWithFlags| should throw for unknown schemes. With that in mind the catch statement will now catch any other exception but the |NS_ERROR_UNKNOWN_PROTOCOL| exception.
Created attachment 257374
Patch v2.1
Comment on attachment 257374
Patch v2.1

Sorry for the delay here. I think it makes more sense to localize the changes here, and just put a try/catch around loadURIWithFlags in addTab.
Created attachment 280442
Patch v2.2

Patch v2.2

Like so?
Checking in browser/base/content/tabbrowser.xml;
/cvsroot/mozilla/browser/base/content/tabbrowser.xml,v  <--  tabbrowser.xml
new revision: 1.242; previous revision: 1.241
done
Except uncaught exception shown in console, TabOpen event also is not sent. Is it the same bug already fixed or it's another bug in tabbrowser?

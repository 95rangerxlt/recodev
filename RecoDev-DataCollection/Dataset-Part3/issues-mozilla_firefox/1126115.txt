For the ReadingList, it looks like we're going to want fetching/parsing of page summaries to happen on the client-side. This means we also need a way to store it.

Page summaries should include:
* Representative image (specified by page, falling back to screencapture)
* Favicon (using the favicon service, but it currently has limitation that may or may not get in the way)
* Page title
* Page excerpt 

On desktop, this will be used in the sidebar - see bug 1123518. I don't know if Android will want to use this or not, but regardless I think such a module should live in Toolkit.

For the ReadingList, it looks like we're going to want fetching/parsing of page summaries to happen on the client-side. This means we also need a way to store it.

Page summaries should include:
* Representative image (specified by page, falling back to screencapture)
* Favicon (using the favicon service, but it currently has limitation that may or may not get in the way)
* Page title
* Page excerpt 

On desktop, this will be used in the sidebar - see bug 1123518. I don't know if Android will want to use this or not, but regardless I think such a module should live in Toolkit.
On android we already store the page title and excerpt based on the reader mode content:
http://mxr.mozilla.org/mozilla-central/source/mobile/android/chrome/content/Reader.js#218

Our reading list UI on Android doesn't currently have any images.

If you want to follow the same logic for getting an excerpt on desktop, you could pass the page to ReaderMode.jsm to get an article object with an excerpt:
http://mxr.mozilla.org/mozilla-central/source/toolkit/components/reader/ReaderMode.jsm#88

Alternately, if the page is already loaded in a browser and reader mode is enabled, an article object will already be stored with the broweser, and you could just poke in there:
http://mxr.mozilla.org/mozilla-central/source/browser/base/content/content.js#520
Hmm... Social.jsm is also doing this (and gets any supplied image, amongst other things):
https://dxr.mozilla.org/mozilla-central/source/browser/modules/Social.jsm#532

See also some discussion about all this in bug 1123518.

I think we'd be better of extracting this into it's own module, and have ReaderMode and SocialAPI use that, rather than have two differing implementations do it (and potentially twice for the same page).
We're not adding any UI to allow adding arbitrary URLs in v1, which makes this *much* easier.
Mass change of ReadingList bugs, moving to their own component. Filter bugspam on the following quote:

“Reading is to the mind what exercise is to the body.”
― Joseph Addison

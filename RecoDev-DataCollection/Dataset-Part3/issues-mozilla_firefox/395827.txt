We need to provide a WHATWG compliant web application so that users can try out and test our new protocol handling support in M8.  

In M8, there will be a protocol content preference to handle webcal protocol links using the proper URL for this web application. 

Once a user clicks on a webcal link anywhere on the web, they will be presented with a dialog that will ask them what application to open the link with.  Our web application will be among those listed.

I have been tasked with creating such a tool.

The first thing it must be able to do is parse ICAL files (iCalendar RFC 2445). I've seen that there has been several applications and libraries written for PHP that can parse iCalendar.  So, starting there, it was pretty natural to stumble across phpicalendar.

http://sourceforge.net/projects/phpicalendar/

It is GNU GPL licensed.  So, I downloaded it and started looking at leveraging their parser code.  But, the more I stare at this the more I wonder, "why don't we just use the whole thing".

Here's my idea:
Host the phpicalendar application someplace.
Remove the "local" calendars
Edit it so that it will work with the WHATWG interaction and registration properly.
Test it to ensure that when someone clicks on a webcal URL the resulting ICS is properly displayed, and when that person (or someone else) clicks on a webcal URL, the previous information is not displayed.  Basically, we want to remove all persistence from the application and make it merely a viewer.

We need to provide a WHATWG compliant web application so that users can try out and test our new protocol handling support in M8.  

In M8, there will be a protocol content preference to handle webcal protocol links using the proper URL for this web application. 

Once a user clicks on a webcal link anywhere on the web, they will be presented with a dialog that will ask them what application to open the link with.  Our web application will be among those listed.

I have been tasked with creating such a tool.

The first thing it must be able to do is parse ICAL files (iCalendar RFC 2445). I've seen that there has been several applications and libraries written for PHP that can parse iCalendar.  So, starting there, it was pretty natural to stumble across phpicalendar.

http://sourceforge.net/projects/phpicalendar/

It is GNU GPL licensed.  So, I downloaded it and started looking at leveraging their parser code.  But, the more I stare at this the more I wonder, "why don't we just use the whole thing".

Here's my idea:
Host the phpicalendar application someplace.
Remove the "local" calendars
Edit it so that it will work with the WHATWG interaction and registration properly.
Test it to ensure that when someone clicks on a webcal URL the resulting ICS is properly displayed, and when that person (or someone else) clicks on a webcal URL, the previous information is not displayed.  Basically, we want to remove all persistence from the application and make it merely a viewer.
Created attachment 282307
Patch to remove unwanted UI and customize settings 

These changes do the following:
1. Create a config.inc.php file which configures the options that are used when the program is run
2. Removes the sidebar options inviting the user to explore other default calendars
3. Allows the calendar to handle webcal links without caching them (via config settings).

I think these are all the changes that we need in order to be ready to stage this simple application for QA testing.

Note that the webcal link/protocol interaction must transform a given webcal link into this form: http://<server>/phpicalendar/<day|week|month|year>.php?cal=<webcal link>

Where <webcal link> is an address of the form: webcal://<server>/<icsfile>

We can probably configure the utility to always display month or week view by default, which ever seems appropriate.
Comment on attachment 282307
Patch to remove unwanted UI and customize settings 

Looks good, but make the config changes to the default file and remove the non-default config.

There's pw info in there as well that we'll want to get rid of.

Let's get a patch up with no config.inc.php.  Does that make sense?
(In reply to comment #2)
> (From update of attachment 282307 [details])
> Looks good, but make the config changes to the default file and remove the
> non-default config.
> 
I'll see if that works.  I generated the "config.inc.php" since I was following directions on the README file for tweaking the configuration.

> There's pw info in there as well that we'll want to get rid of.
>
Sure.


Created attachment 283086
Addresses comments

Okay, using the default config, and removed pw stuff from it.  Also removed the config.inc.php file.

Let me know how this looks...
clint-talberts-computer:~/code/webtools/protocol clint$ svn commit -m "Bug 395827 - Web Service for Protocol Handling Code Changes Reviewer morgamic" trunk
Enter passphrase for key '/Users/clint/.ssh/id_dsa': 
Sending        trunk/config.inc-dist.php
Sending        trunk/day.php
Sending        trunk/default_config.php
Sending        trunk/functions/ical_parser.php
Sending        trunk/functions/list_functions.php
Sending        trunk/month.php
Sending        trunk/templates/default/calendar_nav.tpl
Sending        trunk/templates/default/sidebar.tpl
Sending        trunk/templates/default/sidebar_year.tpl
Transmitting file data .........
Committed revision 7267.

Checked in patch.


I think this bug has served its purpose. The next plan is to open an IT bug and get this code onto a staging server.  Morgamic, can you update this bug with a link to the "staging bug"?


Marking this as "Fixed".
On it.
Hey, you guys were cc'd on the staging bug, which is 398812.  The URL needs to be fixed, will reopen the IT ticket for that.

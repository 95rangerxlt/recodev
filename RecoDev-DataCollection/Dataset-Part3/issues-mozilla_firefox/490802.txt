(Normally this bug is for Download Manager, but I can't find it in the Component, so I put this bug in General)

I've just found that whenever we download a file, two temporary files are actually created!
1. A temporary file (with the .PART extension) is created in the indicated location by user
2. Another temporary file is created in C:\Windows\Temp

This problem is independent of the destination disk indicated by user.  Even if I indicated to save the file in drive C:, the second temp file is still created.

Problem:
We'll run into system disk space problem (normally C:), esp. if the indicated location is in C: as well, as we actually need twice the necessary space as we would have thought.

BTW, I suppose this problem concerns all Windows NT-based O/S.

I marked this bug severity as MAJOR because unaware users will run into potential disk saturation problem, in some situation might need to system crash.

(Normally this bug is for Download Manager, but I can't find it in the Component, so I put this bug in General)

I've just found that whenever we download a file, two temporary files are actually created!
1. A temporary file (with the .PART extension) is created in the indicated location by user
2. Another temporary file is created in C:\Windows\Temp

This problem is independent of the destination disk indicated by user.  Even if I indicated to save the file in drive C:, the second temp file is still created.

Problem:
We'll run into system disk space problem (normally C:), esp. if the indicated location is in C: as well, as we actually need twice the necessary space as we would have thought.

BTW, I suppose this problem concerns all Windows NT-based O/S.

I marked this bug severity as MAJOR because unaware users will run into potential disk saturation problem, in some situation might need to system crash.
Download steps follow this pattern:

1) Placeholder file ($P) is created in %TEMP%
2) $P is passed to the download code (which is treated internally as a plugin)
3) Final file ($F) is opened as a 0-byte file at the download folder location
4) $P is moved to the download folder and renamed with a ".part" extension
5) Permissions are set on $P (after bug fix)
6) When download completes, $F is deleted
7) $P is renamed to remove the ".part"

I don't see how there would be any disk saturation problems with this since the whole file is only saved out once. (Granted our download process for files is a little crazy, but there are other bugs for that.)

I think this can be closed out as WFM, or invalid.
Also note that $P is first created in %TEMP%, and later moved to the final destination (possibly on a different disk), so that the download can already start while the user is still choosing the destination in a dialog box (between point 2 and 3). That is, point 4 is not moving a 0-byte file, but a file which already has data in it, possibly even the complete file.

I just want to clarify that, if you see such a $P in %TEMP% that has clearly has a size > 0.

In theory, it's possible to run out of diskspace if %TEMP% is not large enough to hold the whole file, and the user doesn't choose a final destination (on a different, larger disk) fast enough. That's at least one of the bugs that Jim is referring to.
I don't want to raise this bug to a theory-vs-practice battle, but the bug is there, what could I say??  Why don't you try it yourself first before looking into theory?

See, you could try to download "Microsoft Office 2007 SP2" at this URL:
http://www.microsoft.com/downloads/details.aspx?FamilyId=B444BF18-79EA-46C6-8A81-9DB49B4AB6E5&displaylang=en

Press the "Download" button and you'll have a 330MB file.  That should be big enough for you to see the effect.

Just save it to another disk and check your c:\Windows\Temp.  For me, there's this HTTxxxx.tmp file inside.  xxxx is apparently some random code.

Oh, one more point, I said c:\Windows\Temp, but not %TEMP%.  My user-level %TEMP% is pointing to my "temp" folder within "Document and settings\....", but it seems like FF is using system-level %TEMP% which is pointing to c:\Windows\Temp
i don't want to get into a how to use bugzilla contest, but why didn't you search?

please don't bother us. we're all volunteers and you were not helping by not looking for the bug you encountered.

*** This bug has been marked as a duplicate of bug 69938 ***
Hey, I HAD SEARCHED!!!!!

I used the key words "double temp" and similar but none came up.  And your bug, too long to read through, doesn't seem in first glance to be the same as mine as it's not about double temp file.
The download currently starts in %TEMP%, but as soon as the destination is known the file is moved to that location, removing it from %TEMP%.
(But it is still also saved in the cache, but that is another issue).
Alfred, any particular reason this bug was set as FIXED? Was there another bug that fixed it?

Error: undefined passed where a value is required
Stack trace:
identityWrite@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/server/protocol.js:116:1
RetVal<.write@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/server/protocol.js:530:12
Response<.write/<@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/server/protocol.js:683:1
Response<.write@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/server/protocol.js:681:23
actorProto/</handler/sendReturn@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/server/protocol.js:1016:24
Handler.prototype.process@resource://gre/modules/Promise.jsm -> resource://gre/modules/Promise-backend.js:867:23
this.PromiseWalker.walkerLoop@resource://gre/modules/Promise.jsm -> resource://gre/modules/Promise-backend.js:746:7
this.PromiseWalker.scheduleWalkerLoop/<@resource://gre/modules/Promise.jsm -> resource://gre/modules/Promise-backend.js:688:37
Promise*this.PromiseWalker.scheduleWalkerLoop@resource://gre/modules/Promise.jsm -> resource://gre/modules/Promise-backend.js:688:5
this.PromiseWalker.schedulePromise@resource://gre/modules/Promise.jsm -> resource://gre/modules/Promise-backend.js:709:7
Promise.prototype.then@resource://gre/modules/Promise.jsm -> resource://gre/modules/Promise-backend.js:417:5
actorProto/</handler/<@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/server/protocol.js:1036:18
Actor<._queueResponse@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/server/protocol.js:913:20
actorProto/</handler@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/server/protocol.js:1035:9
DSC_onPacket@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/server/main.js:1456:15
LocalDebuggerTransport.prototype.send/<@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/transport/transport.js:561:11
makeInfallible/<@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/DevToolsUtils.js:82:14
makeInfallible/<@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/DevToolsUtils.js:82:14


I'm trying to find common.css which is in use on this page, but it doesn't seem to be shown, either.

I *think* this used to work. Not sure when/why it broke.

Error: undefined passed where a value is required
Stack trace:
identityWrite@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/server/protocol.js:116:1
RetVal<.write@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/server/protocol.js:530:12
Response<.write/<@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/server/protocol.js:683:1
Response<.write@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/server/protocol.js:681:23
actorProto/</handler/sendReturn@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/server/protocol.js:1016:24
Handler.prototype.process@resource://gre/modules/Promise.jsm -> resource://gre/modules/Promise-backend.js:867:23
this.PromiseWalker.walkerLoop@resource://gre/modules/Promise.jsm -> resource://gre/modules/Promise-backend.js:746:7
this.PromiseWalker.scheduleWalkerLoop/<@resource://gre/modules/Promise.jsm -> resource://gre/modules/Promise-backend.js:688:37
Promise*this.PromiseWalker.scheduleWalkerLoop@resource://gre/modules/Promise.jsm -> resource://gre/modules/Promise-backend.js:688:5
this.PromiseWalker.schedulePromise@resource://gre/modules/Promise.jsm -> resource://gre/modules/Promise-backend.js:709:7
Promise.prototype.then@resource://gre/modules/Promise.jsm -> resource://gre/modules/Promise-backend.js:417:5
actorProto/</handler/<@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/server/protocol.js:1036:18
Actor<._queueResponse@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/server/protocol.js:913:20
actorProto/</handler@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/server/protocol.js:1035:9
DSC_onPacket@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/server/main.js:1456:15
LocalDebuggerTransport.prototype.send/<@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/transport/transport.js:561:11
makeInfallible/<@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/DevToolsUtils.js:82:14
makeInfallible/<@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/DevToolsUtils.js:82:14


I'm trying to find common.css which is in use on this page, but it doesn't seem to be shown, either.

I *think* this used to work. Not sure when/why it broke.
Oh, hm, maybe this error is more relevant:

"Protocol error (unknownError): Error: Request failed with status code = 2152857618 after NetUtil.asyncFetch2 for url = chrome://mozapps/content/preferences/preferences.css"

?
(that URL is wrong... I wonder how it gets created...)
I'm investigating this a little bit right now, and found a way to prevent the problem. With my fix the weird "chrome://mozapps/content/preferences/preferences.css" stylesheet that Gijs mentioned still appears in the list, but at least the UI finishes the loading phase and the throbber is removed.
The stylesheets actors and UI just miss a few conditions for when things don't go as expected, to avoid the UI from being in a broken state.

Just checked with FF37, the bug doesn't appear in the same way, but it does occur anyway. The same error is logged in the console, and an error message banner appears in the UI, above the toolbox, saying: "Style sheet could not be loaded. chrome://mozapps/content/preferences/preferences.css".

So this problem has been here for some time, but something changed recently that made this problem more noticeable.

Worth noting that preferences.css appears twice in the list with my fix, once with the incorrect URL (mozapps...) and once again as "chrome://browser/skin/preferences/preferences.css" which I'm guessing is the correct one.
(In reply to Patrick Brosset [:pbrosset] [:patrick] from comment #3)
> Worth noting that preferences.css appears twice in the list with my fix,
> once with the incorrect URL (mozapps...) and once again as
> "chrome://browser/skin/preferences/preferences.css" which I'm guessing is
> the correct one.

Does this still happen if you uncheck the 'show original sources' option in the options cog?  With source mapped sheets, two sheets exist (although of course one is ordinarily removed from the UI).
(In reply to Brian Grinstead [:bgrins] from comment #4)
> Does this still happen if you uncheck the 'show original sources' option in
> the options cog?  With source mapped sheets, two sheets exist (although of
> course one is ordinarily removed from the UI).
Yes it still happens with the option unchecked.
(In reply to Patrick Brosset [:pbrosset] [:patrick] from comment #3)
> So this problem has been here for some time, but something changed recently
> that made this problem more noticeable.

That'd be my fault. I made the initialization to chain all promises together and thus any uncaught rejection will abort the Task. Previously nobody cared about the uncaught promises or really anything else that happened. The whole process of adding style sheets was more like "fire and forget" kind of deal.

Rejections and other errors should probably be handled at _addStyleSheet [1] level i.e. if that rejects, show the "failed to load..." error in the UI, log a message and continue like nothing happened.

[1] https://dxr.mozilla.org/mozilla-central/source/browser/devtools/styleeditor/StyleEditorUI.jsm#242
(In reply to Patrick Brosset [:pbrosset] [:patrick] from comment #3)
> Worth noting that preferences.css appears twice in the list with my fix,
> once with the incorrect URL (mozapps...) and once again as
> "chrome://browser/skin/preferences/preferences.css" which I'm guessing is
> the correct one.

No, there are 2 stylesheets called preferences.css - one under browser, one under toolkit. (I mean, there are still more because of the different platforms and incontent vs. non-incontent preferences, but I digress). chrome://global/skin/preferences.css is an extant URL in beta, at least, so I expect that's really what it means.

If I had to guess I would assume that relative URLs from XBL stylesheets somehow get the wrong URI. This might be an issue that only started showing up after I added XBL stylesheets to the style editor not-too-long-ago, though really http://mxr.mozilla.org/mozilla-central/source/toolkit/content/widgets/preferences.xml#1173 has an absolute URL so I don't know why/how it gets mangled.
Another page exhibits a similar problem: about:plugins
Created attachment 8595989
MozReview Request: bz://1156767/pbrosset

/r/7429 - Bug 1156767 - Report error message and continue loading other stylesheets even when a stylesheet fails; r=bgrins

Pull down this commit:

hg pull -r 8f98a25ae1ac4a796ae050125dc93ce2280a474c https://reviewboard-hg.mozilla.org/gecko/
Comment on attachment 8595989
MozReview Request: bz://1156767/pbrosset

https://reviewboard.mozilla.org/r/7427/#review6201

Thanks, this looks good

::: browser/devtools/styleeditor/test/browser_styleeditor_missing_stylesheet.js:14
(Diff revision 1)
> +  ok(ui.editors.length, "The UI contains style sheets.");

Can you check an exact length?  Are we expecting 1 or 2 here
(In reply to Brian Grinstead [:bgrins] from comment #10)
> > +  ok(ui.editors.length, "The UI contains style sheets.");
> 
> Can you check an exact length?  Are we expecting 1 or 2 here
As discussed on IRC, I can't really expect an exact length here because right now, the list contains UA styles too, and I'd like to avoid hard-coding the number of UA stylesheets in this test.
UA styles are shown because, in order to hit the problem described in this bug, I have to load the test page with chrome://, and not http://, and right now, UA styles are shown for chrome pages.
What I can do though, is add a comment about this in the test.
Also, to come back to the original problem, Gijs mentioned that some stylesheets were missing. Let's handle this problem in bug 1157292, and keep this bug to fix the style-editor UI.
https://treeherder.mozilla.org/#/jobs?repo=try&revision=73d8c71616e5
https://hg.mozilla.org/integration/fx-team/rev/6d160cfb8bbf
https://hg.mozilla.org/mozilla-central/rev/6d160cfb8bbf
Comment on attachment 8595989
MozReview Request: bz://1156767/pbrosset
Created attachment 8620100
MozReview Request: Bug 1156767 - Report error message and continue loading other stylesheets even when a stylesheet fails; r=bgrins

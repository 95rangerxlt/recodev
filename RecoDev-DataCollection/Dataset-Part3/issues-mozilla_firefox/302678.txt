If the dowload, extension or theme manager is opened and there is an empty list,
the accessibility APIs fire a focus event for the window itself, rather than a
control within it.

At that point focus should be on the list itself.

If the dowload, extension or theme manager is opened and there is an empty list,
the accessibility APIs fire a focus event for the window itself, rather than a
control within it.

At that point focus should be on the list itself.
Created attachment 191247
1) Create accessible for node that gets focus, not anon scrollbox, 2) Remove redundant code from nsXULListboxAccessible -- we already handle STATE_FOCUSABLE in nsAccessible::GetState()
Comment on attachment 191247
1) Create accessible for node that gets focus, not anon scrollbox, 2) Remove redundant code from nsXULListboxAccessible -- we already handle STATE_FOCUSABLE in nsAccessible::GetState()

Looks ok but I'd appreciate if you could lumber some other peer with the job of
verifying that you don't break anything.
Checking in toolkit/content/widgets/richlistbox.xml;
/cvsroot/mozilla/toolkit/content/widgets/richlistbox.xml,v  <--  richlistbox.xml
new revision: 1.13; previous revision: 1.12
done
Checking in accessible/src/xul/nsXULSelectAccessible.cpp;
/cvsroot/mozilla/accessible/src/xul/nsXULSelectAccessible.cpp,v  <-- 
nsXULSelectAccessible.cpp
new revision: 1.27; previous revision: 1.26
done
Checking in accessible/src/xul/nsXULSelectAccessible.h;
/cvsroot/mozilla/accessible/src/xul/nsXULSelectAccessible.h,v  <-- 
nsXULSelectAccessible.h
new revision: 1.22; previous revision: 1.21
done


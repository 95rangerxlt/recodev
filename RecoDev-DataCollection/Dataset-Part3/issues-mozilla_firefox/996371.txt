Created attachment 8406544
Screenshot

This is related to bug 961958. See attached screenshot.

Created attachment 8406544
Screenshot

This is related to bug 961958. See attached screenshot.
(Ignore the blue outline around the icon, i managed to enable the narrator without knowing when taking the screenshot)
Created attachment 8406587
updated 7zSD.sfx with dpiAware in the manifest

Tim, this adds the following to the manifest to fix this bug

<application xmlns="urn:schemas-microsoft-com:asm.v3"><windowsSettings>
<dpiAware xmlns="http://schemas.microsoft.com/SMI/2005/WindowsSettings">true</dpiAware>
</windowsSettings>
</application>
You can apply the patch to see the changes using resource hacker.
Out of curiosity, how are you modifying/generating the 7zSD.sfx file?
I'm updating the in tree 7zSD.sfx file using resource hacker.

When I need to generate a new one I use MSVC6 so the binary will run on older OS's without the dependencies required by newer versions of MSVC. As a side effect MSVC6 also reproduces a smaller binary.
http://www.angusj.com/resourcehacker/
Comment on attachment 8406587
updated 7zSD.sfx with dpiAware in the manifest

Review of attachment 8406587:
-----------------------------------------------------------------

Sorry this review took a little while; I'm hesitant to install and run freeware that 1) I can't build from source and 2) is from a publisher that I don't already have to trust.

I happened to have a Win7 VM around so I installed "Resource Hacker" on that and verified that the manifest does now contain the items mentioned in comment 2.

I haven't verified whether that is the only change introduced by this patch; "Resource Hacker" doesn't have a very useful interface for doing that kind of analysis.

Given the current state of privacy on the internet and the fact that we differentiate ourselves by being verifiable [1], it's kind of unfortunate that we have this binary blob in the tree and that the only way to view and modify it is to use third-party closed-source software from a publisher that is not already implicitly trusted. I doubt there's an easy workaround or else we'd already be doing that, but maybe it would be worth filing a bug or adding a readme file explaining why this exists in its current form. I can file the bug if you'd like.

[1] https://brendaneich.com/2014/01/trust-but-verify
True though I would also say that is true of the closed source tools we use when building as well as packaging. There is no easy workaround and the hard workaround at this time would be to have MSVC6 for our build systems and for repackaging as well in order to get to the state we want. I think the status quo of using the binary which has been the case since Firefox had an installer is the way forward at this time though if you or anyone else can come up with a reasonable way to handle this by all means let's do it.

You can also view the binary diff of the original sfx and the new sfx and see that the changes to the binary file are to say the least minimal to the header of the file along with the manifest changes at the end of the file.

Also, I haven't looked for other resource modification utilities and I wouldn't be surprised if there is an open source one available.
Pushed to fx-team
https://hg.mozilla.org/integration/fx-team/rev/b2c7cadebd0f
How much bigger would that file be if it you built it with msvc10 against the static CRT?
It has been a while since I have done that but iirc it was deemed not worthwhile (e.g. the amount of work required was greater than the return) to do if for no other reason than repackaging would have to be reworked since localizers have a requirement not to compile.
https://hg.mozilla.org/mozilla-central/rev/b2c7cadebd0f

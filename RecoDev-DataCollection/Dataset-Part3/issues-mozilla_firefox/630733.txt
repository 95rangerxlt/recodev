User-Agent:       
Build Identifier: 4.0bpre11

The web console does not report the server response's headers in case of 301, 302 and 304 server responses but that of the subsequent request instead.

Reproducible: Always

Steps to Reproduce:
1. open web console
2. click at 301, 302 and/or 303 link on http://www.vogtner.de/header/
3. inspect server response
Actual Results:  
Web console displays response headers of the subsequent request's servers response, (a 404 response).

Expected Results:  
Display headers of response to the initial request (i.e. Location header).

maybe related to Bug 599725

User-Agent:       
Build Identifier: 4.0bpre11

The web console does not report the server response's headers in case of 301, 302 and 304 server responses but that of the subsequent request instead.

Reproducible: Always

Steps to Reproduce:
1. open web console
2. click at 301, 302 and/or 303 link on http://www.vogtner.de/header/
3. inspect server response
Actual Results:  
Web console displays response headers of the subsequent request's servers response, (a 404 response).

Expected Results:  
Display headers of response to the initial request (i.e. Location header).

maybe related to Bug 599725
Confirmed. This seems to be really a bug, good find! Thanks for the report and for the nice test location!

This bug is definitely related to bug 599725 and I may have a hunch for what is happening. I hope to have a patch soon.
Created attachment 509803
proposed fix

Proposed fix and mochitest.

The problem is caused by the code that tries to find the response headers from the httpResponseExaminer. The ResponseListener onStopRequest() method used the aRequest argument to find the associated list of headers that come from httpResponseExaminer. The httpActivity starts with the request channel of the 301 Moved Permanently request, and it ends in onStopRequest() with the channel of the 404 Not Found request, due to the redirect. The solution is to use the already stored httpActivity.channel, which still points to the 301 request channel - this way we can properly map from the ResponseListener.onStopRequest() method to the headers stored by the httpResponseExaminer.
Looks good. A small issue remains: If you enable "Log Request and Response Body" the 30x request lists the 404's response body as its own.
Comment on attachment 509803
proposed fix

-      if (item.channel === aRequest) {
+      if (item.channel === this.httpActivity.channel) {

This is it, huh? Were we not matching aRequest to an item's channel previously?

No comments on the tests. They look fine.

You should run this through try server on all platforms if you haven't already. F+ with good results there.
(In reply to comment #4)
> Comment on attachment 509803 [details]
> proposed fix
> 
> -      if (item.channel === aRequest) {
> +      if (item.channel === this.httpActivity.channel) {
> 
> This is it, huh? Were we not matching aRequest to an item's channel previously?

Yep.

> No comments on the tests. They look fine.
> 
> You should run this through try server on all platforms if you haven't already.
> F+ with good results there.

Thanks for the feedback+! Will push the updated patch to the try server, and post the results here.

I am going to update the patch to solve the second issue reported by Stefan - the body... :)
Created attachment 510028
[checked-in] updated patch

Updated the patch. Now for redirect requests we do not show any body, even if body logging is enabled. We do this because the response listener always gets the data from the redirect target request - there seems nothing I can do to get the "original data" (the data coming from the redirect request). It seems things are handled at a lower level in Gecko. Chromium's Web Inspector also does not show the content for redirect requests, and Firebug also fails to do it. So, that seems to be a pattern. ;)

Let me know if this patch is fine. I am going to push it to the try server now.
Results are looking good:

http://tbpl.mozilla.org/?tree=MozillaTry&rev=a1490a107897

No test failures in the Web Console.

Builds and logs:

http://ftp.mozilla.org/pub/mozilla.org/firefox/tryserver-builds/mihai.sucan@gmail.com-a1490a107897/
Comment on attachment 510028
[checked-in] updated patch

-      if (item.channel === aRequest) {
+      if (item.channel === this.httpActivity.channel) {

Didn't I see this in another bug already?

Looks good.
(In reply to comment #8)
> Comment on attachment 510028 [details]
> updated patch
> 
> -      if (item.channel === aRequest) {
> +      if (item.channel === this.httpActivity.channel) {
> 
> Didn't I see this in another bug already?

Yes, you did see this, in this bug, actually. In an older version of the patch.

I updated the patch to also cover the problem reported in comment #3. Hence, I asked for feedback again (there have been quite some changes).

> Looks good.

Thanks for the feedback+!
Comment on attachment 510028
[checked-in] updated patch

Asking for review from Dolske.
Comment on attachment 510028
[checked-in] updated patch

rs=me
Thanks for the review+ and approval, Dolske!
Comment on attachment 510028
[checked-in] updated patch

http://hg.mozilla.org/mozilla-central/rev/d50fdfb0426d

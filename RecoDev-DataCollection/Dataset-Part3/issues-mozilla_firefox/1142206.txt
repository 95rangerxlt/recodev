Created attachment 8576176
css-t2.html

Open the attached HTML and then open the inspector.

In the rule view, the variable definition has a line through it.
This seems incorrect.  Instead, I think the variable should only
have a line through it if it is truly invalid in some way; for example
either it has an unparseable value, or perhaps if it participates in
a use/definition cycle.

Created attachment 8576176
css-t2.html

Open the attached HTML and then open the inspector.

In the rule view, the variable definition has a line through it.
This seems incorrect.  Instead, I think the variable should only
have a line through it if it is truly invalid in some way; for example
either it has an unparseable value, or perhaps if it participates in
a use/definition cycle.
Created attachment 8576248
do not add ruleview-hidden class to CSS variable definition

This patch fixes the bug by simply checking to see if the property in
question is a CSS variable definition.
Oops, I was too hasty requesting review.  Somehow between filing this and hacking
on it I forgot that I still wanted to make the variable display as invalid if
it has some problem.  How embarrassing.
Created attachment 8634912
let GetSubpropertiesForCSSProperty handle custom property

Here's a new version that actually works.

This changes inDOMUtils::GetSubpropertiesForCSSProperty to treat
custom properties like other properties.
Comment on attachment 8634912
let GetSubpropertiesForCSSProperty handle custom property

Not sure if this requires two reviews; but just in case, one for the
inDOMUtils change and one for the test case.
Comment on attachment 8634912
let GetSubpropertiesForCSSProperty handle custom property

Review of attachment 8634912:
-----------------------------------------------------------------

r=me on the inDOMUtils.cpp changes with the following:

::: layout/inspector/inDOMUtils.cpp
@@ +627,2 @@
>      return NS_ERROR_FAILURE;
> +  } else if (propertyID == eCSSPropertyExtra_variable) {

Make this a separate if statement (like the one below) rather than an else if.
Comment on attachment 8634912
let GetSubpropertiesForCSSProperty handle custom property

Review of attachment 8634912:
-----------------------------------------------------------------

::: browser/devtools/styleinspector/test/browser_ruleview_custom.js
@@ +28,5 @@
> +function* removeTestContent(inspector, node) {
> +  let onMutated = inspector.once("markupmutation");
> +  node.remove();
> +  yield onMutated;
> +}

The createTestContent and removeTestContent functions rely on CPOWs a lot:
- 'content' is used,
- addStyle is used which manipulated nodes in content,
- innerHTML
- node.remove();

This works, but we're trying to move away from it because:
- the e10s people say it's bad and warnings are emitted in the logs when we do use CPOWs,
- there's an ongoing devtools effort to try and run tests remotely on simulators or distant devices where direct access to content through CPOWs is just not possible.

I suggest creating a new HTML test page in the test directory, reference it in browser.ini and load it here instead.
This page could contain several nodes so that you can select each one, in turn, before running the next test step.
Created attachment 8635408
let GetSubpropertiesForCSSProperty handle custom property

Updated per review.
Comment on attachment 8635408
let GetSubpropertiesForCSSProperty handle custom property

Sorry about that Patrick.
This one should be cleaner.
https://treeherder.mozilla.org/#/jobs?repo=try&revision=859b8ae72959
https://treeherder.mozilla.org/#/jobs?repo=try&revision=23cffa5f22e1
Created attachment 8636043
let GetSubpropertiesForCSSProperty handle custom property

Rebased.
Created attachment 8636170
let GetSubpropertiesForCSSProperty handle custom property

Fix test failure.
https://treeherder.mozilla.org/#/jobs?repo=try&revision=f582aadc38a3
Comment on attachment 8636170
let GetSubpropertiesForCSSProperty handle custom property

Testing revealed that I had missed layout/inspector/tests/test_bug1046140.html.
That test, naturally, comes from bug 1046140.  It turns out that this patch
essentially rewrites the same code as that patch to do something else.

Modifying that test case in-place seemed a bit odd, since the bug number is
baked into the test filename, but I would be modifying the test to do something
totally different.

So, I chose to remove the test and instead put a little addition into a
related test.

Requesting re-review in case this isn't the normal thing to do.
https://treeherder.mozilla.org/#/jobs?repo=try&revision=099e44297e9a
https://treeherder.mozilla.org/#/jobs?repo=try&revision=e74cde4b500d
Comment on attachment 8636170
let GetSubpropertiesForCSSProperty handle custom property

Review of attachment 8636170:
-----------------------------------------------------------------

Replacing test_bug1046140.html with the addition to test_bug1006595.html is fine.  r=me on the layout/ changes.
Created attachment 8636321
let GetSubpropertiesForCSSProperty handle custom property

Forgot to update mochitest.ini.
Comment on attachment 8636321
let GetSubpropertiesForCSSProperty handle custom property

Carrying over r+
https://hg.mozilla.org/integration/fx-team/rev/0743be2712b6
https://hg.mozilla.org/mozilla-central/rev/0743be2712b6
*** Bug 1126702 has been marked as a duplicate of this bug. ***

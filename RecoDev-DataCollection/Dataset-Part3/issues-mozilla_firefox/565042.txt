According to new agreements on the WAI-ARIA working group, if an application has more than one toolbar, they must (by the RFC definition of must) have accessible names to properly discern them from one another. This bug, along with bug 565029, will provide that functionality.

According to new agreements on the WAI-ARIA working group, if an application has more than one toolbar, they must (by the RFC definition of must) have accessible names to properly discern them from one another. This bug, along with bug 565029, will provide that functionality.
Created attachment 444663
Adds an accessible name via aria-label

Since the tabs toolbar doesn't have a toolbarname attribute, adding an accessible name via aria-label instead. aria-label takes a literal string that gets converted into the name screen readers speak when speaking the container information for a toolbar item (or tab in this case).
(In reply to comment #0)
> According to new agreements on the WAI-ARIA working group, if an application
> has more than one toolbar, they must (by the RFC definition of must) have
> accessible names to properly discern them from one another.

How is "toolbar" defined in that context?
(In reply to comment #2)
> (In reply to comment #0)
> > According to new agreements on the WAI-ARIA working group, if an application
> > has more than one toolbar, they must (by the RFC definition of must) have
> > accessible names to properly discern them from one another.
> 
> How is "toolbar" defined in that context?

http://www.w3.org/WAI/PF/aria/roles#toolbar

It is subject to interpretation, but the spirit of it is something along the
lines of 'a container for frequently used actionable thingies'. Marco can you
describe the impact of your patch for users?
(In reply to comment #3)
> Marco can you describe the impact of your patch for users?

When a user tabs around the Firefox UI, what they hear now is:

"Toolbar. Search Bookmarks and History EditCombo."

When they continue to tab, the next thing they'll hear is:

"Search using Google textbox"

This is because these two are iwithin the same toolbar. Next press of Tab will yield:

"Toolbar. Tabs. Bug 565042 - Add an accessibleName for the tabs toolbar. tab."

The "toolbar" announcement will change to:

"Tabs toolbar".

Likewise, if bug 565029 is fixed, the first instance of "toolbar" will change to "Navigation toolbar".

The second announcement of "Tabs." in that last example is because the xul:tabs item has no accessible name either. I am not sure yet whether it should get one, like "current tabs" or the like, so the user knows what tabs are actually being displayed (if these can be filtered).

So screen readers use a focus ancestry of containers to give contextual information.
(In reply to comment #4)
> (In reply to comment #3)
> "Tabs toolbar".

Wouldn't "Browser tabs" or something be better?
(In reply to comment #5)
> (In reply to comment #4)
> > "Tabs toolbar".
> Wouldn't "Browser tabs" or something be better?

Good point! I can correct that locally if need be before landing.

Or if there are any better suggestions still, I'm open to them!
Landed on 1.9.3: http://hg.mozilla.org/mozilla-central/rev/fc6872806670

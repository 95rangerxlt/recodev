User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 5.1; de-DE; rv:1.9.0.1) Gecko/2008070208 Firefox/3.0.1
Build Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.1; de-DE; rv:1.9.0.1) Gecko/2008070208 Firefox/3.0.1

Obviously the cache is ignored for dynamically rendered but cached images, referenced in dynamically generated image elements.
The images appear in about:cache under Disk cache device.

We have the following situation:

A list of image elements is generated dynamically based on the current javascript data model (see createImageList() and createTemplateImage() in the code snippet).

---- Start Code Snippet ---
/**
  Remove current image elements and create new image elements based on the template model.
*/
TemplateCarousel.prototype.createImageList = function() {
	var selectorElement = document.getElementById('selector'+this.id);

	// delete all child image nodes
	while (selectorElement.hasChildNodes()) { 
		selectorElement.removeChild( selectorElement.lastChild ); 
	}

	// create image elements
	for ( i = 0; i <= this.templates.length; i++) {
		this.createTemplateImage(selectorElement, this.templates[i]);
	}
}

/**
  Creates a new image element based on the provided template paramter.
*/
TemplateCarousel.prototype.createTemplateImage = function(/*Element*/ aParent, /*DesignTemplate*/ aTemplate) {
	var imageElement = document.createElement("img");
	imageElement.id = aTemplate.id;
	imageElement.className = 'selector-item';
	imageElement.src = aTemplate.image;
	imageElement.style.width = parseInt(aTemplate.width) + 'px';
	imageElement.style.height = parseInt(aTemplate.height) + 'px';  
	aParent.appendChild(imageElement);
	return imageElement;
}
---- End Code Snippet ---

The image elements src-attribute will point to a URL like:

templatePreview.doCache?cache=true&jpeg=true&width=200&height=100&template=001&productId=6423 

Only the "template" parameter-value differs in each request. 
The reponse contains expires and cache-control information.

Request-Header
==============
Host	localhost
User-Agent	Mozilla/5.0 (Windows; U; Windows NT 5.1; de-DE; rv:1.9.0.1) Gecko/2008070208 Firefox/3.0.1
Accept	image/png,image/*;q=0.8,*/*;q=0.5
Accept-Language	de-DE,de;q=0.7,chrome://global/locale/intl.properties;q=0.3
Accept-Encoding	gzip,deflate
Accept-Charset	ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive	300
Connection	keep-alive
Referer	http://localhost/web/editor.do?productId=6423
Cookie	useFlashUpload=true; aclrsid=NB-JEN; sid=xBt3Vtp833o4AAH27s1tzIS3OtySXdu1; JSESSIONID=E5F1D384393A9AF1EB0ADEDD07E14378

Response-Header
===============
Server	Apache-Coyote/1.1
X-Powered-By	Servlet 2.4; JBoss-4.2.2.GA (build: SVNTag=JBoss_4_2_2_GA date=200710221139)/Tomcat-5.5
Expires	Wed, 23 Jul 2008 10:05:09 GMT
Cache-Control	max-age=1800
Content-Type	image/jpeg
Transfer-Encoding	chunked
Date	Wed, 23 Jul 2008 09:35:09 GMT

In the IE and Opera the cached images are not requested repeatedly.


Reproducible: Always

Steps to Reproduce:
I could provide an url (probably next week) where this problem occurs. A tool like Fiddler or Wireshark can be used to examine the requests (and responses). Then you will see that requests for the images will be transmitted though the requests are already cached.

User-Agent:       Mozilla/5.0 (Windows; U; Windows NT 5.1; de-DE; rv:1.9.0.1) Gecko/2008070208 Firefox/3.0.1
Build Identifier: Mozilla/5.0 (Windows; U; Windows NT 5.1; de-DE; rv:1.9.0.1) Gecko/2008070208 Firefox/3.0.1

Obviously the cache is ignored for dynamically rendered but cached images, referenced in dynamically generated image elements.
The images appear in about:cache under Disk cache device.

We have the following situation:

A list of image elements is generated dynamically based on the current javascript data model (see createImageList() and createTemplateImage() in the code snippet).

---- Start Code Snippet ---
/**
  Remove current image elements and create new image elements based on the template model.
*/
TemplateCarousel.prototype.createImageList = function() {
	var selectorElement = document.getElementById('selector'+this.id);

	// delete all child image nodes
	while (selectorElement.hasChildNodes()) { 
		selectorElement.removeChild( selectorElement.lastChild ); 
	}

	// create image elements
	for ( i = 0; i <= this.templates.length; i++) {
		this.createTemplateImage(selectorElement, this.templates[i]);
	}
}

/**
  Creates a new image element based on the provided template paramter.
*/
TemplateCarousel.prototype.createTemplateImage = function(/*Element*/ aParent, /*DesignTemplate*/ aTemplate) {
	var imageElement = document.createElement("img");
	imageElement.id = aTemplate.id;
	imageElement.className = 'selector-item';
	imageElement.src = aTemplate.image;
	imageElement.style.width = parseInt(aTemplate.width) + 'px';
	imageElement.style.height = parseInt(aTemplate.height) + 'px';  
	aParent.appendChild(imageElement);
	return imageElement;
}
---- End Code Snippet ---

The image elements src-attribute will point to a URL like:

templatePreview.doCache?cache=true&jpeg=true&width=200&height=100&template=001&productId=6423 

Only the "template" parameter-value differs in each request. 
The reponse contains expires and cache-control information.

Request-Header
==============
Host	localhost
User-Agent	Mozilla/5.0 (Windows; U; Windows NT 5.1; de-DE; rv:1.9.0.1) Gecko/2008070208 Firefox/3.0.1
Accept	image/png,image/*;q=0.8,*/*;q=0.5
Accept-Language	de-DE,de;q=0.7,chrome://global/locale/intl.properties;q=0.3
Accept-Encoding	gzip,deflate
Accept-Charset	ISO-8859-1,utf-8;q=0.7,*;q=0.7
Keep-Alive	300
Connection	keep-alive
Referer	http://localhost/web/editor.do?productId=6423
Cookie	useFlashUpload=true; aclrsid=NB-JEN; sid=xBt3Vtp833o4AAH27s1tzIS3OtySXdu1; JSESSIONID=E5F1D384393A9AF1EB0ADEDD07E14378

Response-Header
===============
Server	Apache-Coyote/1.1
X-Powered-By	Servlet 2.4; JBoss-4.2.2.GA (build: SVNTag=JBoss_4_2_2_GA date=200710221139)/Tomcat-5.5
Expires	Wed, 23 Jul 2008 10:05:09 GMT
Cache-Control	max-age=1800
Content-Type	image/jpeg
Transfer-Encoding	chunked
Date	Wed, 23 Jul 2008 09:35:09 GMT

In the IE and Opera the cached images are not requested repeatedly.


Reproducible: Always

Steps to Reproduce:
I could provide an url (probably next week) where this problem occurs. A tool like Fiddler or Wireshark can be used to examine the requests (and responses). Then you will see that requests for the images will be transmitted though the requests are already cached.
Seems to be fixed now. I am unable to reproduce it anymore.

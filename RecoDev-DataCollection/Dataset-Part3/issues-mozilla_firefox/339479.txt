Steps to reproduce:
1) Select Google or Yahoo in the search engine dropdown.
2) Open a new Firefox window.
3) In the first window, select an engine that does not have Suggest functionality (e.g. answers.com).
4) Go to the second window, and start typing a search.
5) (Optional) Press down a couple times to start autocomplete.

Autocomplete either doesn't work (Error: searchService.currentEngine.suggestionURI has no properties) or is incorrect (blank entries in the dropdown).

What's happening is that the autocomplete backend is only being updated in the first binding, but not in the second window (since it's an engine-change notification that changes the engine there, and not the user). In bug 337178 and in bug 338061 the nsSearchSuggest code was made to be used only for engines that support the suggest functionality, and code was put in the search bar to ensure that the correct controller is used depending on the engine. Thinking about this more, I think that was the wrong approach (i.e. I shouldn't have said what I said in bug 338061 comment 6 :). I propose having all search engines use nsSearchSuggestion's nsIAutoCompleteSearch, and make that handle a null suggestionURI by returning only the form history results. This removes the need to do any special casing in the search binding itself.

I'll post a patch in a sec.

Steps to reproduce:
1) Select Google or Yahoo in the search engine dropdown.
2) Open a new Firefox window.
3) In the first window, select an engine that does not have Suggest functionality (e.g. answers.com).
4) Go to the second window, and start typing a search.
5) (Optional) Press down a couple times to start autocomplete.

Autocomplete either doesn't work (Error: searchService.currentEngine.suggestionURI has no properties) or is incorrect (blank entries in the dropdown).

What's happening is that the autocomplete backend is only being updated in the first binding, but not in the second window (since it's an engine-change notification that changes the engine there, and not the user). In bug 337178 and in bug 338061 the nsSearchSuggest code was made to be used only for engines that support the suggest functionality, and code was put in the search bar to ensure that the correct controller is used depending on the engine. Thinking about this more, I think that was the wrong approach (i.e. I shouldn't have said what I said in bug 338061 comment 6 :). I propose having all search engines use nsSearchSuggestion's nsIAutoCompleteSearch, and make that handle a null suggestionURI by returning only the form history results. This removes the need to do any special casing in the search binding itself.

I'll post a patch in a sec.
Created attachment 223579
patch
Comment on attachment 223579
patch

sr+a=me, pending joe's review.

This is good stuff!
-  _startFormHistorySearch: function SAC__startFormHistorySearch(
-      searchString, searchParam, previousResult) {
+  _startHistorySearch: function (searchString, searchParam, previousResult) {

Why remove the debugging function name here?

Other than that, looks fine.
(In reply to comment #3)
> -  _startFormHistorySearch: function SAC__startFormHistorySearch(
> -      searchString, searchParam, previousResult) {
> +  _startHistorySearch: function (searchString, searchParam, previousResult) {
> 
> Why remove the debugging function name here?

I was going to let those be rejigged bug 339361, but I'll add it back for now in case that doesn't happen.
Comment on attachment 223579
patch

r+ assuming you put the function name back in.
Fix checked in, branch and trunk, with the function name re-added.

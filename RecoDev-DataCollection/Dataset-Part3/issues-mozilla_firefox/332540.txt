User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.8) Gecko/20050607 Firefox/1.0.4
Build Identifier: Mozilla/5.0 (X11; U; SunOS sun4u; en-US; rv:1.9a1) Gecko/20060402 Firefox/1.6a1

Text fields can not be grabbed by GOK.

Reproducible: Always

Steps to Reproduce:
1. Launch GOK and firefox.
2. Select top menu Edit->Preferences->General->Connection Settings.
3. Click UI Grab in GOK main window to grab the text field in this dialog.
Actual Results:  
The text fields can not be grabbed by GOK.

Expected Results:  
The text fields in this dialog should be grabbed by GOK.

This bug can be found on both two build firefox:

Mozilla/5.0 (X11; U; SunOS sun4u; en-US; rv:1.8) Gecko/20060327 Firefox/1.5 which is integrated in vermillion_08.

Mozilla/5.0 (X11; U; SunOS sun4u; en-US; rv:1.9a1) Gecko/20060402 Firefox/1.6a1 which is downloaded from mozilla community trunk nightly build.

User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.8) Gecko/20050607 Firefox/1.0.4
Build Identifier: Mozilla/5.0 (X11; U; SunOS sun4u; en-US; rv:1.9a1) Gecko/20060402 Firefox/1.6a1

Text fields can not be grabbed by GOK.

Reproducible: Always

Steps to Reproduce:
1. Launch GOK and firefox.
2. Select top menu Edit->Preferences->General->Connection Settings.
3. Click UI Grab in GOK main window to grab the text field in this dialog.
Actual Results:  
The text fields can not be grabbed by GOK.

Expected Results:  
The text fields in this dialog should be grabbed by GOK.

This bug can be found on both two build firefox:

Mozilla/5.0 (X11; U; SunOS sun4u; en-US; rv:1.8) Gecko/20060327 Firefox/1.5 which is integrated in vermillion_08.

Mozilla/5.0 (X11; U; SunOS sun4u; en-US; rv:1.9a1) Gecko/20060402 Firefox/1.6a1 which is downloaded from mozilla community trunk nightly build.
Tim could you check (via at-poke) the GUI tree path to these fields and either post a screenshot or tell me if the path of objects all have states SHOWING and VISIBLE? This is a requirement for GOK as GOK generally doesn't waste time searching paths that don't exist to the sighted user.  If this requirement is not met, the fix is to correct the state information in firefox. 
Created attachment 217107
Screenshots
Created attachment 217108
Screenshots

Hi David, I checked these objects with at-poke, some of them have states SHOWING and VISIBLE while others not. I also uploaded the screenshots for this bug. Thanks.
Tim I can't access the attachments for some reason (an error is reported).

If there are objects along the parent heirarchy (path) to the text field that are not SHOWING and VISIBLE then that is a problem. This is not a GOK bug and should be filed to somebody who can fix that in firefox or related a11y bridge.
Created attachment 217236
Screenshots
Created attachment 217237
Screenshots
Created attachment 217238
Screenshots
Created attachment 217239
Screenshots
Hi David, sorry for that mistakes! Here are the screenshots, I uploaded again.

Actually, I always filed this bug against mozilla firefox, instead of GOK. So, take it easy. :)
Tim, thanks for reminding me this is not filed against gok :-)  
It looks like for the text objects there is no state "SHOWING" which is not good and would cause gok to ignore those objects. The combo box problem is not as obvious to me... could you tell me the states for the children of that box? Are they SELECTABLE etc?
Yes, they are selectable.
Created attachment 217399
patch

Call nsAccessibleWrap::GetExtState() to get SHOWING
Add nsXULTextFieldAccessibleWrap::GetExtState() to get EDITABLE for XUL text field
Fix nsAccessibleWrap::TranslateStates
Comment on attachment 217399
patch

In nsXULFieldTextAccessibleWrap::GetExtState, fix the redundant upcalls to ::GetExtState(). The nsAccessibleWrap::GetExtState() should be getting called as a result of the nsXULTextFieldAccessible::GetExtState()

Also, either use rv to check the return values for both GetState() and GetExtState() or don't use it for either.

Other than that, r+=aaron
Created attachment 217529
patch v2 (addressed Aaron's comment)

Thanks, Aaron.
Checking in nsAccessibleWrap.cpp;
/cvsroot/mozilla/accessible/src/atk/nsAccessibleWrap.cpp,v  <--  nsAccessibleWrap.cpp
new revision: 1.29; previous revision: 1.28
done
Checking in nsHTMLFormControlAccessibleWrap.cpp;
/cvsroot/mozilla/accessible/src/atk/nsHTMLFormControlAccessibleWrap.cpp,v  <-- nsHTMLFormControlAccessibleWrap.cpp
new revision: 1.10; previous revision: 1.9
done
Checking in nsXULFormControlAccessibleWrap.cpp;
/cvsroot/mozilla/accessible/src/atk/nsXULFormControlAccessibleWrap.cpp,v  <--  nsXULFormControlAccessibleWrap.cpp
new revision: 1.9; previous revision: 1.8
done
Checking in nsXULFormControlAccessibleWrap.h;
/cvsroot/mozilla/accessible/src/atk/nsXULFormControlAccessibleWrap.h,v  <--  nsXULFormControlAccessibleWrap.h
new revision: 1.4; previous revision: 1.3
done
Checking in nsAccessibleWrap.cpp;
/cvsroot/mozilla/accessible/src/atk/nsAccessibleWrap.cpp,v  <--  nsAccessibleWrap.cpp
new revision: 1.25.4.1; previous revision: 1.25
done
Checking in nsHTMLFormControlAccessibleWrap.cpp;
/cvsroot/mozilla/accessible/src/atk/nsHTMLFormControlAccessibleWrap.cpp,v  <-- nsHTMLFormControlAccessibleWrap.cpp
new revision: 1.8.8.1; previous revision: 1.8
done
Checking in nsXULFormControlAccessibleWrap.cpp;
/cvsroot/mozilla/accessible/src/atk/nsXULFormControlAccessibleWrap.cpp,v  <--  nsXULFormControlAccessibleWrap.cpp
new revision: 1.6.2.1; previous revision: 1.6
done
Checking in nsXULFormControlAccessibleWrap.h;
/cvsroot/mozilla/accessible/src/atk/nsXULFormControlAccessibleWrap.h,v  <--  nsXULFormControlAccessibleWrap.h
new revision: 1.2.12.1; previous revision: 1.2
done

STR:

1. In about:preferences, open the web inspector
2. Type in "#font"
3. Try to select any of the suggestions including '.'

ER:
it works!

AR:
it doesn't work!


If you manually go back and add some backslashes before the '.', it works.

Seems like this code should use CSS.escape appropriately. :-)

STR:

1. In about:preferences, open the web inspector
2. Type in "#font"
3. Try to select any of the suggestions including '.'

ER:
it works!

AR:
it doesn't work!


If you manually go back and add some backslashes before the '.', it works.

Seems like this code should use CSS.escape appropriately. :-)
It indeed looks like we should be escaping parts of selectors somewhere on the server. Once the suggestion "#font.language.group" comes back to the client, it's impossible to differentiate #an.id.with.dots from #id.class.
I believe the WalkerActor.getSuggestionsForQuery protocol method should be doing the escaping.
Adding CSS.escape at the right places in the class and id cases of this switch statement should work:
http://mxr.mozilla.org/mozilla-central/source/toolkit/devtools/server/actors/inspector.js#1801
This + a new test case sounds like a good first bug for someone interested in contributing.
Hi, I would like to take on this bug. When I search "#font", no suggestions show up. Is this due to the bug? What should be an example normal output?
Created attachment 8581509
Searching for #font on about:preferences.png

(In reply to John Kang from comment #2)
> Hi, I would like to take on this bug.
Great, thanks. I'll assign the bug to you.
> When I search "#font", no suggestions
> show up. Is this due to the bug? What should be an example normal output?
I've just attached a screenshot of the current output when searching for '#font' in the inspector on the about:preferences page.
The bug is about trying to select one of the results
Once you've got the dev environment in place and have built firefox (https://wiki.mozilla.org/DevTools/GetInvolved#Hacking), I believe comment 1 should help you get started with the code.
Great. The building process is taking some time so I will take a look at it in the morning. Thanks for the bug assignment.
Hello, sorry to get back to this bug so late. When I make a change to the source code, do I have to update and ./mach run again or can I just refresh the browser?
(In reply to John Kang from comment #6)
> Hello, sorry to get back to this bug so late. When I make a change to the
> source code, do I have to update and ./mach run again or can I just refresh
> the browser?
Once you made a change to a source file, you need to re-build and then re-run the browser.
The turn-around time is typically quite short though as the build is incremental, you just need to rebuild what you changed.
So, for instance, if you change something in /toolkit/devtools/
You can do:
./mach build toolkit/devtools
./mach run

If you change some front-end code in /browser/devtools/
Then:
./mach build browser/devtools
./mach run

When working on devtools, these are the command you end up using 90% of the time at least, and it only takes a couple of seconds to build.
Hi, I'm trying to figure out exactly what the statements in the function do. "if(!query)" means that the user hasn't entered anything into the search, right? So it would essentially represent a query of all classes and ids, which is what I'm assuming "[id]" and "[class]" represents?

Then the function iterates through the nodes and pushes the search suggestions to display on the list? 

Also, I'm not exactly sure where CSS.escape would be most appropriate. Would I be escaping the dot character in querySelector or when the function pushes into the list the results?
It also seems that I can't break on the program on purpose. I purposely deleted characters from function names and added extraneous ones but when I rebuild and rerun the inspector still works as usual.
Ignore my last comment. It works when I build from devtools instead of only building inspector.js.
Created attachment 8584912
bug1143074.diff

This diff is what I did so far; it allows me to select an id with a "." but it shows the escape characters "\" in the suggestions because it pushes the escaped characters onto the list. How can I get around this?
(In reply to John Kang from comment #8)
> Hi, I'm trying to figure out exactly what the statements in the function do.
> "if(!query)" means that the user hasn't entered anything into the search,
> right? So it would essentially represent a query of all classes and ids,
> which is what I'm assuming "[id]" and "[class]" represents?

query is the string entered by the user before the last empty space character in the field.
For instance, if you search for "#id .c", then query is "#id *".
That means that the function will look for all nodes that match this first part, and then from these nodes will only keep the ones that have a class that starts with "c" (because selectedState, in this case, is "class").

If you search for ".c" however, query is undefined (or empty string, I don't know, but falsy anyway) and so the function searches for "[class]" which means all nodes that have a class attribute, and then it will only keep the nodes that have a class that starts with "c".

(In reply to John Kang from comment #11)
> Created attachment 8584912
> bug1143074.diff
> 
> This diff is what I did so far; it allows me to select an id with a "." but
> it shows the escape characters "\" in the suggestions because it pushes the
> escaped characters onto the list. How can I get around this?
This is the right fix I think. I'm not even sure we should remove the "\" char from the list of suggestions, because it actually help understand that the "." character in the string isn't a class selector, but part of the id.
Great. How would I go about writing a test case for this one?
(In reply to John Kang from comment #13)
> Great. How would I go about writing a test case for this one?
We have a few tests dedicated to the inspector search box already:
/browser/devtools/inspector/test/browser_inspector_search-01.js
/browser/devtools/inspector/test/browser_inspector_search-02.js
/browser/devtools/inspector/test/browser_inspector_search-03.js

I suggest you first go through these files, try and understand what they test, and run them:
./mach mochitest-devtools browser/devtools/inspector/test/browser_inspector_search-01.js

You should also take a look at this documentation https://wiki.mozilla.org/DevTools/Hacking#Running_the_Developer_Tools_Tests

You could either add a couple of test cases to one of the existing tests, or create a new test file entirely that focuses only on testing the scenario described in this bug.
I'm trying to write a test case for the patch. I tried inserting a <div id="d3.d4"> </div> into inspector_search.html in order to test an id with a '.' inside of it, but it messes up the other tests. Is there a way to add a new html element to test without having to alter all the other tests?
(In reply to John Kang from comment #15)
> I'm trying to write a test case for the patch. I tried inserting a <div
> id="d3.d4"> </div> into inspector_search.html in order to test an id with a
> '.' inside of it, but it messes up the other tests. Is there a way to add a
> new html element to test without having to alter all the other tests?
The best way to avoid breaking other tests is to create a new HTML page in the test directory (make sure to register it in browser.ini like the other ones too).
Hi, lately when I run the tests I get this output:

Checking for orphan ssltunnel processes...
Checking for orphan xpcshell processes...
0 ERROR no tests to run using specified combination of filters: skip_if, run_if, fail_if, remove_imptest_failure_expectations, subsuite(name=None)
SUITE-START | Running 0 tests
1 ERROR no tests to run using specified combination of filters: skip_if, run_if, fail_if, remove_imptest_failure_expectations, subsuite(name=None)
TEST-INFO | checking window state
Browser Chrome Test Summary
        Passed: 0
        Failed: 0
        Todo: 0

I've been stuck on this for a bit.. I'd like to get my test case up and running! How can I get around this?
(In reply to John Kang from comment #17)
> Hi, lately when I run the tests I get this output:
> 
> Checking for orphan ssltunnel processes...
> Checking for orphan xpcshell processes...
> 0 ERROR no tests to run using specified combination of filters: skip_if,
> run_if, fail_if, remove_imptest_failure_expectations, subsuite(name=None)
> SUITE-START | Running 0 tests
> 1 ERROR no tests to run using specified combination of filters: skip_if,
> run_if, fail_if, remove_imptest_failure_expectations, subsuite(name=None)
> TEST-INFO | checking window state
> Browser Chrome Test Summary
>         Passed: 0
>         Failed: 0
>         Todo: 0
> 
> I've been stuck on this for a bit.. I'd like to get my test case up and
> running! How can I get around this?
There was a regression yesterday morning, tracked in bug 1153851. I think the offending patch has been backed out, so it should start working again soon.
In the meantime, you can run the following test command instead:

./mach test browser/devtools/path/to/test...

It will see that the test(s) you're trying to run is(are) mochitest-devtools types of tests and will do the right thing. This command doesn't support all the nice arguments that mochitest-devtools does, but I don't think you need those.
Created attachment 8592730
reserved1143074.diff

Hi, here's the bug fix and test case. Please let me know if anything more needs to be done.
Comment on attachment 8592730
reserved1143074.diff

That looks pretty good after a quick glance. I guess you want me to review now, so marking the attachment as R?
I should be able to get to it fairly soon.
After this, we should run the patch on TRY to catch any potential regressions.
And then it should be good to go.
Comment on attachment 8592730
reserved1143074.diff

Review of attachment 8592730:
-----------------------------------------------------------------

Great stuff, thanks for working on this!
I've tested it locally and it works fine.
Only 2 remarks:
- can you rebase the patch on top of the latest fx-team? There has been changes in the same file and the patch doesn't apply cleanly anymore.
- can you add the couple of test cases described below?
I'll happily r+ the patch once done.

::: browser/devtools/inspector/test/browser_inspector_search-reserved.js
@@ +33,5 @@
> +  },
> +  {
> +    key: "c",
> +    suggestions: [{label: ".c1\\.c2", count: 1}]
> +  }

Could you add the following test cases:
- search for a class or id with reserved characters after you've already entered a tagname for instance. So something like "body ." should give you "body .c1\\.c2"
- search for a class or id without the leading . or #. Indeed, bug 1149346 just landed and allows users to search without having to type the preceding . or # character, so we should make sure we have a test here for this too: typing "c" should give ".c1\\c2" and typing "d" should give "#d1\\.d2"

@@ +72,5 @@
> +function formatSuggestions(suggestions) {
> +  return "[" + suggestions
> +                .map(s => "'" + s.label + "' (" + s.count || 1 + ")")
> +                .join(", ") + "]";
> +}   

nit: trailing whitespaces to be removed.
Also, I pushed this patch to try, this way we'll see if the code changes caused any regressions: 
https://treeherder.mozilla.org/#/jobs?repo=try&revision=88ae6f2e07e4
Created attachment 8595275
reserved.diff

Here's the new patch with the new test cases!
Comment on attachment 8595275
reserved.diff

Review of attachment 8595275:
-----------------------------------------------------------------

Looks good. Thanks.
Also, last try was green, so pushed this to fx-team:
https://hg.mozilla.org/integration/fx-team/rev/76ff9ca8cc1a
If this was pushed, it doesn't need checkin anymore. ;-)
https://hg.mozilla.org/mozilla-central/rev/76ff9ca8cc1a
Hi, it appears that the pull request was attributed to 'John Kang' instead of my GitHub name 'jkang8'. Is it still possible to change that so the change reflects on my GitHub account?
(In reply to John Kang from comment #28)
> Hi, it appears that the pull request was attributed to 'John Kang' instead
> of my GitHub name 'jkang8'. Is it still possible to change that so the
> change reflects on my GitHub account?
Unfortunately I don't think that's possible at this stage.
Sorry, I should have asked when checking this in, but at the time, I looked at the commit message, which looked fine.
Make sure to configure your email in mercurial so that it's part of the patches you generate in the future (unless you use git, but the I think it's the same anyway).
There's a ./mach mercurial-setup command that can do this (and more) for you: http://codefirefox.com/video/mercurial-setup
Ah, thanks for the help.

Are there any other similar bugs that I may take on? :)
Sure, that'd be great!
There are several ways to find good bugs:
- http://www.joshmatthews.net/bugsahoy/ has a nice UI with filters
- bugzilla has a (complex) search tool, this query for instance returns all mentored or "good first" bugs in devtools: http://mzl.la/1JEME1d
- connect to #devtools on IRC and ask
- these ones are all good bugs too: bug 1157230, bug 937358, bug 1150889

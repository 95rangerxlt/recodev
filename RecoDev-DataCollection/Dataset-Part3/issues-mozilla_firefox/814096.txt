It's similar to bug 806174. It happens only on 64-bit Mac OS X so far.

Signature 	JS_GetStringEncodingLength More Reports Search
UUID	94cf3c88-230f-4ce2-92c7-6c36e2121121
Date Processed	2012-11-21 18:06:29
Uptime	37623
Install Age	21.1 hours since version was first installed.
Install Time	2012-11-20 20:57:30
Product	Firefox
Version	17.0
Build ID	20121119183901
Release Channel	release
OS	Mac OS X
OS Version	10.6.8 10K549
Build Architecture	amd64
Build Architecture Info	family 6 model 23 stepping 10
Crash Reason	EXC_BAD_ACCESS / KERN_INVALID_ADDRESS
Crash Address	0x0
App Notes 	
AdapterVendorID: 0x10de, AdapterDeviceID: 0x 863GL Context? GL Context+ GL Layers? GL Layers+ 
EMCheckCompatibility	True
Adapter Vendor ID	0x10de
Adapter Device ID	0x 863

Frame 	Module 	Signature 	Source
0 	XUL 	JS_GetStringEncodingLength 	js/src/vm/String.h:291
1 	RapportTanzan17.dylib 	RapportTanzan17.dylib@0x1b03a 	
2 	RapportTanzan17.dylib 	RapportTanzan17.dylib@0x1cb93 	
3 	RapportUtil1.dylib 	RapportUtil1.dylib@0x128f6 	
4 	RapportTanzan17.dylib 	RapportTanzan17.dylib@0x1789f 	
5 	libSystem.B.dylib 	malloc 	
6 	RapportTanzan17.dylib 	RapportTanzan17.dylib@0x10d39 	
7 	XUL 	js::InvokeKernel 	js/src/jscntxtinlines.h:372
8 	XUL 	js_fun_apply 	js/src/jsinterp.h:119
9 	XUL 	js::InvokeKernel 	js/src/jscntxtinlines.h:372
10 	XUL 	js::Interpret 	js/src/jsinterp.cpp:2414
11 	XUL 	js::RunScript 	js/src/jsinterp.cpp:309
12 	XUL 	js::InvokeKernel 	js/src/jsinterp.cpp:363
...

More reports at:
https://crash-stats.mozilla.com/report/list?signature=JS_GetStringEncodingLength

It's similar to bug 806174. It happens only on 64-bit Mac OS X so far.

Signature 	JS_GetStringEncodingLength More Reports Search
UUID	94cf3c88-230f-4ce2-92c7-6c36e2121121
Date Processed	2012-11-21 18:06:29
Uptime	37623
Install Age	21.1 hours since version was first installed.
Install Time	2012-11-20 20:57:30
Product	Firefox
Version	17.0
Build ID	20121119183901
Release Channel	release
OS	Mac OS X
OS Version	10.6.8 10K549
Build Architecture	amd64
Build Architecture Info	family 6 model 23 stepping 10
Crash Reason	EXC_BAD_ACCESS / KERN_INVALID_ADDRESS
Crash Address	0x0
App Notes 	
AdapterVendorID: 0x10de, AdapterDeviceID: 0x 863GL Context? GL Context+ GL Layers? GL Layers+ 
EMCheckCompatibility	True
Adapter Vendor ID	0x10de
Adapter Device ID	0x 863

Frame 	Module 	Signature 	Source
0 	XUL 	JS_GetStringEncodingLength 	js/src/vm/String.h:291
1 	RapportTanzan17.dylib 	RapportTanzan17.dylib@0x1b03a 	
2 	RapportTanzan17.dylib 	RapportTanzan17.dylib@0x1cb93 	
3 	RapportUtil1.dylib 	RapportUtil1.dylib@0x128f6 	
4 	RapportTanzan17.dylib 	RapportTanzan17.dylib@0x1789f 	
5 	libSystem.B.dylib 	malloc 	
6 	RapportTanzan17.dylib 	RapportTanzan17.dylib@0x10d39 	
7 	XUL 	js::InvokeKernel 	js/src/jscntxtinlines.h:372
8 	XUL 	js_fun_apply 	js/src/jsinterp.h:119
9 	XUL 	js::InvokeKernel 	js/src/jscntxtinlines.h:372
10 	XUL 	js::Interpret 	js/src/jsinterp.cpp:2414
11 	XUL 	js::RunScript 	js/src/jsinterp.cpp:309
12 	XUL 	js::InvokeKernel 	js/src/jsinterp.cpp:363
...

More reports at:
https://crash-stats.mozilla.com/report/list?signature=JS_GetStringEncodingLength
we are investigating the issue.
It's #2 top crasher on Mac in 17.0.1.

Here are correlations per debug identifier:
    100% (37/37) vs.   3% (49/1432) RapportTanzan17.dylib
          0% (0/37) vs.   0% (1/1432) 2A5451384F234D08259FBBCDBB44A75A0
         86% (32/37) vs.   3% (37/1432) 509C7796097476B32561A06D826140AA0
          0% (0/37) vs.   0% (5/1432) 6F525EF4015DED18BAA0EE20F20A7AF70
         14% (5/37) vs.   0% (6/1432) D2DA02B5BC6BB7A0B76FE8E93CB0CFD70
I was able to reproduce this crash, though my steps are not confirmed as of yet:
1. Installed StumbleUpon 4.15 from addons.mozilla.org
2. Installed Trusteer Rapport
3. Log in to StumbleUpon through the Firefox toolbar
4. Navigate to www.stylescrapbook.com
5. Add it as a protected site through the Rapport toolbar button
6. Add it to a stumbleupon list named Style
7. Open a few sub-pages on that domain and do the same
8. Keep navigating back and forth through the pages
> Crash eventually...

https://crash-stats.mozilla.com/report/index/150ee45c-e2db-4b67-a9cb-2a9932121220
Sorry bhavana, didn't mean to flip the flag on you. At any rate, I've not been able to reproduce with my steps in comment 3 yet. However, I've been working Karen Prescott via email who is able to reproduce this quite reliably with StumbleUpon and back button on stylescrapbook.com. Is there any data I can have her provide that would be useful to debug this issue further?
We are aware of this issue and we started with a gradual release of a fix. We expect it to reach the vast majority of our users during the coming week.
According to https://crash-stats.mozilla.com/topcrasher/byos/Firefox/17.0.1/Mac%20OS%20X/7/browser this has dropped significantly in crash volume, I guess it's best we trust comment #5 and mark this FIXED.

Thanks to ilan.fraiman@trusteer.com, it looks like your fix worked!

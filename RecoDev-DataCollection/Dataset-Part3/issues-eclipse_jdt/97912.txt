A way of auto populting a switch statement with all the possible cases when
using an enum as the switching parameter would be really great way of ensuring
you captured all the possibilities.

A way of auto populting a switch statement with all the possible cases when
using an enum as the switching parameter would be really great way of ensuring
you captured all the possibilities.
This could be a quick assist since no error is present or we can integrate this
into code assist.

I would prefer code assist. 
Martin, opinion ?
Note that you can already enable a warning that will detect if a switch
statement misses a case.
e.g.

enum Furniture { CHAIR, TABLE, LAMP};

switch(Furniture)<Press CTRL+SPACE here>

would give u an option to automatically write the rest of it, where it would
give you the following:

switch(myEnum)
{
  case CHAIR :
   break;
  case TABLE :
   break;
  case LAMP:
}
quick fix for the warning makes sense. if the quick assist is that helpful with
our current limitations I don't know, you would have to first write a complete
switch statement without case, as otherwise we don't have an AST.

Maybe better some editor smartness when pressing enter after the curly bracket.
Moving to jdt.text. I think for autopopulate (as this is the request here) auto completion (enter after the curly bracket) suits the best. Of course I'm aware that this isn't a trivial task (need parsing back to find out that this is a switch, then a code resolve for the enum)
Before we add things in the UI layer lets ask JDT Core which provide code assist.
I didn't think of code assist but smart enter (enter after switch(x) {|)
Ah I see, but the curly braces aren't necessary. We could still be smart but note that we also use Ctrl+Space to insert anonymous inner classes and not smart enter:
   new MyInterface(<ctrl+space)

and not
   new MyInterface(<Enter>

Auto-filling the switch-statement on <Enter> seems to intrusive for me.
No plans for now.
*** Bug 176637 has been marked as a duplicate of this bug. ***
Get rid of deprecated state.
*** Bug 223265 has been marked as a duplicate of this bug. ***
Maybe a quick fix would be easier to implement. Moving back to jdt.ui.
quick fix aded > 20080404
*** Bug 112975 has been marked as a duplicate of this bug. ***

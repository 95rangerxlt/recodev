From 3.1 on the "this" qualifier is suggested by code assistance when completing on field names that have the same name as constructor or method parameters.

Unfortunately the field variable name is not succesfully applied when using the completion.

In contrast to previous releases the qualifier appears in the completion list:
  key    String 
  this.key    String - Test


sample:

public class Test {
	private String key;
	public Test(String key) {
		k           // try completion here
	}
	
	public void setKey(String key) {
		k           // try completion here
	}
}

From 3.1 on the "this" qualifier is suggested by code assistance when completing on field names that have the same name as constructor or method parameters.

Unfortunately the field variable name is not succesfully applied when using the completion.

In contrast to previous releases the qualifier appears in the completion list:
  key    String 
  this.key    String - Test


sample:

public class Test {
	private String key;
	public Test(String key) {
		k           // try completion here
	}
	
	public void setKey(String key) {
		k           // try completion here
	}
}
Tom, please comment
Interesting - I wasn't aware of the qualified proposals. We should of course support this.

JavaCompletionProposal needs to special case ::isValidPrefix.
In fact that has worked already in releases prior to 3.1
I would suspect there was some logic to have the "this" qualifier automatically prepended for the case that parameter and field name are equal. This code might have been removed and alternatively the "this." qualifier was added to the replacement string.
Normally, there is no need for the qualifier in the list if member variables can easily be identified by associated image. Also, if no initial prefix (like k in the sample) is typed before invoking completion, the qualified proposal is automatically removed from the list after typing the first characters (if not "this")
fixed > 20060724

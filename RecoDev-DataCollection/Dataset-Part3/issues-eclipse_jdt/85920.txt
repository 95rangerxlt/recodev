Under windows XP tooltips have a dropshadow when the "use shadows under menus"
option is turned on.  Currently, hovers never display with dropshadows.

I stumbled into some code that was recently added to SWT that gives shells with
the SWT.TOOL style a dropshadow.  This only seems to work on windows XP at the
moment.  It would be nice if the TOOL style could be added to all java hovers
when this support becomes public (it is currently being used on the 'fake'
tooltips).  I will attach a screenshot of how it looks.

Under windows XP tooltips have a dropshadow when the "use shadows under menus"
option is turned on.  Currently, hovers never display with dropshadows.

I stumbled into some code that was recently added to SWT that gives shells with
the SWT.TOOL style a dropshadow.  This only seems to work on windows XP at the
moment.  It would be nice if the TOOL style could be added to all java hovers
when this support becomes public (it is currently being used on the 'fake'
tooltips).  I will attach a screenshot of how it looks.
Created attachment 18125
Dropshadow on hover

changed SWT.NONE to SWT.TOOL in
AbstractJavaEditorTextHover#getHoverControlCreator.  The change could also be
made to the DefaultInformationControl but it makes the additional info shell
for quick assists look a bit strange.
Verified on WindowsXP, Linux-GTK and Linux-Motif. Still waiting for test result
on MAC.
Looks good on MAC. Too.
Hm, we have plenty of locations where we would need to use TOOL:

default text hover style:
- DefaultInformationControl (only in the constructors that do not take the shell
style as parameter)

java hovers:
- AbstractJavaEditorTextHover#getHoverControlCreator (as suggested in comment 1)
- JavadocHover#getInformationPresenterControlCreator

persistent (F2) hovers - this one is questionable, as these already have
decorations (RESIZE) on some platforms - these are not real hovers.
- JavaSourceViewerConfiguration#getInformationPresenterControlCreator
- BrowserInformationControl (only no-shell-style ctors)
- JavaInformationProvider#getInformationPresenterControlCreator

source viewer hovers - used for projection & quick diff hovers
- SourceViewerInformationControl (no-shell-style ctors) (3x: jface.text,
ui.editors, jdt.ui)

not sure about these:
- JavaEditor#createPartControl
- JavaSourceHover#getInformationPresenterControlCreator

Steve, SWT.TOOL is declared to trigger 'floating toolbar' behavior. Is it a good
idea to use it for tooltip / hover-like controls at all? Or may the semantics of
SWT.TOOL change in the future, triggering for instance toolbar decorations and such?
Go ahead and use it.  I will update the Javadoc.
I have a patch ready, but propose to defer after M6.
Yes, that's fine.
This is fixed.


Using autobuild.

Define a project P which targets jdk1.2.2 on its classpath, save/exit and reenter, have it target j9 instead (through a variable is preferrable).
A build action is triggered, and when the built state is read, the old roots (jdk1.2.2) are not there, but instead j9 is there (have to inspect the re-read built
state to find out).

This causes the incremental builder to be confused and not react well (visible if not resetting the built state to null when classpath is changing).

NOTES:

Using autobuild.

Define a project P which targets jdk1.2.2 on its classpath, save/exit and reenter, have it target j9 instead (through a variable is preferrable).
A build action is triggered, and when the built state is read, the old roots (jdk1.2.2) are not there, but instead j9 is there (have to inspect the re-read built
state to find out).

This causes the incremental builder to be confused and not react well (visible if not resetting the built state to null when classpath is changing).

NOTES:
PRODUCT VERSION:
SDK 115


Closed - not reproducable with new builder.

Any classpath change causes the entire project to be rebuilt.

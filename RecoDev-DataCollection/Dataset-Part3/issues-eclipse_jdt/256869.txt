Build id: N20081126-2000

Dead Code Analysis found an issue in org.eclipse.core.internal.jobs.OrderedLock

if (DEBUG && success)
  System.out.println("[" + Thread.currentThread() + "] Operation started... " + 
  this); //$NON-NLS-1$ //$NON-NLS-2$
else if (DEBUG)
  System.out.println("[" + Thread.currentThread() + "] Operation timed out... " +
  this); //$NON-NLS-1$ //$NON-NLS-2$

The two quick fixes that are available for this case are either remove 'success' from 'if (DEBUG && success)' or remove 'System.out.println("[" + Thread.currentThread() + "] Operation started... " + this); //$NON-NLS-1$ //$NON-NLS-2$'

It should rather suggest to create two if statements, one for 'DEBUG' another for 'success'.

Build id: N20081126-2000

Dead Code Analysis found an issue in org.eclipse.core.internal.jobs.OrderedLock

if (DEBUG && success)
  System.out.println("[" + Thread.currentThread() + "] Operation started... " + 
  this); //$NON-NLS-1$ //$NON-NLS-2$
else if (DEBUG)
  System.out.println("[" + Thread.currentThread() + "] Operation timed out... " +
  this); //$NON-NLS-1$ //$NON-NLS-2$

The two quick fixes that are available for this case are either remove 'success' from 'if (DEBUG && success)' or remove 'System.out.println("[" + Thread.currentThread() + "] Operation started... " + this); //$NON-NLS-1$ //$NON-NLS-2$'

It should rather suggest to create two if statements, one for 'DEBUG' another for 'success'.
> remove 'success' from 'if (DEBUG && success)'

This quick fix did not work -- fixed in HEAD.

> It should rather suggest to create two if statements, one for 'DEBUG' another
> for 'success'.

We already have this as a quick assist, but it didn't work when the 'if' has an 'else' branch. I fixed that (bug 75794) and also activated it for this dead code problem.

Note that the quick assist has to duplicate the original 'else' clause, so it may not be as useful one might think in case there is an else branch.

JUnit set-up
1) expand the CU junit.framework.TestCase.java in the package explorer
2) delete junit.framework.TestCase.java on the file system
3) select a now deleted member and try open it in the editor
->several actions log an exception the log. Given that this is not
an error situation we should show an ErrorDialog and not log the exception.
An example for this problem is the OpenAction. 

We have to review all our actions and verify that they handle this scenario 
properly. We should check:
- not present exception is explicitly handled
- whether the element access can be changed to be only handle based so that no 
NotPresentExceptions can occur.

JUnit set-up
1) expand the CU junit.framework.TestCase.java in the package explorer
2) delete junit.framework.TestCase.java on the file system
3) select a now deleted member and try open it in the editor
->several actions log an exception the log. Given that this is not
an error situation we should show an ErrorDialog and not log the exception.
An example for this problem is the OpenAction. 

We have to review all our actions and verify that they handle this scenario 
properly. We should check:
- not present exception is explicitly handled
- whether the element access can be changed to be only handle based so that no 
NotPresentExceptions can occur.
Affected action I am aware of: OpenAction and FindAction. In general action 
should only call handle only methods during selection changes.
OpenAction already handles the case more gracefully. A special editor opens 
saying that the file is deleted on disk. No entry occurs in the log.
Doing some testing with deleted resources on disk shows the following behaviour:

- actions that produce a stack trace in the log when executed (for example
  rename, move, paste, delete, ....
- actions that use the cached version of the element from the Java Model and
  silently recreate the file on disk (SEF)
- actions that use the cached version to do something (paste, when the source
  got deleted, open type hierarchy).

Actions that uses the cached version might produce a stack trace in the case 
that the cached version got deleted.

Another problem seems to be related to search: Java Core returns search results 
that are deleted on disk. As a result some refactorings blow up since they try 
to manipulated code that doesn't exist on disk anymore but were part of the 
search result.

In general all our code should handle the case that resources don't exist on 
disk anymore. The following behavior should be implemented:

For actions (selected element):
  - no check if the element exist when listening to selection changes. 
    Existing tests can be expensinve especially if executed over a network.
  - if executed on an element that doesn't exist anymore a dialog should be
    presented to the user. But no stack trace should appear in the log.

Code that manipulates more than the selected element(s)(for example 
refactorins):
  - check if all elements exists and react accordingly. No stack trace should
    appear in the log in this case.

As a result we have to check all our actions and code that is invoked from 
those actions. I will compile a list of actions so that we have a starting 
point to look at.

There is another kind of actions. These generate a stack trace in the log on 
selection changed (example is FindAction). Those kind of actions inspect the 
content of a compilation unit on selection change. As already said actions 
shouldn't execute any code that parses compilation unit or check for existence 
in selection changes.

Problematic code in FindAction:
 at org.eclipse.jdt.internal.core.CompilationUnit.getAllTypes
(CompilationUnit.java:333)
 at org.eclipse.jdt.ui.actions.FindAction.findType(FindAction.java:171)
Daniel told me that Core has a plugin that automatically syncs the workspace 
with the file system. If this will be part of 2.1 then the probability that we 
end up in the described scenarios is much lower than today. So may be we can 
lower the priority of the PR for 2.1.
It isn't committed yet whether the autorefresh plugin is part of 2.1.

Created attachment 2323
List of action owners
Then I opt to do the following: we fix the actions that cause entries in the 
log on seleciton changes (as far as I can tell only FindAction seems to be 
affected).

The owners of the actions (see attached list) check if they have something to 
do in their code depending on whether the refresh plugin will be part of 2.1 or 
not. 

Erich, do you agree ?
Daniel, can you please change the FindAction so that it doesn't call 
getAllTypes during selection changes. Let me know if you are short on time then 
I can have a look as well.
Fixed selection changed behaviour of FindAction.
the plan make sense
Fixed OpenTypeHierarchyAction which causes log entries on selection changes as 
well.
*** Bug 27097 has been marked as a duplicate of this bug. ***
From bug 27097

Actions that call exists on selection changes.

FindAction.canOperateOn(IJavaElement)
ModifyParametersAction.shouldAcceptElement(IMethod)
MoveInnerToTopAction.shouldAcceptElement(IType)
OpenSuperImplementationAction.checkMethod(Object)
UseSupertypeAction.shouldAcceptElement(IType)

I fixed all actions except all Source->convert actions, shift Left, Shift 
right, comment, uncomment, code assist, quick fix and find.

The implementation seems to be wired into the editor (no actions, except for 
the convert actions) it is best if the owner of the code has a look at it. 

Since these "actions" are only available for an editor there is no need to 
check for deleted files or if the files are still in sync with the underlying 
file system. The editor does this when it gets focus. So the actions only have 
to check if the file can be made writable using validate edit. IMO this can be 
done via the method isModifiable provided by IDocumentProviderExtension.

Claude, can you please have a look at the actions and then move the PR to 
Martin for quick fix. Or step by if you prefer team programming.
Forgot to mention that the validateEdit problem is described in bug 23808. 
Since the go hand in hand I fixed it together with the out of sync problem.
fixed >= 20021202

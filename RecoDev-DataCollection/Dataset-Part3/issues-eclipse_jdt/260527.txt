HEAD (regression from last I-build).

Enable to show whitespace in Java compare: whitespace chars are black instead of gray.

HEAD (regression from last I-build).

Enable to show whitespace in Java compare: whitespace chars are black instead of gray.
The reason why it's darker is because two WhitespacePainter are installed and draw over each other. One gets newly installed by the editor adapter and the other one is from compare:

org.eclipse.compare.contentmergeviewer.TextMergeViewer.createToolItems(ToolBarManager)


We should check that method for other potential duplication.
Does it mean that the sentence "If the painter is already registered this method is without effect." from org.eclipse.jface.text.TextViewer.addPainter(IPainter) is not true? ShowWhitespaceAction[1] adds the second WhitespacePainter in showWhitespace() by calling viewer.getSourceViewer().addPainter(painter) and according to the javadoc adding the second painter of this kind shouldn't result in what Dani spotted in Java compare.

[1] org.eclipse.compare.internal.ShowWhitespaceAction
>org.eclipse.jface.text.TextViewer.addPainter(IPainter) is not true?
Sure it is true, but you are adding different painter instances.
Created attachment 123205
Patch v01

Would it that case adding the equals() (and hashCode()) to WhitespaceCharaceterPainter solve the problem? Including fTextViewer in the methods makes the painter manager aware that we're trying to add the same painter even though it's a different instance.
Created attachment 123206
mylyn/context/zip
As said before, painters are registered per instance. We can't change that API now. This could break existing clients. In addition, the correct fix is to make sure you don't add things twice.
Created attachment 123238
Patch v02

Move the construction and initialization of ShowWhitespaceAction in time, so we check if enhanced configuration of source viewer resulted in installing WhitespaceCharacterPainter by client. If so, the action won't add the painter while toggling the state to "Show Whitespaces". The fix works but the action class has been polluted with a lot reflection code which I have no clue how to get rid of. Any help will be appreciated.
What might be worth mentioning is the fact that creating the action later will result in changing the order of the text actions[1] in the context menu.

[1] ignore whitespaces, show line numbers, show whitespaces
This fix looks scary ;-)
Isn't there a clear life-cycle so that you know whether you need to install it or not?
Well, I'm able to check whether I need to install the painter or not while opening the editor. This is why I do instantiation of the action after the viewer configuration, but that's about it. Once the action is called (to show  whitespaces), I'm not 100% sure that the WhitespaceCharacterPainter potentially added by client is installed, so checking that while installing the painter from TMV may be ambiguous. In fact, (in all cases I checked) when calling the action to show whitespaces the painter from TMV get installed first, and then after a while the painter from the client does (in response to "show whitespaces" property change I guess).
Created attachment 123522
Fix

This fix introduces the new API TextMergeViewer.isEditorBacked(ITextViewer) which then allows to configure the actions as needed.
The Compare part of the fix has been released to HEAD. Thanks Dani!
Committed JDT part.
Available in builds > N20090122-2000.

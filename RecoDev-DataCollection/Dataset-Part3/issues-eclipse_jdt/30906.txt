build I20030129

- had a boolean field statusLineVisible in class WorkbenchWindow, with 
corresponding get and set methods (with the right names, I promise: 
getStatusLineVisible and setStatusLineVisible)
- used refactoring to rename the field to showStatusLine
- the checkbox for fixing up the setter was enabled, so I checked it
- however the checkbox for fixing up the getter was not enabled
- had to fix up the getter (and refs) manually

build I20030129

- had a boolean field statusLineVisible in class WorkbenchWindow, with 
corresponding get and set methods (with the right names, I promise: 
getStatusLineVisible and setStatusLineVisible)
- used refactoring to rename the field to showStatusLine
- the checkbox for fixing up the setter was enabled, so I checked it
- however the checkbox for fixing up the getter was not enabled
- had to fix up the getter (and refs) manually
Might have gotten confused because there were refs to the getter in a local 
class in the same CU (WorkbenchLayout).

Adam, can you please have a look during the RC1 fix pass. 
NameCoventions does not handle this case

below i a test case (no prefixes/suffixes set)
suggested getter name is isShowToolbar
so the refactoring cannot figure out that it's the getShowToolbar method that 
is the getter

moving to jcore to decide what to do here

public class A {
 boolean showToobar;
 
public boolean getShowToobar() {
	return showToobar;
}

public void setShowToobar(boolean showToobar) {
	this.showToobar = showToobar;
}

}

NamingConventions.suggestGetterName suggest only one name. So it can not 
suggest 'isShowToolbar' and 'getShowToolbar' without changing API.

If you want the two proposals, you can call suggestGetterName with the argument 
isBoolean at true ('isShowToolbar') and call a second time suggestGetterName  
with the argument isBoolean at false ('getShowToolbar').

move to jdt/ui


that'd be no more than a workaround for a limitation - i'll have a look
fixed
tests added

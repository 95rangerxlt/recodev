I found that when I was using a working set I couldn't expand the JRE_LIB jar 
file in the package explorer. When I deselected the working set, it worked fine.

I found that when I was using a working set I couldn't expand the JRE_LIB jar 
file in the package explorer. When I deselected the working set, it worked fine.
do you have a reproducible case (what are the settings of th working set?)
Um, I can't even reproduce it myself today. I guess you can close this for now -
 if it happens again I will try to see if I can reproduce it and I'll reopen 
this with more info.
Steps to reproduce:
-import a binary plugin project. E.g., org.apache.ant
-create a resource working set and check only the project org.apache.ant
-select the resource working set in the Package Explorer
-expand org.apache.ant and expand the JRE_LIB
->I only see the copyright.txt and no packages.

Daniel, can you please have a look at this.
It doesn't matter if it's a resource or Java working set.

Test Case:
1. Create empty workspace
2. Add two Java project (A and B)
3. Create two Java working sets (WSA and WSB)
4. In the Package Explorer select WSA
   Obsereve: you can drill into rt.jar
5. In the Package Explorer select WSB
   Obsereve: you see rt.jar but you can't drill into rt.jar

B.getChildren() returns a rt_jar where getParent() == B, but
then rt_jar.getChildren() returns package fragments where
getParent().getParent() returns A.

This is the expected behavior with JAR elements. They are shared amongst 
whoever references the JAR. This will not change in any near future.

You cannot trust a JAR entry element's parent. The deepest you can trust the 
handle is the package fragment root. 

Back to JDT/UI
This means if I ask project X for children its children (JAR package fragment
roots) will return X as parent but I can not truest the parent underneath the
package fragment root, correct?

Does this mean I have to drill into the JAR and find the element in order to
build/get the correct parent chain?

Please comment and reassing directly to me (not JDT UI).
Thanks.

Exactly. This behavior is the one since 1.0.
Added some more smartness. In case of external archives.
Available in builds > N20030121

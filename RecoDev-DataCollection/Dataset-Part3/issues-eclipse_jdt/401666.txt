We need UI for the Java 8 code formatter options from bug 400830.

We need UI for the Java 8 code formatter options from bug 400830.
Manju, please have a look.

Note that this is work for the BETA_JAVA8 branch of the jdt.core and jdt.ui repos. I suggest you create a separate workspace for BETA_JAVA8 work, with separate git repos.
See http://wiki.eclipse.org/JDT_Core/Java8#IMPORTANT_NOTE about header comments.

For the implementation, use a similar existing code formatter option as a template. Open a call hierarchy on the DefaultCodeFormatterConstants constant for the template, and duplicate/adjust everything for the new option.
We are breaking down the work in bug 400830 into 3 chunks: formatting of
(a) lambda expressions, (b) reference expressions (JDT lingo for method
and constructor references) and (c) 308 related.

(a) has been reviewed and released (https://bugs.eclipse.org/bugs/show_bug.cgi?id=402173). You may want to start on that part. I'll CC you to other formatter
bugs as they are resolved so you can stay abreast of the developments.
Created attachment 228617
UI for lambda code formatting.

Two options are provided in the code formatter UI template for lambda.
1. Braces tab 
2. White Space tab => Declarations => Lambda
Note : If "white space before opening brace" is checked for a block statement, then the value of "white space after arrow operator" for lambda will not have any effect. To see it working first un-check "white space before opening brace" for block statement and then try again.
(In reply to comment #3)
Looks pretty good, but I'd request two changes:

1) In BracesTabPage.PREVIEW, the two statements in the lambda body don't seem to add any information. Please remove one of the statements.

2) In WhiteSpaceOptions, note that options can also be sorted by Syntax element. If you open a call hierarchy on LAMBDA_EXPR_PREVIEW and LABEL_PREVIEW, you see the difference.
The label on the Braces page also needs to be changed to "Lambda b&ody:".

The mnemonic &L conflicts with the "New &Lines" tab. The riddle can be solved like this:
- &Class... => inter&face
- Enum c&onstant body => Enum &constant body
- => &o is free for Lambda b&ody
Created attachment 228808
UI for lambda. Patch updated with review comments.

Thanks Markus for the review. Here is the updated patch with the below changes.

1. Modified the preview body in BracesTabPage.
2. Handled sort by syntax element for arrow operator in WhiteSpaceTabPage. Added "Arrow operator" option as a child of "Before operator" and "After operator".
3. Updated the mnemonics. Class or inter&face declaration: , Enum &constant body: and Lambda b&ody:
> 1. Modified the preview body in BracesTabPage.
Thanks! That's a great solution to avoid the option dependency you mentioned in comment 3.

Added an empty line after the beta-blurb in FormatterMessages.properties and fixed the NLS warning in WhiteSpaceOptions.java.

Released as http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=e22f118178ef366019ebbb07d469d6a8a346515f
Markus, shouldn't we keep this bug open until all the Java 8 code formatter requirements are taken care off?
(In reply to comment #8)
> Markus, shouldn't we keep this bug open until all the Java 8 code formatter
> requirements are taken care off?

I've adjusted the summary. We can deal with additional options in a separate bug.

In my plugin I have a MultiPageEditor that embeds a Java Editor on one of its 
pages. When a navigation to a Java method within the scope of my MPE is 
triggered the editor is correctly opened and switched to the source page, but 
no navigation to the method is triggered. Instead the cursor is positioned in 
the first row of the source code.
This is due to the instanceOf check in the method EditorUtility.revealInEditor
(IEditorPart part, IJavaElement element). It should be replaced by a check for 
the IGotoMarker interface. That would enable Java source navigation to quite a 
bunch of editors that have no chance to implement JavaEditor themselfes.

In my plugin I have a MultiPageEditor that embeds a Java Editor on one of its 
pages. When a navigation to a Java method within the scope of my MPE is 
triggered the editor is correctly opened and switched to the source page, but 
no navigation to the method is triggered. Instead the cursor is positioned in 
the first row of the source code.
This is due to the instanceOf check in the method EditorUtility.revealInEditor
(IEditorPart part, IJavaElement element). It should be replaced by a check for 
the IGotoMarker interface. That would enable Java source navigation to quite a 
bunch of editors that have no chance to implement JavaEditor themselfes.
IGotoMarker action would only help if we would temporarily create a marker and
then go to that marker using IGotoMarker action.

Please reopen after providing the call hierarchy which triggers the call of
EditorUtitliy.revealInEditor.

Here is the call hierarchy to the revealInEditor method (sorry, currently I do 
not have a running M8 installation with my extension, so this is taken from an 
M6 installation):

Thread [main] (Suspended (breakpoint at line 124 in EditorUtility))
	EditorUtility.revealInEditor(IEditorPart, IJavaElement) line: 124
	OpenActionUtil.open(Object, boolean) line: 51
	OpenAction.run(Object[]) line: 158
	OpenAction.run(ITextSelection) line: 135
	OpenAction(SelectionDispatchAction).dispatchRun(ISelection) line: 216
	OpenAction(SelectionDispatchAction).run() line: 188
	OpenAction(Action).runWithEvent(Event) line: 842
	ActionHandler.execute(Event) line: 40
	WorkbenchKeyboard.executeCommand(String, Event) line: 390
	WorkbenchKeyboard.press(List, Event, boolean) line: 763
	WorkbenchKeyboard.processKeyEvent(List, Event, boolean) line: 803
	WorkbenchKeyboard.filterKeySequenceBindings(Event) line: 486
	WorkbenchKeyboard.access$0(WorkbenchKeyboard, Event) line: 421
	WorkbenchKeyboard$1.handleEvent(Event) line: 215
	EventTable.sendEvent(Event) line: 82
	Display.filterEvent(Event) line: 692
	StyledText(Widget).sendEvent(Event) line: 846
	StyledText(Widget).sendEvent(int, Event, boolean) line: 871
	StyledText(Widget).sendEvent(int, Event) line: 856
	StyledText(Control).sendKeyEvent(int, int, int, int, Event) line: 1716
	StyledText(Control).sendKeyEvent(int, int, int, int) line: 1712
	StyledText(Control).WM_KEYDOWN(int, int) line: 3469
	StyledText(Control).windowProc(int, int, int, int) line: 2966
	Display.windowProc(int, int, int, int) line: 2836
	OS.DispatchMessageW(MSG) line: not available [native method]
	OS.DispatchMessage(MSG) line: 1369
	Display.readAndDispatch() line: 1990
	Workbench.runEventLoop(Window$IExceptionHandler, Display) line: 1506
	Workbench.runUI() line: 1482
	Workbench.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 246
	PlatformUI.createAndRunWorkbench(Display, WorkbenchAdvisor) line: 139
	IDEApplication.run(Object) line: 47
	PlatformActivator$1.run() line: 226
	EclipseStarter.run(String[], Runnable) line: 85
	NativeMethodAccessorImpl.invoke0(Method, Object, Object[]) line: not 
available [native method]
	NativeMethodAccessorImpl.invoke(Object, Object[]) line: 39
	DelegatingMethodAccessorImpl.invoke(Object, Object[]) line: 25
	Method.invoke(Object, Object[]) line: 324
	Main.basicRun(String[]) line: 279
	Main.run(String[]) line: 742
	Main.main(String[]) line: 581

This bug also exists in Eclipse 2.1.2. It affects all multi page editors with 
embedded java editors that use the Eclipse navigation infrastructure. In my 
case it e.g. also affects CTRL-O etc. 

Could anyone pls. have a look on this?

Thanks, Michael
I've added support for MultipageEditorPart but not for MultiPageEditor which is
deprecated).

Available in builds > 20041206
I've changed the fix to now support IGotoMarker (instead of testing for
muli-page editor).

This is in builds > 20041207.

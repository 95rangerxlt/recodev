One of the most common patterns (in Java especially) is the delegate pattern.  
I often find myself creating a wrapper class whose methods delegate to some 
other class.  It'd be great if Eclipse provided a wizard that generated a Java 
class based on the methods of another Java class or interface.  This class has 
contains all methods from the Java class or interface with a default 
implementation that delegates to a specified class member.  The generated class 
would look like:

public class MyClass implements SomeInterface {
    private MyDelegate _delegate = new MyDelegate();

    public void someMethod(...args...) {
        _delegate.someMethod(...args...);
    }
}

One of the most common patterns (in Java especially) is the delegate pattern.  
I often find myself creating a wrapper class whose methods delegate to some 
other class.  It'd be great if Eclipse provided a wizard that generated a Java 
class based on the methods of another Java class or interface.  This class has 
contains all methods from the Java class or interface with a default 
implementation that delegates to a specified class member.  The generated class 
would look like:

public class MyClass implements SomeInterface {
    private MyDelegate _delegate = new MyDelegate();

    public void someMethod(...args...) {
        _delegate.someMethod(...args...);
    }
}
Time permitted.
can be done in 2.1 using the 'generate delegat methods' action (on types) 

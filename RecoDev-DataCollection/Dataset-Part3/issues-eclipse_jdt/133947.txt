If an annotation processor calls getTypeDeclaration on the AnnotationProcessorEnvironment with an invalid type name (i.e. "..foo.Bar") it throws an ArrayIndexOutOfBoundsException. It would be nice if it could either just return null, or throw a more meaningful IllegalArgumentException.

The stacktrace from the IllegalArgumentExceptionlooks like this:

java.lang.ArrayIndexOutOfBoundsException: 0
    at org.eclipse.jdt.internal.core.util.BindingKeyParser.parseInnerType(BindingKeyParser.java:678)
    at org.eclipse.jdt.internal.core.util.BindingKeyParser.parse(BindingKeyParser.java:558)
    at org.eclipse.jdt.internal.core.util.BindingKeyParser.parse(BindingKeyParser.java:540)
    at org.eclipse.jdt.internal.core.util.BindingKeyResolver.getCompilerBinding(BindingKeyResolver.java:439)
    at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:795)
    at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:460)
    at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:664)
    at org.eclipse.jdt.apt.core.internal.env.BaseProcessorEnv.getTypeBindingFromKey(BaseProcessorEnv.java:477)
    at org.eclipse.jdt.apt.core.internal.env.BaseProcessorEnv.getTypeDefinitionBindingFromCorrectName(BaseProcessorEnv.java:428)
    at org.eclipse.jdt.apt.core.internal.env.BaseProcessorEnv.getTypeDefinitionBindingFromName(BaseProcessorEnv.java:444)
    at org.eclipse.jdt.apt.core.internal.env.BaseProcessorEnv.getTypeDeclaration(BaseProcessorEnv.java:389)
    at org.eclipse.jdt.apt.core.internal.env.ProcessorEnvImpl.getTypeDeclaration(ProcessorEnvImpl.java:331)
    at org.apache.beehive.netui.compiler.typesystem.impl.env.CoreAnnotationProcessorEnvImpl.getTypeDeclaration(CoreAnnotationProcessorEnvImpl.java:85)
    at org.apache.beehive.netui.compiler.grammar.WebappPathType.checkRelativePath(WebappPathType.java:206)
    at org.apache.beehive.netui.compiler.grammar.WebappPathType.onCheck(WebappPathType.java:150)
...

If an annotation processor calls getTypeDeclaration on the AnnotationProcessorEnvironment with an invalid type name (i.e. "..foo.Bar") it throws an ArrayIndexOutOfBoundsException. It would be nice if it could either just return null, or throw a more meaningful IllegalArgumentException.

The stacktrace from the IllegalArgumentExceptionlooks like this:

java.lang.ArrayIndexOutOfBoundsException: 0
    at org.eclipse.jdt.internal.core.util.BindingKeyParser.parseInnerType(BindingKeyParser.java:678)
    at org.eclipse.jdt.internal.core.util.BindingKeyParser.parse(BindingKeyParser.java:558)
    at org.eclipse.jdt.internal.core.util.BindingKeyParser.parse(BindingKeyParser.java:540)
    at org.eclipse.jdt.internal.core.util.BindingKeyResolver.getCompilerBinding(BindingKeyResolver.java:439)
    at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:795)
    at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:460)
    at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:664)
    at org.eclipse.jdt.apt.core.internal.env.BaseProcessorEnv.getTypeBindingFromKey(BaseProcessorEnv.java:477)
    at org.eclipse.jdt.apt.core.internal.env.BaseProcessorEnv.getTypeDefinitionBindingFromCorrectName(BaseProcessorEnv.java:428)
    at org.eclipse.jdt.apt.core.internal.env.BaseProcessorEnv.getTypeDefinitionBindingFromName(BaseProcessorEnv.java:444)
    at org.eclipse.jdt.apt.core.internal.env.BaseProcessorEnv.getTypeDeclaration(BaseProcessorEnv.java:389)
    at org.eclipse.jdt.apt.core.internal.env.ProcessorEnvImpl.getTypeDeclaration(ProcessorEnvImpl.java:331)
    at org.apache.beehive.netui.compiler.typesystem.impl.env.CoreAnnotationProcessorEnvImpl.getTypeDeclaration(CoreAnnotationProcessorEnvImpl.java:85)
    at org.apache.beehive.netui.compiler.grammar.WebappPathType.checkRelativePath(WebappPathType.java:206)
    at org.apache.beehive.netui.compiler.grammar.WebappPathType.onCheck(WebappPathType.java:150)
...
In this case, we now return null instead of allowing an exception to get thrown to the caller.

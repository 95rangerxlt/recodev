Build 20020312

package trycatch_in;

import java.net.MalformedURLException;

public class TestSuperCall {
	static class A {
		public A(int i) throws MalformedURLException {
		}
	}
	
	static class B extends A {
		public B() {
			super(10);
		}
	}
}

In the above example the AST doesn't contain a node for the super constructor 
call super(10);

And another question: which node will represent a this constructor call ?

Build 20020312

package trycatch_in;

import java.net.MalformedURLException;

public class TestSuperCall {
	static class A {
		public A(int i) throws MalformedURLException {
		}
	}
	
	static class B extends A {
		public B() {
			super(10);
		}
	}
}

In the above example the AST doesn't contain a node for the super constructor 
call super(10);

And another question: which node will represent a this constructor call ?
Same is true for a this constructor call. Here is an example

package trycatch_in;

import java.net.MalformedURLException;

public class TestThisConstructorCall {
	public TestThisConstructorCall(int i) throws MalformedURLException {
	}
	public TestThisConstructorCall() {
		this(10);
	}
}

Both problems also exist if the CU is compile error free
Don't panic :-). I am looking into it. I should have an explanation soon.
I just wanted to provide useful information ;-))
The problem comes from the fact that the explicit constructor call is not part of the 
constructor's declaration statements. It is a specific field. It is fixed now. I will release it 
for next build.

Fixed and released in HEAD.

import x.y.SomeQualifiedTypeA;
import x.y.SomeQualifiedTypeB;
public class X {
  protected abstract SomeQualifiedTypeA foo(SomeQualifiedTypeB);
}

>>> in some new compilation unit
import x.y.SomeQualifiedTypeB;
public class Y {
  <ctrl-space select foo here, result follows>
  protected x.y.SomeQualifiedTypeA foo(SomeQualifiedTypeB) {
  }
}


Code-assist should automatically add import statements for the argument
and return types rather and only produce fully qualified names in the
event of a name clash with some already imported type(s).

import x.y.SomeQualifiedTypeA;
import x.y.SomeQualifiedTypeB;
public class X {
  protected abstract SomeQualifiedTypeA foo(SomeQualifiedTypeB);
}

>>> in some new compilation unit
import x.y.SomeQualifiedTypeB;
public class Y {
  <ctrl-space select foo here, result follows>
  protected x.y.SomeQualifiedTypeA foo(SomeQualifiedTypeB) {
  }
}


Code-assist should automatically add import statements for the argument
and return types rather and only produce fully qualified names in the
event of a name clash with some already imported type(s).
we should also insert as stub as is done for override method
already implemented in 20020418

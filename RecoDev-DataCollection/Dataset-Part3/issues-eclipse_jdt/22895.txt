My coworkers and I were hoping that an option (much like "Organize imports") 
could be added that would automatically remove unused declared variables in 
methods.  They often hang around when people cut-and-paste code examples.

My coworkers and I were hoping that an option (much like "Organize imports") 
could be added that would automatically remove unused declared variables in 
methods.  They often hang around when people cut-and-paste code examples.
not 100% sure but i think removing all assignments (i.e. replacing each 
assignment with its RHS) to the unused local should do (and then removing the 
declaration)

e.g. (i not read, k and j used later)
int i= t(), k= 1;
int j= (i=g(i=g()));

is the same as:
int k= 1;
int j= (g(g()));


The compile already reports unused variables (needs to be enabled in the 
preferences). We should do the same as with unused imports: the compiler adds a 
warning and we provide a quick fix to remove the declaration.
In 2.1 there is a quick fix for unused imports (removes the import)
not for 2.1
considering for 2.2
*** Bug 33031 has been marked as a duplicate of this bug. ***
Improved the 'removed unused variable' quick fix (turn the compiler settings on
for detecting used variables & members). (in M1)

Side note about the implementation:
The quick assist is conservative when removing variables that are only
accessed with write accesses. All assignements with possible side effects are
kept: This results in a compilation error, but I think this is the best solution
as these cases have to be look at by the programmer one by one.

e.g.
res= doOperation() would best be fixed to doOperation()
but
size= vector.size() should be removed.


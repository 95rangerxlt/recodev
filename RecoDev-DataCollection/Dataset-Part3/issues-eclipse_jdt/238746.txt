In Eclipse 3.4 the semantic of the format element has been changed: if you call that Command with Cursor in a JavaDoc Method Comment then also the method body is formatted. In Eclipse 3.3 only the Java Doc comment was formatted.

Either restore the previous behavior or introduce a new command. It's quite convenient to auto-format a JavaDoc comment but not the source code.

In Eclipse 3.4 the semantic of the format element has been changed: if you call that Command with Cursor in a JavaDoc Method Comment then also the method body is formatted. In Eclipse 3.3 only the Java Doc comment was formatted.

Either restore the previous behavior or introduce a new command. It's quite convenient to auto-format a JavaDoc comment but not the source code.
Created attachment 105991
File without JavaDoc Formatting
Created attachment 105992
Format Element Result with Eclipse 3.3
Created attachment 105993
Format Element Result with Eclipse 3.4
You're right that we changed this. In 3.3 the behavior was not consistent i.e. formatting the element also formatted the Javadoc but not the other way around. This has been fixed to always format the whole element to which the comment belongs. If you only want to format the Javadoc you can select all or only parts of it and then invoke 'Format' (Ctrl+Shift+F).
Hmm, I hardly know anybody who likes to auto-format source code. However formatting only JavaDoc is such an important feature!

Is it so complicated to add a format JavaDoc command? Since there are no macros in Eclipse: what about adding a command that just calls ALT-SHIFT-UP, ALT-SHIFT-UP, CTRL-SHIFT-F in the context of a JavaDoc? I think it'll be too much overhead to write a plug-in for such a simple task.
As said simply select something (1 single char is enough) inside the comment and call 'Format'. That's not much more work to get what you want.
Bites me all the time too - whenever I write javadoc, I repeatedly format the javadoc to wrap what I just typed, but seldomly want to format the code.

Having to "select something" breaks the flow quite badly.
OK, you want to format Javadoc and not code? If so, this means you can't/don't use Format on the file and you manually select and format each Javadoc?

In that case I think a formatter option that tells the formatter to only format Javadoc would be a better fix for you.
Hi Dani!

Well, sometimes I do use the formatter to format code, but not as often as comments.

I also see the that it is more consistent to let "Format Element" format the enclosing Java element - it just doesn't fit the common practise to repeatedly format the comment (not just javadoc) being edited.

I would probably vote for another (well...) command "Format Comment" that formats the enclosing comment. Perhaps this could be generalized to "Format Enclosing Node" where the ASTNode would be the smallest ASTNode enclosing the selection that has one of the following types:

- Comment
- Statement
- BodyDeclaration
? VariableDeclaration


This would format the current comment or statement in most cases. The downside I see is that there would be no easy way to only format a method, but not its javadoc comment.

Not major anyway.
An additional action seems overkill, especially since we want to tune formatting the whole file/project and because you can now choose to only format changed lines on Save.

Here's the deal: if you provide a patch that restores the old behavior I'm willing to put it into 3.5 ;-)
Fair enough - I'll try to find some time...
Created attachment 109604
proposed patch

Patch against HEAD of jdt.ui (JavaEditor.java) and jdt.ui.tests (CodeFormatterTest.java).

The patch restores the behavior of "Format Element" only if the selection is empty and placed within a comment. In order to work with all kinds of comments, this relies on the partitioning instead of querying the javadoc range of an IMember.

The tests assert that the entire element (including comments) is formatted when the selection is within a code partition, but only the surrounding comment when the selection is within a comment.
(In reply to comment #10)
> Here's the deal: if you provide a patch that restores the old behavior I'm
> willing to put it into 3.5 ;-)

Reopening - please reconsider. Putting this in means reopening bug 230186.
Thanks for the patch Tom. Since you're still a committer please go ahead and fix it right away. Don't forget to update the copyright date and contributor info.
>Putting this in means reopening bug 230186.
Done (marked as WONTFIX).

Thanks for providing the patch, Tom!
Fixed in HEAD > 20080816 as stated in comment 12.

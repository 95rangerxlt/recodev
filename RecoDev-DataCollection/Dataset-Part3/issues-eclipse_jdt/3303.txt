EG (6/11/2001 2:49:58 AM)
	1) 	start a new worksspace
	2) 	add some Java projects from the repository
	->		the autobuilder starts building and there are
			many errors: reference to non-existing class java.lang.object

The problem is that the Java UI sets the JRE variables, but it never
got activated in the above scenario. The consequence is that the
variables are not set. 

NOTES:
EG (6/11/2001 2:51:02 AM)
	Fix would be an extension point in CORE that allows clients to plugin
	additional code that should be run on activation. The UI would implmeent
	the extension point and add code that sets the JRE variables.	

PM (9/13/2001 11:45:24 AM)
	Agreed.

EG (6/11/2001 2:49:58 AM)
	1) 	start a new worksspace
	2) 	add some Java projects from the repository
	->		the autobuilder starts building and there are
			many errors: reference to non-existing class java.lang.object

The problem is that the Java UI sets the JRE variables, but it never
got activated in the above scenario. The consequence is that the
variables are not set. 

NOTES:
EG (6/11/2001 2:51:02 AM)
	Fix would be an extension point in CORE that allows clients to plugin
	additional code that should be run on activation. The UI would implmeent
	the extension point and add code that sets the JRE variables.	

PM (9/13/2001 11:45:24 AM)
	Agreed.
*** Bug 5285 has been marked as a duplicate of this bug. ***
Implementing the proposal 
http://dev.eclipse.org/viewcvs/index.cgi/~checkout~/org.eclipse.jdt.core/notes/r
2.0/variable%20init/uninit-classpath-vars.html

It will call the initializer each time a variable is left unbound. 
We might want to funace this behavior to only give one chance for initializing 
the variable, and potentially also asking for initializing if the variable is 
bound to an undefined location ?

Currently, it will be called several times (until variable is initialized), and 
only if the variable is undefined.
Released into next integration build. Note though that a variable initializer 
will only be called once per session (unlike my previous comment did state).

Fixed.

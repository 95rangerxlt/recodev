In M5 a new Code Generation template facility was added to the Java preferences.
 On the Code and Comments tab you can change the code for Method body.  By
default this comment looks like this:

// ${todo} Auto-generated method stub
${body_statement}

I didn't want the todo to show up so I erased the comment leaving:

${body_statement}

I then created an inner class in my editor that extended AbstractAction.  I went
over to my outline, right clicked, and selected Override/Implement Methods...  I
clicked OK (the actionPerformed method was already selected as expected) and
here is the code that generated:

/**
 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
 */
public void actionPerformed(ActionEvent arg0);

The javadoc is correct (I made a modification to the Comments/Method to get this
behavior), but you will notice that the method signature has a semi-colon at the
end instead of the pair of brackets I would have gotten under M4.

I did not perform a similar test under the other Code elements but there is a
possibility that they may behave as this did.

I put the seriousness of this bug to Critical because it makes an oft used
feature a lot less powerful.  The example given does not compile because it is
not correct Java syntax.

Thanks alot,
-Phil

In M5 a new Code Generation template facility was added to the Java preferences.
 On the Code and Comments tab you can change the code for Method body.  By
default this comment looks like this:

// ${todo} Auto-generated method stub
${body_statement}

I didn't want the todo to show up so I erased the comment leaving:

${body_statement}

I then created an inner class in my editor that extended AbstractAction.  I went
over to my outline, right clicked, and selected Override/Implement Methods...  I
clicked OK (the actionPerformed method was already selected as expected) and
here is the code that generated:

/**
 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
 */
public void actionPerformed(ActionEvent arg0);

The javadoc is correct (I made a modification to the Comments/Method to get this
behavior), but you will notice that the method signature has a semi-colon at the
end instead of the pair of brackets I would have gotten under M4.

I did not perform a similar test under the other Code elements but there is a
possibility that they may behave as this did.

I put the seriousness of this bug to Critical because it makes an oft used
feature a lot less powerful.  The example given does not compile because it is
not correct Java syntax.

Thanks alot,
-Phil
This got addressed for build > I20030214.

When hovering over a base Java class I don't get a tooltip but an exception is thrown instead

java.lang.NullPointerException
at org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations.getBaseURL(JavaDocLocations.java:605)
at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:630)
at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:555)
at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:547)
at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:141)
at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:82)
at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

I've been checking my JavaDoc and source attachments for the JDK being used and they appear to be OK.

When hovering over a base Java class I don't get a tooltip but an exception is thrown instead

java.lang.NullPointerException
at org.eclipse.jdt.internal.corext.javadoc.JavaDocLocations.getBaseURL(JavaDocLocations.java:605)
at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:630)
at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:555)
at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:547)
at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:141)
at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:82)
at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

I've been checking my JavaDoc and source attachments for the JDK being used and they appear to be OK.
Created attachment 185604
JRE Definition Dialog

I've checked the contents of both the Src and the JavaDoc jars and they appear normal.
Switching back to the default JavaDoc location (http://java.sun.com/javase/6/docs/api/) I get the same problem.
(In reply to comment #1)
> Created an attachment (id=185604) [details]
> JRE Definition Dialog

Is there supposed to be an exclamation mark in that path?
(In reply to comment #3)
> (In reply to comment #1)
> > Created an attachment (id=185604) [details]
> > JRE Definition Dialog
> 
> Is there supposed to be an exclamation mark in that path?
I guess so. This is automatically added and I think it is used to separate the path to the jar from the path inside the jar.

Note that when I tested with a fresh Eclipse installation I do not get this problem. So I guess there is something dirty in my settings. I'm reluctant to start assembling a new Eclipse installation but I think that's the quickest solution for me anyway.
What's the build id?

Markus, can you please have a look?
The build id is M20100909-0800.
The Javadoc and source paths in comment 1 are looking fine. For classes where source is available, the Javadoc path should not be consulted at all (Javadoc is extracted from source).

I could not reproduce the exception, and AFAICS, this can only happen if the help UI is not available. It looks like the org.eclipse.help.ui plug-in is  missing in your install.

The screenshot also doesn't look like it's coming from a proper SDK install, since the fonts are too big. This happens if -Dorg.eclipse.swt.internal.carbon.smallFonts is missing from the command line (but it's there in the default Eclipse.app/Contents/MacOS/eclipse.ini).

I can add protection against the NPE, but I don't think we need to backport this to 3.6.2.
> I can add protection against the NPE, but I don't think we need to backport
> this to 3.6.2.
+1
Created attachment 186029
Fix for the NPEs
Fixed in HEAD.

You also get entries like this in the log when org.eclipse.help.ui is not available:
!ENTRY org.eclipse.ui 4 4 2011-01-04 17:51:05.847
!MESSAGE Unable to instantiate help UI

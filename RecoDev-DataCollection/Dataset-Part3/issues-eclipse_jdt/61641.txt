In M8, applying the Introduce Parameter refactoring on the argument passed to
doSomething(...) in the following scenario:

public class AClass
{
    public void method1()
    {
        method2();
    }

    public void method2()
    {
        doSomething(new int[] {1, 2, 3});
        ...
    }

    ...
}

Gives:

public class AClass
{
    public void method1()
    {
        method2(new int[]={1,2,3});
    }

    public void method2(int[] ints)
    {
        doSomething(ints);
        ...
    }
    
    ...
}

Where did that equals sign in the call to method2 come from?  It causes a
compile error.  Also, what happened to the spaces after the commas in the array
creation?

In M8, applying the Introduce Parameter refactoring on the argument passed to
doSomething(...) in the following scenario:

public class AClass
{
    public void method1()
    {
        method2();
    }

    public void method2()
    {
        doSomething(new int[] {1, 2, 3});
        ...
    }

    ...
}

Gives:

public class AClass
{
    public void method1()
    {
        method2(new int[]={1,2,3});
    }

    public void method2(int[] ints)
    {
        doSomething(ints);
        ...
    }
    
    ...
}

Where did that equals sign in the call to method2 come from?  It causes a
compile error.  Also, what happened to the spaces after the commas in the array
creation?
Move to JDT/UI.
I think this was a bug in the NaiveFlattener that has been fixed.
Fixed in M9.

The formatting is now preserved.

> I think this was a bug in the NaiveFlattener that has been fixed.
Yes, the equals sign was because of that.



Build ID: M20060921-0945

Steps To Reproduce:
1. Create an outer class and a (non-static) inner class
2. give the outer class a few fields and the inner class as well.
3. Create equals/hashCode for the outer class (optional, but does not help)
4. Create equals/hashCode for the inner class

Actual result:
equals/hashCode ignore that the outer class exists - neither the outer class's fields nor its equals() method is called. If the inner class does not have any fields on its own, creating equals/hashcode is impossible.

Expected result:
Either the fields of the outer class or the outer instance itself (or its equals method) is listed in the field selector dialog.

Workaround: 
Refactor the inner class to toplevel first, then you can select the (now explicit) outer class field.

Build ID: M20060921-0945

Steps To Reproduce:
1. Create an outer class and a (non-static) inner class
2. give the outer class a few fields and the inner class as well.
3. Create equals/hashCode for the outer class (optional, but does not help)
4. Create equals/hashCode for the inner class

Actual result:
equals/hashCode ignore that the outer class exists - neither the outer class's fields nor its equals() method is called. If the inner class does not have any fields on its own, creating equals/hashcode is impossible.

Expected result:
Either the fields of the outer class or the outer instance itself (or its equals method) is listed in the field selector dialog.

Workaround: 
Refactor the inner class to toplevel first, then you can select the (now explicit) outer class field.
Still present in Eclipse 3.3
fixed > 20070705

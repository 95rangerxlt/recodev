I have read that: A Java project (in Eclipse) is a Java source container, 
allowing you to manage these sources all at once. Apparently the source 
container is actually a real directory in the file system. 

This is a very limiting definition. I would rather like to see that a project 
defines ANY set of .java files and associated items. 

For a set of .java files to be useful in a project, you should also be able to 
specify:
- an output path (the -d option in javac)
- a classpath (the -classpath option in javac)

I think this is all you need. You could do away with root location, nested 
subfolders and constraints on where they are. Look at JBuilder to see that this 
is feasible.

It would be very nice if a project defintion would be stored in an XML file. 
This would allow projects to be opened and closed and manipulated. It could 
also store additional information, that I am missing now: an owner, company, 
copyright, description, version etc.

I have read that: A Java project (in Eclipse) is a Java source container, 
allowing you to manage these sources all at once. Apparently the source 
container is actually a real directory in the file system. 

This is a very limiting definition. I would rather like to see that a project 
defines ANY set of .java files and associated items. 

For a set of .java files to be useful in a project, you should also be able to 
specify:
- an output path (the -d option in javac)
- a classpath (the -classpath option in javac)

I think this is all you need. You could do away with root location, nested 
subfolders and constraints on where they are. Look at JBuilder to see that this 
is feasible.

It would be very nice if a project defintion would be stored in an XML file. 
This would allow projects to be opened and closed and manipulated. It could 
also store additional information, that I am missing now: an owner, company, 
copyright, description, version etc.
The project description is no inside a .project file in XML.

Support for scattered source folders is not planned for 2.0.
The configurable output folder and source folders and linking got introduced 
in 2.1.

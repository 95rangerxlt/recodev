I20060105-0800

Test case:

package p;

public class Decl {

	public static final int VALUE= 0; 
}

package q;

import static Decl<code assit>

public class A {

}

- execute code assist after import static Decl
- pick p.Decl

observe: you get

package q;

import static Decl
import p.Decl;

public class A {

}

I20060105-0800

Test case:

package p;

public class Decl {

	public static final int VALUE= 0; 
}

package q;

import static Decl<code assit>

public class A {

}

- execute code assist after import static Decl
- pick p.Decl

observe: you get

package q;

import static Decl
import p.Decl;

public class A {

}
Bug got introduced with the LazyJavaTypeCompletionProposal

computeReplacementString should test before adding an import that we not in the import section.

if (types.length > 0 && types[0].getSourceRange().getOffset() <= offset) {
fixed > 20060213. LazyJavaTypeCompletionProposal::isImportCompletion did not detect types completed within a static import.

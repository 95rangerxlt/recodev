If a classpath passed to the compiler contains an invalid entry, the compiler 
throws an exception. At worst, it should log a warning, but should proceed by 
ignoring invalid entries on the classpath. This is pretty much in line with 
what javac does.

The code is in Main.java at line 602

for (int i = 0, max = classpaths.length; i < max; i++) {
		File file = new File(classpaths[i]);
		if (!file.exists())
			throw new InvalidInputException(Main.bind	}

If a classpath passed to the compiler contains an invalid entry, the compiler 
throws an exception. At worst, it should log a warning, but should proceed by 
ignoring invalid entries on the classpath. This is pretty much in line with 
what javac does.

The code is in Main.java at line 602

for (int i = 0, max = classpaths.length; i < max; i++) {
		File file = new File(classpaths[i]);
		if (!file.exists())
			throw new InvalidInputException(Main.bind	}
This is only a batch compiler issue. Ignoring is definitely an option.
Changed for ignoring, still dumping a warning in the console.

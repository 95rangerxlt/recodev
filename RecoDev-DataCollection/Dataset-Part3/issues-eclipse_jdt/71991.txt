Assume "Statements within blocks" is set in the Identation tab in the Code
Formatter preference panel.  (I'll try to attach my style.)
In that case Source->Format will produce the following (correct):

public class Foo
{
  public static void main (String[] args)
  {
    if (false)
      {
        args[0] = "12";
      }
  }
}

Now got to the line with the assignment and do Ctrl-I.
The result is different and wrong:

    if (false)
      {
      args[0] = "12";
      }

Assume "Statements within blocks" is set in the Identation tab in the Code
Formatter preference panel.  (I'll try to attach my style.)
In that case Source->Format will produce the following (correct):

public class Foo
{
  public static void main (String[] args)
  {
    if (false)
      {
        args[0] = "12";
      }
  }
}

Now got to the line with the assignment and do Ctrl-I.
The result is different and wrong:

    if (false)
      {
      args[0] = "12";
      }
Created attachment 13959
Export of Code Formatter options

These of the Code Formatter options to use to try to duplicate the bug.
Ctrl + I is not calling the code formatter. Moving to JDT/Text.
Not sure what "Ctrl + I is not calling the code formatter" means, but it doesn't
appear to be an accurate description of the problem:

Ctrl-I does re-indent the current line, as I can verify by adding or removing
initial whitespace and then typing Ctrl-I.  Most of the time it seems to
*correctly* re-indent the current line.  The bug report is about the specific
case of a statement inside a brace-block - in this case Ctrl-I indents
incorrectly.  (Non-block braces seem to work ok.) 

"Indent line" is checking the Code formatter options, because the indentation
changes depending on whether the Braces->Method declaration setting is "next
line" or "next line indented."
works for me now - I believe this has been fixed with some recent indentation
fixes. please reopen if you still see this after M4.

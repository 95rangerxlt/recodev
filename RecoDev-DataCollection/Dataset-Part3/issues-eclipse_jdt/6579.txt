1. Drill into a JAR with a manifest file (MANIFEST.MF) in the Packages view.
Note: The JAR must be on the build path.
2. Double-click MANIFEST.MF -> nothing happens
3. From the context menu select "Open" -> nothing happens

I used ant.jar in org.eclipse.ant.core as my test case.

1. Drill into a JAR with a manifest file (MANIFEST.MF) in the Packages view.
Note: The JAR must be on the build path.
2. Double-click MANIFEST.MF -> nothing happens
3. From the context menu select "Open" -> nothing happens

I used ant.jar in org.eclipse.ant.core as my test case.
There is no editor registered for a .MF JAR. We should give at least give an 
info dialog in this case.
I don't agree (or must editors for files in a JAR be registered for each file 
ending?). When I have MANIFEST.MF in a "normal" folder I can open it. Also x.y 
can be opened. It rather seems that being in the JAR is the problem.

This isn't the final solution. The deeper problem is that there is no API from 
the workbench to open the default editor. This is a pending request.
*** Bug 49801 has been marked as a duplicate of this bug. ***
>This isn't the final solution. The deeper problem is that there is no API from 
>the workbench to open the default editor. This is a pending request.
This is now improved: for file types which have an external editor (defined in
OS) we show a dialog box (because the Platform's external editor cannot work on
JarEntryEditorInput - it would probably have to create a temporary file). For
files that do not have a registered editor we use the default text editor. This
is the same behavior as when opening an IFile called MANIFEST.MF.

If filed two PRs against Platform UI:
Bug 50287: Support for opening external/default editor on IStorageEditorInput
Bug 50285: Provide API for code in IDE.openEditor which gets editor descriptor API
*** Bug 47467 has been marked as a duplicate of this bug. ***

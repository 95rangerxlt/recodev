package pkg.test;

@FunctionalInterface
interface FI {
	int foo();
}

class C1 {
	void fun1(int x) {
		FI test= () -> {
			for (int k=0;k<1;) ;
			for (int k=0;k<1;) ;
			try {
				
			} catch (Exception ex) {
				
			}
			return 0;
		};
	}
}
---------------------------------------------------------------

Hover over "ex" in catch clause. We get the following exception:

java.lang.ClassCastException: org.eclipse.jdt.internal.compiler.ast.ForStatement cannot be cast to org.eclipse.jdt.internal.compiler.ast.LambdaExpression
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeLambdaExpression(Parser.java:7975)
	at org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeLambdaExpression(SelectionParser.java:765)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:6827)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:11023)
	at org.eclipse.jdt.internal.codeassist.impl.AssistParser.parseBlockStatements(AssistParser.java:1628)
	at org.eclipse.jdt.internal.codeassist.impl.AssistParser.parseBlockStatements(AssistParser.java:1466)
	at org.eclipse.jdt.internal.codeassist.impl.Engine.parseBlockStatements(Engine.java:308)
	at org.eclipse.jdt.internal.codeassist.impl.Engine.parseBlockStatements(Engine.java:271)
	at org.eclipse.jdt.internal.codeassist.SelectionEngine.select(SelectionEngine.java:964)
	at org.eclipse.jdt.internal.core.Openable.codeSelect(Openable.java:163)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:381)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:375)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractJavaEditorTextHover.getJavaElementsAt(AbstractJavaEditorTextHover.java:118)
...

package pkg.test;

@FunctionalInterface
interface FI {
	int foo();
}

class C1 {
	void fun1(int x) {
		FI test= () -> {
			for (int k=0;k<1;) ;
			for (int k=0;k<1;) ;
			try {
				
			} catch (Exception ex) {
				
			}
			return 0;
		};
	}
}
---------------------------------------------------------------

Hover over "ex" in catch clause. We get the following exception:

java.lang.ClassCastException: org.eclipse.jdt.internal.compiler.ast.ForStatement cannot be cast to org.eclipse.jdt.internal.compiler.ast.LambdaExpression
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeLambdaExpression(Parser.java:7975)
	at org.eclipse.jdt.internal.codeassist.select.SelectionParser.consumeLambdaExpression(SelectionParser.java:765)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:6827)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:11023)
	at org.eclipse.jdt.internal.codeassist.impl.AssistParser.parseBlockStatements(AssistParser.java:1628)
	at org.eclipse.jdt.internal.codeassist.impl.AssistParser.parseBlockStatements(AssistParser.java:1466)
	at org.eclipse.jdt.internal.codeassist.impl.Engine.parseBlockStatements(Engine.java:308)
	at org.eclipse.jdt.internal.codeassist.impl.Engine.parseBlockStatements(Engine.java:271)
	at org.eclipse.jdt.internal.codeassist.SelectionEngine.select(SelectionEngine.java:964)
	at org.eclipse.jdt.internal.core.Openable.codeSelect(Openable.java:163)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:381)
	at org.eclipse.jdt.internal.core.CompilationUnit.codeSelect(CompilationUnit.java:375)
	at org.eclipse.jdt.internal.ui.text.java.hover.AbstractJavaEditorTextHover.getJavaElementsAt(AbstractJavaEditorTextHover.java:118)
...
Thanks Noopur, I'll take a look.
There were two problems:

- Selection parser was building a wrong parse tree - having gotten out of
alignment due to a missing pop.

- Hover at catch formal parameter declaration site never worked previously
even without lambdas being in the picture as the  resolution was simply
not happening.

Fix and tests here: 
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=b6755ce2d08e0d5d352a051fea787f1496b49482

Thanks Noopur.

If you open type on org.eclipse.jdt.internal.compiler.parser.Parser if it is 
not currently visible it will take 36398 ms. I was benchmarking using 
OptimizeIt so the actual times will be a little better.

The following methods took the most time
The JavaOutlineViewer itnernalExpandToLevel took 5729 ms. 3779 ms of that was 
getting the image for the TreeViewer.

PackageExplorerPart.editorActivated() took 3081 ms, most of which was spent 
creating TreeItems and decorating them.

TypeHierarchyPart.setInputElement() took 15286 ms. updateMethodViewer() took 
2701 ms and ensureRefreshedTypeHierarchy took 11387 ms.

If you open type on org.eclipse.jdt.internal.compiler.parser.Parser if it is 
not currently visible it will take 36398 ms. I was benchmarking using 
OptimizeIt so the actual times will be a little better.

The following methods took the most time
The JavaOutlineViewer itnernalExpandToLevel took 5729 ms. 3779 ms of that was 
getting the image for the TreeViewer.

PackageExplorerPart.editorActivated() took 3081 ms, most of which was spent 
creating TreeItems and decorating them.

TypeHierarchyPart.setInputElement() took 15286 ms. updateMethodViewer() took 
2701 ms and ensureRefreshedTypeHierarchy took 11387 ms.
Looks more like an outline/tree population problem. Our standard test case is 
opening the SWT OS class.
fixed in M5

form bug 31764 
The API says that an error message is shown when computeCompletionProposals or 
computeContextInformation return null, so only when no proposals are shown. 
However, teh current code does only return an error message when the number of 
corrections is > 0

public String getErrorMessage() {
	if (fNumberOfComputedResults == 0)
		return JavaUIMessages.getString
("JavaEditor.codeassist.noCompletions"); //$NON-NLS-1$
	if (PreferenceConstants.getPreferenceStore().getBoolean
(PreferenceConstants.CODEASSIST_FILL_ARGUMENT_NAMES)) {
		return fExperimentalCollector.getErrorMessage();
	} else {
		return fCollector.getErrorMessage();
	}
}

form bug 31764 
The API says that an error message is shown when computeCompletionProposals or 
computeContextInformation return null, so only when no proposals are shown. 
However, teh current code does only return an error message when the number of 
corrections is > 0

public String getErrorMessage() {
	if (fNumberOfComputedResults == 0)
		return JavaUIMessages.getString
("JavaEditor.codeassist.noCompletions"); //$NON-NLS-1$
	if (PreferenceConstants.getPreferenceStore().getBoolean
(PreferenceConstants.CODEASSIST_FILL_ARGUMENT_NAMES)) {
		return fExperimentalCollector.getErrorMessage();
	} else {
		return fCollector.getErrorMessage();
	}
}
Currently the completion engine is never feeding the requestor (see bug 31764), 
I would not change this late in the 2.1 game (will defer completion engine fix 
for 2.1).
I have a fix for bug 31764. With this fix, an error is given to the code assist 
requestor when there is no completion and there is a non-syntax error. If this 
bug (32101)is not fixed, this error message will be never shown to the user.




Build > 20020303.

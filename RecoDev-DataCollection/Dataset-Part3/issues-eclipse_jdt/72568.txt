Hi,

I just got the latest integration build that has the fix for [Bug 47549] GPF in 
XtSetValues on M5.
I loaded a bigger project into my workspace >1000 classes.
When I open a java file and right click with the mouse and try to open a 
context menu item like Refactor the whole UI (not only Eclipse everything else 
too) becomes unresponsive for a relatively long time 5 - 30 seconds sometimes 
even more than that (I didn't clock the longest ones).
There is no error output of any kind.

My environment:
Linux RH WS 2.1 / RH 7.2

Eclipse 3.1.0 I200408241200

java.version=1.4.2_04
java.vm.name=Java HotSpot(TM) Client VM
java.vm.vendor=Sun Microsystems Inc.
java.vm.version=1.4.2_04-b05

os.arch=i386
os.name=Linux
os.version=2.4.9-e.48smp
osgi.arch=x86


Thanks

Rico

Hi,

I just got the latest integration build that has the fix for [Bug 47549] GPF in 
XtSetValues on M5.
I loaded a bigger project into my workspace >1000 classes.
When I open a java file and right click with the mouse and try to open a 
context menu item like Refactor the whole UI (not only Eclipse everything else 
too) becomes unresponsive for a relatively long time 5 - 30 seconds sometimes 
even more than that (I didn't clock the longest ones).
There is no error output of any kind.

My environment:
Linux RH WS 2.1 / RH 7.2

Eclipse 3.1.0 I200408241200

java.version=1.4.2_04
java.vm.name=Java HotSpot(TM) Client VM
java.vm.vendor=Sun Microsystems Inc.
java.vm.version=1.4.2_04-b05

os.arch=i386
os.name=Linux
os.version=2.4.9-e.48smp
osgi.arch=x86


Thanks

Rico
Hi,

I did more testing and there are some context menu items in the package 
explorer that have the same problem.
Run ...
Debug ...
take a long time too and block the UI completely.

Tnanks
Rico
Rico,

this is a side effect of the context sensitive refactoring menu. To shorten 
the menu we do some calculations. They are done in the background, but if you 
open the menu in a very large file right after you stopped typing or after you 
opened the file, we have to wait until the computation is done.

What kind of machine are you using ?
My machine is a P4 3GHz with 1GB. So it's a fairly high end machine.

Rico
We have found a performance problem in the Java model cache (especially in big
workspaces) which slows down AST creation in certain situations (which will
affect the refactoring menu as well). 

Rico, can you confirm that this happens for large files only
Hmmm ... yes it seems to be worse with bigger files.

Rico
Dirk, is this a jdt.core or ui problem? Please forward it to the correct component.
Reassigning to JDT/UI until further information is provided
Rico, can you please retest this with the M4 build coming end of this year.
There will be still a delay if the refactoring sub menu is opened shortly after
stopping typing in large files. But this can't be avoided.
Dirk, when do you think the fix will be released?
M4 is scheduled for Dec. 17th.
But it is in I20041207 as well.
Hmm ... I downloaded that build and the refactoring context menu looks good ...
but still the Run/Debug menus are not better. It still takes several seconds
until they are displayed and the UI is blocked. 
So if I just open the file context menu (for a java class) and want to go down
to the Team menu it hangs on Run for several seconds until it finally opens the
Team menu. That is fairly annoying especially with Motif, cause you have to hold
the right mouse button down to keep the context menu up.

Rico
Moving to Debug then.
Moving back to JDT-UI. We already have bug for the run/debug menu performance 
(bug 78503). This bug can be used to track the Refactor menu.
Thanks Darin.

Closing then since the performance for the refactor menu got improved for M4.

Version 3.3M1.
If you have the following two types and you do a "Clean Up" with "Change access to static using declaring type." enabled, you will not be able to compile the results. This example is a simplification based on our production code.

SomeClass.java:

package test;

public class SomeClass implements SomeConstants {

}

----

SomeConstants.java:

package test;

interface SomeConstants {

    String FOO = "FOO";
}

----

package test2;

import test.SomeClass;

public class SomeSubclass {

    public String getIt() {
        return SomeClass.FOO;
    }

}

----
Select "SomeSubclass" and do a "Clean Up", results in:

Severity and Description	Path	Resource	Location	Creation Time	Id
SomeConstants cannot be resolved	Test Java 1.5/src/test2	SomeSubclass.java	line 21	1156293250127	16790299
The type test.SomeConstants is not visible	Test Java 1.5/src/test2	SomeSubclass.java	line 12	1156293250127	16790297

Version 3.3M1.
If you have the following two types and you do a "Clean Up" with "Change access to static using declaring type." enabled, you will not be able to compile the results. This example is a simplification based on our production code.

SomeClass.java:

package test;

public class SomeClass implements SomeConstants {

}

----

SomeConstants.java:

package test;

interface SomeConstants {

    String FOO = "FOO";
}

----

package test2;

import test.SomeClass;

public class SomeSubclass {

    public String getIt() {
        return SomeClass.FOO;
    }

}

----
Select "SomeSubclass" and do a "Clean Up", results in:

Severity and Description	Path	Resource	Location	Creation Time	Id
SomeConstants cannot be resolved	Test Java 1.5/src/test2	SomeSubclass.java	line 21	1156293250127	16790299
The type test.SomeConstants is not visible	Test Java 1.5/src/test2	SomeSubclass.java	line 12	1156293250127	16790297
Created attachment 48427
test\SomeClass.java
Created attachment 48428
test\SomeConstants.java
Created attachment 48429
test2\SomeSubclass.java
I just realized that the attached file have our company copyright in the source, which are not in the stuff I pasted above. If that's a problem, please let me know and I'll remove those. Thanks.
Moving to JDT UI.
reproduced in I20060816-1200 with the coed in comment 0
Problem is that the supertype is only package visible. 
I can reproduce that in 3.2.1 but not in HEAD anymore. It must have been fixed be core (indirect static access warning) but I can't find the corresponding bug. Added a test case to CleanUpTest.

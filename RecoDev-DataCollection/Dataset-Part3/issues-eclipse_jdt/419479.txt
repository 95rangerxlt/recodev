I see 3 POM version tool failures in my BETA_JAVA8 workspace:

Description	Resource	Path	Location	Type
POM artifact version 3.3.401 does not match bundle version 3.3.400	pom.xml	/org.eclipse.jdt.apt.tests	line 22	POM Version Problem
POM artifact version 3.9.0 does not match bundle version 3.8.2	pom.xml	/org.eclipse.jdt.core.tests.model	line 22	POM Version Problem
POM artifact version 3.9.0 does not match bundle version 3.8.3	pom.xml	/org.eclipse.jdt.core.tests.compiler	line 22	POM Version Problem

I see 3 POM version tool failures in my BETA_JAVA8 workspace:

Description	Resource	Path	Location	Type
POM artifact version 3.3.401 does not match bundle version 3.3.400	pom.xml	/org.eclipse.jdt.apt.tests	line 22	POM Version Problem
POM artifact version 3.9.0 does not match bundle version 3.8.2	pom.xml	/org.eclipse.jdt.core.tests.model	line 22	POM Version Problem
POM artifact version 3.9.0 does not match bundle version 3.8.3	pom.xml	/org.eclipse.jdt.core.tests.compiler	line 22	POM Version Problem
Looks like an incomplete cherry-pick from master: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=c9761165cd2df79970aa5e4d77f818f34e0cba49
Also some of the pom files have got 4.4 as parent version. I believe these should reflect R4_3* and should be changes to 4.3.

Markus, can you confirm?
Fixed the versions in pom.xml to match the manifest:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=25781db0644acceda9140236e110eb5fe3b960c9
Yes, bundle versions and parent pom in BETA_JAVA8 should be the same as in R4_3_maintenance (except for bundles that only changed in BETA_JAVA8).

The first version of BETA_JAVA8 we will ship will be based on 4.3.2, so everything in the build should be as close as possible to R4_3_maintenance.

Regarding code changes, we can merge commits from master into BETA_JAVA8 as long as the result still works fine with a 4.3.1 target platform.

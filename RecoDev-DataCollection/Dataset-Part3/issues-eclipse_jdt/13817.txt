build 2002-04-12 on WinXP.

Every once in a while I have problems when I try to orgranize imports. Below 
is the example output of what the file looks like. Note the import statments 
inserted into the javadoc.

The problem is not reproducable every time, but the pattern that I am using is 
(I am changing a lot of files at once):
- Navigate to file in Packages view
- Ctrl-V to paste copyright notice
- Ctrl-Shift-O to organize imports
- Ctrl-O to format

Not sure if this is related, but note that I am not using my mouse at all, I 
am always using my keyboard only and the shortcuts.

--------- example file --------------------

/******************************************import 
java.net.MalformedURLException;
import java.net.URL;
import junit.framework.*;
import org.eclipse.webdav.internal.utils.URLDecoder;
import org.eclipse.webdav.internal.utils.URLEncoder;mmon Public License v0.5
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/cpl-v05.html
 * 
 * Contributors:
 * IBM - Initial API and implementation
 **********************************************************************/
package org.eclipse.webdav.tests.utils;

import org.eclipse.webdav.internal.utils.URLEncoder;
import org.eclipse.webdav.internal.utils.URLDecoder;

import java.net.MalformedURLException;
import java.net.URL;

import junit.framework.*;

/**
 * Unit tests for the classes <code>URLEncoder</code> and
 * <code>URLDecoder</code>.
 *
 * @see URLEncoder
 * @see URLDecoder
 */
public class TestURLEncoder extends TestCase {
/**
 * Constructs a test case with the given name.
 */
public TestURLEncoder(String name) {
	super(name);
}
/**
 * Runs the tests.
 */
public static void main(String[] args) {
	junit.textui.TestRunner.run(suite());
}
/**
 * Returns the test suite.
 */
public static Test suite() {
	TestSuite suite = new TestSuite();
	suite.addTest(new TestURLEncoder("testUsecase1"));
	return suite;
}
/**
 * Use case test 1.
 */
public void testUsecase1() {
	try {
		URL original = new URL("http://www.oti.com");
		URL encoded = URLEncoder.encode(original);
		URL decoded = URLDecoder.decode(encoded);

		assertEquals("01", original, encoded);
		assertEquals("02", original, decoded);

		original = new URL("http://www.oti.com/");
		encoded = URLEncoder.encode(original);
		decoded = URLDecoder.decode(encoded);

		assertEquals("03", original, encoded);
		assertEquals("04", original, decoded);

		original = new URL("http://www.oti.com/folder/file/ref");
		encoded = URLEncoder.encode(original);
		decoded = URLDecoder.decode(encoded);

		assertEquals("05", original, encoded);
		assertEquals("06", original, decoded);

		original = new URL("http://www.oti.com/fol der/fi le");
		encoded = URLEncoder.encode(original);
		decoded = URLDecoder.decode(encoded);

		assertEquals("07", new URL("http://www.oti.com/fol%20der/fi%
20le"), encoded);
		assertEquals("08", original, decoded);

		original = new URL("http://www.oti.com/fi\u1234le#re\u5678f");
		encoded = URLEncoder.encode(original);
		decoded = URLDecoder.decode(encoded);

		assertEquals("09", new URL("http://www.oti.com/fi%e1%88%
b4le#re%e5%99%b8f"), encoded);
		assertEquals("10", original, decoded);
	} catch (MalformedURLException e) {
		fail("11");
	}
}
}

build 2002-04-12 on WinXP.

Every once in a while I have problems when I try to orgranize imports. Below 
is the example output of what the file looks like. Note the import statments 
inserted into the javadoc.

The problem is not reproducable every time, but the pattern that I am using is 
(I am changing a lot of files at once):
- Navigate to file in Packages view
- Ctrl-V to paste copyright notice
- Ctrl-Shift-O to organize imports
- Ctrl-O to format

Not sure if this is related, but note that I am not using my mouse at all, I 
am always using my keyboard only and the shortcuts.

--------- example file --------------------

/******************************************import 
java.net.MalformedURLException;
import java.net.URL;
import junit.framework.*;
import org.eclipse.webdav.internal.utils.URLDecoder;
import org.eclipse.webdav.internal.utils.URLEncoder;mmon Public License v0.5
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/cpl-v05.html
 * 
 * Contributors:
 * IBM - Initial API and implementation
 **********************************************************************/
package org.eclipse.webdav.tests.utils;

import org.eclipse.webdav.internal.utils.URLEncoder;
import org.eclipse.webdav.internal.utils.URLDecoder;

import java.net.MalformedURLException;
import java.net.URL;

import junit.framework.*;

/**
 * Unit tests for the classes <code>URLEncoder</code> and
 * <code>URLDecoder</code>.
 *
 * @see URLEncoder
 * @see URLDecoder
 */
public class TestURLEncoder extends TestCase {
/**
 * Constructs a test case with the given name.
 */
public TestURLEncoder(String name) {
	super(name);
}
/**
 * Runs the tests.
 */
public static void main(String[] args) {
	junit.textui.TestRunner.run(suite());
}
/**
 * Returns the test suite.
 */
public static Test suite() {
	TestSuite suite = new TestSuite();
	suite.addTest(new TestURLEncoder("testUsecase1"));
	return suite;
}
/**
 * Use case test 1.
 */
public void testUsecase1() {
	try {
		URL original = new URL("http://www.oti.com");
		URL encoded = URLEncoder.encode(original);
		URL decoded = URLDecoder.decode(encoded);

		assertEquals("01", original, encoded);
		assertEquals("02", original, decoded);

		original = new URL("http://www.oti.com/");
		encoded = URLEncoder.encode(original);
		decoded = URLDecoder.decode(encoded);

		assertEquals("03", original, encoded);
		assertEquals("04", original, decoded);

		original = new URL("http://www.oti.com/folder/file/ref");
		encoded = URLEncoder.encode(original);
		decoded = URLDecoder.decode(encoded);

		assertEquals("05", original, encoded);
		assertEquals("06", original, decoded);

		original = new URL("http://www.oti.com/fol der/fi le");
		encoded = URLEncoder.encode(original);
		decoded = URLDecoder.decode(encoded);

		assertEquals("07", new URL("http://www.oti.com/fol%20der/fi%
20le"), encoded);
		assertEquals("08", original, decoded);

		original = new URL("http://www.oti.com/fi\u1234le#re\u5678f");
		encoded = URLEncoder.encode(original);
		decoded = URLDecoder.decode(encoded);

		assertEquals("09", new URL("http://www.oti.com/fi%e1%88%
b4le#re%e5%99%b8f"), encoded);
		assertEquals("10", original, decoded);
	} catch (MalformedURLException e) {
		fail("11");
	}
}
}
Also note that if it messes up and I Revert the same file back and try it 
again, it usually works ok. 
fixed for 20020430

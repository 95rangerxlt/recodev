build I20060131-1200

Yesterday, I tried using Ctrl+Shift+T with the schema editor active, and it had no effect.  This happened several times.  I thought it was a keybinding problem, but after it first happened I was unable to reproduce it.  Today, I saw several occurrences of the following in the log:

!ENTRY org.eclipse.ui 4 0 2006-02-02 13:54:23.030
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2.open(TypeSelectionDialog2.java:215)
	at org.eclipse.jdt.internal.ui.actions.OpenTypeAction.run(OpenTypeAction.java:57)
	at org.eclipse.jdt.internal.ui.actions.OpenTypeAction.run(OpenTypeAction.java:78)
	at org.eclipse.ui.internal.handlers.ActionDelegateHandlerProxy.execute(ActionDelegateHandlerProxy.java:271)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:384)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:420)
	at org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:159)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:466)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:794)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:841)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:563)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:506)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:122)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:978)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:919)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:944)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:929)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:957)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:953)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1267)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3335)
	at org.eclipse.swt.widgets.Tree.WM_CHAR(Tree.java:3487)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3235)
	at org.eclipse.swt.widgets.Tree.windowProc(Tree.java:3483)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3965)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1730)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2905)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1792)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1756)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:401)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:106)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:109)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:93)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:69)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:374)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:615)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:282)
	at org.eclipse.core.launcher.Main.run(Main.java:977)
	at org.eclipse.core.launcher.Main.main(Main.java:952)

build I20060131-1200

Yesterday, I tried using Ctrl+Shift+T with the schema editor active, and it had no effect.  This happened several times.  I thought it was a keybinding problem, but after it first happened I was unable to reproduce it.  Today, I saw several occurrences of the following in the log:

!ENTRY org.eclipse.ui 4 0 2006-02-02 13:54:23.030
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jdt.internal.ui.dialogs.TypeSelectionDialog2.open(TypeSelectionDialog2.java:215)
	at org.eclipse.jdt.internal.ui.actions.OpenTypeAction.run(OpenTypeAction.java:57)
	at org.eclipse.jdt.internal.ui.actions.OpenTypeAction.run(OpenTypeAction.java:78)
	at org.eclipse.ui.internal.handlers.ActionDelegateHandlerProxy.execute(ActionDelegateHandlerProxy.java:271)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:384)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:420)
	at org.eclipse.ui.internal.handlers.HandlerService.executeCommand(HandlerService.java:159)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:466)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:794)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:841)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:563)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$3(WorkbenchKeyboard.java:506)
	at org.eclipse.ui.internal.keys.WorkbenchKeyboard$KeyDownFilter.handleEvent(WorkbenchKeyboard.java:122)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:978)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:919)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:944)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:929)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:957)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:953)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1267)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3335)
	at org.eclipse.swt.widgets.Tree.WM_CHAR(Tree.java:3487)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:3235)
	at org.eclipse.swt.widgets.Tree.windowProc(Tree.java:3483)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:3965)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1730)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2905)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1792)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1756)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:401)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:106)
	at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:109)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:93)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:69)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:374)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:615)
	at org.eclipse.core.launcher.Main.invokeFramework(Main.java:338)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:282)
	at org.eclipse.core.launcher.Main.run(Main.java:977)
	at org.eclipse.core.launcher.Main.main(Main.java:952)
I actually don't think it was a key binding problem.
The line in question is the last one in:
	ISelection selection= window.getSelectionService().getSelection();
	if (selection instanceof ITextSelection) {
		String text= ((ITextSelection)selection).getText().trim();

so getText() must be returning null (the instanceof check passed, so selection is not null).

This is actually valid according to ITextSelection.getText(), so TypeSelectionDialog2.open should check for null.

Steps to reproduce:
- open a schema file
- in the Overview tab's Description area, select some text
- select the Since tab
- Ctrl+Shift+T
- get the NPE

This may indicate a problem with the schema editor's handling of text selections.
TypeSelectionDialog2.open should still check for null though.
fixed > 20060206. Verified all accesses of ITextSelection to have a null check (jdt.ui/search)

In the following examples, Hebrew letters are represented by upper case Latin 
letters.

Open a Java editor window, insert a new line and type:
    string mystring = "ABC" + "DEF";  // THIS IS A COMMENT
The expected display should be:
    string mystring = "CBA" + "FED";  // TNEMMOC A SI SIHT
The actual display is:
    string mystring = "TNEMMOC A SI SIHT //  ;"FED" + "CBA

Currently in the Java Editor, the call that handled this special case is 
commented out (setBidiColoring).  New API exists for handling this case.

A new listener, BidiSegmentListener, has been created which one can use to 
specify how a line should be rendered for bidi purposes.  See BidiSegmentEvent 
and BidiSegmentListener for more information.  You essentially answer the 
distinct segments for a line.  Each segment is then reordered separately.

For purposes of the Java Editor, you need only segment a line based on string 
literals.  While you can segment the line based on each java syntactic element, 
this will be much more inefficient because it will be calling the bidi 
reordering platform function unnecessarily (as happening now for the 
setBidiColoring behavior).  We hacked the java editor to just segment lines 
based on string literals and it all worked fine.

In the following examples, Hebrew letters are represented by upper case Latin 
letters.

Open a Java editor window, insert a new line and type:
    string mystring = "ABC" + "DEF";  // THIS IS A COMMENT
The expected display should be:
    string mystring = "CBA" + "FED";  // TNEMMOC A SI SIHT
The actual display is:
    string mystring = "TNEMMOC A SI SIHT //  ;"FED" + "CBA

Currently in the Java Editor, the call that handled this special case is 
commented out (setBidiColoring).  New API exists for handling this case.

A new listener, BidiSegmentListener, has been created which one can use to 
specify how a line should be rendered for bidi purposes.  See BidiSegmentEvent 
and BidiSegmentListener for more information.  You essentially answer the 
distinct segments for a line.  Each segment is then reordered separately.

For purposes of the Java Editor, you need only segment a line based on string 
literals.  While you can segment the line based on each java syntactic element, 
this will be much more inefficient because it will be calling the bidi 
reordering platform function unnecessarily (as happening now for the 
setBidiColoring behavior).  We hacked the java editor to just segment lines 
based on string literals and it all worked fine.
must fix for 2.0
This is still broken in 20020123.  Suggest putting back the call to 
setBidiColoring until you have time to use the new mechanism.
Fixed for 20020212.

BETA_JAVA8:

The following program triggers an NPE: Noticing the missing semicolon after
the return.

// ----
interface I {
	J foo();
}

interface J {
	void foo();
}

public class X {
	void foo(I i) {};
	public static void main(String[] args) {
		new X().foo(() -> { return () -> { return}; });
	}
}

BETA_JAVA8:

The following program triggers an NPE: Noticing the missing semicolon after
the return.

// ----
interface I {
	J foo();
}

interface J {
	void foo();
}

public class X {
	void foo(I i) {};
	public static void main(String[] args) {
		new X().foo(() -> { return () -> { return}; });
	}
}
Fix and test released here:http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=2d75a247df9701b0f81bd7f30330af100821c0c6

Note to verifier: Despite the test added, this bug has to be verified manually
in the IDE. The added test does not prove the fix, though the latter is obvious
and trivial. The normal compile path does not trigger this NPE and the I couldn't
distill down the interactive behavior exhibited by the reconciler 
CompilationUnitProblemFinder that readily.

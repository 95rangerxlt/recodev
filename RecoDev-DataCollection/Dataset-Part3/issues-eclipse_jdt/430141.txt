interface I {
	void doit();
}

interface J extends I {
	
}

public class X {
	public static void main(String[] args) {
		J j  = () -> { System.out.println("Lambda"); };
		j.doit();
	}
}

Given the above, neither the hierarchy rooted at I nor one rooted at J
show the lambda expression.

interface I {
	void doit();
}

interface J extends I {
	
}

public class X {
	public static void main(String[] args) {
		J j  = () -> { System.out.println("Lambda"); };
		j.doit();
	}
}

Given the above, neither the hierarchy rooted at I nor one rooted at J
show the lambda expression.
Fix and tests released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=4ef16554233e88a1cac441a4decc46191fae29b1

There was an NPE that was caught and so didn't surface that was causing the
problem. Also wrong types were encoded as super types.

Manoj, please review - TIA.
Released into BETA_JAVA8_LUNA

If you set up your generated source directory to be an already-existing source
directory, we will remove everything inside that directory.

Need to prevent this, or at the very least offer a very stern warning in the UI.

If you set up your generated source directory to be an already-existing source
directory, we will remove everything inside that directory.

Need to prevent this, or at the very least offer a very stern warning in the UI.
Theodora, I think that now that we set and use the isDerived bit this should no 
longer be a problem?  If I should still be putting a warning in the config UI, 
telling people not to set to an existing directory, just reassign this to me.  
If it is really not a problem any more, then resolve as fixed.
At present, the behavior is:

  1. When we create the folder, we set it (and any parent folders that we also have to create) to "derived".
  2. During project clean, we delete all derived files under the gen src folder.
  3. When the user changes the gen src folder name, we delete the old folder, regardless of whether or not the folder is derived.

I am wondering whether the right thing to do is:

  a. Ignore the problem.
  b. Disallow setting the gen src folder to an existing non-derived folder.
  c. Like (b), but just warn, rather than disallowing.
  d. Change the behavior in step 3, above, to only delete derived resources.  (Slightly harder than it sounds due to the need to do it inside a scheduled job, but not impossible.)
  e. Both (c) and (d).

Code to implement (c) looks like this, within AptConfigurationBlock.validateGenSrcDir():

  if (fJProj != null && !dirName.equals(fOriginalGenSrcDir)) {
    IFolder folder = fJProj.getProject().getFolder( dirName );
    if (folder != null && folder.exists() && !folder.isDerived()) {
      return new StatusInfo(IStatus.WARNING, 
        "Contents of generated source directory will be deleted.");
    }
  }

Fixed in 3.1.1; needs to be merged to 3.2.  We now warn in the GUI when the user attempts to set the GSF to an existing, non-derived directory; and when cleaning or deleting, we only delete derived contents and folders that contain only derived contents.  When changing the GSF, we remove the previous one from the classpath only if it was derived (but we do not pay any attention to whether it had non-derived contents).
I believe this has been merged into 3.2 already. Walter, if that's not the case, could you please reopen?

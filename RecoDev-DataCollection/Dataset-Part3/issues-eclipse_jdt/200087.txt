Fully support and exploit the capabilities of modern JREs. Example work areas would be more Java 5 and Java 6 functionality; improved support for Apache Harmony, IBM J9, Foundation Profile 1.1; Launcher improvements; etc. [JDT Core, JDT UI]

Fully support and exploit the capabilities of modern JREs. Example work areas would be more Java 5 and Java 6 functionality; improved support for Apache Harmony, IBM J9, Foundation Profile 1.1; Launcher improvements; etc. [JDT Core, JDT UI]
Is memory management a capability of a modern JRE? That is the options for
PermGen, CodeCache and heap size? If so, I'd like you to consider to add bug
200084 to 3.4.
Darin - Could you describe the work near execution environment for java 5 or 6 during 3.4 ? Launcher work ?

On JRE6 front, APT based on JSR269 got completed, especially near error tolerance work (see bug 196200).
We added support for "JRE Descriptions" (excecution environment description files). A file is used to describe a JRE - its bootpath, source attachments, executable files, debug mode arguments, etc.. This description allows JDT to launch the JRE reducing the need for contribuing custom "VM Type" extensions.

In the past, if you had a custom JRE you had to contribute a launcher for that JRE in order for it to be used in the SDK. Now, you should be able to provide a description of that JRE and JDT will be able to launch it. It also allows for different configurations of the same VM to be used at once. For example, you might be able to provide two description files for the same physical VM describing it as a Foundation VM, vs a J2SE-1.x VM.

Details of the format can be found here:

http://wiki.eclipse.org/index.php/Execution_Environment_Descriptions

Example use with J9 can be found here:

http://wiki.eclipse.org/J9
Thanks Darin. 

Marking this plan item fixed then.

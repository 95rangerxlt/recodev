Testcase :

public class Sample{

interface Int {
		void setInt(int i);

	}
public static void main(String[] args) {
 

		final int j;
		

		Int int1 = (int i) -> {
			j=10;
		};

}

}



Gives following error with javac :

Sample.java:14: error: cannot assign a value to final variable j
                        j=10;
                        ^
1 error



Does not give error in eclipse.

Testcase :

public class Sample{

interface Int {
		void setInt(int i);

	}
public static void main(String[] args) {
 

		final int j;
		

		Int int1 = (int i) -> {
			j=10;
		};

}

}



Gives following error with javac :

Sample.java:14: error: cannot assign a value to final variable j
                        j=10;
                        ^
1 error



Does not give error in eclipse.
I'll be working on this bug.
Anirban, thanks for catching this. This should be a single line fix.
Created attachment 234739
Patch for the fix

Patch for the fix
Anirban, I think the message ""The final local variable j cannot be assigned, since it is defined in an enclosing type\n" is more appropriate for the first test
also rather than the one we emit: ""The final local variable j cannot be assigned. It must be blank and not using a compound assignment\n". The final variable IS
blank and we are NOT using compound assignment, so that message does not
make sense.

I think the right method to call to report an error in this case is 
cannotAssignToFinalOuterLocal and not cannotAssignToFinalLocal.

Also the check 

(!flowInfo.isPotentiallyAssigned(localBinding) && (this.bits & ASTNode.IsCapturedOuterLocal) != 0))

does not make sense to me. Why are you checking for isPotentiallyAssigned ??
A captured local cannot be assigned to by a lambda, period.
Could you also format the test properly please ? Any reason for the clumsy
formatting ? :)
Created attachment 234812
Patch accommodating review comments

Patch accommodating review comments
Fix and tests look good. Released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=c45031a708344453f01f911278a63ebae41b9cba
This contribution complies with http://www.eclipse.org/legal/CoO.php

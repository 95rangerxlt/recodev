Build R2.1

When incrementally adding static member types, the outliner will quickly become 
inconsistent.

Steps:
1. define unit Y.java
public class Y {
	public static void main(String[] args) {}
}

2. add static member type Y_0. Before closing Y_0 body, observe that the 
outliner has attached #main to Y_0, which is fair.
public class Y {
	static class Y_0 {

	public static void main(String[] args) {}
}
 
3. when closing the body of Y_0, #main is properly reattached to Y, but the [+] 
icon remains in front of Y_0, which is wrong.
Now, unit should look like:
public class Y {
	static class Y_0 {
	}
	public static void main(String[] args) {}
}

4. now define another member type Y_1, below Y_0, and it will cause Y_0 to 
disappear completely, until the editor is closed/reopen.

Once the body of Y_1 is opened (not yet closed), Y0 disappears !?! And will not 
reappear even if closing the body of Y_1.

public class Y {
	static class Y_0 {
	}
	static class Y_1 {
	public static void main(String[] args) {}
}

Build R2.1

When incrementally adding static member types, the outliner will quickly become 
inconsistent.

Steps:
1. define unit Y.java
public class Y {
	public static void main(String[] args) {}
}

2. add static member type Y_0. Before closing Y_0 body, observe that the 
outliner has attached #main to Y_0, which is fair.
public class Y {
	static class Y_0 {

	public static void main(String[] args) {}
}
 
3. when closing the body of Y_0, #main is properly reattached to Y, but the [+] 
icon remains in front of Y_0, which is wrong.
Now, unit should look like:
public class Y {
	static class Y_0 {
	}
	public static void main(String[] args) {}
}

4. now define another member type Y_1, below Y_0, and it will cause Y_0 to 
disappear completely, until the editor is closed/reopen.

Once the body of Y_1 is opened (not yet closed), Y0 disappears !?! And will not 
reappear even if closing the body of Y_1.

public class Y {
	static class Y_0 {
	}
	static class Y_1 {
	public static void main(String[] args) {}
}
Actually, it occurs even if member types are not static.

Y_0 doesn't reappear when closing Y_1 (it shouldn't have disappeared btw), but 
#main reappears.

Suspecting some error recovery bug.
There is no recovery problem and delta seems to be correct.


Created attachment 4718
Delta of the test case
Move to JDT/UI for investigation
Adapting priority since it is in a new inbox.

>but the [+] icon remains in front of Y_0, which is wrong.
This is fixed in I20030710

Can confirm that this must be a bug in the Java outline page since the Members
view handles this case correctly.

probably related to bug 37755
Available in builds > 20030721

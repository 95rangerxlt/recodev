A new feature was added to M5 where smart paste fixes C style comments into 
Java style comments:

/*
*
*/

becomes:

/*
 *
 */

The problem is that we have lots of text that is formatted the using C style 
and using smart paste makes the code inconistent.  I don't use the feature but 
others on the team do.  Shouldn't smart paste just indent the code?

A new feature was added to M5 where smart paste fixes C style comments into 
Java style comments:

/*
*
*/

becomes:

/*
 *
 */

The problem is that we have lots of text that is formatted the using C style 
and using smart paste makes the code inconistent.  I don't use the feature but 
others on the team do.  Shouldn't smart paste just indent the code?
Moving to jdt-text.
Smart paste does entirely re-indent the pasted text and respects the comment
formatter settings, which do not currently allow C-style comments. Perhaps we
could offer both options (format vs. just add/remove indent), but then we have
to rely on the user selecting only entire lines.

Workaround is to either
- disable smart pasting entirely
- temporarily disable smartness (press Insert) when pasting comments

Plus, if this is important to you, you can file an enhancement request against
jdt-ui for a respective formatter preference.
We will just disable "smart pasting".  Too bad it can't just indent like it 
used to.
This is fixed during 3.1 as smart paste does not indent all lines any more, but
only shifts the lines.

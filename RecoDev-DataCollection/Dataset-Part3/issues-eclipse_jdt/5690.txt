- load the source for swt into your workspace
- open Display, go to method disposeExec (Runnable runnable)
- select the following block:
	for (int i=0; i<disposeList.length; i++) {
		if (disposeList [i] == null) {
			disposeList [i] = runnable;
			return;
		}
	}
- Refactor -> ExtractMethod
- give the new method a name like checkForNullDispose
- Finish, it seems to assume that the extracted loop will always result in a 
return, though this is not the case here

- load the source for swt into your workspace
- open Display, go to method disposeExec (Runnable runnable)
- select the following block:
	for (int i=0; i<disposeList.length; i++) {
		if (disposeList [i] == null) {
			disposeList [i] = runnable;
			return;
		}
	}
- Refactor -> ExtractMethod
- give the new method a name like checkForNullDispose
- Finish, it seems to assume that the extracted loop will always result in a 
return, though this is not the case here
Problem is wrong transition of void return flag when merging empty condition 
statements (example has no else block).

Fixed in build > 20011107

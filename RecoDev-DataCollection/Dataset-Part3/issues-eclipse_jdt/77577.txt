3.1 M3 test pass

The outline view accepts dropping folders using drag & drop:

- open the navigator & outline
- drag a folder (e.g. part of a class hierarchy) from the navigator to the
outline and drop it on a member, for example a method.

Expected: the drag is not successful, nothing happens
Actual: the folder is moved from the project to the package fragment where the
class of the drop target resides.

Also, the move cannot be undone via undo -> major for this reason.

3.1 M3 test pass

The outline view accepts dropping folders using drag & drop:

- open the navigator & outline
- drag a folder (e.g. part of a class hierarchy) from the navigator to the
outline and drop it on a member, for example a method.

Expected: the drag is not successful, nothing happens
Actual: the folder is moved from the project to the package fragment where the
class of the drop target resides.

Also, the move cannot be undone via undo -> major for this reason.
note that if the drag & drop happens withing the same hierarchy, the following
assertion is thrown (same reason: the drop should not be allowed in the first
place):

!ENTRY org.eclipse.ltk.ui.refactoring 4 4 2004-11-03 11:17:34.213
!MESSAGE Assertion failed: Cannot move /ZZZ/src/com/example.  Destination should
not be under source's hierarchy.
!STACK 0
org.eclipse.core.internal.utils.AssertionFailedException: Assertion failed:
Cannot move /ZZZ/src/com/example.  Destination should not be under source's
hierarchy.
	at org.eclipse.core.internal.utils.Assert.isTrue(Assert.java:107)
	at
org.eclipse.core.internal.resources.Resource.assertMoveRequirements(Resource.java:173)
	at org.eclipse.core.internal.resources.Resource.move(Resource.java:1189)
	at
org.eclipse.jdt.internal.corext.refactoring.changes.MoveResourceChange.doPerformReorg(MoveResourceChange.java:38)
	at
org.eclipse.jdt.internal.corext.refactoring.changes.ResourceReorgChange.perform(ResourceReorgChange.java:62)
	at
org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:262)
	at
org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.access$0(DynamicValidationStateChange.java:1)
	at
org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange$1.run(DynamicValidationStateChange.java:76)
	at
org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)
	at
org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1676)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3655)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3612)
	at
org.eclipse.jdt.internal.corext.refactoring.changes.DynamicValidationStateChange.perform(DynamicValidationStateChange.java:79)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg.JavaMoveProcessor$1.perform(JavaMoveProcessor.java:200)
	at
org.eclipse.ltk.core.refactoring.CompositeChange.perform(CompositeChange.java:262)
	at
org.eclipse.ltk.core.refactoring.PerformChangeOperation$1.run(PerformChangeOperation.java:228)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1676)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1696)
	at
org.eclipse.ltk.core.refactoring.PerformChangeOperation.executeChange(PerformChangeOperation.java:273)
	at
org.eclipse.ltk.internal.ui.refactoring.UIPerformChangeOperation.executeChange(UIPerformChangeOperation.java:86)
Fixed for I20041109.

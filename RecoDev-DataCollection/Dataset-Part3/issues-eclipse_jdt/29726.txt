JavaCore#OPTION_ReportIncompatibleNonInheritedInterfaceMethod

COMPILER / Reporting Interface Method not Compatible with non-Inherited Methods
When enabled, the compiler will issue an error or a warning whenever an 
interface defines a method incompatible with a non-inherited Object one.
- option 
id:         "org.eclipse.jdt.core.compiler.incompatibleNonInheritedInterfaceMeth
od"
- possible values:   { "error", "warning", "ignore" }
- default:           "warning"


---
FYI - we used to always be reporting an error, where we should not. Now we 
default to a warning - not critical for 2.1M5, default is likely the best 
anyway.

test case:
interface I {
  int clone();  // should only be a warning
}

JavaCore#OPTION_ReportIncompatibleNonInheritedInterfaceMethod

COMPILER / Reporting Interface Method not Compatible with non-Inherited Methods
When enabled, the compiler will issue an error or a warning whenever an 
interface defines a method incompatible with a non-inherited Object one.
- option 
id:         "org.eclipse.jdt.core.compiler.incompatibleNonInheritedInterfaceMeth
od"
- possible values:   { "error", "warning", "ignore" }
- default:           "warning"


---
FYI - we used to always be reporting an error, where we should not. Now we 
default to a warning - not critical for 2.1M5, default is likely the best 
anyway.

test case:
interface I {
  int clone();  // should only be a warning
}
just curious:
isn't that contrary to the spec 9.2 (second edition)?

'If an interface has no direct superinterfaces, then the interface implicitly 
declares a public abstract member method m with signature s, return type r, and 
throws clause t corresponding to each public instance method m with signature 
s, return type r, and throws clause t declared in Object, unless a method with 
the same signature, same return type, and a compatible throws clause is 
explicitly declared by the interface. 

It follows that it is a compile-time error if the interface declares a method 
with the same signature and different return type or incompatible throws 
clause.'

It seems to say that it should always be an error
#clone isn't a public method, the spec only applies to public methods.
UI added > 20030127

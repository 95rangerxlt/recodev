Suppose all the imports are folded and the first of them is not required.
Eclipse will warn me and suggest i remove this import. Since now it is the first 
import that "symbolizes" the entire import section I can go directly to it and 
use Ctrl+1 for a quickfix. When i do this the entire import section dissapears 
from the editor and until it is reopened no more imports can be accessed. This 
happens only when ussing the quick fix option.
If you don't mind I'll take a wild guess at that the problem is:
Instead of pushing events to the editor the quickfix directly mutates the "DOM" 
of the Java source. However the "instead of mutate - unfold!" rule that we 
observe when the first item of a folded sectin is eddited is implemented purely 
by the editor and is applied only on events. Thus the quickfix "jumps over" this 
rule and messes up the "DOM". 
10x for the patiense to read this :)

Suppose all the imports are folded and the first of them is not required.
Eclipse will warn me and suggest i remove this import. Since now it is the first 
import that "symbolizes" the entire import section I can go directly to it and 
use Ctrl+1 for a quickfix. When i do this the entire import section dissapears 
from the editor and until it is reopened no more imports can be accessed. This 
happens only when ussing the quick fix option.
If you don't mind I'll take a wild guess at that the problem is:
Instead of pushing events to the editor the quickfix directly mutates the "DOM" 
of the Java source. However the "instead of mutate - unfold!" rule that we 
observe when the first item of a folded sectin is eddited is implemented purely 
by the editor and is applied only on events. Thus the quickfix "jumps over" this 
rule and messes up the "DOM". 
10x for the patiense to read this :)
This is fixed in RC1.
start verifying.
Not fixed in the 2004-06-11 build input from ZRH. Here's my scenario:

1) Import JUnit 3.8.1 as per smoke test.
2) Open StackFilterTest and organize imports. This results in 4 imports.
3) add import java.io.File as the first import statement.
4) Save. Note that you get a warning that java.io.File is an unused import
5) Make sure that the imports section is folded
6) place the cursor on the first import and apply the "remove import" quickfix
via ctrl-1
7) observe: No imports are visible anymore. Also the triangle is not there anymore.

Note that selecting an import in the outline brings back the imports in the editor.
Removing target milestone. No further action for 3.0.
This has been fixed during 3.1.

Using Eclipse Java Development Tools Patch for Java 8 Support (BETA)	1.0.0.v20131222-0103_BETA_JAVA8

Steps to reproduce:

1 Create empty default 1.8 Java project with wizard
2 Copy/paste content of http://docs.oracle.com/javase/tutorial/java/javaOO/examples/MethodReferencesTest.java to the "src" folder
3 The file can't be compiled due NPE's in TypeSystem.getUnannotatedType, see log below.

Error
Sun Dec 22 20:29:46 CET 2013
Errors running builder 'Java Builder' on project 'Java8Examples'.

java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.lookup.TypeSystem.getUnannotatedType(TypeSystem.java:76)
	at org.eclipse.jdt.internal.compiler.lookup.TypeSystem.getParameterizedType(TypeSystem.java:146)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createParameterizedType(LookupEnvironment.java:938)
	at org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.substituteInferenceVariable(ParameterizedTypeBinding.java:827)
	at org.eclipse.jdt.internal.compiler.lookup.ConstraintFormula.applySubstitution(ConstraintFormula.java:70)
	at org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.inferInvocationType(InferenceContext18.java:291)
	at org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.computeCompatibleMethod(ParameterizedGenericMethodBinding.java:95)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(Scope.java:703)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(Scope.java:661)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.findMethod(Scope.java:1559)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.getImplicitMethod(Scope.java:2365)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:650)
	at org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.resolve(LocalDeclaration.java:244)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:620)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:303)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:531)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1209)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1319)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:570)
	at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:770)
	at org.eclipse.jdt.internal.compiler.ProcessTaskManager.run(ProcessTaskManager.java:137)
	at java.lang.Thread.run(Thread.java:744)

Using Eclipse Java Development Tools Patch for Java 8 Support (BETA)	1.0.0.v20131222-0103_BETA_JAVA8

Steps to reproduce:

1 Create empty default 1.8 Java project with wizard
2 Copy/paste content of http://docs.oracle.com/javase/tutorial/java/javaOO/examples/MethodReferencesTest.java to the "src" folder
3 The file can't be compiled due NPE's in TypeSystem.getUnannotatedType, see log below.

Error
Sun Dec 22 20:29:46 CET 2013
Errors running builder 'Java Builder' on project 'Java8Examples'.

java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.lookup.TypeSystem.getUnannotatedType(TypeSystem.java:76)
	at org.eclipse.jdt.internal.compiler.lookup.TypeSystem.getParameterizedType(TypeSystem.java:146)
	at org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment.createParameterizedType(LookupEnvironment.java:938)
	at org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding.substituteInferenceVariable(ParameterizedTypeBinding.java:827)
	at org.eclipse.jdt.internal.compiler.lookup.ConstraintFormula.applySubstitution(ConstraintFormula.java:70)
	at org.eclipse.jdt.internal.compiler.lookup.InferenceContext18.inferInvocationType(InferenceContext18.java:291)
	at org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding.computeCompatibleMethod(ParameterizedGenericMethodBinding.java:95)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(Scope.java:703)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(Scope.java:661)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.findMethod(Scope.java:1559)
	at org.eclipse.jdt.internal.compiler.lookup.Scope.getImplicitMethod(Scope.java:2365)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.resolveType(MessageSend.java:650)
	at org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.resolve(LocalDeclaration.java:244)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolveStatements(AbstractMethodDeclaration.java:620)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.resolveStatements(MethodDeclaration.java:303)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.resolve(AbstractMethodDeclaration.java:531)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1209)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.resolve(TypeDeclaration.java:1319)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.resolve(CompilationUnitDeclaration.java:570)
	at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:770)
	at org.eclipse.jdt.internal.compiler.ProcessTaskManager.run(ProcessTaskManager.java:137)
	at java.lang.Thread.run(Thread.java:744)
Adding class Person from http://docs.oracle.com/javase/tutorial/java/javaOO/examples/Person.java solves the NPE's but then one stumbles upon bug 424592.
I can reproduce the NPE (even with latest from bug 424167).
This NPE also occurs with OpenJDK 8 source code file jdk-92ce9338bec4\src\share\classes\com\sun\beans\util\Cache.java
The NPE has been fixed via https://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=76b281521e0c88d7bc9fbeb2c963d7e6c8914ee3

Leaving the bug open as a reminder to still add a regression test.
Shankha, due to copy right issues, we can add the test referenced in comment#0
to the suite. Can you extract a minimal test and add it as a junit ? If you
back out the commit in comment#4 you should see an NPE on the new test and
with the commit you should not.
Can the following test case be added:

import java.util.List;
import java.util.Collection;
import java.util.function.Supplier;
import java.util.Set;

public class X {
    
    public static <T, Y extends Collection<T>>
        Y foo(Supplier<Y> y) {
            return null;
    }  
      
    public static void main(String[] args) {
        Set<Z> x = foo(Set::new);
    }
}  

   
------------------------------------------------------------------------
We get a NPE with same call stack after backing out the changes.


Thanks
Released test here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=b194948ba50d941338edfde90b53618594f5f418.

Thanks Stephan and Shankha.

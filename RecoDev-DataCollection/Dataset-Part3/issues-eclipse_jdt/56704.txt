Example:

A.java:
class A {
   class AX {
   }
}

B.java:
import A.AX;
class B {
   class BX extends AX {
   }
}

obviously, the import A.AX is unneccessary (at most "import A" should suffice).
Optimize Imports introduces it, while it is correctly marked as an warning
afterwards

Might relate to #41920

Example:

A.java:
class A {
   class AX {
   }
}

B.java:
import A.AX;
class B {
   class BX extends AX {
   }
}

obviously, the import A.AX is unneccessary (at most "import A" should suffice).
Optimize Imports introduces it, while it is correctly marked as an warning
afterwards

Might relate to #41920
Martin, can you please comment.
In the example you gave, you can't replace 'import A.AX' with 'import A'.
The example compiles without warnings on imports.
Can you have a look again?

Please reopen then.
i just tried it out again with M8, and I also saw what I forgot: The correct
example is: 

class B extends A {...}

BTW: it does not work in the default package at all (the introduced "import
A.AX" is marked with the error "The import A cannot be resolved"). If you try it
in any other package the error is as stated originally
yes I forgot to mention. The default package is special, you can't have imports
to classes in the default package anymore in 1.4.

fixed > 20040507
*** Bug 55427 has been marked as a duplicate of this bug. ***

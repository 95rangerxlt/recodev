3.3

We need better names for RulerColumn and AbstractRulerColumn, especially because
1. RulerColumn is abstract as well
2. AbstractRulerColumnRulerColumn extends RulerColumn

I suggest to rename RulerColumn to AbstractContributedRuler.

The other question is whether AbstractRulerColumn needs to be abstract at all. There is no method marked abstract. If so, we could name it DefaultRulerColumn.

3.3

We need better names for RulerColumn and AbstractRulerColumn, especially because
1. RulerColumn is abstract as well
2. AbstractRulerColumnRulerColumn extends RulerColumn

I suggest to rename RulerColumn to AbstractContributedRuler.

The other question is whether AbstractRulerColumn needs to be abstract at all. There is no method marked abstract. If so, we could name it DefaultRulerColumn.
+1 to changing the names.

AbstractContributedRuler is not precise IMO as traditionally the *ruler* ist the entire thing (e.g. the CompositeRuler that holds all columns) and the column is one element in the ruler.

DefaultRulerColumn makes no sense either, IMO, as while it has no abstract methods, it also does nothing without subclassing. A default implementation should at least offer some basic behavior.
>AbstractContributedRuler
Typo, I meant AbstractContributedRulerColumn.

But an even better solution is to
- move RulerColumn stuff into IContributedRulerColumn and remove RulerColumn
- change the extension point to use an IContributedRulerColumn.
- AbstractRulerColumn no longer depends on the contributed ruler column an
  gets pushed down to JFace Text
Fixed in HEAD.
Available in builds > N20060914-0010.

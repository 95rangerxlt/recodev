TM (5/15/2001 15:10:11)
	SDK 106
	
	I tend to get this exception when incrementally compiling org.eclipse.jdt.ui in the self hosting
	workspace. Full build works.

Log: Tue May 15 15:09:19 GMT+02:00 2001
2 org.eclipse.core.runtime 2 Problems occurred when invoking plug-in code.
org.eclipse.core.runtime.CoreException: org.eclipse.jdt.internal.core.Assert$AssertionFailedException: null argument;
	at org.eclipse.jdt.internal.core.Assert.isNotNull(Assert.java:54)
	at org.eclipse.jdt.internal.core.Assert.isNotNull(Assert.java:42)
	at org.eclipse.jdt.internal.core.builder.impl.IncrementalImageBuilder.getBuilderType(IncrementalImageBuilder.java:951)
	at org.eclipse.jdt.internal.core.builder.impl.IncrementalImageBuilder.getBuilderType(IncrementalImageBuilder.java:984)
	at org.eclipse.jdt.internal.core.builder.impl.BuilderType.detectHierarchyChange(BuilderType.java:89)
	at org.eclipse.jdt.internal.core.builder.impl.ModifiedBuilderType.computeIndictments(ModifiedBuilderType.java:133)
	at org.eclipse.jdt.internal.core.builder.impl.IncrementalImageBuilder.updateState(IncrementalImageBuilder.java:1837)
	at org.eclipse.jdt.internal.core.builder.impl.AbstractImageBuilder.compile(AbstractImageBuilder.java:102)
	at org.eclipse.jdt.internal.core.builder.impl.IncrementalImageBuilder.applySourceDelta(IncrementalImageBuilder.java:265)
	at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.incrementalBuild(JavaBuilder.java:194)
	at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.build(JavaBuilder.java:51)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:80)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:606)
	at org.eclipse.core.runtime.Platform.run(Platform.java:388)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:101)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:59)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:34)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:131)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:606)
	at org.eclipse.core.runtime.Platform.run(Platform.java:388)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:149)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:200)
	at org.eclipse.core.internal.resources.Project.build(Project.java:109)
	at org.eclipse.ui.actions.BuildAction.invokeOperation(BuildAction.java:91)
	at org.eclipse.ui.actions.WorkspaceAction.execute(WorkspaceAction.java:114)
	at org.eclipse.ui.actions.WorkspaceAction$1.execute(WorkspaceAction.java:277)
	at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:65)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1093)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:79)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:99)

PM (5/15/2001 4:34:56 PM)
	Is it possible that some builder types could be missing when contributed from prerequisite projects ?

NE (5/15/01 10:45:41 AM)
	Since the last set of changes I made, prerequisite projects aren't really special.
	It builds the package map and source entry tables to include prereq projects, in exactly the same way
	as the project itself.  It uses the main project's class path, and sends output to the main project's bin directory, 
	but these are really the only differences.
	So I don't think builder types should work any differently for prereq projects.

TM (5/15/2001 15:10:11)
	SDK 106
	
	I tend to get this exception when incrementally compiling org.eclipse.jdt.ui in the self hosting
	workspace. Full build works.

Log: Tue May 15 15:09:19 GMT+02:00 2001
2 org.eclipse.core.runtime 2 Problems occurred when invoking plug-in code.
org.eclipse.core.runtime.CoreException: org.eclipse.jdt.internal.core.Assert$AssertionFailedException: null argument;
	at org.eclipse.jdt.internal.core.Assert.isNotNull(Assert.java:54)
	at org.eclipse.jdt.internal.core.Assert.isNotNull(Assert.java:42)
	at org.eclipse.jdt.internal.core.builder.impl.IncrementalImageBuilder.getBuilderType(IncrementalImageBuilder.java:951)
	at org.eclipse.jdt.internal.core.builder.impl.IncrementalImageBuilder.getBuilderType(IncrementalImageBuilder.java:984)
	at org.eclipse.jdt.internal.core.builder.impl.BuilderType.detectHierarchyChange(BuilderType.java:89)
	at org.eclipse.jdt.internal.core.builder.impl.ModifiedBuilderType.computeIndictments(ModifiedBuilderType.java:133)
	at org.eclipse.jdt.internal.core.builder.impl.IncrementalImageBuilder.updateState(IncrementalImageBuilder.java:1837)
	at org.eclipse.jdt.internal.core.builder.impl.AbstractImageBuilder.compile(AbstractImageBuilder.java:102)
	at org.eclipse.jdt.internal.core.builder.impl.IncrementalImageBuilder.applySourceDelta(IncrementalImageBuilder.java:265)
	at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.incrementalBuild(JavaBuilder.java:194)
	at org.eclipse.jdt.internal.core.builder.impl.JavaBuilder.build(JavaBuilder.java:51)
	at org.eclipse.core.internal.events.BuildManager$1.run(BuildManager.java:80)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:606)
	at org.eclipse.core.runtime.Platform.run(Platform.java:388)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:101)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:59)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:34)
	at org.eclipse.core.internal.events.BuildManager$2.run(BuildManager.java:131)
	at org.eclipse.core.internal.runtime.InternalPlatform.run(InternalPlatform.java:606)
	at org.eclipse.core.runtime.Platform.run(Platform.java:388)
	at org.eclipse.core.internal.events.BuildManager.basicBuild(BuildManager.java:149)
	at org.eclipse.core.internal.events.BuildManager.build(BuildManager.java:200)
	at org.eclipse.core.internal.resources.Project.build(Project.java:109)
	at org.eclipse.ui.actions.BuildAction.invokeOperation(BuildAction.java:91)
	at org.eclipse.ui.actions.WorkspaceAction.execute(WorkspaceAction.java:114)
	at org.eclipse.ui.actions.WorkspaceAction$1.execute(WorkspaceAction.java:277)
	at org.eclipse.ui.actions.WorkspaceModifyOperation$1.run(WorkspaceModifyOperation.java:65)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1093)
	at org.eclipse.ui.actions.WorkspaceModifyOperation.run(WorkspaceModifyOperation.java:79)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:99)

PM (5/15/2001 4:34:56 PM)
	Is it possible that some builder types could be missing when contributed from prerequisite projects ?

NE (5/15/01 10:45:41 AM)
	Since the last set of changes I made, prerequisite projects aren't really special.
	It builds the package map and source entry tables to include prereq projects, in exactly the same way
	as the project itself.  It uses the main project's class path, and sends output to the main project's bin directory, 
	but these are really the only differences.
	So I don't think builder types should work any differently for prereq projects.
Closed - not reproducable with new builder.

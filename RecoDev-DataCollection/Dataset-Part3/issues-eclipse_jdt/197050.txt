javac supports two flags for tracing annotation processors.  We need to support them as well, since they are important for people debugging problems with builds, as well as people developing annotation processors.  We do not need to provide output identical to javac's, but we need to provide a comparable level of information.

When -XprintRounds is specified we should output the round count, the files being processed in the round, the annotations that were detected, and whether it is the final round.  

When -XprintProcessorInfo is specified we should output what processors were discovered and what annotations they support (javac does not do this, but it is very useful), as well as what processors matched what annotations during each round and whether they returned 'true' to claim the annotations.

I believe this should be targeted at 3.3.1 as well as 3.4, because it is low-risk and high-benefit, but it is worth debating.

javac supports two flags for tracing annotation processors.  We need to support them as well, since they are important for people debugging problems with builds, as well as people developing annotation processors.  We do not need to provide output identical to javac's, but we need to provide a comparable level of information.

When -XprintRounds is specified we should output the round count, the files being processed in the round, the annotations that were detected, and whether it is the final round.  

When -XprintProcessorInfo is specified we should output what processors were discovered and what annotations they support (javac does not do this, but it is very useful), as well as what processors matched what annotations during each round and whether they returned 'true' to claim the annotations.

I believe this should be targeted at 3.3.1 as well as 3.4, because it is low-risk and high-benefit, but it is worth debating.
Fixed in HEAD (3.4).  Should this also be fixed for 3.3.1?  I think YES, but would appreciate additional comment.  I will attach the patch that I applied to HEAD.

Note that the output generated with -XprintProcessorInfo is somewhat more verbose than that generated by javac, but I think it does a better job of helping users debug the most common problems (wrong versions of processors found on classpath, and subtle mismatches between annotation type in processor versus annotation type in code).
Created attachment 74202
patch committed to head
I would also vote for getting this in 3.3.1. This is definitely something that users would expect to see implemented.
+1 for 3.3.1.
Released to 3.3.1 as well.  Thanks.

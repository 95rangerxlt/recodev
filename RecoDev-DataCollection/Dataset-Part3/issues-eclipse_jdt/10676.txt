Summary says it all. StringLiteral.resolveTypeBinding() returns null. It should
return a valid ITypeBinding.

Suggest adding the following code to DefaultBindingResolver.resolveExpressionType:

} else if (expression instanceof StringLiteral) {
  Literal literal = (Literal) this.newAstToOldAst.get(expression);
  return
this.getTypeBinding(literal.literalType(this.retrieveEnclosingScope(expression)));

Summary says it all. StringLiteral.resolveTypeBinding() returns null. It should
return a valid ITypeBinding.

Suggest adding the following code to DefaultBindingResolver.resolveExpressionType:

} else if (expression instanceof StringLiteral) {
  Literal literal = (Literal) this.newAstToOldAst.get(expression);
  return
this.getTypeBinding(literal.literalType(this.retrieveEnclosingScope(expression)));
Olivier - is it also true for other literals ?
I simply forgot the string literal. I didn't resolve the issue of reusing the 
scope when I wrote that code. Now this is working fine calling 
retrieveEnclosingScope(...).  The suggestion looks good.
Should be fixed for next drop.
Fixed and released in HEAD.


Build: I20050112

Test case:

public class A {
	public static String foo(String s) {
		return s;
	}
}

class C {
	void bar() {
		System.out.println(A.foo(A.foo("hello")));
	}
}

Run Refactor > Inline on A.foo().  An error occurs:

org.eclipse.text.edits.MalformedTreeException: Overlapping text edits
	at org.eclipse.text.edits.TextEdit$InsertionComparator.compare(TextEdit.java:122)
	at java.util.Collections.indexedBinarySearch(Collections.java:327)
	at java.util.Collections.binarySearch(Collections.java:315)
	at org.eclipse.text.edits.TextEdit.computeInsertionIndex(TextEdit.java:759)
	at org.eclipse.text.edits.TextEdit.internalAdd(TextEdit.java:746)
	at org.eclipse.text.edits.TextEdit.addChild(TextEdit.java:336)
	at
org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring.checkFinalConditions(InlineMethodRefactoring.java:232)
	at
org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:84)
	at
org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:114)
	at
org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:188)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1703)
	at
org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:86)
	at
org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:111)

Build: I20050112

Test case:

public class A {
	public static String foo(String s) {
		return s;
	}
}

class C {
	void bar() {
		System.out.println(A.foo(A.foo("hello")));
	}
}

Run Refactor > Inline on A.foo().  An error occurs:

org.eclipse.text.edits.MalformedTreeException: Overlapping text edits
	at org.eclipse.text.edits.TextEdit$InsertionComparator.compare(TextEdit.java:122)
	at java.util.Collections.indexedBinarySearch(Collections.java:327)
	at java.util.Collections.binarySearch(Collections.java:315)
	at org.eclipse.text.edits.TextEdit.computeInsertionIndex(TextEdit.java:759)
	at org.eclipse.text.edits.TextEdit.internalAdd(TextEdit.java:746)
	at org.eclipse.text.edits.TextEdit.addChild(TextEdit.java:336)
	at
org.eclipse.jdt.internal.corext.refactoring.code.InlineMethodRefactoring.checkFinalConditions(InlineMethodRefactoring.java:232)
	at
org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:84)
	at
org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:114)
	at
org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:188)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1703)
	at
org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:86)
	at
org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:111)
Created attachment 17225
Error log
The problem here is the nested invocation. Unfortunatelly inlining nested calls
would require that I actually modify the AST during the inlining. Currently only
a description is generated. Since I consider nested calls not being so prominent
in the code I fixed it the following way:

- for nested calls only the innermost gets inlined
- an error message is generated
- the source is not deleted even if requested by the user.

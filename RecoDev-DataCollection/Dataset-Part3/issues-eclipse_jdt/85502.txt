20050216

The following cases seem to be missed by the boxing/unboxing syntax colorer:
(enable compiler warning for (un)boxing to see where boxing occurs)

public class A {
    private void foo1() {
        int a= 9;
        if (a == new Integer(9)) {
        }
    }
    private void foo2() {
        Integer x= 'c';
    }
    private void foo3() {
        int si= true ?  new Integer(0) : new Character('x');
    }
    private void foo4() {
      Integer x= new Integer(9);
      x += 9;
    }
    private void foo5() {
      Integer[] a= {1, 2, 3};
      int[] b= {a[0]};
    }
    private void foo6() {
        Integer y= new Integer(9);
        switch (y) {
        }
    }
    private int foo7() {
        Integer y= new Integer(9);
        return y;
    }
    private Integer foo8() {
        int count= 9;
        return count;
    }
}

20050216

The following cases seem to be missed by the boxing/unboxing syntax colorer:
(enable compiler warning for (un)boxing to see where boxing occurs)

public class A {
    private void foo1() {
        int a= 9;
        if (a == new Integer(9)) {
        }
    }
    private void foo2() {
        Integer x= 'c';
    }
    private void foo3() {
        int si= true ?  new Integer(0) : new Character('x');
    }
    private void foo4() {
      Integer x= new Integer(9);
      x += 9;
    }
    private void foo5() {
      Integer[] a= {1, 2, 3};
      int[] b= {a[0]};
    }
    private void foo6() {
        Integer y= new Integer(9);
        switch (y) {
        }
    }
    private int foo7() {
        Integer y= new Integer(9);
        return y;
    }
    private Integer foo8() {
        int count= 9;
        return count;
    }
}
fixed > 20050425

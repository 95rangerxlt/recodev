We don't report IProblem.undefinedType but report UndefinedName because
the grammar does not allow us to discriminate.

// --
import java.util.Arrays;
import java.util.List;
import java.util.function.Function;

public class X {
    public static void main (String[] args) {
        Function<List<String>, String> func = ArrayList::toString;
         
        System.out.println(func.apply(Arrays.asList("a", "b")));
    }
}

We don't report IProblem.undefinedType but report UndefinedName because
the grammar does not allow us to discriminate.

// --
import java.util.Arrays;
import java.util.List;
import java.util.function.Function;

public class X {
    public static void main (String[] args) {
        Function<List<String>, String> func = ArrayList::toString;
         
        System.out.println(func.apply(Arrays.asList("a", "b")));
    }
}
Created attachment 240782
Fix+Test

In UnresolvedElementsSubProcessor#getVariableProposals, if locationInParent = ExpressionMethodReference.EXPRESSION_PROPERTY, then the call is diverted to #getTypeProposals to get the type import quick fix proposal.
In other cases, the ExpressionMethodReference.EXPRESSION_PROPERTY may refer to a variable name, and we don't want to lose interesting quick fixes for those cases, e.g. "Change to 'y'" here:

import java.util.List;
import java.util.function.Function;

public class Y {
    public static void main (String[] args) {
        Y y = null;
        Function<List<String>, String> func = yy::toString;
    }
    public String toString(List<String> list) {
        return list.toString();
    }
}

A better fix is to go with the flow of the code nearby and just set

	typeKind= SimilarElementsRequestor.REF_TYPES;

Fixed with http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=4259b27ba4d40d0ce6cf8f4c01368c78110c94d9 and also fixed the lines below to make it work for an unresolved interface "Predicate" here:

    Predicate.isEqual(1);

Test from comment 1 is http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=29b2726277f5be3cabc3ebf2b04333c4638dc382

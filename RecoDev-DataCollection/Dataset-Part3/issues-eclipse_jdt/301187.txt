So to handle creating linked resources and virtual folders automatically, as the o.e.ui.navigator.resources does.

So to handle creating linked resources and virtual folders automatically, as the o.e.ui.navigator.resources does.
More specifically, the JDT Package explorer should either re-use the o.e.ui.navigator.resources.ResourceDropAdapterAssistant implementation or copy its use of the ImportTypeDialog, linked resource and virtual folder support.
Serge, should this bug go in JDT's bucket or...? Is there something Platform/UI needs to do?
(In reply to comment #2)
> Serge, should this bug go in JDT's bucket or...? Is there something Platform/UI
> needs to do?

Yes, I meant to put it in the JDT category, but couldn't find the component (I guess I selected the wrong product)
*** Bug 301809 has been marked as a duplicate of this bug. ***
I think that this is important as long as the JDT perspective / package explorer is still the default view that comes up first when firing up Eclipse SDK (see how I just stumbled into bug 301809).
We will only work on this after the blocking bugs have been fixed.
Created attachment 160048
Patch for handling file system drop

This is a patch that handles drops from the file system.
Created attachment 160049
Patch for handling file system drop
Created attachment 165622
Updated patch with latest CVS sources
As far as I can see, this bug does not depend on 302441, and can be independently addressed (and vice versa).

With the patch, the dropOperation changes according to whether the target is a virtual folder or not (changes to DROP_LINK in that case), but not according to the ImportTypeDialog.  For that,  we'd require some API addition in ImportTypeDialog.
Created attachment 165627
Updated patch with latest CVS sources

Fix issue with performing drop when operation is DND_LINK
I tried the patch and found two issues with it:
1. The patch has 2 copies of the same code and that code is already at 2 other
   places in the SDK.
2. Calling dialog.open() to gather preferences without opening a dialog is not OK.
3. LINK feedback not working.

==> I've filed bug 310089 to address issues 1 + 2 plus a fix for this bug here.

Regarding 3: The longer I look at the code and think about it I think we should wait with adding LINK feedback because this has consequences to the existing code paths. So for 3.6 I think it's best we stick to the existing code/feedback.
Fixed in HEAD (with patch attached to bug 310089).

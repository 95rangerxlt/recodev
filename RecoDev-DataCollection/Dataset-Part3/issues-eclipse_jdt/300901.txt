I20100125-1800

1. Make a Java file like the one below.
2. Invoke Ctrl+Alt+H on v(), you'll get something like "w() : void - Test (2 matches)"
3. Window > Preferences > General > Appearance > Colors and Fonts > Basic > Counter Color
4. Change the colour to something else.
5. Hit 'Apply'. Nothing happens.
6. Hit 'OK'. Nothing happens.
7. Try invoking call hierarchy again to force a "refresh". No dice.

This seemed to work on Boris's Mac though.

I20100125-1800

1. Make a Java file like the one below.
2. Invoke Ctrl+Alt+H on v(), you'll get something like "w() : void - Test (2 matches)"
3. Window > Preferences > General > Appearance > Colors and Fonts > Basic > Counter Color
4. Change the colour to something else.
5. Hit 'Apply'. Nothing happens.
6. Hit 'OK'. Nothing happens.
7. Try invoking call hierarchy again to force a "refresh". No dice.

This seemed to work on Boris's Mac though.
There doesn't appear to be anything wrong with StyledString.COUNTER_STYLER. There does not seem to be a problem if I just change the colour and then ask the styler to style a TextStyle. The style's foreground is correctly set to the new colour.
I forgot to paste the code, here it is.

public class Test {

  public void v() {
  }

  public void w() {
    v();
    v();
  }
}
Created attachment 157333
Screenshot depicting the problem in question.

It works if I use Ctrl+H to search for "v()". Maybe this is a JDT problem.
It seems that the "Call Hierarchy" view takes the color from the Java ->
Inherited Members preferences. The view properly reacts to changes in that
color on both WinXP and Mac (and does not react to the Basic -> Counter Color
on either WinXP or Mac).

The view comes from JDT/UI so I'll put it in that bucket.
Created attachment 157348
Fix
Oops, counter should indeed use counter color. (But that we abuse the 'inherited' color for special nodes stays our little secret;-)
Fixed.

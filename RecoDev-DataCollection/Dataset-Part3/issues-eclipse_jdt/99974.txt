In RC2.

Given code:


public class Foo {
	private int bar() {
		// an important fact about a
		int a = 1;
		// an important fact about returning
		return a;
		// one final precious thought
	}
	
	private void baz() {
		bar();
	}
}

Inlining bar deletes all of the inline comments.

In RC2.

Given code:


public class Foo {
	private int bar() {
		// an important fact about a
		int a = 1;
		// an important fact about returning
		return a;
		// one final precious thought
	}
	
	private void baz() {
		bar();
	}
}

Inlining bar deletes all of the inline comments.
This is not quite as drammatic as it sounds since normally all comments between
the first and the last statement of the method are kept (excpet when inlining a
method with a return statement at the end since the comment isn't covered here).
So for example

	private void bar() {
		int a = 1;
		// an important fact about returning
		// one final precious thought
                bar();
	}

all comments are kept. However still quitre annying...

Fix is easy. All we have to do is to use the extended source ranges which cover
comments as well.

Opt to fix this for RC2. Dani, can you cast your vote.

+1 for RC3.
Created attachment 23135
Additional test cases
Created attachment 23136
Patch against Source Provider
Reviewed the patch.
+1 for 3.1 RC3.
For RC2 I fixed the cases where leading and trailing comments are lost in void
methods. So the case:

	private void bar() {
                // comment
                foo();
		// one final precious thought
                foo();
                // comment
	}

is now handled correcty. I opened bug 100143 to track the remaining issues which
need more work. So when verifying the bug please verify the above scenario not
the one provided in comment #0
Fix got reviewed by Markus Keller.

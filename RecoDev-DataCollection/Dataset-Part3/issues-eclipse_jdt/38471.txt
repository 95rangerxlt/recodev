20030604
int y(int[] p){
	return p[0]; 
}
void yg(){
	int x= y(new int[0]);
}

inline y
you get int x= new int[0][0];
which does not type check

20030604
int y(int[] p){
	return p[0]; 
}
void yg(){
	int x= y(new int[0]);
}

inline y
you get int x= new int[0][0];
which does not type check
of course, this can very easily lead to errors like the following:
	int y(int[] p){
		return p[0]; 
	}
	void yg(){
		i(y(new int[0]));
	}
	void i(int x){}
	void i(int[][] x){}

after inlining y, you get no compile error, yet the bahavior changes (different 
i method is called)
Created attachment 6202
patch and unit test for it

The fix takes inlined array creation into parentheses. This can lead to
inefficient resulting code because of multiple array allocations but I consider
the case as a rare one and easy to fix prior to the refactoring.
Dmitry,

the fix makes perfect sense to me. Release to HEAD. Thanks.

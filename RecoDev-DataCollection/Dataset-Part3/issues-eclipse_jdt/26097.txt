20021112

IMarkerHelpRegistry.hasResolutions is not as cheap as 
JavaCorrectionProcessor.hasCorrections (it calculates the proposals and looks 
if the result length is not empty).
If I understood the current implementation correctly, 'hasResolutions' is used 
for all markers, also the Java Problem Markers to descide if a lightbulb should 
be shown IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER). This will take quite some 
time on editor open when a CU has many problems (AST is calulated for each!)

We either should ask the desktop to refine the IMarkerResolutionGenerator to 
offer a hasResolution method, or change our code to handle the 
JAVA_MODEL_PROBLEM_MARKER differently.

20021112

IMarkerHelpRegistry.hasResolutions is not as cheap as 
JavaCorrectionProcessor.hasCorrections (it calculates the proposals and looks 
if the result length is not empty).
If I understood the current implementation correctly, 'hasResolutions' is used 
for all markers, also the Java Problem Markers to descide if a lightbulb should 
be shown IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER). This will take quite some 
time on editor open when a CU has many problems (AST is calulated for each!)

We either should ask the desktop to refine the IMarkerResolutionGenerator to 
offer a hasResolution method, or change our code to handle the 
JAVA_MODEL_PROBLEM_MARKER differently.
Changed to JavaCorrectionProcessor.hasCorrections.

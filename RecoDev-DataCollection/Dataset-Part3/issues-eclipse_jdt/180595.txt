AnnotationProcessorListener is an interface that permits java 5 annotation processors to register to be called at the end of each processing round.

In the Eclipse implementation, the way this works is we maintain a Set of listeners, and at the end of the round we iterate over the set.

However, there's nothing stopping the listeners from removing themselves or adding new listeners within the callback.  That currently provokes a ConcurrentModificationException.

We should copy the set before iterating it, so that the concurrent modification does not occur.

AnnotationProcessorListener is an interface that permits java 5 annotation processors to register to be called at the end of each processing round.

In the Eclipse implementation, the way this works is we maintain a Set of listeners, and at the end of the round we iterate over the set.

However, there's nothing stopping the listeners from removing themselves or adding new listeners within the callback.  That currently provokes a ConcurrentModificationException.

We should copy the set before iterating it, so that the concurrent modification does not occur.
Fixed and added test case.

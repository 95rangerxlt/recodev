We use a preprocessor that requires a comment at the beginning of every Java 
file that precedes the package statement.  In order to support this, I changed 
the typecomment template as follows:

/*[INCLUDE-IF AWT]*/
package ${enclosing_package};

/*
 * Licensed Materials - Property of IBM.
 * (c) Copyright IBM Corp 2003.  All rights reserved.
 */

Unfortunately, the first comment is completely thrown away when I create a new 
type.  If I remove the package statement from the template, then the INCLUDE-IF 
comment appears after the package declaration.  I would think that if someone 
includes "package" explicitly in the template, that any text that precedes it 
in the template should be preserved.

We use a preprocessor that requires a comment at the beginning of every Java 
file that precedes the package statement.  In order to support this, I changed 
the typecomment template as follows:

/*[INCLUDE-IF AWT]*/
package ${enclosing_package};

/*
 * Licensed Materials - Property of IBM.
 * (c) Copyright IBM Corp 2003.  All rights reserved.
 */

Unfortunately, the first comment is completely thrown away when I create a new 
type.  If I remove the package statement from the template, then the INCLUDE-IF 
comment appears after the package declaration.  I would think that if someone 
includes "package" explicitly in the template, that any text that precedes it 
in the template should be preserved.
We are aware of this and trying to find a solution for M5. In general you 
should use the filecomment for this purpose, not the typecomment. But it has 
the same problem right now.
How would filecomment help here (once it is fixed)?  When I create a new class 
in the JDT, the typecomment is used but my text in the filecomment is ignored.  
So even if I put this in the filecomment, won't New->Class still only use the 
typecomment?
It depends on: inner classes only use the typecomment, new classes that need a 
new compilation unit use both the filecomment and the typecomment (because you 
create a file + a type).
That isn't my experience in creating a brand new class (not an inner class) 
that requires a new file in Eclipse 2.0.1.  Only the typecomment is used.  I 
don't really know if this is now different in M4/M5.

You probably wonder why I don't get a later version of Eclipse - unfortunately 
I need to use WSDD to do my development which is on the 2.0.1 base.
fixed > 20030129

You can now specify a new type template and place comments where you want.
(before after package statement, before after type)
Preferences>Java>Code Generation>Code Templates

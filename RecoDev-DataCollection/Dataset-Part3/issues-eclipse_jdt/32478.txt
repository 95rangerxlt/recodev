When we have a class with an inner protected class like that,

package test1;
public class Parent
{
	protected class Inner
	{
	}
}


and an other one like that

package test2;
import test1.Parent;
public class Child extends Parent
{
}

and we want to generate a inner class in Child that extends the inner class 
Protected.Inner, we obtain

package test2;
import test1.Parent;
import test1.Parent.Inner;
public class Child extends Parent
{
	public class Generated extends Inner
	{
	}
}

but the import statement is not valid.  It should not be generated.

When we have a class with an inner protected class like that,

package test1;
public class Parent
{
	protected class Inner
	{
	}
}


and an other one like that

package test2;
import test1.Parent;
public class Child extends Parent
{
}

and we want to generate a inner class in Child that extends the inner class 
Protected.Inner, we obtain

package test2;
import test1.Parent;
import test1.Parent.Inner;
public class Child extends Parent
{
	public class Generated extends Inner
	{
	}
}

but the import statement is not valid.  It should not be generated.
Time permitted for 2.1
Not sure if this constitutes a separate bug: if the Java editor is configred to
warn on unused imports, both "import test1.Parent" and "import
test1.Parent.Inner" generate unused import warnings. 
fixed > 20031208

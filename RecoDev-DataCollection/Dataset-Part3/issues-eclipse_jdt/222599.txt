Created attachment 92462
patch for SelfEncapsulatingFieldRefactoring.java

I found a few problems with the implementation:

Bugs:
1. fields declared with extra dimensions not handled properly

Create a field: "public Object foo[] = new Object[5]".
Run the SelfEncapsulatingFieldAction against it and it generates incorrect parameter types and return types.   It does handle the following case:

 "public Object[] foo = new Object[5]" 


Enhancement: (included in patch)
1. The SelfEncapsulatingFieldAction should use code templates to generate getter/setter body.

I've provided a patch to fix these problems against tagged version: r332_20080128

Created attachment 92462
patch for SelfEncapsulatingFieldRefactoring.java

I found a few problems with the implementation:

Bugs:
1. fields declared with extra dimensions not handled properly

Create a field: "public Object foo[] = new Object[5]".
Run the SelfEncapsulatingFieldAction against it and it generates incorrect parameter types and return types.   It does handle the following case:

 "public Object[] foo = new Object[5]" 


Enhancement: (included in patch)
1. The SelfEncapsulatingFieldAction should use code templates to generate getter/setter body.

I've provided a patch to fix these problems against tagged version: r332_20080128
Ted, can you add some test? That's in org.eclipse.jdt.ui.tests.refactoring
(requires org.eclipse.jdt.ui.tests, org.eclipse.test.performance.win32 and
org.eclipse.test.performance)
Created attachment 93876
(object_in,object_out) TestCStyleArrayRead.java, SefTests.java update.

Hi Martin,

Sure thing.   Here's another patch for the test cases. (r332_20080128 (Version))


- Ted
Great, thanks! I'll have a look at this next week.
Did you run the tests, including yours? There were several problems with the patch.

I reimplemented the patch > 20080424

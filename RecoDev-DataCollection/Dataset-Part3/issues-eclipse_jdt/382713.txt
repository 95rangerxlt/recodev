BETA_JAVA8

The following program should be rejected on two counts:

// ---------- 8< ------------


interface I {
  void foo();
  void goo();
}
public class X {
  public static void main(String[] args) {
    X x = () -> 10;
    I i = () -> 10;
  }
}

Former lambda expression's target type is not an interface at all,
while the latter's target type is not a functional interface.

At the moment, the compiler does not complain on either instance.

BETA_JAVA8

The following program should be rejected on two counts:

// ---------- 8< ------------


interface I {
  void foo();
  void goo();
}
public class X {
  public static void main(String[] args) {
    X x = () -> 10;
    I i = () -> 10;
  }
}

Former lambda expression's target type is not an interface at all,
while the latter's target type is not a functional interface.

At the moment, the compiler does not complain on either instance.
Same stipulations hold for constructor and method references.
Fix and tests released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=2f1a4983792ff8c7616d36f89ae251df5be99177

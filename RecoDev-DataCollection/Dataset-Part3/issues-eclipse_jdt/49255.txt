In 3.0M6 stable, Edit Profile dialog.
These should probably be entered individual bugs, but I'm feeling a little 
lazy at the moment.  Sorry!

1. On Indentation tab: The options "Indent statements within 'switch' body" 
and "Indent statements within 'case' body" have reverse effects.  ie. 
Deselecting the former causes the bodies of the case statements to become 
unindented, etc...

2. On Whitespace tab: Array Initializers -> between empty braces seems to have 
no effect on sample.

3. On Indentation tab: Indentation Levels -> Wrapped Lines has no effect on 
sample.  I think this option really belongs on the "Line Wrapping" tab since 
it is associated with the "Default indentation policy" that only appears on 
that page...

4. On Control Statements tab: Enablement condition for "Keep simple 'if' on 
one line" is wrong.  Starts enabled even when "Keep 'then' statement on one 
line" is checked, but then becomes disabled when the latter option is 
unchecked/rechecked.  The label might also be improved... "Except simple 'if' 
statements"?  But then it's strange to have a sub-option become enabled when 
its super-option is disabled.

5. On Control Statements tab: The meaning of "Keep guardian(sic) clause on one 
line" is somewhat unclear.  Exactly what qualifies as a guard clause here?

6. Feature request: Show print margin in preview screens, especially on Line 
Wrapping tab.

7. Feature request: When line wrapping occurs in an expression, should be able 
to specify whether the break occurs before or after a binary operator.

8. Tab organization is confusing.  Some relate to whitespace concepts and 
others to source elements.  For example options that affect control 
structures... are strewn about on various pages especially on the "White 
Space" page.  I like the tree view used there.  Perhaps the options on "Blank 
Lines", "New Lines", and "Control Structures" (possibly also "Line Wrapping"?) 
could be merged in here, organized by source element.

9. "Other" tab: Terrible name.  Even "General" would be better, in which case 
it should go first.

10. How about providing a visual indication of tab characters on-screen?  Like 
little dots...

11. Line Wrapping -> Expressions -> Array Initializers -> Indentation Policy: 
When default policy used, seems to ignore the value of "Wrapped Lines", always 
indenting by 2.

In 3.0M6 stable, Edit Profile dialog.
These should probably be entered individual bugs, but I'm feeling a little 
lazy at the moment.  Sorry!

1. On Indentation tab: The options "Indent statements within 'switch' body" 
and "Indent statements within 'case' body" have reverse effects.  ie. 
Deselecting the former causes the bodies of the case statements to become 
unindented, etc...

2. On Whitespace tab: Array Initializers -> between empty braces seems to have 
no effect on sample.

3. On Indentation tab: Indentation Levels -> Wrapped Lines has no effect on 
sample.  I think this option really belongs on the "Line Wrapping" tab since 
it is associated with the "Default indentation policy" that only appears on 
that page...

4. On Control Statements tab: Enablement condition for "Keep simple 'if' on 
one line" is wrong.  Starts enabled even when "Keep 'then' statement on one 
line" is checked, but then becomes disabled when the latter option is 
unchecked/rechecked.  The label might also be improved... "Except simple 'if' 
statements"?  But then it's strange to have a sub-option become enabled when 
its super-option is disabled.

5. On Control Statements tab: The meaning of "Keep guardian(sic) clause on one 
line" is somewhat unclear.  Exactly what qualifies as a guard clause here?

6. Feature request: Show print margin in preview screens, especially on Line 
Wrapping tab.

7. Feature request: When line wrapping occurs in an expression, should be able 
to specify whether the break occurs before or after a binary operator.

8. Tab organization is confusing.  Some relate to whitespace concepts and 
others to source elements.  For example options that affect control 
structures... are strewn about on various pages especially on the "White 
Space" page.  I like the tree view used there.  Perhaps the options on "Blank 
Lines", "New Lines", and "Control Structures" (possibly also "Line Wrapping"?) 
could be merged in here, organized by source element.

9. "Other" tab: Terrible name.  Even "General" would be better, in which case 
it should go first.

10. How about providing a visual indication of tab characters on-screen?  Like 
little dots...

11. Line Wrapping -> Expressions -> Array Initializers -> Indentation Policy: 
When default policy used, seems to ignore the value of "Wrapped Lines", always 
indenting by 2.
Silvio, a lot of little bugs.

One additional note: when you select a top level category on the "Line 
Wrapping" tab the group box should disappear and a preview with all sub nodes 
should appear.
Created attachment 7286
Fixes issues 1, 3, 4 and 6
Issues 2 and 7 are related to the code formatter itself and not to the UI -> I 
will file new PRs.

5) The term 'guardian clause' is used to designate one statement within braces. 
This comes from the code formatter and rather kind of a working title for this 
options. Any suggestions for this label?

8) We decided to organize the code formatter pref page by concept rather than 
by source elements, as the latter would be far more complicated if done 
rigorously. I think the tree as you proposed it would be too overloaded; it 
would be more difficult to get an overview about the available options and to 
find a specific one.

9) Admittedly 'Other' is not very elegant, but 'General' doesn't really nail 
down the meaning of this page either, as it is rather any option not fitting in 
the context of one of the other pages which is listed here.

10) I don't understand what you mean...would you like to display the preview as 
follows?

public class {
....void foo() {
........int a= 4;
....}
}

11) [FIXED] Wrapped lines have their own indentation option, which has already 
been added in CVS and should be in the next build.
2) is tracked in https://bugs.eclipse.org/bugs/show_bug.cgi?id=49361
7) is tracked in https://bugs.eclipse.org/bugs/show_bug.cgi?id=49362
fixed 1, 3, 4, 6 and 9
5) has been changed by adding a (hopefully) more concise description.

all changes > 20040109.

If 10) is still an issue, please file a separate PR and clarify your suggestion.
This would be easier to track than discussing it here.

Closing this bug, thanks for your report.
*** Bug 50166 has been marked as a duplicate of this bug. ***

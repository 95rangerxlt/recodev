I am using 3.0M2.

The template preference page (Java->Editor->Templates) appears to use 
JavaPlugin.getDefault().getPreferenceStore() as its preference store.  
However, it does not seem to deliver property change events when changes are 
made and the OK button is clicked.

In a plugin, run code like:
1. JavaPlugin.getDefault().getPreferenceStore().addPropertyChangeListener
(this);
2. set a breakpoint on the propertyChange event.
3. bring up the Window->preferences page and navigate to Java->Editor-
>Templates.
4. Add a new template and press OK.  
5. The propertyChange event *does not* get hit.
6. Go back to the Window->preferences and navigate to Java->Editor and uncheck 
something.  Press OK.
7. The propertyChange event *does* get hit.

I didn't get a propertyChange event from the CodeFormatter page either, 
although I didn't dig to see if it uses the same preference store.

I am using 3.0M2.

The template preference page (Java->Editor->Templates) appears to use 
JavaPlugin.getDefault().getPreferenceStore() as its preference store.  
However, it does not seem to deliver property change events when changes are 
made and the OK button is clicked.

In a plugin, run code like:
1. JavaPlugin.getDefault().getPreferenceStore().addPropertyChangeListener
(this);
2. set a breakpoint on the propertyChange event.
3. bring up the Window->preferences page and navigate to Java->Editor-
>Templates.
4. Add a new template and press OK.  
5. The propertyChange event *does not* get hit.
6. Go back to the Window->preferences and navigate to Java->Editor and uncheck 
something.  Press OK.
7. The propertyChange event *does* get hit.

I didn't get a propertyChange event from the CodeFormatter page either, 
although I didn't dig to see if it uses the same preference store.
fixed since templates are now stored in the preferences isntead of separate xml.
fixed > 20040331

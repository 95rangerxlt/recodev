We are seeing confusion among new users of APT: they think they have APT configured correctly but "nothing happens".  The problem is that APT is disabled by default and must be manually enabled for each project.  Compounding the confusion are two factors: first, there are a number of APT preference panes (workspace as well as project, and factory path as well as general APT settings); second, on the APT per-project general properties pane, it is necessary to first check "enable project specific settings" and second to check "enable APT".  Users seem to be confusing these two actions, thinking that by enabling project specific settings they have enabled APT.  Improvements in UI and doc are necessary to avoid this problem.

We are seeing confusion among new users of APT: they think they have APT configured correctly but "nothing happens".  The problem is that APT is disabled by default and must be manually enabled for each project.  Compounding the confusion are two factors: first, there are a number of APT preference panes (workspace as well as project, and factory path as well as general APT settings); second, on the APT per-project general properties pane, it is necessary to first check "enable project specific settings" and second to check "enable APT".  Users seem to be confusing these two actions, thinking that by enabling project specific settings they have enabled APT.  Improvements in UI and doc are necessary to avoid this problem.
Disabled the workspace-level preference panes; updated the help to be more clear and correct; and changed the project properties pane so that when "enable project specific settings" is first checked, it automatically checks "enable APT" as well.

Not surprisingly, the current UI reflects a somewhat out of date understanding of the APT functionality.  Moving forward, there are two directions this feature could go.  On the one hand, we could try to make it possible for APT to be enabled by default.  This would support processors meant to be broadly applied to plain Java projects - the sort of functionality hard-coded into Eclipse right now to do things like TODO lists.  On the other hand, we could move fully to the idea that annotation processing is something that is configured per project, typically by a project creation wizard, for project-specific tasks such as EJB creation.  If we move in that direction, it would be appropriate to rewrite the existing UI to be more like the Java Build Path dialogs - tabbed panes within a single property page.

We will continue to invest in our Java development tools, by investigating how best to address future hardware, Java language and IDE capabilties. Potential work areas include: better leverage of multi-core CPUs and/or distributed environments, better allignment with J2ME and J2EE, and increased granularity in Java search. [JDT UI, JDT Core]

We will continue to invest in our Java development tools, by investigating how best to address future hardware, Java language and IDE capabilties. Potential work areas include: better leverage of multi-core CPUs and/or distributed environments, better allignment with J2ME and J2EE, and increased granularity in Java search. [JDT UI, JDT Core]
Also affects JDT Text.
Other additions considered for 3.4:
- support for annotations in the JavaModel API
- more resilience across the tool stack (annotation syntax recovery, better tolerance for missing types)
Support for generating CLDC1.1 classfiles got released already (3.4m2).
Finegrain search also got released (3.4m3).
To summarize, we now:
- support generating CLDC1.1 classfiles (bug 120223)
- support fine-grained search (bug 155013)
- support annotations in the JavaModel (bug 79112)
- leverage multi-core CPUs (bug 142126)
- have more resilience across the tool stack (bug 196653, bug 204536, bug 204534)

Marking this plan item fixed.

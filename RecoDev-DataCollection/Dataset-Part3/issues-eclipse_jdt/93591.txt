I hit a glitch in the "Typing: automatically close" feature every time I create
an anonyomous class and pass it to a method on the same line. I have selected
all types of brackets for automatically closing, therefore I end up with the
following code (^ marks the caret):
1) o.m(^)
2) o.m(new C(^))
3) o.m(new C() {^)
Here I press enter with the intention of beginning to work on the class' body. I
also expect that a closing curly brace will be inserted. Instead the caret is
moved past the parenthesis, and nothing else happens:
4.a) o.m(new C() {)^
expected (may vary depending on formatting settings):
4.b) o.m(new C() {
<TAB>^
})


This is reproducible on Eclipse 3.0.x as well. Note that if you move the caret
around before step 4, the bug may not show up.

I hit a glitch in the "Typing: automatically close" feature every time I create
an anonyomous class and pass it to a method on the same line. I have selected
all types of brackets for automatically closing, therefore I end up with the
following code (^ marks the caret):
1) o.m(^)
2) o.m(new C(^))
3) o.m(new C() {^)
Here I press enter with the intention of beginning to work on the class' body. I
also expect that a closing curly brace will be inserted. Instead the caret is
moved past the parenthesis, and nothing else happens:
4.a) o.m(new C() {)^
expected (may vary depending on formatting settings):
4.b) o.m(new C() {
<TAB>^
})


This is reproducible on Eclipse 3.0.x as well. Note that if you move the caret
around before step 4, the bug may not show up.
this has already been fixed for M7

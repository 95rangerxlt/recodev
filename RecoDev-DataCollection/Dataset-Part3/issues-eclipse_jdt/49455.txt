The new code formatter looks great, and the flexibility it provides will 
satisfy more people than its predecessor.  Nevertheless, the flexibility does 
introduce a usability issue:  There are simply too many preference.

Many of the preferences are presented using a tree widget, but unfortunately 
the parent nodes of the tree do not offer a way to set common preferences for 
all applicable children.  For example, take a look at the "Whitespace" tab and 
then under "Declarations > Member Functions".  The children of "Member 
Functions", namely "Constructors" and "Methods" have identical preferences.  
This is a case where being able to set these preference globally from "Member 
Functions" would improve usability.

Another usability problem is that it can be difficult to tell from reading the 
preference description how it will affect the preview on the right.  I would 
suggest that some form of highlighting be introduced to show the user which 
piece of code will be changed by a particular preference.  One possibility 
would be to add a gutter to the left of the preview and insert markers to draw 
the users eye to the affected code.

Typically users have a particular style that they want applied globally.  For 
example, I always like my open-brace hanging on the end of the line.  I also 
always like my close-brace to be the first thing on the line (apart from 
whitespace of course.)  The preference should allow a way for the user to 
configure the code formatter as easily and quickly as possible.  Currently 
working through the preferences is a time consuming task.  Perhaps some high 
level preferences could be added to reflect some common code formatting 
styles.  I do appreciate that pleasing a significant percentage of the Eclipse 
users in this way might be difficult!

The new code formatter looks great, and the flexibility it provides will 
satisfy more people than its predecessor.  Nevertheless, the flexibility does 
introduce a usability issue:  There are simply too many preference.

Many of the preferences are presented using a tree widget, but unfortunately 
the parent nodes of the tree do not offer a way to set common preferences for 
all applicable children.  For example, take a look at the "Whitespace" tab and 
then under "Declarations > Member Functions".  The children of "Member 
Functions", namely "Constructors" and "Methods" have identical preferences.  
This is a case where being able to set these preference globally from "Member 
Functions" would improve usability.

Another usability problem is that it can be difficult to tell from reading the 
preference description how it will affect the preview on the right.  I would 
suggest that some form of highlighting be introduced to show the user which 
piece of code will be changed by a particular preference.  One possibility 
would be to add a gutter to the left of the preview and insert markers to draw 
the users eye to the affected code.

Typically users have a particular style that they want applied globally.  For 
example, I always like my open-brace hanging on the end of the line.  I also 
always like my close-brace to be the first thing on the line (apart from 
whitespace of course.)  The preference should allow a way for the user to 
configure the code formatter as easily and quickly as possible.  Currently 
working through the preferences is a time consuming task.  Perhaps some high 
level preferences could be added to reflect some common code formatting 
styles.  I do appreciate that pleasing a significant percentage of the Eclipse 
users in this way might be difficult!
The "Line Wrapping" page is a good example of where there is a need to be able 
to globally set the line wrapping and indentation policies.  This is also 
mentioned in bug 49456.
Move to JDT/UI.
This is related to the code formatter preference page.

We shouldn't start introduce some sort of inheritance since it will be hard to 
understand. We are investigating in a different presentation that will allow 
setting option that are available for a set of language constructs with one 
check box click.

Silvio, we should investigate in the proposal of highlighting the code that is 
affected by a certain check box in the editor.


> 20040129

- the white space tab page has an additional view in order to configure several
options at once.

- the previews are more fine grained which makes it easier to see the effect

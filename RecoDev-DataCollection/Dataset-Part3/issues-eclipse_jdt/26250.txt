I-20021113 w2k w/ jdt.core patch:

When inlining the method Test0.getMessage(), there could be some warning
that overridden methods exist in the workspace. In general, this is only safe 
if the method is private or final.

public class Test0 {
	private static class Inner extends Test0 {
		String getMessage() { 
			return "overridden";
		}
	}		
	String getMessage() {
		return "original";
	}
	void printMessage() {
		System.out.println(getMessage());
	}
	public static void main(String[] args) {
		new Inner().printMessage();
	}
}

I-20021113 w2k w/ jdt.core patch:

When inlining the method Test0.getMessage(), there could be some warning
that overridden methods exist in the workspace. In general, this is only safe 
if the method is private or final.

public class Test0 {
	private static class Inner extends Test0 {
		String getMessage() { 
			return "overridden";
		}
	}		
	String getMessage() {
		return "original";
	}
	void printMessage() {
		System.out.println(getMessage());
	}
	public static void main(String[] args) {
		new Inner().printMessage();
	}
}
This is correct but figuring this out is really expensive. You have to 
construct a type hierarchy for this.
Opt to do nothing for 2.1
Fixed for RC2.

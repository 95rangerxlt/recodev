Build ID: 3.2.2

Steps To Reproduce:
I have been running Jtest's BugDetective feature on Eclipse source code (3.2.2 source build of 23.04.2007) and it reported a possible resource leak in
org.eclipse.jdt.apt.core.internal.generatedfile.GeneratedFileManager.java.

There may be an IOException thrown at line 1217 of this class's method writeState(). And this would lead to a possible resource leak as the variable 'out' has already been initialized by the time the exception is thrown, and is never closed afterwards.

I'm attaching a screenshot from BugDetective which describes the exact flow which may lead to the exception.

Please let me know if this is a real problem or BugDetective is mistaken.

Thank you!

More information:

Build ID: 3.2.2

Steps To Reproduce:
I have been running Jtest's BugDetective feature on Eclipse source code (3.2.2 source build of 23.04.2007) and it reported a possible resource leak in
org.eclipse.jdt.apt.core.internal.generatedfile.GeneratedFileManager.java.

There may be an IOException thrown at line 1217 of this class's method writeState(). And this would lead to a possible resource leak as the variable 'out' has already been initialized by the time the exception is thrown, and is never closed afterwards.

I'm attaching a screenshot from BugDetective which describes the exact flow which may lead to the exception.

Please let me know if this is a real problem or BugDetective is mistaken.

Thank you!

More information:
Created attachment 65886
execution flow leading to the leak
The call to flush() looks like it is superfluous, because close() will first attempt a flush().  The extra call should be removed.

However, close() itself throws IOException.  I am not sure how one could work around that problem.  

Would you be interested in running BugDetective against Eclipse 3.3?  There is no more bug fixing work happening on 3.2.2, and the 3.3 code base differs in many ways (although that particular line of code still exists, albeit in a different file).  The milestone 7 release has just been declared, and there are a few more weeks remaining of time to fix bugs before the release, so there is a window of opportunity that will soon close.
Fixed in RC2; see Bug 186427.

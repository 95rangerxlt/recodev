Often I write code like this:

String name;
try {
   name = "Good value";
   int val = 
name.indexOf(42);
} catch(Exception e) {
  throw new RuntimeException("Something went 
wrong with " + name);
}
 
The declaration of name is placed outside the try clause to provide 
access to it inside the catch.

Here eclipse (as it should) complains that "The local variable 
name may not have been initialized". How about providing a QuickFix that assigned null to the 
uninitialized variable (e.g. "String name = null")

Often I write code like this:

String name;
try {
   name = "Good value";
   int val = 
name.indexOf(42);
} catch(Exception e) {
  throw new RuntimeException("Something went 
wrong with " + name);
}
 
The declaration of name is placed outside the try clause to provide 
access to it inside the catch.

Here eclipse (as it should) complains that "The local variable 
name may not have been initialized". How about providing a QuickFix that assigned null to the 
uninitialized variable (e.g. "String name = null")
new quick fix added > 20021125

Test Case:
With the method ss commented out there is a compile error. An attempt to 
surround the return statement with a try/catch block will produce the error 
message: 'No uncaught exceptions are thrown by the selected code.' If ss is 
then uncommented the return is surrounded with a try/catch block. 


package p;

class A {

void gd(){}
 
static String sfs(){
		return "d";
	}
	int f(int dy){
		/*[*/return Integer.parseInt(this.ss())/*]*/;
	}
	
	
//	private String ss() {
//		return "Hello";
//	}

}

Test Case:
With the method ss commented out there is a compile error. An attempt to 
surround the return statement with a try/catch block will produce the error 
message: 'No uncaught exceptions are thrown by the selected code.' If ss is 
then uncommented the return is surrounded with a try/catch block. 


package p;

class A {

void gd(){}
 
static String sfs(){
		return "d";
	}
	int f(int dy){
		/*[*/return Integer.parseInt(this.ss())/*]*/;
	}
	
	
//	private String ss() {
//		return "Hello";
//	}

}
>20020319. JRT.
You now get a dialog asking if you want to insert a catch block for runtime 
exceptions.

Note that in the example the selection doesn't include the semicolon. With the 
new AST a return statement includes the semicolon. So in the above case you now 
get a message saying "Selection doesn't cover a set of statements..." or "Can 
only surround statements with a try/catch block" depending on whether you 
select the comments or not.

Fixed in build > I20020502

3.2 RC4

Currently, the stylesheets define absolute font sizes for the javadoc view (10pt) and hover (9pt). This may cause problems with special setups or with font rendering problems.

We should investigate making the font size relative to the browser's standard, or relative to the editor font size.

3.2 RC4

Currently, the stylesheets define absolute font sizes for the javadoc view (10pt) and hover (9pt). This may cause problems with special setups or with font rendering problems.

We should investigate making the font size relative to the browser's standard, or relative to the editor font size.
fixed > 20060725

The style sheets now define a top-level font-size for the 'html' element that defaults to 12pt. The javadoc hover / view replace that size with the Java editor's font size. All other font sizes are specified relative to the top-level font-size. The body font is slightly smaller than the base font: 0.95em (Javadoc view) and 0.9em (Hover). 
Reopening as the chosen solution has some drawbacks:

- the hover and javadoc view font are hardcoded to a font relative to the editor font. For users with small editor fonts, this makes the hover even smaller and unpleasant.

- bug: the additional info for completion proposals also uses the hover style sheet, which gets now 12pt fonts...

We should instead add an indenpendently user configurabel font for javadoc that would then be used as default font in all places where javadoc html is rendered. 
Also, the signature of the target element in the hover does not resize.
fixed > 20060725

There is now a separate font (PreferenceConstants.APPEARANCE_JAVADOC_FONT) used by the following places where javadoc is displayed:
- javadoc view
- javadoc hover
- additional info javadoc

The font is used to replace the relevant sections in the style sheet (see HTMLPrinter.convertTopLevelFont(String,FontData)). This way, font specifications in CSS that reference the top-level font still work.

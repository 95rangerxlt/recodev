I've got non-javadoc comment in front of a method:

// text

I want to convert it to java-doc:

/**<here press enter to move rest of the text to next line> text

Result is:
/**
 *
 */text
Which is not what I've expected.
I understand that if I start typing "/**" in front of method declaration, I'd 
probably would not like to have it commented. But I'd never start typing this 
way - if I don't like something to be commented, I'd create a new line first...

I've got non-javadoc comment in front of a method:

// text

I want to convert it to java-doc:

/**<here press enter to move rest of the text to next line> text

Result is:
/**
 *
 */text
Which is not what I've expected.
I understand that if I start typing "/**" in front of method declaration, I'd 
probably would not like to have it commented. But I'd never start typing this 
way - if I don't like something to be commented, I'd create a new line first...


*** This bug has been marked as a duplicate of 24203 ***
This is not a dup of bug 24203. The problem here is that there is no terminating '*/' at the end of the line, e.g. (in I20070220-1330):

--- Try.java: ---
/* <press Enter here> Here's my comment
public class Try { }
---

Was:
---
/* 
 * 
 */Here's my comment
public class Try { }
---

Expected:
---
/* 
 * Here's my comment
 */
public class Try { }
---

This is a problem for non-terminated block and Javadoc comments.
Created attachment 74374
Fix

D'oh, this one drives me nuts whenever I need to convert a single line comment to a multiline comment.

As an added benefit, automatically adding Javadoc tags now also works in cases like this (caret before Hello, press Enter):

public class C {
	/** Hello
	void m(int i) {}
}
Thanks.

Fixed in HEAD.
Available in builds >= I20070724-0800.
*** Bug 79630 has been marked as a duplicate of this bug. ***

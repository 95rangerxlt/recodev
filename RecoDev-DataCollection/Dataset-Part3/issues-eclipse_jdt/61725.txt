Although eclipse users are undoubtly very much delighted that a long awaited 
code folding feature will finally be included in M9, I was not so impressed by 
its look-and-feel. Based on responses from eclipse.tools.jdt newsgroup, other 
users find the rotating triangle toggles rather confusing as well. The 
triangles (which currently are used on Windows) can be confused with 
the "overrides/is overridden" markers which are also triangles. Is it not 
a "standard way" to present code folding using +/- toggles similar to Netbean 
[1] and Idea [2]. 


[1]http://ui.netbeans.org/docs/ui/code_folding/cf_uispec.html
[2]http://www.jetbrains.com/idea/docs/help/editing/codeFolding.html

Although eclipse users are undoubtly very much delighted that a long awaited 
code folding feature will finally be included in M9, I was not so impressed by 
its look-and-feel. Based on responses from eclipse.tools.jdt newsgroup, other 
users find the rotating triangle toggles rather confusing as well. The 
triangles (which currently are used on Windows) can be confused with 
the "overrides/is overridden" markers which are also triangles. Is it not 
a "standard way" to present code folding using +/- toggles similar to Netbean 
[1] and Idea [2]. 


[1]http://ui.netbeans.org/docs/ui/code_folding/cf_uispec.html
[2]http://www.jetbrains.com/idea/docs/help/editing/codeFolding.html
Most likely, we are not going to change the visual presentation for the 
folding control for 3.0.
Personally, I think the triangles look tons better than the pluses. The
triangles are what outliners have been using to indicate folding since at least
More on Mac in late 80's.

Also, if it is decided to use "+" as the folding marker, I hope it will be only
on the Windows platform, as the triangles are used to indicate collapsed nodes
in tree views on Gtk and Mac.
Bug 65448 looks like a duplicate.
*** Bug 65448 has been marked as a duplicate of this bug. ***
Copied text from bug 65448:

In 3.0RC1 on Windows the code folding icons are as follows: a filled in 
triangle pointing right for folded text, and an empty triangle pointing down 
for expanded text. These should be changed to standard plus/minus icons for 
the following reasons:

- The triangles have a Java Swing-ish look about them that doesn't fit with 
the rest of the native SWT interface.
- Triangles are inconsistent with the plus/minus icons used in the Package 
Explorer and Navigator and several other views.
- They're also also different from other products developers are familiar with 
such as Visual Studio and Netbeans 3.6, including SAS products (Display 
Manager, webAf Studio, and Enterprise Guide). All these products use plus and 
minus icons for code folding on Windows.
- The filled and unfilled triangles don't look as good (admittedly this is 
subjective).
- They can get confused with the Java inheritance icon which is an empty 
triangle of the same size and shape (except it's a little further to the left 
and pointing up).
- They have less visual surface area than the standard plus/minus icons so 
they are harder to target with the mouse cursor.
- They give no hint about the keyboard shortcut for expand/collapse (Ctrl-
Keypad_Plus and Ctrl-Keypad_Minus).

It would be best to use native expand/collapse icons, i.e., the same ones that 
the tree and table tree widgets use, if that's possible. But always using the 
standard plus and minus icons would be the second best (and perhaps simpler) 
option. Either would be better than the triangles.

Please forward to the UI design team for consideration if needed.

Additional Comment From Billy Biggs 2004-06-02 17:34 ------- 
FWIW, the plus/minus icons used in the package explorer are platform dependent.
With most Gtk+ themes they are unfilled triangles (and happen to match the 
code folding triangles).

Interesting comments.  I think Ed's comment that:
"- They can get confused with the Java inheritance icon which is an empty 
triangle of the same size and shape (except it's a little further to the left 
and pointing up)."
is probably the main concern I had with the triangles.

If the decision is made to stay with the triangles, would it be too much effort
to provide a preference to change those icons to something else?  I would think
that would be pretty straightforward to code.  Customization is good.  :-)
Hello - I recently introduced icon swapping along with other features in my code
folding plug-in for eclipse.

Check it out!
http://www.coffee-bytes.com/servlet/PlatformSupport
*** Bug 61499 has been marked as a duplicate of this bug. ***
Fixed in HEAD.
Available in builds >= I20050509-2000.


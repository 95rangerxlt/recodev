The Outline view does not reflect the change (by changing the icon) if you
modify the access modifier of a method in the editor view.

e.g. a class has a method

public void foo() {}

you change the method signature by typing in the java editor into

void foo() {}

The outline view still shows the green dot (even after saving the class). Only
reopening the class helps. The same happens if you declare a method final/non-final.

Everything works well if you declare a method static/non-static, change the name
or arguments.

Build id is 200303192032. I am sure this bug was not existing in a earlier build.

The Outline view does not reflect the change (by changing the icon) if you
modify the access modifier of a method in the editor view.

e.g. a class has a method

public void foo() {}

you change the method signature by typing in the java editor into

void foo() {}

The outline view still shows the green dot (even after saving the class). Only
reopening the class helps. The same happens if you declare a method final/non-final.

Everything works well if you declare a method static/non-static, change the name
or arguments.

Build id is 200303192032. I am sure this bug was not existing in a earlier build.
Reproducable using build 200303202147

It only happens when the Outliner is sorted. The package explorer updates as 
expected.
When sorting is enabled, we call TreeViewer.refresh(false).
Moving to Platform UI.
Since you are specifying updateLabels=false, refresh does not update the label 
for existing elements.

Created attachment 4318
changes refresh(false) to refresh(true) at certain locations
+1
+1
+1
Reviewed and released.

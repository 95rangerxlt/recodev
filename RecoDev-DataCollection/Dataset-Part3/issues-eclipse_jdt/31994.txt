20030214
interface I1{
	void m();
}
public class A {
	I1 i1;
}

select A.i1
generate delegate methods
you get an ugly empty dialog
somehow it did not get fixed with bug 31326

i think we're in a need for tests here

20030214
interface I1{
	void m();
}
public class A {
	I1 i1;
}

select A.i1
generate delegate methods
you get an ugly empty dialog
somehow it did not get fixed with bug 31326

i think we're in a need for tests here
of course the action should be allowed in this case
that's why need tests - there's seems to be many cases in this little action

Martin, comments ? 
Adam, will see what I can do. Rigt now I just fixing bugs and will add those 
to the first test cases. 
I confess I underestimated all the 'little special' cases and I did not know 
about the enable thing for cu context menus.
Right now time is quite limited so first things first.
Flags.isPublic(method.getFlags()) return false if method is a friendly method 
of an interface.
interfaceType.newSupertypeHierarchy(null).getAllTypes() does not return 
java.lang.Object if interfaceType is an interface.
Would not have expected these facts.

Fix for tommorrow. TestCases later
use JdtFlags for the modifier problem
and JavaModeUtil.getAllSuperTypes for the missing 'Object'  problem
Created attachment 3573
fix
*** Bug 32368 has been marked as a duplicate of this bug. ***
*** Bug 32368 has been marked as a duplicate of this bug. ***
i will have a look at the patch
no way i can make it for rc1 with 4 minutes to deadline! :)
marking as rc2
the patch was a step in the correct direction
but it required several tweaks, which i added

so the problem with the missing interface methods is now gone
you can still see empty dialogs, however

here's the deal - because this report handles 2 things really 
(missing interface methods and unglyiness) and :
 - there's more talk and code about the methods
 - bug 32368 was marked as a dup because if the missing methods 
i will enter another one just for the ugliness, which is still happening
entered bug 32393

If an Interface has a method with the same name as an Object method but a 
different signature then the built in compiler will not allow the Object method 
to be called on the Interface.

The following is an example of this:

public interface Element {
  String toString(Object o);
}

class Impl implements Element {
  public String toString(final Object o) { return null; }
  
  public void bug() {
  final Element e = new Impl();
  
    e.getClass();	// This is OK
    e.toString(); // This gives an error and should not
  }
}

If an Interface has a method with the same name as an Object method but a 
different signature then the built in compiler will not allow the Object method 
to be called on the Interface.

The following is an example of this:

public interface Element {
  String toString(Object o);
}

class Impl implements Element {
  public String toString(final Object o) { return null; }
  
  public void bug() {
  final Element e = new Impl();
  
    e.getClass();	// This is OK
    e.toString(); // This gives an error and should not
  }
}
Assessed.
Interface lookup did exclude Object in case a selector match was found. Got rid 
of this behavior.
Fixed
*** Bug 10166 has been marked as a duplicate of this bug. ***

Here's a test case:

1. JUnit setup
2. Open TestCase
3. Goto the declaration of fName
4. Below enter the following code (anonymous class Test):
	private Test x= new Test() {
		/*
		 * @see Test#countTestCases()
		 */
		public int countTestCases() {
			return 0;
		}

		/*
		 * @see Test#run(TestResult)
		 */
		public void run(TestResult result) {
		}

	};
5. At this point you can save - but this does not change the result
6. Now try to add a second anonymous class:
	private Test y= new T<CODE ASSIST HERE>
==> code assist does not give hints (except templates)

I used code assist to enter the first peaces of above code.

Here's a test case:

1. JUnit setup
2. Open TestCase
3. Goto the declaration of fName
4. Below enter the following code (anonymous class Test):
	private Test x= new Test() {
		/*
		 * @see Test#countTestCases()
		 */
		public int countTestCases() {
			return 0;
		}

		/*
		 * @see Test#run(TestResult)
		 */
		public void run(TestResult result) {
		}

	};
5. At this point you can save - but this does not change the result
6. Now try to add a second anonymous class:
	private Test y= new T<CODE ASSIST HERE>
==> code assist does not give hints (except templates)

I used code assist to enter the first peaces of above code.
moving to JDT core for investigation
inMethodStack and inFieldInitializationStack are not initialized properly after 
recovery

Fixed.

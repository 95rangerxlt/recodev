1.	Declare a class with inner class(es)
2.	Declare a method with inner class as argument
3.	Derive a class from the outer class
4.	use „Override/Implement Methods“ to generate 
	the header for the overriden method in the direved class
5.	>>> the resulting method WILL NOT OVERRIDE the first one

Source:

public class Outer1
{
	public class Inner
	{
	}
	public void doSomething( Inner arg0 )
	{
	}
}

public class Outer2
extends Outer1
{
	/*
	 * this is the version generated (copied?) by Eclipse
	 * it references Outer2.Inner and thus does not
	 * override Outer1.doSomething cause that references
	 * Outer1.Inner
	 /*
	public void doSomething( Inner arg0 )
	{
	}

	/*
	 * the method should be declared like this
	/*
	public void doSomething( Outer1.Inner arg0 )
	{
	}
}

WorkAround:
A simple workaround is to declare the method with “Outer1.Inner arg0” in Outer1 allready, Exclipse keeps that.

But it would be nice if Eclipse took care of that ... ;-)

1.	Declare a class with inner class(es)
2.	Declare a method with inner class as argument
3.	Derive a class from the outer class
4.	use „Override/Implement Methods“ to generate 
	the header for the overriden method in the direved class
5.	>>> the resulting method WILL NOT OVERRIDE the first one

Source:

public class Outer1
{
	public class Inner
	{
	}
	public void doSomething( Inner arg0 )
	{
	}
}

public class Outer2
extends Outer1
{
	/*
	 * this is the version generated (copied?) by Eclipse
	 * it references Outer2.Inner and thus does not
	 * override Outer1.doSomething cause that references
	 * Outer1.Inner
	 /*
	public void doSomething( Inner arg0 )
	{
	}

	/*
	 * the method should be declared like this
	/*
	public void doSomething( Outer1.Inner arg0 )
	{
	}
}

WorkAround:
A simple workaround is to declare the method with “Outer1.Inner arg0” in Outer1 allready, Exclipse keeps that.

But it would be nice if Eclipse took care of that ... ;-)
Should be easy to fix by using the ContextSensitiveImportRewriteContext for the import rewriter.
This got fixed with the fix for bug 122906.

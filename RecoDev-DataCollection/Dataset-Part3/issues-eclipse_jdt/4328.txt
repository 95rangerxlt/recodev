AK (10/10/2001 11:48:16 AM)
	as it is now, only the RefactoringWizard is knowledgable enough to perform and IChange 
	(that is, send all the correct messages to correct objects, notify the UndoManager and so on)
	
	this function should be removed from the wizard - performing IChange is a more general (and ui-less) thing.
	it should be possible to perfrom IChange and have the undo properly put on the undo stack without having to 
	invoke the wizard or dupicating its code.
	the new class should be a part of the refactoring core.

NOTES:
EG (10.10.2001 21:51:15)
	should be investigated as part of the text infrastructurework

AK (10/10/2001 11:48:16 AM)
	as it is now, only the RefactoringWizard is knowledgable enough to perform and IChange 
	(that is, send all the correct messages to correct objects, notify the UndoManager and so on)
	
	this function should be removed from the wizard - performing IChange is a more general (and ui-less) thing.
	it should be possible to perfrom IChange and have the undo properly put on the undo stack without having to 
	invoke the wizard or dupicating its code.
	the new class should be a part of the refactoring core.

NOTES:
EG (10.10.2001 21:51:15)
	should be investigated as part of the text infrastructurework
discussed with Dirk, only solution for now is to duplicate the code
done - duplicated code
moving to Dirk
We will consider this when we make Refactoring public API. This is post 2.0
reopening.
Got addressed for 3.0.

class X{
	void f(){
		int i;
		int j= 1;
		switch (j){
			case 1:
				/*[*/i= 1;/*]*/
				break;
			default:
				i= -1;
				break;
		}
	}
}

the extracted method is typed 'void' which changes the program behavior

class X{
	void f(){
		int i;
		int j= 1;
		switch (j){
			case 1:
				/*[*/i= 1;/*]*/
				break;
			default:
				i= -1;
				break;
		}
	}
}

the extracted method is typed 'void' which changes the program behavior
In my opinion this is correct since 'i' is never read after it got assigned a 
value.

Closing
oh, well - try this:
it prints out 1 before and 0 before the extraction

        void f(){
              int i =0;
                int j= 1;
                switch (j){
                        case 1:
                                /*[*/i= 1;/*]*/
                                break;
                        default:
                        		i= -1;
                                break;
                }
                System.out.println(i);
        }

Yup, this is incorrect. The problem is that I tried to optimize break handling.

Fixed in build > 20020129
Changed resolution to fixed.

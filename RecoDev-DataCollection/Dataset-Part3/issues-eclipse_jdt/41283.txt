in the following compilation unit: 

public class Test {
  public static void main(String[] args) {
    int i;
    i= 1;
    if (true) {
      i= 2;
    } else {
      i= 3;
    }
  }
}

select the line "i= 1;" (put the carret on the first char of the line, then hit
[Ctrl+Down]).
Then activate quick fix ([Ctrl+1]), select "Surround with 'if'".
The result is:

public class Test {
  public static void main(String[] args) {
    int i;
    if (condition) {
      i= 1;
      if (true) {
      }
      i= 2;
    } else {
      i= 3;
    }
    System.out.println(i);
  }
}

I expected :

public class Test {
  public static void main(String[] args) {
    int i;
    if (condition) {
      i= 1;
    }
    if (true) {
      i= 2;
    } else {
      i= 3;
    }
    System.out.println(i);
  }
}

in the following compilation unit: 

public class Test {
  public static void main(String[] args) {
    int i;
    i= 1;
    if (true) {
      i= 2;
    } else {
      i= 3;
    }
  }
}

select the line "i= 1;" (put the carret on the first char of the line, then hit
[Ctrl+Down]).
Then activate quick fix ([Ctrl+1]), select "Surround with 'if'".
The result is:

public class Test {
  public static void main(String[] args) {
    int i;
    if (condition) {
      i= 1;
      if (true) {
      }
      i= 2;
    } else {
      i= 3;
    }
    System.out.println(i);
  }
}

I expected :

public class Test {
  public static void main(String[] args) {
    int i;
    if (condition) {
      i= 1;
    }
    if (true) {
      i= 2;
    } else {
      i= 3;
    }
    System.out.println(i);
  }
}
Yes, the "selected lines" include the line the cursor is positioned in, even 
when positioned at the front of a line. It's quite inconvenient...
It should not take the second line, e.g. (un-)comment do not apply the command
on the last line where caret is at line offset 0.

*** Bug 42102 has been marked as a duplicate of this bug. ***
This is no more a problem in 3.0.
see comment 4


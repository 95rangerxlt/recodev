Using F1,

1) test case:
	private static void foo(String[] parameters, int j) {
		int 
temp1 = parameters.length + j;
		int temp = temp1;
		System.out.println(temp);
	}
2) 
Select temp1 in "int temp = temp1;"
3) Call "Inline Local Variable..."
4) The result is:
 
	private static void foo(String[] parameters, int j) {
		int temp = (parameters.length + 
j);
		System.out.println(temp);
	}
instead of:
	private static void foo(String[] 
parameters, int j) {
		int temp = parameters.length + 
j;
		System.out.println(temp);
	}
I don't like to see unnecessary parenthesis around 
expressions.

Using F1,

1) test case:
	private static void foo(String[] parameters, int j) {
		int 
temp1 = parameters.length + j;
		int temp = temp1;
		System.out.println(temp);
	}
2) 
Select temp1 in "int temp = temp1;"
3) Call "Inline Local Variable..."
4) The result is:
 
	private static void foo(String[] parameters, int j) {
		int temp = (parameters.length + 
j);
		System.out.println(temp);
	}
instead of:
	private static void foo(String[] 
parameters, int j) {
		int temp = parameters.length + 
j;
		System.out.println(temp);
	}
I don't like to see unnecessary parenthesis around 
expressions.
fix would be nice
will improve at some point
unlikely for 2.0 though
in some exressions the parenthesis are needed, in some not
currently, there's no code there to handle these
(adding/not adding parenthesis is based only on the expression 
- the inline sites are ignored for now)
fixed
tests added

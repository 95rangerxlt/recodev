I was trying to move OptionalMessageDialog from jdt.internal.ui.search to
.jdt.internal.ui.dialogs (where it now is).


!ENTRY org.eclipse.jdt.ui 4 1 May 30, 2002 14:21:40.938
!MESSAGE Internal Error
!STACK 0
java.lang.reflect.InvocationTargetException: java.lang.ArrayStoreException
	at java.lang.System.arraycopy(Native Method)
	at java.util.ArrayList.toArray(ArrayList.java(Compiled Code))
	at
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypesReferencedIn(ReferenceFinderUtil.java:33)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveRefactoring.checkReferencesToNotPublicTypes(MoveRefactoring.java:100)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveRefactoring.checkInput(MoveRefactoring.java:82)
	at
org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:58)
	at
org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:93)
	at
org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:98)

I was trying to move OptionalMessageDialog from jdt.internal.ui.search to
.jdt.internal.ui.dialogs (where it now is).


!ENTRY org.eclipse.jdt.ui 4 1 May 30, 2002 14:21:40.938
!MESSAGE Internal Error
!STACK 0
java.lang.reflect.InvocationTargetException: java.lang.ArrayStoreException
	at java.lang.System.arraycopy(Native Method)
	at java.util.ArrayList.toArray(ArrayList.java(Compiled Code))
	at
org.eclipse.jdt.internal.corext.refactoring.structure.ReferenceFinderUtil.getTypesReferencedIn(ReferenceFinderUtil.java:33)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveRefactoring.checkReferencesToNotPublicTypes(MoveRefactoring.java:100)
	at
org.eclipse.jdt.internal.corext.refactoring.reorg.MoveRefactoring.checkInput(MoveRefactoring.java:82)
	at
org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:58)
	at
org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:93)
	at
org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:98)
hmm, can't reproduce - will put some defensive code to prevent that from 
happening.
looks like a search engine problem
done
it should not happen now

1. Have an annotation and it's container as below in a project, let's say A:

@Deprecated
public @interface FooContainer {
	Foo[] value();
}

@Repeatable(FooContainer.class)
public @interface Foo {
}

2. In the same project have this in another unit:

@FooContainer({@Foo(), @Foo()})
public class Main {
}

You see the deprecated warning about FooContainer.

3. Create another project whose build path includes the bin folder of project 'A'
4. Create a similar class in the new project as step 2.
5. Notice no warning about FooContainer being deprecated.

1. Have an annotation and it's container as below in a project, let's say A:

@Deprecated
public @interface FooContainer {
	Foo[] value();
}

@Repeatable(FooContainer.class)
public @interface Foo {
}

2. In the same project have this in another unit:

@FooContainer({@Foo(), @Foo()})
public class Main {
}

You see the deprecated warning about FooContainer.

3. Create another project whose build path includes the bin folder of project 'A'
4. Create a similar class in the new project as step 2.
5. Notice no warning about FooContainer being deprecated.
Jay, commit http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=aea2687c86127b817448747104c627048ecdcecb includes a test
that shows this is working as expected. Please include some example
scenarios that show the problem
OK, I can see the problem and a fix is under test.
Resolved via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=0fdabed7d03d0f0d08fda0e7f845381fd7c643ef.
Alright, the "no warning being issued" was because the compiled class for FooContainer did not have the deprecated annotation bit. The issue I mentioned in comment #0 is due to a bug in Oracle's JDK (b108), which seem to dish out duplicate entries in a HashMap's iterator, which results in a CCE in JavaModelManager#secondaryTypesSearching() and eventually ignoring the @Deprecated. This is triggered only when the project contains secondary types.

So, the bug is really about generated code containing the annotations and not just the bit. I can see this already fixed by Srikanth commit mentioned in comment #3.

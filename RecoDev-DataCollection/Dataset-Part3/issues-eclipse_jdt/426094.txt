Follow up of bug 417937

package pack1;
import pack2.B;

public class X{
	public void foo( B @Marker[] arg,  A a) {}

}
class C{}
@java.lang.annotation.Target (java.lang.annotation.ElementType.TYPE_USE)
@interface Marker {}

Refactor "foo" => Move to A
@Marker annotations dropped.

Follow up of bug 417937

package pack1;
import pack2.B;

public class X{
	public void foo( B @Marker[] arg,  A a) {}

}
class C{}
@java.lang.annotation.Target (java.lang.annotation.ElementType.TYPE_USE)
@interface Marker {}

Refactor "foo" => Move to A
@Marker annotations dropped.
(In reply to Manoj Palat from comment #0)

Also, the TYPE_USE annotation on the type is dropped when a TYPE_USE annotation is present on the dimension.

Example:

public class X{
	public void foo(@Marker B @Marker[] arg,  A a) {}

}

Both @Marker annotations are dropped in the above example.
Created attachment 239244
Proposed Patch
(In reply to Manoj Palat from comment #2)
> Created attachment 239244 [details]
> Proposed Patch

This patch (combined and modified) alongwith that of bug 417937 comment 29
(In reply to Manoj Palat from comment #3)
> 
> This patch (combined and modified) alongwith that of bug 417937 comment 29

Committed via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=42a20f90363fe2e676c07d56364d6cc6b90a9458 as mentioned in  bug 417937 comment 31

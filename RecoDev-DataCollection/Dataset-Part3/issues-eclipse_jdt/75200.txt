3.0 M2
The CVS font/color decorations dissapear in the packages explorer, or do not
apply to all the elements they should. I will investigate on our end, but this
seems to be a package explorer problem since the navigator always shows these
decorations correctly.

3.0 M2
The CVS font/color decorations dissapear in the packages explorer, or do not
apply to all the elements they should. I will investigate on our end, but this
seems to be a package explorer problem since the navigator always shows these
decorations correctly.
To duplicate:
1. load the org.eclipse.ui.tests project and run Eclipse. 
2. Next, open both the resource navigator and the package explorer, 
3  goto the label decorators preference page and enable the "Font Decorator" and
"Foreground Decorator" 

notice that only a select number of elements are decorated in the packages
whereas in the navigator all elements are decorated.

I've look at the code and can't find where this problem could occur. The CVS
decorator is being asked for the font/color but beyond that, don't know why it
isn't being applied by the packages explorer.
Found one problem in ResourceToItemsMapper, the item updater doesn't apply the
color and fonts to the item. I've attached a patch. There is however another
problem that I haven't found yet. If you follow the steps to reproduce then
expand all folders/packages in the package explorer then from the resource
navigator do the same, you will notice that files in the package explorer are
cleaned of the color/fonts as you simply browse the navigator.
Created attachment 14850
Patch to ResourceToItemMapper
Martin, can you please investigate.
Where can I find that "Font Decorator" and "Foreground Decorator" you are 
mentioning?
org.eclipse.ui.tests project has test label decorators. Load the project then
launch a workbench, then goto the Workbench > Label Decorators preference page
to enable the decorators I mentioned.
Changed your patch to
	private void applyColorsAndFonts(Item item, ViewerLabel updateLabel) {
		if (item instanceof TreeItem) {
			TreeItem treeItem= (TreeItem) item;
			treeItem.setFont(updateLabel.getFont());
			treeItem.setForeground(updateLabel.getForeground());
			treeItem.setBackground(updateLabel.getBackground());
		} else if (item instanceof TableItem) {
			TableItem tableItem= (TableItem) item;
			tableItem.setFont(updateLabel.getFont());
			tableItem.setForeground(updateLabel.getForeground());
			tableItem.setBackground(updateLabel.getBackground());
		}
	}
wrote an own test decorator and also tested with the mentioned "Font Decorator"
and "Foreground Decorator"
Seems to work in 20041005

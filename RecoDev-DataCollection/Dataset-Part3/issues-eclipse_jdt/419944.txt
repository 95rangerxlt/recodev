BETA_JAVA8:

Element.getAnnotation() should return the annotations present on an element.

An annotation A is present on a construct C if either:
◆ A is directly present on C; or
◆ No annotation of A's type is directly present on C, and C is a class, 
and A's type is inheritable (§9.6.3.3), and A is present on the superclass of C.

Element.getAnnotationsByType() should return all annotations associated with
an element:

An annotation A is associated with a construct C if either:
◆ A is directly or indirectly present on C; or
◆ No annotation of A's type is directly or indirectly present on C, and 
C is a class, and A's type is inheritable (§9.6.3.3), and A is associated 
with the superclass of C.

BETA_JAVA8:

Element.getAnnotation() should return the annotations present on an element.

An annotation A is present on a construct C if either:
◆ A is directly present on C; or
◆ No annotation of A's type is directly present on C, and C is a class, 
and A's type is inheritable (§9.6.3.3), and A is present on the superclass of C.

Element.getAnnotationsByType() should return all annotations associated with
an element:

An annotation A is associated with a construct C if either:
◆ A is directly or indirectly present on C; or
◆ No annotation of A's type is directly or indirectly present on C, and 
C is a class, and A's type is inheritable (§9.6.3.3), and A is associated 
with the superclass of C.
Element.getAnnotation()'s incorrect behavior predates Java 8 work and
getAnnotationsByType() inherited it. Both are fixed and along with tests
released via:

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=7f41c81f9c7d91f8343c9192b06df30e34c066aa

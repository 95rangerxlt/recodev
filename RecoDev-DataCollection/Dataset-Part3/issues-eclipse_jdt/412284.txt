Inspect all casts to and instance of checks for AbstractMethodDeclaration
to eliminate potential CCEs" (when the operand of cast/instanceof is
MethodScope.referenceContext)

This is a follow up of bug 412155 comment 3

Inspect all casts to and instance of checks for AbstractMethodDeclaration
to eliminate potential CCEs" (when the operand of cast/instanceof is
MethodScope.referenceContext)

This is a follow up of bug 412155 comment 3
If not already familiar, look at Limit to match locations facility
in the Java search dialog (^H).
(In reply to comment #0)
> Inspect all casts to and instance of checks for AbstractMethodDeclaration
> to eliminate potential CCEs" (when the operand of cast/instanceof is
> MethodScope.referenceContext)
> 
> This is a follow up of bug 412155 comment 3

Only cast needs to be checked. instance of check if present means unsafe
casting will not be attempted.
Created attachment 233693
Test case depicting a scenario
Another Scenario throwing CCE - Test case attached

interface I { void foo();}

class X { 
   void bar() {}
   void bar1() {}
   final int t;
   X(int i){
       I x = () ->  {
    	  try {
    		  t = 3;
    	  } catch (Exception e) {
    		  t = 4;
    	  }
      };
}
}
(In reply to comment #4)
Similar scenario, but in compound assignment - another test case/scenario
interface I { void foo();}

class X { 
   final int t;
   X(){
       I x = () ->  {
    	   try {
    		  t += 3;
    	  } catch (Exception e) {
    		  t += 4;
    	  }
      };
}
}
Created attachment 233748
Proposed Patch

Includes the scenarios listed (with fixes)
I am fine with this patch - did you check the error messages from javac
to make sure there is a match ?
(In reply to comment #7)
> I am fine with this patch - did you check the error messages from javac
> to make sure there is a match ?

Yes. Error messages match with javac. However, jdt.core prints out an additional error message as well (which I believe should be fine) as reproduced below:

"The blank final field t may not have been initialized"
Committed via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=5837879057685bd1f5ce163887ddcdfbc05fb795

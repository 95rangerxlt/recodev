From the ng: 
"In Menu Source->Generate Getter and Setter how can I make Eclipse recognize
getX() as a valid getter for booleans and not to prompt me to generate
isX()?"

Propose to add a preference to the code gen settings which allow customization. 
Either that or we figure out a way to put it in the getter template.

From the ng: 
"In Menu Source->Generate Getter and Setter how can I make Eclipse recognize
getX() as a valid getter for booleans and not to prompt me to generate
isX()?"

Propose to add a preference to the code gen settings which allow customization. 
Either that or we figure out a way to put it in the getter template.
Martin, should we add an option to the preference panel for this like the new 
checkbox for using "this." before field accesses?
The name guesing is done by jdt.core. We would need this option in jdt.core
The problem came up since I am dealing with a huge JavaBean-like class with 275 
fields. The class needs to be verified to be a proper JavaBean. Unfortunately, 
Eclipse is oblivious to the hundreds of getXXX() methods already there and 
wants to add hundreds more of isXXX() methods...
Good pt. We could probably be more intelligent about find already existing 
getters prefaced w/ "get" for booleans fields.
So would an option do the trick ?
Yan, can you supply a test case. I would have thought your problem was already 
handled by bug 30906.
I read the comments for bug 30906.  It doesn't seem to apply, although being a 
novice to Eclipse world I may have misunderstood what the fix does. In my case 
we have a class, say

class SomeJavaBeanLikeClass 
{
   private boolean b1;
   private boolean b_2;
   private boolean b3; // and so forth 275 times

   public getB1() { return b1; }
   public getb2() { return b2; }  // notice deviation from the naming 
convention!!
   public getB3() { return b3; }  // and so on
}

When I run the Source-> Generate Getters... tool, I expect it to pickup all 
properly-named methods and offer to add any missing or misnamed methods. 
Instead, it is offering to add an isXXX() method for each field even those 
covered by a getXXX().

Created attachment 5253
proposed enhancements.

+ Adds code gen preference for using "get" prefix in the case of boolean
methods.
+ Refactors the ISourceActionContentProvider so that SourceActionDialog now
keeps track of the last/first element position saved pref.
+ Refactors prefs in AddGetterSetterContentProvider to be in the dialog.
+ Refactors other source actions to no longer use ISourceActionContentProvider.
released patch > 20030620

made the following modifications:
- renamed the preference to 'use 'is' for boolean getters' 
- added the preference access to the GetterSetterUtil, so no API change was
required there and refactoring gets the new option for free
fixed

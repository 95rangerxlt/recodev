When working with classes with mixed new and old methods it would be very 
(very) useful to see which methods are deprecated.  For example, someone 
browsing the new Eclipse runtime would really like to know which are the 
methods they should use.  This is much like the idea of showing only the API 
(public) methods.

This is registered as an enhancement but I think it will be pretty important 
for people programming against Eclipse 3.0.  I certainly could benefit from it 
right now in defining the new API!

When working with classes with mixed new and old methods it would be very 
(very) useful to see which methods are deprecated.  For example, someone 
browsing the new Eclipse runtime would really like to know which are the 
methods they should use.  This is much like the idea of showing only the API 
(public) methods.

This is registered as an enhancement but I think it will be pretty important 
for people programming against Eclipse 3.0.  I certainly could benefit from it 
right now in defining the new API!
On the other hand we have PR saying that we have too many decorations.

If we introduce this we have to do it for the members and packages view as 
well. 
Understood.  Perhaps a preference (I know, there are too many preferences) to 
turn it on?
WE can make it a decorator running in the background. This way users could 
enable it on the preference page.
Time permitted.
It looks like you did this one.  Fantastic.  Thanks.  This makes my life MUCH 
easier as we are trying to manage our deprecations and ensure that the story is 
correct.
You are welcome. 

I want to end all my java files with a newline character.
To do this, I edit the Code Generation pattern for new java files, and add a
newline character at the end (preferences->Java->Code Generation->Code and
Comments tab->Code->New Java files->Edit button). I add the newline by pressing
Enter on the last line.

This works fine, until Eclipse is restarted! Until restarted, new java files
will end with a newline character, but as soon as Eclipse is restarted, the
newline character in the New Java files pattern is gone again. This results in
new java files being created without the ending newline character.

I want to end all my java files with a newline character.
To do this, I edit the Code Generation pattern for new java files, and add a
newline character at the end (preferences->Java->Code Generation->Code and
Comments tab->Code->New Java files->Edit button). I add the newline by pressing
Enter on the last line.

This works fine, until Eclipse is restarted! Until restarted, new java files
will end with a newline character, but as soon as Eclipse is restarted, the
newline character in the New Java files pattern is gone again. This results in
new java files being created without the ending newline character.
The file that stores the patterns clearly shows the absence of the newline after
a restart:

workspace/.metadata/.plugins/org.eclipse.jdt.ui/codetemplates.xml

...
/*
 *      $$Log:$$
 */</codetemplate>...

I entered the newline right after the end-comment-slash.

workspace/.metadata/.plugins/org.eclipse.jdt.ui/codetemplates.xml

belongs to JDT UI.
Tom, can you have a look at that. My guess is that the new line get's lost when
the templates are stored.
yep. the templates are trimmed before they are read from file (see
TemplateSet::readFromStream). Not sure whether this is necessary, will have a look.
*** Bug 61884 has been marked as a duplicate of this bug. ***
As far as I can tell this has been long fixed with the new TemplateReaderWriter
- templates are not trimmed any longer.

Marking as fixed for 3.1, was already in 3.0.

+++ This bug was initially created as a clone of Bug #218574 +++

Another thing I noticed while testing was that dragging a local selection onto a closed project results in the icon changing to 'no drop'.  However, dragging a file transfer onto a closed project results in the icon being a 'valid drop'.  Actually performing the drop resulted in an error dialog saying the destination did not exist.

+++ This bug was initially created as a clone of Bug #218574 +++

Another thing I noticed while testing was that dragging a local selection onto a closed project results in the icon changing to 'no drop'.  However, dragging a file transfer onto a closed project results in the icon being a 'valid drop'.  Actually performing the drop resulted in an error dialog saying the destination did not exist.
This is a problem in the JavaDropAdapterAssistent that can be seen looking at the tracing:

CommonDropAdapter.validateDrop (begin)
CommonDropAdapter.validateDrop target: P/Examples
CommonDropAdapter.validateDrop local selection: null
CommonDropAdapter.validateDrop checking assistant: "org.eclipse.jdt.internal.ui.navigator.JavaDropAdapterAssistant@123c852
CommonDropAdapter.validateDrop VALID
CommonDropAdapter.validateDrop (returning 0: OK)
CommonDropAdapter.validateDrop (begin)
CommonDropAdapter.validateDrop target: P/Examples
CommonDropAdapter.validateDrop local selection: null
CommonDropAdapter.validateDrop checking assistant: "org.eclipse.jdt.internal.ui.navigator.JavaDropAdapterAssistant@123c852
CommonDropAdapter.validateDrop VALID
CommonDropAdapter.validateDrop (returning 0: OK)
CommonDropAdapter.validateDrop (begin)
CommonDropAdapter.validateDrop target: P/Examples
CommonDropAdapter.validateDrop local selection: null
CommonDropAdapter.validateDrop checking assistant: "org.eclipse.jdt.internal.ui.navigator.JavaDropAdapterAssistant@123c852
CommonDropAdapter.validateDrop VALID
CommonDropAdapter.validateDrop (returning 0: OK)
CommonDropAdapter.validateDrop (begin)
CommonDropAdapter.validateDrop target: P/Examples
CommonDropAdapter.validateDrop local selection: null
CommonDropAdapter.validateDrop checking assistant: "org.eclipse.jdt.internal.ui.navigator.JavaDropAdapterAssistant@123c852
CommonDropAdapter.validateDrop VALID
CommonDropAdapter.validateDrop (returning 0: OK)
CommonDropAdapter.drop (begin): DropTargetEvent{DropTarget {} time=816784696 data=[Ljava.lang.String;@1b3d342 x=721 y=220 item=TreeItem {BlueExamples} operations=2 operation=2 feedback=1 dataTypes={ 109 } currentDataType=109}
CommonDropAdapter.validateDrop (begin)
CommonDropAdapter.validateDrop target: P/Examples
CommonDropAdapter.validateDrop local selection: null
CommonDropAdapter.validateDrop checking assistant: "org.eclipse.jdt.internal.ui.navigator.JavaDropAdapterAssistant@123c852
CommonDropAdapter.validateDrop VALID
CommonDropAdapter.validateDrop (returning 0: OK)
CommonDropAdapter.drop target: P/Examples op: 2
CommonDropAdapter.drop assistant selected: org.eclipse.jdt.internal.ui.navigator.JavaDropAdapterAssistant@123c852

Created attachment 124655
Suggested patch

Patch to check the status of a file in validateDrop() so that the correct feedback is done all the time.

The corresponding resource drop assistant (in org.eclipse.ui.navigator.resources) correctly handles this.
Your patch works but I wouldn't remove the null-check in handleDrop and I would restructure the code a bit.

Fixed in HEAD.
Available in builds > N20090203-2000.

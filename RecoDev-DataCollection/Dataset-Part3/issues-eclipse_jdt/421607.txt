This program when compiled with ECJ and run produces a verify error:

interface I {
	public void foo();
}

class C implements I {
	public void foo() {
		System.out.println("You won't get here");
	}
}

public class X {
	public static void main(String[] args) {
		((C & I) (I) new C()).foo();
	}
}

I am not sure if this is a valid program, but the code is compiled without any errors. When run, an exception with the following reason is thrown:

Reason:
    Type 'I' (current frame, stack[0]) is not assignable to 'C'
  Current Frame:
    bci: @13
    flags: { }
    locals: { '[Ljava/lang/String;' }
    stack: { 'I' }

This program when compiled with ECJ and run produces a verify error:

interface I {
	public void foo();
}

class C implements I {
	public void foo() {
		System.out.println("You won't get here");
	}
}

public class X {
	public static void main(String[] args) {
		((C & I) (I) new C()).foo();
	}
}

I am not sure if this is a valid program, but the code is compiled without any errors. When run, an exception with the following reason is thrown:

Reason:
    Type 'I' (current frame, stack[0]) is not assignable to 'C'
  Current Frame:
    bci: @13
    flags: { }
    locals: { '[Ljava/lang/String;' }
    stack: { 'I' }
Should also mention that the DOM node corresponding to the SimpleType representing (C & I) is marked as malformed. If the code given in comment #0 is a valid program, I will raise a separate bug for that as well.
I think this bug was a regression introduced by https://bugs.eclipse.org/bugs/show_bug.cgi?id=409236#c9

I'll take a look.

(In reply to Jayaprakash Arthanareeswaran from comment #1)
> Should also mention that the DOM node corresponding to the SimpleType
> representing (C & I) is marked as malformed. If the code given in comment #0
> is a valid program, I will raise a separate bug for that as well.

It is a valid program. I am surprised that we would mark it MALFORMED.
This is just a plain IntersectionCastTypeReference. Were you at the right
JLS level ? Upto JLS4 it should be malformed and at JLS8 it should be fine.
(In reply to Srikanth Sankaran from comment #2)
> It is a valid program. I am surprised that we would mark it MALFORMED.
> This is just a plain IntersectionCastTypeReference. Were you at the right
> JLS level ? Upto JLS4 it should be malformed and at JLS8 it should be fine.

Sorry, my mistake. I had checked out ASTView projects from master. Obviously we won't see JLS8 specifics, will we.
(In reply to Srikanth Sankaran from comment #2)
> I think this bug was a regression introduced by
> https://bugs.eclipse.org/bugs/show_bug.cgi?id=409236#c9

Yep. Fix and tests released here:
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=8eda346eb2b6784c607071f6828a328415623f59

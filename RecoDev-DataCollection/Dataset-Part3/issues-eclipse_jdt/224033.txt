[I20080325-0100]

Overall, this looks promising and at least demos really well. I'll try to use it in day-to-day development to see how much value it provides outside of playing with it. Here are some questions and comments:

- Why is there a "link with editor" button? I can see that it filters the contents of the templates view when selected. Shouldn't it be called "filter based on context" then?
- The templates preference page should allow column-based sorting; there could be lots of entries in this table, and sometimes, you would like to have it sorted alphabetically, sometimes sorted by context etc.
- In a plain Java project, I get to see the SWT templates. Do you plan to filter out templates based on what's on the classpath?
- Two of the categories (SWT and SWT type members) are usually collapsed, and when I try to expand them, they have no children. Can they not be hidden completely? At least, the plus sign should only be shown if there are children.
- The children items are indented quite a bit, but I don't see icons for them, and I don't see the usual lines connecting an element with its siblings and children in the left part of the tree. I would like to see the children to be further to the left so that less horizontal space is wasted.
- filtering of the tree (using a FilteredTree) would probably make sense - the full list of templates already does not fit on my screen and sometimes it is hard to find the template you are looking for.
- nice to have: could the preview pane change dynamically, as I drag elements around in the editor, showing the current actual values for things like ${type} etc?
- I would like to see JFace templates, and ones for data binding. What is the process for contributing them? Note that neither SWT, nor JFace, nor data binding currently have tooling-level plug-ins - they are just runtimes. My guess is that the SWT templates are defined in org.eclipse.jdt.ui; how do you decide which runtimes will have templates in the view by default?

[I20080325-0100]

Overall, this looks promising and at least demos really well. I'll try to use it in day-to-day development to see how much value it provides outside of playing with it. Here are some questions and comments:

- Why is there a "link with editor" button? I can see that it filters the contents of the templates view when selected. Shouldn't it be called "filter based on context" then?
- The templates preference page should allow column-based sorting; there could be lots of entries in this table, and sometimes, you would like to have it sorted alphabetically, sometimes sorted by context etc.
- In a plain Java project, I get to see the SWT templates. Do you plan to filter out templates based on what's on the classpath?
- Two of the categories (SWT and SWT type members) are usually collapsed, and when I try to expand them, they have no children. Can they not be hidden completely? At least, the plus sign should only be shown if there are children.
- The children items are indented quite a bit, but I don't see icons for them, and I don't see the usual lines connecting an element with its siblings and children in the left part of the tree. I would like to see the children to be further to the left so that less horizontal space is wasted.
- filtering of the tree (using a FilteredTree) would probably make sense - the full list of templates already does not fit on my screen and sometimes it is hard to find the template you are looking for.
- nice to have: could the preview pane change dynamically, as I drag elements around in the editor, showing the current actual values for things like ${type} etc?
- I would like to see JFace templates, and ones for data binding. What is the process for contributing them? Note that neither SWT, nor JFace, nor data binding currently have tooling-level plug-ins - they are just runtimes. My guess is that the SWT templates are defined in org.eclipse.jdt.ui; how do you decide which runtimes will have templates in the view by default?
*** Bug 224036 has been marked as a duplicate of this bug. ***
Thanks for the feedback!

>- Why is there a "link with editor" button? I can see that it filters the
>contents of the templates view when selected. Shouldn't it be called "filter
>based on context" then?
Good point. Will change (see bug 224211).

>- The templates preference page should allow column-based sorting; there could
>be lots of entries in this table, and sometimes, you would like to have it
>sorted alphabetically, sometimes sorted by context etc.
True but unrelated to the new Templates view: this is the existing preference page we use for years now. Your comment is already captured in bug 203722.

>- In a plain Java project, I get to see the SWT templates. Do you plan to
>filter out templates based on what's on the classpath?
We should really try to do this. Currently this is not possible as there's no method that gets all contexts for a given file. Filed bug 224053 to track this.

>- Two of the categories (SWT and SWT type members) are usually collapsed, and
>when I try to expand them, they have no children. Can they not be hidden
See bug 223544.

>- The children items are indented quite a bit, but I don't see icons for them,
>and I don't see the usual lines connecting an element with its siblings and
>children in the left part of the tree. I would like to see the children to be
>further to the left so that less horizontal space is wasted.
The missing lines are due to SWT/WinXP bug 99487.  The view now shows the template icons (that was a bug I've fixed for the next build). I don't see how we could gain back the wasted space AFAIK you can't regain the space that's reserved for the icon. Also, it would look strange if a single tree would trick around with the horizontal spacing and hence look different than all other trees.

>- filtering of the tree (using a FilteredTree) would probably make sense - the
>full list of templates already does not fit on my screen and sometimes it is
>hard to find the template you are looking for.
Good point. Filed bug Platform.asLocalURL to track this.

>- nice to have: could the preview pane change dynamically, as I drag elements
>around in the editor, showing the current actual values for things like ${type}
>etc?
Pretty hard as templates contain variables along with contributed resolvers, e.g. to select names from existing fields or just local vars etc. Please file a separate bug report if this is really important to you. We can then track it there.

>- I would like to see JFace templates, and ones for data binding. What is the
>process for contributing them? Note that neither SWT, nor JFace, nor data
>binding currently have tooling-level plug-ins - they are just runtimes. My
>guess is that the SWT templates are defined in org.eclipse.jdt.ui; how do you
>decide which runtimes will have templates in the view by default?
Yes, SWT templates are currently contributed by JDT Text but anyone can contribute others via extension point and SWT ones could be moved out of JDT Text if desired. The context decides whether they (e.g. SWT) appear in the popup i.e. SWT templates don't appear if SWT isn't on the Java build path. Same can be done for JFace or databinding. This filtering is not yet done in the view as noted above.

Marking as fixed as the issues are tracked in separate bug reports.

I20141104-0800

Organize Imports wrongly adds an import for the qualifier of the SuperFieldAccess here:


package bug;

class S {
	public /*static*/ final int f = 0;
}

class X {
	class C extends S {
		public void foo() {
			System.out.println(C.super.f);
		}
	}
}


The added import is unused:

import bug.X.C;

I20141104-0800

Organize Imports wrongly adds an import for the qualifier of the SuperFieldAccess here:


package bug;

class S {
	public /*static*/ final int f = 0;
}

class X {
	class C extends S {
		public void foo() {
			System.out.println(C.super.f);
		}
	}
}


The added import is unused:

import bug.X.C;
Noopur, please investigate. In I20140902-0800, the import is not added (good).

Maybe fallout from the recent changes in ScopeAnalyzer?
Changes in bug 434159 were related to methods and don't cause a problem here.

This issue happens after:
http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=cd0b9eef301c91a66389175f522ba57a55599dd8

OrganizeImportsOperation.TypeReferenceProcessor.needsImport(ITypeBinding typeBinding, SimpleName ref) returns 'true' and adds the import since ScopeAnalyzer.isDeclaredInScope(IBinding declaration, SimpleName selector, int flags) returns 'false'.

Looks like an existing bug in ScopeAnalyzer#isDeclaredInScope for this case.
Created attachment 248609
Patch

For SUPER_FIELD_ACCESS case, ScopeAnalyzer.getQualifier(SimpleName selector) should return the qualifier only when the passed argument 'selector' is the field name (similar to other cases in that switch statement).

Attached fix and test. All exiting tests are green with the patch.
Markus, please review.
Great, thanks. Released as http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=4e6960ba4c905e292a2954176706c9b9f9737e50

In new code, we would have used getLocationInParent() instead of the error-prone switch (parent.getNodeType()). Here, it's good that you kept the change minimal.

For a long time the AJDT, the tooling for AspectJ, has used an orange "A" in a
circle as the icon for aspects, the unit of modularity in the AspectJ language.
Now that JDT has added support for annotations, there is a clash with the icon
used - a blue "A" in a circle. It is possible for both icons to appear in the
same place, such as the Types view in the browsing perspective, with no other
indication as to what the icon is representing. So the colour is the only
distingishing feature, which is a violation of the IBM software accessibility
checklist, section 4.2.

We would gladly change our icon if we had a sensible alternative. Aspects are
the only type we add to the Java ones, and no other letter or symbol seems
appropriate. For annotations, I believe an "@" symbol would be a reasonable
alternative, and still indicative of its function, being the syntax used to
declare annotations.

For a long time the AJDT, the tooling for AspectJ, has used an orange "A" in a
circle as the icon for aspects, the unit of modularity in the AspectJ language.
Now that JDT has added support for annotations, there is a clash with the icon
used - a blue "A" in a circle. It is possible for both icons to appear in the
same place, such as the Types view in the browsing perspective, with no other
indication as to what the icon is representing. So the colour is the only
distingishing feature, which is a violation of the IBM software accessibility
checklist, section 4.2.

We would gladly change our icon if we had a sensible alternative. Aspects are
the only type we add to the Java ones, and no other letter or symbol seems
appropriate. For annotations, I believe an "@" symbol would be a reasonable
alternative, and still indicative of its function, being the syntax used to
declare annotations.
Created attachment 17680
screenshot showing the clash
Matt, this is real coincidence. We discussed the same issue yesterday.

Actually we tried using '@' for annotations but the outcome wasn't very
satisfactory (see attachment). Additionally the '@' is used for Javadoc in JDT/UI.

I will talk to the design team again to find an alternative but I would
appreciate if AspectJ could think about an alternative as well.


Created attachment 17688
The annotation icon with a '@'
Hi Dirk, thanks for the reply. What do you consider unsatisfactory about the '@'
version? Maybe I'm biased but I think it looks okay. Maybe we could gather other
peoples' views on this? When the '@' is used for javadoc, doesn't it appear
alongside a 'J'? That would be sufficient differentiation wouldn't it? We will
think further about an alternative for AspectJ - the best we've come up with so
far is a lower case 'a'. But it would still be undesirable for us to change,
given the existing association amongst our users (plus anyone reading the
Eclipse AspectJ book would see only 'A' icons and so might get confused with
annotations if using Eclipse 3.1).

The problem with the @ is that it starts 'hypnotizing' you as soon as you start
focusing on it. It gets really bad if there is more than one '@' icon below each
other. I showed it to a couple of people here and all voted for the A instead of
the '@' for the given reasons.

If we use the '@' for Javadoc there isn't a little J along side. But this will
not keep as away from using the '@' for annotations if we have an acceptable icon.

What the design team recommended in general is that symbols are always better
than letters. They tried to come up with symbols for class, interface,
annotation and enum but we failed. So may be an idea is to use a symbole for an
aspect instead of an A.
I suggest that the enums and annotations get a small "e" and "a", and that 
icons for class, interface, and aspect continue to appear with an 
uppercase "C", "I", and "A".  The latter are all types that define behavior, 
and as such deserve a capital letter.  Annotations and enums are a less 
important construct in a typical system's architecture and shouldn't 
encapsulate much behavior, so it seems fitting to give them a lower-case 
letter.

The key thing in icon design is that it consistently communicates the 
semantics of the thing they're trying to represent.  Unfortunately the current 
JDT icons are already bad at this, and considerably worse than the other Java 
IDEs.  And their overuse of color makes them very hard to extend consistently 
by tools like AspectJ.  For example, how many developers actually realize that 
the colors use a traffic light scheme for accessibility?  Why does green mean 
both "class" and "public"?  Why is the coloring of types redundant with the 
lettering, and yet there's not indication of whether a type is generic?  I 
assume that it's too late to change the color scheme.  So I'm glad that we're 
having this discussion on the lettering scheme before it's too late :)  On 
that note, please note the caveat with my proposal above.  If you ever decide 
to switch to "f" and "m" for fields and methods the lowercase "e" and "a" will 
seem inconsistent since those are types and not members.  But for AspectJ 
programmers that would still be a far better scheme than getting forced to use 
a letter other than "A" for aspect!

Hi Dirk,
I've been discussing this with the rest of the team here, and on the ajdt-dev
list. Here is a summary:

- Just as you couldn't find a good symbol for classes etc, we can't find a good
one for aspects, especially given the small size of the icon - with more space
we good use a letter and a symbol, or two letters. Also with AspectJ we want the
strong connection between classes and aspects to be very clear, so we really
want a consistent feel to the icons for each.

- We think the prototype '@' annotation icon could be made clearer, by
shortening the tail and doing some better anti-aliasing

- As a symbol doesn't work for aspects, we'd have to stick with a letter, and
the only feasible possibilities are X to indicate crosscutting, or a lower case 'a'.

- A lower case 'a' is also a good possibility for annotations (with an 'e' for
enums).

My opinion for the best overall solution is this last option, which came from
Mik. The upper case letters would emphasise classes, interfaces, and (in the
AspectJ world) aspects as the primary programming artifacts, with lower case
letters used for "lesser" artifacts.

Thanks to the design team we now have new icons !

Fixed.
Thanks Dirk, I've just pulled down the latest nightly build, and I really like
the new @ icon. It's obviously better for AspectJ users, and I think it's also
better for Java users as well.

Just one thing, for consistency are you also going to change the icon used by
the New wizard (the one with the little yellow + in the top right), and the New
shortcut drop-down on the toolbar, to match?
Correct.
Fixed.

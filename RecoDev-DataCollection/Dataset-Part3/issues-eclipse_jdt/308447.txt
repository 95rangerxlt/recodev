Build Identifier: 3.6.0-I20100330-0800

In order to recreate the problem follow the following steps:
BIDI3.6_BDL: Complexxpression: Bidi data in 'Outline' view is reordered wrongly
1. Run Eclipse in LTR mode
2. Create java project
3. create java class
4. create Hebrew-named method which has Hebrew-named parameter
5. Examine appearance of created methos in Outline view
Result: method-name(parameter type) structure looks wrong when Hebrew data is involved (see attachment)
Notice: The problem doesn't exist on Win OS

Reproducible: Always

Build Identifier: 3.6.0-I20100330-0800

In order to recreate the problem follow the following steps:
BIDI3.6_BDL: Complexxpression: Bidi data in 'Outline' view is reordered wrongly
1. Run Eclipse in LTR mode
2. Create java project
3. create java class
4. create Hebrew-named method which has Hebrew-named parameter
5. Examine appearance of created methos in Outline view
Result: method-name(parameter type) structure looks wrong when Hebrew data is involved (see attachment)
Notice: The problem doesn't exist on Win OS

Reproducible: Always
Created attachment 164180
screenshot of outline view
Created attachment 164181
Java projec (MacHebrew encoding)
Carbon or Cocoa?

> Notice: The problem doesn't exist on Win OS

Are you sure you started with a Bidi-enabling locale on the Mac? Otherwise, these results are currently expected, since TextProcessor is only active in such locales (see bug 307307).
(In reply to comment #3)
> Carbon or Cocoa?
Cocoa 64 bit
> Are you sure you started with a Bidi-enabling locale on the Mac? 
Yes
Markus, can you check on your Mac whether the TextProcessor is enabled in this case?
I can reproduce with -nl he. Looks like a problem in SWT Trees and Tables. I've verified that the label is properly processed by TextProcessor. Similar text is rendered nicely in the status line and in the breadcrumb.
Sorry, SWT is fine.

> Notice: The problem doesn't exist on Win OS

That's wrong. When I tried it under Windows with a recent build, I got exactly the same behavior as on the Mac.

The problem was a bad "fix" in JavaElementLabels 1.67. Fixed in HEAD.

Dani, please verify and re-check the other changes that went in for that fix.

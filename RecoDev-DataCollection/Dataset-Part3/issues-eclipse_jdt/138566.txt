Eclipse 3.2RC1a

Problem:
- Multiple "Unnecessary $NON-NLS$ tag" for one file
- Select QuickFix -> QuickFix dialog opens
- Press "Find Similar Problems" button -> Progress seems to start, nothing happens
- Press Cancel button -> Nothing happens
- Press Okay button -> The one QuickFix is applied

Error Log:
java.lang.NullPointerException
at org.eclipse.jdt.internal.ui.text.correction.CorrectionMarkerResolutionGenerator$CorrectionMarkerResolution.findOtherMarkers(CorrectionMarkerResolutionGenerator.java:335)
at org.eclipse.ui.views.markers.internal.MarkerResolutionDialog$8.run(MarkerResolutionDialog.java:410)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
at org.eclipse.ui.views.markers.internal.MarkerResolutionDialog.addMatchingMarkers(MarkerResolutionDialog.java:403)
at org.eclipse.ui.views.markers.internal.MarkerResolutionDialog$7.widgetSelected(MarkerResolutionDialog.java:337)
at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:925)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3346)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2966)
at org.eclipse.jface.window.Window.runEventLoop(Window.java:820)
at org.eclipse.jface.window.Window.open(Window.java:796)
at org.eclipse.ui.views.markers.internal.ActionResolveMarker.run(ActionResolveMarker.java:96)
at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:539)
at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:488)
at org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:400)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:925)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3346)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2966)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1914)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1878)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:169)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)
at org.eclipse.core.launcher.Main.basicRun(Main.java:280)
at org.eclipse.core.launcher.Main.run(Main.java:977)
at org.eclipse.core.launcher.Main.main(Main.java:952)

Eclipse 3.2RC1a

Problem:
- Multiple "Unnecessary $NON-NLS$ tag" for one file
- Select QuickFix -> QuickFix dialog opens
- Press "Find Similar Problems" button -> Progress seems to start, nothing happens
- Press Cancel button -> Nothing happens
- Press Okay button -> The one QuickFix is applied

Error Log:
java.lang.NullPointerException
at org.eclipse.jdt.internal.ui.text.correction.CorrectionMarkerResolutionGenerator$CorrectionMarkerResolution.findOtherMarkers(CorrectionMarkerResolutionGenerator.java:335)
at org.eclipse.ui.views.markers.internal.MarkerResolutionDialog$8.run(MarkerResolutionDialog.java:410)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
at org.eclipse.ui.views.markers.internal.MarkerResolutionDialog.addMatchingMarkers(MarkerResolutionDialog.java:403)
at org.eclipse.ui.views.markers.internal.MarkerResolutionDialog$7.widgetSelected(MarkerResolutionDialog.java:337)
at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:90)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:925)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3346)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2966)
at org.eclipse.jface.window.Window.runEventLoop(Window.java:820)
at org.eclipse.jface.window.Window.open(Window.java:796)
at org.eclipse.ui.views.markers.internal.ActionResolveMarker.run(ActionResolveMarker.java:96)
at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:539)
at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:488)
at org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:400)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:925)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3346)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2966)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1914)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1878)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:419)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:95)
at org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:78)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:92)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:68)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:376)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:169)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)
at org.eclipse.core.launcher.Main.basicRun(Main.java:280)
at org.eclipse.core.launcher.Main.run(Main.java:977)
at org.eclipse.core.launcher.Main.main(Main.java:952)
Would it be possible to get that file?
Was the editor dirty (unsaved changes) when you opened the quick fix dialog?

For some reason the position of the marker(s) could not be determined
Okay, I am currently trying to debug this issue myself as this happens with all my files. Before giving you some more detail on that issue, I want to give you some other feedback and metrics:

- I have about 130 projects in my workspace
- At the moment, since I tightened the compiler settings, there are about 4000 markers.

Calculating similar quick fixes takes ages because CorrectionMarkerResolutionGenerator iterates over all the markers, tries to acquire a CompilationUnit for each and then tries to decided whether this can be fixed or not. There has to be a better way than this because running in the debugger for several minutes only processed about 200 of those markers, leaving 3800 to be processed.
Okay, here's the deal with the null pointer execption:

I am using a third party tools that creates info markers to indicate wheter a specific resource is under control of an SCM or not. The created marker do not contain location information because the marker is associated with the resource itself and doesn't point to a specific line! However since the marker is associated with a java file (in my case) the getCompilationUnit() call (lline 331) succeeds but the IProblemLocation (line 333) will be null.
fixed > 20060427

That's what we thought what it must be, a marker without a position. An null check should therefor fix this bug (it's none of our markers anyway and we can't fix it). I'm also using the annotation model for cus which are open in an editor to make sure the right position of the problem location is used also for dirty editors.




You're right about the performance, creating an AST for each marker is not very smart. See Bug 138943

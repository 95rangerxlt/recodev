1) create an interface I
interface I {
  void foo();
}
2) create an abstract class X which implements I
public class X implements I {
  foo<cursor>
}
3) do ctrl+space at cursor location
the method foo is not proposed

The problem is that a default abstract method already exists in X. That's why 
completion engine does not propose this method.

1) create an interface I
interface I {
  void foo();
}
2) create an abstract class X which implements I
public class X implements I {
  foo<cursor>
}
3) do ctrl+space at cursor location
the method foo is not proposed

The problem is that a default abstract method already exists in X. That's why 
completion engine does not propose this method.
Then it should propose to override default abstract methods too...


Fixed

Type:

} catch (

The code assist that automatically comes up suggests only one item, and that is 
my own class that I am currently typing into.

If automatic code assist is going to come up at all after catch, it might as 
well be useful and give me the list of exceptions.

Type:

} catch (

The code assist that automatically comes up suggests only one item, and that is 
my own class that I am currently typing into.

If automatic code assist is going to come up at all after catch, it might as 
well be useful and give me the list of exceptions.
Core code assist issue. The content assist window only pops up if there are 
proposals which are provided by the core.
Is the test case the entire compilation unit content ? If so, then I do not get 
the problem.

Code assist is ignoring the noise before the completion location, therefore it 
will not treat make sense of the bogus source before.

In general, for catch blocks, it will infer a type completion. Restraining to
only exception types would require to intersect completions with a hierarchy of
Throwable which we do not have cached anywhere. This is why we currently answer
all types.

I am wondering if the auto-completion story is such a good idea in the sense 
that it will expose all underlying misleading completions (like the hover-help
for open on selection).
Good candidate for the relevance computation (for better sorting proposals).
Some of the smartness is released for M5, not all of it. This one in particular 
will not happen until M6.


*** This bug has been marked as a duplicate of 13487 ***
Ignore my previous comment. it's an errror.
If the proposal is an exception (type name contain 'exception' or 'error') then 
proposal is more relevant.

Fixed.

When using Eclipse's  'Code->Generate Getters and Setters' feature, it would be 
nice if the getter/setter functions could be next to each other.

As an example

Currently for a class with 4 fields eclipse will generate getters/setters in 
the following format

private int a;
private int b;
private int c;
private int d;

int getA();
int getB();
int getC();
int getD();
void setA();
void setB();
void setC();
void setD();

Which isn't very friendly to keep track of all the disjoint getters and setters 
once the field list becomes large (or the code in the getter/setters becomes 
large).

I'd vote for a more developer friendly layout that pairs the getters and 
setters:

int getA();
void setA();
int getB();
void setB();
int getC();
void setC();
int getD();
void setD();

When using Eclipse's  'Code->Generate Getters and Setters' feature, it would be 
nice if the getter/setter functions could be next to each other.

As an example

Currently for a class with 4 fields eclipse will generate getters/setters in 
the following format

private int a;
private int b;
private int c;
private int d;

int getA();
int getB();
int getC();
int getD();
void setA();
void setB();
void setC();
void setD();

Which isn't very friendly to keep track of all the disjoint getters and setters 
once the field list becomes large (or the code in the getter/setters becomes 
large).

I'd vote for a more developer friendly layout that pairs the getters and 
setters:

int getA();
void setA();
int getB();
void setB();
int getC();
void setC();
int getD();
void setD();
i think this is implemented now,
Martin?
Yes, there is now new UI to select in which order you want the getter/setters
(> 20030514)

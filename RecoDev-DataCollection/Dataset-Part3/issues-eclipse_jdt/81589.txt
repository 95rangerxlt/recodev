when there is a switch/case statement involving typesafe enum constants,
organize imports adds 'static import...' statements... but then compiler throws
warning saying that import is never used, although it actually is.... so its a
spurious compiler warning.

when there is a switch/case statement involving typesafe enum constants,
organize imports adds 'static import...' statements... but then compiler throws
warning saying that import is never used, although it actually is.... so its a
spurious compiler warning.
Please provide exact steps to reproduce.
here is a test case, with two classes: one enum, one regular class. in class
'MyClass', do 'ctrl-shift-O' (organize imports), and two import lines will
appear:  'import static com.flarion.test.a.MyEnum.First;' and 'import static
com.flarion.test.a.MyEnum.Second;'; then, compiler will generate warning for
each "The import com.flarion.test.a.MyEnum.Second is never used". thus,
ctrl-shift-O creates a compiler warning, which is a bug. classes follow:

package com.flarion.test.a;

public enum MyEnum {

    First, Second;
    
}


package com.flarion.test.b;

import com.flarion.test.a.MyEnum;

public class MyClass {

    public void myMethod() {
        MyEnum e = MyEnum.First;
        switch (e) {
        case First:
            break;
        case Second:
            break;
        }
    }
}

The compiler is right. It is resolving enum constants in switch cases relatively
to the enum type of the switch expression (as per language rules).
Therefore, the static imports are unnecessary.

You can simply discard these, and the code will still compile clean.

Organize imports should not add these unnecessary warnings (note that until the
compiler was adjusted near M4, these extra imports were necessary).
fixed and test added > 20050105

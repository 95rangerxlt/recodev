Make a debug option to flag wrong results from new jdt.core queries.
When the flag is on, log messages (with stacktraces) should be generated when a
jdt.core query returns different results than the current jdt.ui implementation.

This should cover
- IBinding#getJavaElement() (compare with Bindings.find..., and check for
exceptions)
- IBindings#isEqualTo(..) -> Bindings.equals()
- ITypeBinding#isAssignmentCompatible(..) & #isCastCompatible(..) -> TypeRules
- IMethodBinding#overrides & #overloads

Remember timestamps of messages in order to generate no more than 5 messages in
30 secs.

Make a debug option to flag wrong results from new jdt.core queries.
When the flag is on, log messages (with stacktraces) should be generated when a
jdt.core query returns different results than the current jdt.ui implementation.

This should cover
- IBinding#getJavaElement() (compare with Bindings.find..., and check for
exceptions)
- IBindings#isEqualTo(..) -> Bindings.equals()
- ITypeBinding#isAssignmentCompatible(..) & #isCastCompatible(..) -> TypeRules
- IMethodBinding#overrides & #overloads

Remember timestamps of messages in order to generate no more than 5 messages in
30 secs.
Done. Tests are in class Bindings and activated via debug options:

# verify jdt.core API for IBinding#isEqualTo(..)
org.eclipse.jdt.ui/debug/checkCoreBindingIsEqualTo=true

# verify jdt.core API for IBinding#getJavaElement()
org.eclipse.jdt.ui/debug/checkCoreBindingGetJavaElement=true



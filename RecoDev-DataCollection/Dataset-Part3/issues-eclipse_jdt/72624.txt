200408241200

Test case:

==============================================

package p1;

public class A {

==============================================

package p2;

import p1.A;

public class B extends A {
	private static class Inner {
	}
	
	public void ref() {
		foo();
	}
	
	private void foo() {
		Inner inner= new Inner();
	}
}

- select Inner in B
- activate pull up
- check method foo as well
- press preview

two issues:
- you get an errror message that Inner is referenced in B which isn't true any
  more

- the refactoring generates bogus imports in A

200408241200

Test case:

==============================================

package p1;

public class A {

==============================================

package p2;

import p1.A;

public class B extends A {
	private static class Inner {
	}
	
	public void ref() {
		foo();
	}
	
	private void foo() {
		Inner inner= new Inner();
	}
}

- select Inner in B
- activate pull up
- check method foo as well
- press preview

two issues:
- you get an errror message that Inner is referenced in B which isn't true any
  more

- the refactoring generates bogus imports in A
Created attachment 14187
Patch

Does not import the declaring type and types which are pulled up anymore
The same code is also used in the Push Down refactoring
Moved the corrected code in question out in a common super class

Verified
Fixed > 20040906

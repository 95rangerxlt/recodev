This bug is to track the the changes to migrate jdt.ui to git.  As a first step, I'll run a test migration to allow the committers to try out this repo before the real migration.

This bug is to track the the changes to migrate jdt.ui to git.  As a first step, I'll run a test migration to allow the committers to try out this repo before the real migration.
Is the Releng tool fixed soon? Currently it looks like driving without lights in the night. Not funny ;-).
Created attachment 201401
log from first cvs2git run

Errors because some files exist in both attic and main branch. 

See http://cvs2svn.tigris.org/faq.html#atticprob

for details.

I'll try to run csv2git again with --retain-conflicting-attic-files  

Dani, let me know if you want me to change the approach to one of the other four options they discuss in the faq.
Dani: Andrew needs some help from a UI perspective to fix the releng tool.  Would you be able to help?  See bug 343320.
(In reply to comment #3)
> Dani: Andrew needs some help from a UI perspective to fix the releng tool. 
> Would you be able to help?  See bug 343320.

Yes, I can help.
Your test repo is ready here
committerid@git.eclipse.org:/gitroot/jdt/eclipse.jdt.ui.git

Please let me know if you find any issues.  Also, let me know when you'd like to schedule the real migration.
(In reply to comment #5)
> Please let me know if you find any issues.  Also, let me know when you'd like
> to schedule the real migration.

the .gitignore has '>' characters in it:
bash$ cat .gitignore
> bin/
> *~
> *.rej
> *.bak
> *.patch
> javacore.*
> heapdump.*
> core.*
> Snap.*
> target/
>
> EOF
I'm running another migration to fix that which hopefully should be available by the end of the day. Running the git filter branch takes 4-6 hours.
Okay, there is a new repo available with the fixed .gitignore
(In reply to comment #8)
> Okay, there is a new repo available with the fixed .gitignore

Didn't look at the repo yet. When doing this we have to verify that all CVS projects with 'eclipse.jdt.ui' ACL are in there.
The following 4 folders in 'eclipse.jdt.ui-home' should be moved together with their history to the 'org.eclipse.jdt.ui' repository as normal top-level projects:

/jdt-ui-home/plugins/
    org.eclipse.jdt.astview
    org.eclipse.jdt.astview.feature
    org.eclipse.jdt.jeview
    org.eclipse.jdt.jeview.feature

==>
org.eclipse.jdt.ui repo
    org.eclipse.jdt.astview
    org.eclipse.jdt.astview.feature
    org.eclipse.jdt.jeview
    org.eclipse.jdt.jeview.feature


The rest of the top-level content looks good. We didn't verify on the file level yet. This is coming soon...
I could not verify the branches as not all branches are created in the CVS repository.

General (E)Git issues:
- Tags which don't exist on all projects are not trustworthy as one only gets the
  correct contents for the files that have that tag in CVS. For the others one 
  gets an approximated content (instead of none like in CVS).
- Text files are checked out with LF delimiter instead of CRLF on my Windows box.
(In reply to comment #11)
> - Text files are checked out with LF delimiter instead of CRLF on my Windows
> box.

May want to check your settings and/or CGit's behaviour. Also see bug 301775.
(In reply to comment #12)
> (In reply to comment #11)
> > - Text files are checked out with LF delimiter instead of CRLF on my Windows
> > box.
> 
> May want to check your settings and/or CGit's behaviour. Also see bug 301775.
CGit? Are you saying it works for you? If so, please tell me the correct settings.
(In reply to comment #13)
> Are you saying it works for you? If so, please tell me the correct
> settings.

We can continue this part of the conversation in bug 355192.
Dani, the jdt.ui git and cvs repositories should now have the tags that will allow you to verify both repositories. I reran the migration.
Looks good except for the changes requested in comment 10.

We are ready to migrate once M2 is finalized.
Dani, regarding comment #10

These projects don't need to have their the preconditioning step run, because these projects weren't part of any SDK builds, is this this correct? The preconditioning step is where we fix up the tags and branches so all bundles are in the maintenance stream for previous 3.x releases.
(In reply to comment #17)
> Dani, regarding comment #10
> 
> These projects don't need to have their the preconditioning step run, because
> these projects weren't part of any SDK builds, is this this correct?
Yes.

> The
> preconditioning step is where we fix up the tags and branches so all bundles
> are in the maintenance stream for previous 3.x releases.
I added a 'Git_migration' tag for our own bookkeeping.
Your repo is ready

kmoir@git.eclipse.org:/gitroot/jdt/eclipse.jdt.ui

I ran the migration yesterday since you said you were ready early.
I've updated the jdtui.map and text.map files for the N-build. I didn't update feature.map, because I didn't want even more risk of screwing the build.

I think we should replace

feature@org.eclipse.jdt=v20110809-0800,:pserver:anonymous@dev.eclipse.org:/cvsroot/eclipse,,org.eclipse.jdt-feature

with 

feature@org.eclipse.jdt=GIT,tag=v20110809-0800,repo=git://git.eclipse.org/gitroot/jdt/eclipse.jdt.git,path=org.eclipse.jdt-feature
Can this bug be closed?  Perhaps the dependent bugs should be added on bug 345479 because the repository is migrated.
(In reply to comment #21)
> Can this bug be closed?
Yes.

> Perhaps the dependent bugs should be added on bug
> 345479 because the repository is migrated.
+1. Verified that this is the case.

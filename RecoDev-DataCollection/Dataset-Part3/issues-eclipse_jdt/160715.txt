When pulling up some test methods from different test classes and forming a template test method in an abstract superclass, the tests methods in the superclass were only executed in the context of the subclasses using the junit 3 test runner, but the test runner for junit 4 tries to execute them in the superclass, which results in the following failure trace: 

java.lang.Exception: No runnable methods
	at org.junit.internal.runners.TestClassMethodsRunner.testAborted(TestClassMethodsRunner.java:42)
	at org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java:68)
	at org.junit.internal.runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:35)
	at org.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)
	at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
	at org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:38)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)


Here is the code that caused the problem:

public abstract class AbstractRendererTest {

	protected IRenderer renderer;

	protected abstract IRenderer createRenderer();

	@Test
	public void getSelfLocation() {
		List<Point> locations = renderer.getLocations(renderer);
	
		assertEquals(1, locations.size());
		assertEquals(new Point(0, 0), locations.get(0));
	}

	@Test
	public void isRenderer() {
		assertTrue(IRenderer.class.isAssignableFrom(renderer.getClass()));
	}

	@Before
	public void setUp() {
		renderer = createRenderer();
	}
	
}

When pulling up some test methods from different test classes and forming a template test method in an abstract superclass, the tests methods in the superclass were only executed in the context of the subclasses using the junit 3 test runner, but the test runner for junit 4 tries to execute them in the superclass, which results in the following failure trace: 

java.lang.Exception: No runnable methods
	at org.junit.internal.runners.TestClassMethodsRunner.testAborted(TestClassMethodsRunner.java:42)
	at org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java:68)
	at org.junit.internal.runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:35)
	at org.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)
	at org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)
	at org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:38)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)


Here is the code that caused the problem:

public abstract class AbstractRendererTest {

	protected IRenderer renderer;

	protected abstract IRenderer createRenderer();

	@Test
	public void getSelfLocation() {
		List<Point> locations = renderer.getLocations(renderer);
	
		assertEquals(1, locations.size());
		assertEquals(new Point(0, 0), locations.get(0));
	}

	@Test
	public void isRenderer() {
		assertTrue(IRenderer.class.isAssignableFrom(renderer.getClass()));
	}

	@Before
	public void setUp() {
		renderer = createRenderer();
	}
	
}
Move to JDT/UI
fixed > 20061016

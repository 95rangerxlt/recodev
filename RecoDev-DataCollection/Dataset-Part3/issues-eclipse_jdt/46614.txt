I20031111

Title says it all.

I20031111

Title says it all.
An obvious attempt at a fix by asking IMethodBinding.isSynthetic() failed;
isSynthetic() returns false for TT() in the following source:

public class TT {
   public void foo() {
      new TT();
   }
}

i.e. when the IMethodBinding refers to the no-arg ctor method of TT (verified 
in the debugger). The IMethodBinding in question was obtained by a search for 
calls to TT().

Might this be a bug in JDT Core?
No, it isn't a JDT/Core bug. As far as I can remember the default constructor 
isn't syntetic (so it was my fault to call it like this). Ask JDT/Core for the 
exact definition. The only way I can think of finding this out is to check if 
there is adeclaration for the binding in the CU providing the class.
Created attachment 6790
Patch to Introduce Factory that adds requested behavior
Fixed by attached patch.
Do to the check an AST is created. We should avoid creating AST for those 
operations. If you need the AST for the CU containing the constructor at more 
than one place in the future (and I think you already do) then we end up 
creating the AST more than once. 

Bob, please clarify if this can't be implemented differently
Do you mean it's bad to create the AST even once in order to figure out whether 
to enable the "protect constructor" checkbox? If so, then I don't know how to 
perform the "is the constructor synthetic" check without creating the AST, 
since IMethodBinding.isSynthetic() answer isn't sufficient. Or do you mean 
instead that creating the AST more than once is a problem? If so, I can 
certainly fix that. Please advise.
The problem I see is that you "might" (I did follow the control flow) create 
an AST for the same CU more than once. I think we should avoid this. But if 
this is a "risky" fix for M5, we should do the "real" fix for M6.
Created attachment 6816
Patch to Introduce Factory that disables "protect" checkbox when appropriate and avoids creating AST's twice
The updated patch prevents creating AST's more than once. I verified in the 
debugger that ASTCreator.createAST() is called precisely once per unit, even 
when there are multiple units and the selected unit is different from 
the "factory unit".
Fix release to HEAD

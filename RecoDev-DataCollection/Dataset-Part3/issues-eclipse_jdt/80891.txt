I have an abstract class (which I will attach) with a static member that is
defined with an anonymous class of the same type as the enclosing class. 
Attempting to Refactor->Move Member Type to New File results in an error, null
argument.  

Here is the relevant snippet.  I'm trying to extract the class assigned to
LastDay to a separate file. I have my cursor on the second instance of the word
Relative DateRange on that line:

public abstract class RelativeDateRange
{
    public static final RelativeDateRange LastDay = new RelativeDateRange()  //
<- This is the inner class I want to extract to its own file. 
    {

        public Date getStartTime()
        {
            Calendar cal = todayMidnight();

            // back one day 
            cal.add(Calendar.DAY_OF_YEAR, -1);
            return cal.getTime();
        }

        public Date getEndTime()
        {
            Calendar cal = todayMidnight();
            
            return cal.getTime();
        }

        public String getValue()
        {
            return "LastDay";
        }
        
        public String getLabelKey()
        {
            return "dateRange.lastDay";
        }
        
    };

   .... // snip

}




The trace from the log follows:

Caused by: org.eclipse.jdt.internal.corext.Assert$AssertionFailedException: null
argument;

	at org.eclipse.jdt.internal.corext.Assert.isNotNull(Assert.java:105)

	at org.eclipse.jdt.internal.corext.Assert.isNotNull(Assert.java:83)

	at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.findTypeDeclaration(MoveInnerToTopRefactoring.java:493)

	at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.isInstanceFieldCreationMandatory(MoveInnerToTopRefactoring.java:431)

	at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.checkInitialConditions(MoveInnerToTopRefactoring.java:250)

	at
org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:82)

	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)

	at
org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:58)

	at
org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)

Root exception:

org.eclipse.jdt.internal.corext.Assert$AssertionFailedException: null argument;

	at org.eclipse.jdt.internal.corext.Assert.isNotNull(Assert.java:105)

	at org.eclipse.jdt.internal.corext.Assert.isNotNull(Assert.java:83)

	at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.findTypeDeclaration(MoveInnerToTopRefactoring.java:493)

	at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.isInstanceFieldCreationMandatory(MoveInnerToTopRefactoring.java:431)

	at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.checkInitialConditions(MoveInnerToTopRefactoring.java:250)

	at
org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:82)

	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)

	at
org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:58)

	at
org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)

I have an abstract class (which I will attach) with a static member that is
defined with an anonymous class of the same type as the enclosing class. 
Attempting to Refactor->Move Member Type to New File results in an error, null
argument.  

Here is the relevant snippet.  I'm trying to extract the class assigned to
LastDay to a separate file. I have my cursor on the second instance of the word
Relative DateRange on that line:

public abstract class RelativeDateRange
{
    public static final RelativeDateRange LastDay = new RelativeDateRange()  //
<- This is the inner class I want to extract to its own file. 
    {

        public Date getStartTime()
        {
            Calendar cal = todayMidnight();

            // back one day 
            cal.add(Calendar.DAY_OF_YEAR, -1);
            return cal.getTime();
        }

        public Date getEndTime()
        {
            Calendar cal = todayMidnight();
            
            return cal.getTime();
        }

        public String getValue()
        {
            return "LastDay";
        }
        
        public String getLabelKey()
        {
            return "dateRange.lastDay";
        }
        
    };

   .... // snip

}




The trace from the log follows:

Caused by: org.eclipse.jdt.internal.corext.Assert$AssertionFailedException: null
argument;

	at org.eclipse.jdt.internal.corext.Assert.isNotNull(Assert.java:105)

	at org.eclipse.jdt.internal.corext.Assert.isNotNull(Assert.java:83)

	at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.findTypeDeclaration(MoveInnerToTopRefactoring.java:493)

	at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.isInstanceFieldCreationMandatory(MoveInnerToTopRefactoring.java:431)

	at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.checkInitialConditions(MoveInnerToTopRefactoring.java:250)

	at
org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:82)

	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)

	at
org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:58)

	at
org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)

Root exception:

org.eclipse.jdt.internal.corext.Assert$AssertionFailedException: null argument;

	at org.eclipse.jdt.internal.corext.Assert.isNotNull(Assert.java:105)

	at org.eclipse.jdt.internal.corext.Assert.isNotNull(Assert.java:83)

	at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.findTypeDeclaration(MoveInnerToTopRefactoring.java:493)

	at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.isInstanceFieldCreationMandatory(MoveInnerToTopRefactoring.java:431)

	at
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring.checkInitialConditions(MoveInnerToTopRefactoring.java:250)

	at
org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:82)

	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1673)

	at
org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:58)

	at
org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)
Move to JDT/UI
Fixed > 20041214

By the way: The snippet shows an anonymous class, which is correctly 
refactored using "Convert Anonymous Class To Nested". The resulting nested 
type can then be extracted using "Move Member Type To New File".

The bug report however is justified, since the second refactoring should not 
be enabled in this case.

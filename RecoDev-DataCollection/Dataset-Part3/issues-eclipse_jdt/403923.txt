Handle annotations on extra dimensions in the AST.

For jsr308, a new extraDimensions2 property has been added to MethodDeclaration and to the two concrete VariableDeclaration types. Make a pass over all JDT UI code that uses the old property in any way (direct access or via property descriptor) and update usages.

File separate bugs if things get too complicated somewhere or if you think we should add new features for handling these constructs.

Handle annotations on extra dimensions in the AST.

For jsr308, a new extraDimensions2 property has been added to MethodDeclaration and to the two concrete VariableDeclaration types. Make a pass over all JDT UI code that uses the old property in any way (direct access or via property descriptor) and update usages.

File separate bugs if things get too complicated somewhere or if you think we should add new features for handling these constructs.
Created attachment 228980
Initial Patch

The attached patch updates the usages of old 'extraDimensions' property in JDT UI code.

In order to avoid code duplication, I have created the method 'copyExtraDimensions(final VariableDeclaration oldVarDeclaration, final VariableDeclaration newVarDeclaration)' in HierarchyProcessor.java as public to be used in:
1. PromoteTempToFieldRefactoring.java
2. SelfEncapsulateFieldRefactoring.java
Please let me know if it should be a protected method like others and if there is a utility class where I can create this method for use in the above mentioned java classes.

Also, the newly added code in the following java classes can be extracted to utility methods:
1. TypeChangeCorrectionProposal.java
2. ChangeMethodSignatureProposal.java

Please let me know the suitable utility classes so that I can update it.
(In reply to Noopur Gupta from comment #1)
Released as http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=51bb48b17cab7e2d4ece79e1fc1dcf6ca38e219b

Taken care via bug 403927:

> In order to avoid code duplication, I have created the method
> 'copyExtraDimensions(final VariableDeclaration oldVarDeclaration, final
> VariableDeclaration newVarDeclaration)' in HierarchyProcessor.java as public
> to be used in:
> 1. PromoteTempToFieldRefactoring.java
> 2. SelfEncapsulateFieldRefactoring.java
> Please let me know if it should be a protected method like others and if
> there is a utility class where I can create this method for use in the above
> mentioned java classes.

The method is OK for HierarchyProcessor, since other code in those processors makes equally questionable calls to ASTNode#copySubtree(..). But wherever we can, we should use ASTRewrite#createCopyTarget(..), since that method also preserves formatting and comments.

I've added DimensionRewrite#copyDimensions(ASTRewrite, List<Dimension>) for the other usages.

> Also, the newly added code in the following java classes can be extracted to
> utility methods:
> 1. TypeChangeCorrectionProposal.java
> 2. ChangeMethodSignatureProposal.java
> 
> Please let me know the suitable utility classes so that I can update it.

For lack of a better place, I've also put it into DimensionRewrite for now. Next time, please already extract the method when you're realizing you're doing the same thing twice.

Build ID: 3.2.0

Steps To Reproduce:
1. Help > Help Contents.
2. Search for "compiler compliance level"
3. Open "Java compiler" topic that discusses the Java > Compiler preferences page.

The topic describes the fields on the preferences page, then states the default levels. An eclipse-based product can easily change these default levels (as can the user), but the product will typically consume these docs as is. 

There is no advantage to listing the defaults here on this help topic, so I suggest removing the default column. It will help with the consumption of the help topic and avoid confusion in products that use different default levels. It will also make this topic easier to maintain, with no real hit in quality, since the user can change these values anyway.


More information:

Build ID: 3.2.0

Steps To Reproduce:
1. Help > Help Contents.
2. Search for "compiler compliance level"
3. Open "Java compiler" topic that discusses the Java > Compiler preferences page.

The topic describes the fields on the preferences page, then states the default levels. An eclipse-based product can easily change these default levels (as can the user), but the product will typically consume these docs as is. 

There is no advantage to listing the defaults here on this help topic, so I suggest removing the default column. It will help with the consumption of the help topic and avoid confusion in products that use different default levels. It will also make this topic easier to maintain, with no real hit in quality, since the user can change these values anyway.


More information:
(In reply to comment #0)
> Build ID: 3.2.0
> 
> Steps To Reproduce:
> 1. Help > Help Contents.
> 2. Search for "compiler compliance level"
> 3. Open "Java compiler" topic that discusses the Java > Compiler preferences
> page.
> 
> The topic describes the fields on the preferences page, then states the default
> levels. An eclipse-based product can easily change these default levels (as can
Sure.
> the user), but the product will typically consume these docs as is. 
Your choice?
> 
> There is no advantage to listing the defaults here on this help topic, so I
I disagree on this point. If the user bothered to go to the doc, she
will be interested in knowing the default without having to check the UI.
We have the same in 'JDT Core options', where we document defaults, etc.
There is user value in documentation completeness.

I agree though that on a consumability standpoint, this is probably not the ideal situation. I do not quite know what it involves to selectively upgrade parts of the documentation. I would assume yet that this is far from being the sole instance for such a need.

Philippe, what do you think?

I think the defaults listed here related to the batch compiler, not the IDE pref page. These are already slightly different (e.g. preserveAllLocals is enabled by default in IDE, not in batch compiler).
Could the docs be updated to mention that an Eclipse-based product may change the compiler defaults, so they may be different than indicated?
Sure. This is a good point actually.
Created attachment 162174
Proposed fix
Released for 3.6M7.

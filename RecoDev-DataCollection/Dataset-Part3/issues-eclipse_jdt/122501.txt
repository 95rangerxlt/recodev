In the Java IDE, after typing out
System.out.println( 
and pressing SPACEBAR, on a fresh line, generates
System.out.println() ) 

This happens only when the content-assist window pops up. On trying to edit the line again, the problem does not show up, as long as the content-assist window is not up again.

In the Java IDE, after typing out
System.out.println( 
and pressing SPACEBAR, on a fresh line, generates
System.out.println() ) 

This happens only when the content-assist window pops up. On trying to edit the line again, the problem does not show up, as long as the content-assist window is not up again.
Updated a zipped AVI clip of the said scenario
Created attachment 32400
Zipped AVI Clip of the problem
Cannot reproduce with I20051220. We changed the behavior of proposals in various locations recently (for M4, that is) -> can you please recheck whether this is still a problem? Feel free to reopen if it is.

Please include the following information:
- setting of "autoclose parentheses" (on "Java > Editor > Typing" preference page)
- setting of "automatically insert arguments" (on "Java > Editor > Content Assist" page)

Note that SPACE is a socalled trigger character, ie. it pressing SPACE when the content assist popup is showing will insert the currently selected proposal.
I checked with 3.2M4 (Build id: I20051215-1506), and I find the same issue.

Please find attached the TYPING_PREFERANCE and CONTENT_ASSIST page.

I studied the behavior carefully, and this is what I notice. However, this was not the way it used to be with 3.1.1/3.1/3.0

Let me explain it in more details. The content-window pops up, as I keep on typing as:
System.out.println

The cursor on the content-window pops gets positioned on the 1st element:
println() void - PrintStream

Then I press open parenthesis
(

the close parenthesis
)
automatically appears. Please note that the content-assist window, MUST remain on the screen, for the isssue to replicate.

So now on the screen it looks like:
System.out.println(|)

The vertical bar shown is the blinking cursor. Now if I press SPACE, because I prefer giving a space after the open parenthesis to write something like this:
System.out.println( "Test"), it looks like:
System.out.println() |)

The vertical bar shown is the blinking cursor. If I were to write:
System.out.println("Test")
then I see no problems.


Created attachment 32426
ContentAssist Preference
Created attachment 32427
Typing Preference
Simple test case:
1. enter "System.out.println"
2. press '('
3. press Ctrl+Space
4. press SPACE

Ok, I see what you mean. This is what happens:

a) The closing parenthesis is auto-inserted when you type '('.
b) pressing SPACE will insert the currently selected proposal and insert a
   space. Since the first method is the zero-arg println() method, applying the 
   proposal will jump behind the closing parenthesis.
c) the closing parenthesis is inserted at the caret location, which is after the 
   space inserted in b).

If at b), the selected proposal were the println(String) variant, applying the proposal would insert the parameter name and select it.

Fixing this would mean to remove SPACE from the list of trigger characters for method proposals, which would make sense IMO.

Re: comment 4
> I studied the behavior carefully, and this is what I notice. However, this was
> not the way it used to be with 3.1.1/3.1/3.0

Interesting, I just checked with 3.1RC4 - while the behavior is somewhat different (some bogus linked mode set up), it is by no means what you would expect. We have reduced the auto-activation timeout for code assist from 500 to 200ms, so it is more likely that you get hit by it when just typing.
fixed > 20060104
- Space is no longer a trigger character for no-arg methods.

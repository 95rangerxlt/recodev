Using1119, I noticed something quite annoying.
Consider the following code:

String s = "";

If you copy some code like:
class A { // comment
}


And then you paste it between the double-quotes, you will end up with:
	String s = "public class A { // comment" +
		"}";
The problem is that this code is not equivalent. I should have a line break at
the end of the first line. Otherwise the code contained in my string s doesn't
even compile.
So the feature is nice, but cannot be used till a line break is added at the end
of each part of the string concatenation. 

So in the above example, I would expect:
	String s = "public class A { // comment\n" +
		"}";
or 
	String s = "public class A { // comment\r\n" +
		"}";
or
	String s = "public class A { // comment\r" +
		"}";
The line break could be chosen according to the line breaks in the current file
or the platform line delimiter.

Using1119, I noticed something quite annoying.
Consider the following code:

String s = "";

If you copy some code like:
class A { // comment
}


And then you paste it between the double-quotes, you will end up with:
	String s = "public class A { // comment" +
		"}";
The problem is that this code is not equivalent. I should have a line break at
the end of the first line. Otherwise the code contained in my string s doesn't
even compile.
So the feature is nice, but cannot be used till a line break is added at the end
of each part of the string concatenation. 

So in the above example, I would expect:
	String s = "public class A { // comment\n" +
		"}";
or 
	String s = "public class A { // comment\r\n" +
		"}";
or
	String s = "public class A { // comment\r" +
		"}";
The line break could be chosen according to the line breaks in the current file
or the platform line delimiter.
As long as this doesn't work with inserting line breaks, it should be turned off
by default.
Created attachment 3734
patch for this problem

This is a patch that would also fix bug 33363. It might not be exactly what you
want, but I think it gives a pretty good idea how to do it.
Investigation item.
Post 2.1
This is certainly not an enhancement. It is a bug. The feature is not doing what
it is supposed to do. If you paste a double quote it is not converted to \". So
there is no string wrapping except addition of string concatenation. This is
clearly not enough.
The severity should be changed to normal or even major instead of enhancement.
An enhancement means it works as designed, but it could be improved. Here it is
NOT working.

Is this planned to be fixed?
integrated your patch > 20030911
- mostly as is
- only escapes strings if length > 1 (nothing special except for pasting)
- old behaviour on <RETURN>
- added a preference to turn it on/off, on per default.
- works only in "smart mode"

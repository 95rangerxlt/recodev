As discussed in Bug 180107 and Bug 175794, the APT compilation participant needs to cache reported CategorizedProblems for each BuildContext it processes.  The cache needs to last the duration of the Java build (that is, multiple rounds of annotation processing), but once the build is finished, these are just dead resources taking up space.  The amount of space required can be quite large, for a large project with many processor-contributed problem markers.

Per the current resolution of bug 180107, we need to implement a resource change listener to detect the end of the build and discard the resources.

As discussed in Bug 180107 and Bug 175794, the APT compilation participant needs to cache reported CategorizedProblems for each BuildContext it processes.  The cache needs to last the duration of the Java build (that is, multiple rounds of annotation processing), but once the build is finished, these are just dead resources taking up space.  The amount of space required can be quite large, for a large project with many processor-contributed problem markers.

Per the current resolution of bug 180107, we need to implement a resource change listener to detect the end of the build and discard the resources.
Created attachment 67010
proposed patch

Proposed patch adds a resource change listener so that, at the end of a build, no-longer-needed resources are discarded.

Note that, if POST_BUILD notifications could come asynchronously during a build (e.g., POST_BUILD for one project while another is building), this solution is inadequate.  In practice that does not seem to ever occur; we get one change notification for the entire build, even if multiple projects were built.
Jess, please review.
+1 Approved.
Fixed for RC1, using a POST_BUILD resource change listener in AptCompilationParticipant.

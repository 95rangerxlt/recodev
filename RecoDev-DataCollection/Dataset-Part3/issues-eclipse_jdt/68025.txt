3.0 RC3

have the following Javadoc:
/**
 * @see IJavaElement#getElementName#bug
 * or closer to the reality (COPY is a constant):
 * @see org.eclipse.ui.actions.ActionFactory#COPY#getId
 */

this should report that #bug and #getId are not correct. We have several
warnings in the SDK's Javadoc logs due to this.

3.0 RC3

have the following Javadoc:
/**
 * @see IJavaElement#getElementName#bug
 * or closer to the reality (COPY is a constant):
 * @see org.eclipse.ui.actions.ActionFactory#COPY#getId
 */

this should report that #bug and #getId are not correct. We have several
warnings in the SDK's Javadoc logs due to this.
You're right, compiler should complain about these invalid syntax.
Javadoc tool raises 2 warnings here:
warning - Tag @see: reference not found:
org.eclipse.jdt.core.IJavaElement#getElementName#bug
 or closer to the reality (COPY is a constant):
warning - Tag @see: reference not found:
org.eclipse.ui.actions.ActionFactory#COPY#getId
deferred post 3.0
Candidate for 3.0.1
Fixed.

In this case, compiler now reports following warning:
"Javadoc: Malformed reference (missing end space separator)"

[jdt-core-internal]
Change done in AbstractCommentParser methods:
- parseArgument(Object)
- parseMember(Object)
- parseReference(boolean)
- parseQualifiedName(boolean)
also add methods:
- verifyEndLine(int)
- verifyCharsAfterName()
Test cases added in JavadocTestMixed and ASTConverterJavadocTest.

Released in HEAD.
Verified for 3.0.1 RC1

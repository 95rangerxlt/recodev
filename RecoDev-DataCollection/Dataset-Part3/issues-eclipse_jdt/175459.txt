When I attach javadoc archive to the jar file from the buildpath, Eclipse 3.3M5 is not picking it up even so validation in javadoc attachment dialog is saying that everything is ok.

When I attach javadoc archive to the jar file from the buildpath, Eclipse 3.3M5 is not picking it up even so validation in javadoc attachment dialog is saying that everything is ok.
Created attachment 59749
example project

You can umport this project into the workspace, then open SomeTest class, put a cursor on TestClass and hit F2. It says that javadoc is not attached even so you can actually see it in the buildpath configuration.

I've also tried to unzip javadoc archive to some folder, but it didn't help either.
It seems to work if I point javadoc to some html-based URL
I cannot verify that it works or not with you example as the jar file you used for the Javadoc location is an external jar file which is not in the given zip file. I found one in lib directory but it does not have any documentation for "TestCase" (and not TestClass) which would explain that there's no attached source for it.
So, are you sure that the jar you're referencing does include the documentation for this class? If so, can you attach it to this bug to let us to reproduce your exact test case?

Attached archive does jave javadoc jar. Though you are right, that jar does not have doco for the TestCase class. 

So, it seems like the issue we have here is confusing note shown, when doc is not in the attached javadoc.

junit.framework.TestCase
Note: This element neither has attached source nor attached Javadoc and hence no information could be found.

It should somehow say that doc for the class is missing from the attached javadoc.
This already the case if you try to select this class (F3), you get following error message in the .class file editor:

Source not found
----------------
The source attachment does not contain the source for the file TestCase.class
You can change the source attachment...

So, decrease the severity to minor and move to JDT/Text as this is only a warning message to display eventually in the Javadoc view...

Comment 5 is totally unrelated as the source indeed isn't attached.
(In reply to comment #6)
> Comment 5 is totally unrelated as the source indeed isn't attached.
> 
The relation is that the requested message already exists in the .class file editor... Perhaps not well phrased, but not totally unrelated IMO!

The difference is that for the editor the message is correct: there is no source at all in the example. In the Javadoc case the Javadoc is attached but the file in question is missing. I have to test though whether the same happens for attached source and missing source file in question.

> Perhaps not well phrased, but not totally unrelated IMO!
If you think it is not well phrased then please file a bug report with suggested improved message ;-)
(In reply to comment #8)
> The difference is that for the editor the message is correct: there is no
> source at all in the example. In the Javadoc case the Javadoc is attached but
> the file in question is missing. I have to test though whether the same
> happens for attached source and missing source file in question.
> 
OK, I mixed source and javadoc. I thought the .class editor already makes the distinction between no source attached and attached file without corresponding source in it. Sorry for the confusion...

> > Perhaps not well phrased, but not totally unrelated IMO!
> If you think it is not well phrased then please file a bug report with
> suggested improved message ;-)
> 
I was talking about the phrasing of *my* comment...

The API IJavaElement.getAttachedJavadoc(...) says:
	 * <p>Returns the Javadoc as an html source if this element has an attached javadoc,
	 * null otherwise.</p> 

Since Javadoc can only be attached to the JAR and not to individual elements it is not clear what "null otherwise" means. Either we should clarify the API or we could return a not-exist JavaModelException in this case.

Also note that the Javadoc still says:
 * <p>NOTE: This API is subject to change before the 3.2 release.</p>


If the no attachment and the missing doc inside the attachment is mapped to 'null' then we have to check this on our side (which is possible: we do the same when getting the source for a binary element).
(In reply to comment #10)
> Since Javadoc can only be attached to the JAR and not to individual elements it
> is not clear what "null otherwise" means. Either we should clarify the API or
> we could return a not-exist JavaModelException in this case.
null otherwise means that if conditions above are not met, null is returned.
In your case I would expect null to be returned.
 
> Also note that the Javadoc still says:
>  * <p>NOTE: This API is subject to change before the 3.2 release.</p>
I'll remove it. Thx.

> If the no attachment and the missing doc inside the attachment is mapped to
> 'null' then we have to check this on our side (which is possible: we do the
> same when getting the source for a binary element).
Do it on your side. There is no plan to change anything on the Core side. 


The message in this case now says:
Note: This element has no attached source and the Javadoc could not be found in the attached Javadoc.

Fixed in HEAD.
Available in builds > N2070226-0010.

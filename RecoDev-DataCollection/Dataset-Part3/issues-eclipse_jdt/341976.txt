ActivateJavaEditorTest#testActivateEditor() (Activate 30 Java editors) has a small regression on all platforms. See http://download.eclipse.org/eclipse/downloads/drops/I20110329-0800/performance/epwin2/Scenario1.html

OpenJavaEditorStartupTest#testJavaEditorStartup() also shows a smallish regression. See http://download.eclipse.org/eclipse/downloads/drops/I20110329-0800/performance/epwin3/Scenario53.html

This could possibly be same as bug 337007.

ActivateJavaEditorTest#testActivateEditor() (Activate 30 Java editors) has a small regression on all platforms. See http://download.eclipse.org/eclipse/downloads/drops/I20110329-0800/performance/epwin2/Scenario1.html

OpenJavaEditorStartupTest#testJavaEditorStartup() also shows a smallish regression. See http://download.eclipse.org/eclipse/downloads/drops/I20110329-0800/performance/epwin3/Scenario53.html

This could possibly be same as bug 337007.
I can reproduce this one on my machine. 

M3
Scenario 'org.eclipse.jdt.text.tests.performance.ActivateJavaEditorTest#testActivateEditor()' (average over 5 samples):
  Used Java Heap:         9.78M         (95% in [-16.96M, 36.52M])     Measurable effect: 38.52M (1.8 SDs) (required sample size for an effect of 5% of stdev: 

6401)
  Working Set:          -238.4K         (95% in [-15M, 14.54M])        Measurable effect: 21.28M (1.8 SDs) (required sample size for an effect of 5% of stdev: 

6400)
  Committed:             -26.4K         (95% in [-15.08M, 15.03M])     Measurable effect: 21.69M (1.8 SDs) (required sample size for an effect of 5% of stdev: 

6401)
  Working Set Peak:          0          (95% in [0, 0])               
  Elapsed Process:        6.22s         (95% in [6.08s, 6.35s])        Measurable effect: 192ms (1.8 SDs)
  Kernel time:            2.04s         (95% in [1.88s, 2.2s])         Measurable effect: 229ms (1.8 SDs) (required sample size for an effect of 5% of mean: 26)
  Page Faults:            3.95K         (95% in [877, 7.02K])          Measurable effect: 4.42K (1.8 SDs) (required sample size for an effect of 5% of mean: 2512)
  CPU Time:               6.97s         (95% in [6.67s, 7.26s])        Measurable effect: 425ms (1.8 SDs) (required sample size for an effect of 5% of mean: 8)
  GDI Objects:               0          (95% in [0, 0])   


I20110406-1223
Scenario 'org.eclipse.jdt.text.tests.performance.ActivateJavaEditorTest#testActivateEditor()' (average over 5 samples):
  Used Java Heap:         2.38M         (95% in [-1.8M, 6.56M])        Measurable effect: 6.02M (1.8 SDs) (required sample size for an effect of 5% of stdev: 

6401)
  Working Set:          -407.2K         (95% in [-4.92M, 4.13M])       Measurable effect: 6.52M (1.8 SDs) (required sample size for an effect of 5% of stdev: 6400)
  Committed:                36K         (95% in [-5.43M, 5.5M])        Measurable effect: 7.87M (1.8 SDs) (required sample size for an effect of 5% of stdev: 6400)
  Working Set Peak:          0          (95% in [0, 0])               
  Elapsed Process:        6.58s         (95% in [6.51s, 6.65s])        Measurable effect: 102ms (1.8 SDs)
  Kernel time:            2.25s         (95% in [2.09s, 2.41s])        Measurable effect: 225ms (1.8 SDs) (required sample size for an effect of 5% of mean: 21)
  Page Faults:            2.84K         (95% in [2.26K, 3.42K])        Measurable effect: 832 (1.8 SDs) (required sample size for an effect of 5% of mean: 173)
  CPU Time:               7.23s         (95% in [7.06s, 7.4s])         Measurable effect: 243ms (1.8 SDs)
  GDI Objects:               0          (95% in [0, 0])
I ran the test with diff versions(tags) of o.e.jdt.ui plugin and everything else same.

v20110201-0800 (i.e. < v20110208-800)
CPU Time: 7.00s  

v20110208-0800
CPU Time: 7.16s 

v20110215-0800 (i.e. > v20110208-800)
CPU Time: 7.23s 

I looked at the changes from v20110201-0800 to v20110215-0800 and nothing really jumps out.
The only change code between v20110201-0800 and v20110215-0800 which is executed by the test is in org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.

This change was fix for bug 322914: [implementation] deadlock in ASTProvider when copy paste in CU editor. When I reverted this change in o.e.jdt.ui v20110215-0800 I see the same performance numbers as with o.e.jdt.ui v20110201-0800.

I guess this is a valid fix and we cannot do anything here.
(In reply to comment #3)
> The only change code between v20110201-0800 and v20110215-0800 which is
> executed by the test is in org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.
> 
> This change was fix for bug 322914: [implementation] deadlock in ASTProvider
> when copy paste in CU editor. When I reverted this change in o.e.jdt.ui
> v20110215-0800 I see the same performance numbers as with o.e.jdt.ui
> v20110201-0800.
> 
> I guess this is a valid fix and we cannot do anything here.

Please mark the test gray with a comment pointing to the bug fix.
(In reply to comment #4)
> Please mark the test gray with a comment pointing to the bug fix.

Done.

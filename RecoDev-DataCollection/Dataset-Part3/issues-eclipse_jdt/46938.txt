I20031119 (M5 test pass)

1. have this code:

public class Test {
	
	public void foobar() {
		class Listener3 {
			private Test fTest;
			
			private Listener3() {
				fTest= new Test();
			}
			
			public int bar() {
				return foo();
			}
			
			public int foo() {
				return 1;
			}
			
			private String getProperty() {
				return null;
			}
		}
		
		this.addListener(new Listener3() {
			public int bar() {
				return 1;
			}
		});
	}
	
	
	public void addListener(Object o) {
	}

}


2. Select the ctor of the local type
3. Choose Refactor->Change Method Signature
4. Add a new parameter, type: Test, name: test, default value: null
-> Note that the preview is correct
5. Press Preview
-> Note that no changes are to be performed
-> Note that the message "specify the new order ..." is still displayed
-> When OK is pressed, no changes are applied
Expected Result: a new parameter gets introduced
-> The same behaviour is shown for primitive types, and when the target method
is not a constructor.

-> When Object or java.lang.Object is chosen as the parameter's type, the
preview shows an error "Parameter type name 'Object' is ambiguous. There are 2
types with that name".

I20031119 (M5 test pass)

1. have this code:

public class Test {
	
	public void foobar() {
		class Listener3 {
			private Test fTest;
			
			private Listener3() {
				fTest= new Test();
			}
			
			public int bar() {
				return foo();
			}
			
			public int foo() {
				return 1;
			}
			
			private String getProperty() {
				return null;
			}
		}
		
		this.addListener(new Listener3() {
			public int bar() {
				return 1;
			}
		});
	}
	
	
	public void addListener(Object o) {
	}

}


2. Select the ctor of the local type
3. Choose Refactor->Change Method Signature
4. Add a new parameter, type: Test, name: test, default value: null
-> Note that the preview is correct
5. Press Preview
-> Note that no changes are to be performed
-> Note that the message "specify the new order ..." is still displayed
-> When OK is pressed, no changes are applied
Expected Result: a new parameter gets introduced
-> The same behaviour is shown for primitive types, and when the target method
is not a constructor.

-> When Object or java.lang.Object is chosen as the parameter's type, the
preview shows an error "Parameter type name 'Object' is ambiguous. There are 2
types with that name".
*** Bug 47062 has been marked as a duplicate of this bug. ***
Cannot reproduce the first bug. Parameters are added as expected in
I20031203 + jdt.core, jdt.ui, etc. from HEAD. This part is considered WORKSFORME.

The second bug ("Parameter type name 'Object' is ambiguous. ...") is a
consequence of bug 48350.
Fixed.

I can't get the breakpoint context menu for a breakpoint in the ruler by control, option or 
Apple clicking the breakpoint.  This is probably an SWT issue, since I can't get the context 
menu for a perspective in the left-hand side toolbar either.

I can't get the breakpoint context menu for a breakpoint in the ruler by control, option or 
Apple clicking the breakpoint.  This is probably an SWT issue, since I can't get the context 
menu for a perspective in the left-hand side toolbar either.
Forgot to mention this is in 2.1 RC1.
A probably related problem is that double-clicking the ruler to remove a breakpoint works 
maybe 1 out of 10 times.  Double-clicking to add a breakpoint seems to always work.
Andre, is there a known issue with getting context menus in SWT of OSX?  I can control 
click and get context menus for selections in views no problem, but I just can't get a 
context menu for breakpoints in rulers or persectives in the left-hand side toolbar.
Yes, there is a known issue with context menus in the perspective bar.
And this one is probably the same.
However, I wasn't able to reproduce it (and I have all kinds of mice :-).

Do you get the context menus when simulating the right mouse by using the (left) mouse 
click and the Control modifyer?
We only have a mouse with the single button for our Mac.  The problem occurs 
trying to control-Click a breakpoint in the editor ruler.  I have never been 
able to realize the context menu.


*** This bug has been marked as a duplicate of 28658 ***
Reopening and moving to JDT text.
The vertical ruler's context menu is opened by looking for mouse button 3, which doesn't 
exist on MacOS X even if you have a three button mouse.
On MacOS X button 3 is reported as a button 1 together with the Control modifier key.

Ctrl + button 1 works on native MAC widgets but not on others e.g. vertical
ruler or for the workbench window's perspective buttons (left vertical bar).

There should be an abstraction from SWT which allows to test whether the
MouseEvent is a context menu request. Similar support is available in AWT:
MouseEvent.isPopupTrigger

Increased severity since popup menu cannot be reached with single button mice.

Moving to Platform SWT (via UI due to bugzilla glitch) for comment.

Have you tried using SWT.MenuDetect?  Button 3 is never reported because 
button 3 doesn't exist.
OK. This will do the trick. We have to change all our context menu popup code
from using a MouseListener (and testing MouseEvent.button == 3) to using
SWT.MenuDetect listener:

  control.addListener(SWT.MenuDetect, new Listener() {
    public void handleEvent(Event event) {
      if (event.type == SWT.MenuDetect) {
	DO MENU CODE HERE
      }
  });

Created attachment 5235
MenuDetect patch

Fixed problem myself because it makes an upcoming 12 hour flight (without a
mouse) much more plesant :-)
*** Bug 39082 has been marked as a duplicate of this bug. ***
*** Bug 19804 has been marked as a duplicate of this bug. ***
The patch does not work for Windows: the reported coordinates are relative to
the screen and not to the widget and therefore the menu is not placed correctly.
There is a bug about this (bug 39081) but since there's no doc it is currently
not clear relative to what the coordinates are. André can you check if it works
on the MAC without converting the coordinates? If not, it looks as if the
implementation for MAC and Windows is different. This should be reported in bug
39081.

I released the patch without the conversion from widget to display coordinates
(assuming there are still more Windows than MAC users).

The code might be changed once again depending on bug 39081

Verified that we Platform/JDT-Text only had this problem in the area where the
patch was submitted.
André, as you can see from comments in bug 39081 the coordinates are relative to
the display. Can you explain why your patch where you convert to display
coordinates worked for you on MAC OSX.


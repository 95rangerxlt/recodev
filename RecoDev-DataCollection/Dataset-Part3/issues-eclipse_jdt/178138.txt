If a factory path entry could not be resolved (such as if a file is missing) APT writes a warning log entry to the PDE error log with the following text:

"The factorypath entry {x} could not be resolved"

This is a problem because this is a transient state. This situation might be later resolved by the user or by some automation (such as migration logic). In that case, the user might be confused by log entries that no longer apply. 

This scenario would be better handled by a problem marker. A problem marker could go away when the issue is resolved leaving nothing for the user to later get confused by. Using a problem marker would also (a) be consistent with how JDT handles missing classpath entries, and (b) allow quick fixes to be attached (such as "Remove Factorypath Entry").

If a factory path entry could not be resolved (such as if a file is missing) APT writes a warning log entry to the PDE error log with the following text:

"The factorypath entry {x} could not be resolved"

This is a problem because this is a transient state. This situation might be later resolved by the user or by some automation (such as migration logic). In that case, the user might be confused by log entries that no longer apply. 

This scenario would be better handled by a problem marker. A problem marker could go away when the issue is resolved leaving nothing for the user to later get confused by. Using a problem marker would also (a) be consistent with how JDT handles missing classpath entries, and (b) allow quick fixes to be attached (such as "Remove Factorypath Entry").
In 3.3, we actually do report most of these problems with markers.  But we *also* log them, which may be undesirable but is the only way to get full details of the exception.

A better approach would probably be to report with markers, and then report the exceptions via trace output if tracing is turned on.  That way we still have a solution to solve problems in the field, but transient problems do not result in log output.
Created attachment 66586
proposed patch

Proposed patch replaces log output with trace output, and adds test case.
Created attachment 66589
improved patch

Improved patch generates trace output more succinctly
Jess, please review.
+1 Looks good.
Fixed for RC1.  We no longer create log entries; we will generate trace output, if tracing is turned on.  Note that only the failures that used to create log entries will create trace output; some failures, such as missing jar files, can be described adequately within the problem marker itself, so they do not require further output.  (The distinction basically is that markers can't hold stack traces.)
It looks like (at least) one log entry slipped through.  See the constructor of VarJarFactoryContainer.
Removed all log entries.  Also fixed a bad severity value in the missing-jar marker.  Released for 3.4M7.

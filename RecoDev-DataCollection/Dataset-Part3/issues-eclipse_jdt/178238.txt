I20070320-0010

- Have this class in a 5.0 project:
public class T {
	void m() {
		Object a= null;
		if (a == null) // quick fix?
			return;
	}
}

- Set 'Redundant null check' problem to Error

=> There's a quick fix light bulb, but Ctrl+1 does not show a quick fix. The problem is that SuppressWarningsSubProcessor.hasSuppressWarningsProposal(int) returns true for this problem, but addSuppressWarningsProposals(..) only adds a quick fix if the problem severity is not error.

hasSuppressWarningsProposal(..) should check the configured severity and only return the token if the severity is not error.

I20070320-0010

- Have this class in a 5.0 project:
public class T {
	void m() {
		Object a= null;
		if (a == null) // quick fix?
			return;
	}
}

- Set 'Redundant null check' problem to Error

=> There's a quick fix light bulb, but Ctrl+1 does not show a quick fix. The problem is that SuppressWarningsSubProcessor.hasSuppressWarningsProposal(int) returns true for this problem, but addSuppressWarningsProposals(..) only adds a quick fix if the problem severity is not error.

hasSuppressWarningsProposal(..) should check the configured severity and only return the token if the severity is not error.
In 'IQuickFixProcessor.hasCorrections' we only get the problem id but not the problem severity. So there's nothing I can do there, except adding new extension API. No plans to do this for this bug.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.
API JavaCore.getOptionForConfigurableSeverity(..) has been added in 3.4.

Fixed in HEAD.

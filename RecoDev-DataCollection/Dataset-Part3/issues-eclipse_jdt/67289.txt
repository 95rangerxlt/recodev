200406111814

UIPerformChangeOperation#executeChange() swallows the exceptions thrown during
change execution:

   throw new CoreException(exception[0].getStatus());

... drops the (very informative) stacktrace of exception[0].
Since CoreExceptions cannot be nested, either a nestable subclass of
CoreException should be thrown or ...

	IStatus status= exception[0].getStatus();
	throw new CoreException(new MultiStatus(
		status.getPlugin(), status.getCode(), new IStatus[]{status},
		status.getMessage(), exception[0]));

... should be used.

200406111814

UIPerformChangeOperation#executeChange() swallows the exceptions thrown during
change execution:

   throw new CoreException(exception[0].getStatus());

... drops the (very informative) stacktrace of exception[0].
Since CoreExceptions cannot be nested, either a nestable subclass of
CoreException should be thrown or ...

	IStatus status= exception[0].getStatus();
	throw new CoreException(new MultiStatus(
		status.getPlugin(), status.getCode(), new IStatus[]{status},
		status.getMessage(), exception[0]));

... should be used.
Good catch. 
Fixed. The exception now contains the root cause of the problem and the stack is
correctlz printed to the console.



am trying to recompile the JDK1.4 classes so that i can really de bug through 
them
and i can't comple the com.sun.imageio.plugins.jpeg.JFIFMarkerSegment

the error is:

The field thumbWidth (and height) is defined in an inherited type and an 
enclosing scope.

and this method gives me an compilere error:

public Frame cancel()
 {
  Frame sharedOwnerFrame = null;
     if (sharedOwnerFrame == null) {
         sharedOwnerFrame = new Frame() {
             public synchronized void dispose() {
             }
         };
     }
     return sharedOwnerFrame;
 }

the error:
the operator unkown operator is undefined for the argumetns type(s) 
java.awt.Frame, <anonymous subclass of Frame>

this is a piece of code of SwingUtilities.

am trying to recompile the JDK1.4 classes so that i can really de bug through 
them
and i can't comple the com.sun.imageio.plugins.jpeg.JFIFMarkerSegment

the error is:

The field thumbWidth (and height) is defined in an inherited type and an 
enclosing scope.

and this method gives me an compilere error:

public Frame cancel()
 {
  Frame sharedOwnerFrame = null;
     if (sharedOwnerFrame == null) {
         sharedOwnerFrame = new Frame() {
             public synchronized void dispose() {
             }
         };
     }
     return sharedOwnerFrame;
 }

the error:
the operator unkown operator is undefined for the argumetns type(s) 
java.awt.Frame, <anonymous subclass of Frame>

this is a piece of code of SwingUtilities.
The first error is legite, since you need to toggle the Eclipse compiler in 1.4 
mode (not yet doable in UI) to get this behavior. From 1.4 on, inherited 
members prevail on enclosing ones. In the meantime, you can qualify the 
offending code with 'this.'.

The other 2 errors are more curious, will investigate and keep you posted.
*** Bug 8709 has been marked as a duplicate of this bug. ***
The second bug is due to a wrong operator. A compound assignement is created for 
the '=' operator instead of an Assignment. One int is not popped properly from 
the int stack in the parser. I am investigating this case.

The first problem is due to an extra int pushed on the int stack because of the 
synchronized modifier. I am investigating now how to get rid of it.

I found a fix. I will release it as soon as I entered regression tests for this 
PR.
Released in HEAD.
*** Bug 8706 has been marked as a duplicate of this bug. ***

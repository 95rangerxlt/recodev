It might be a good idea to add a 'Collapse All' button to the Projects view
of the Java Browsing Perspective. (cfr. Package Explorer view in Java Perspective)

It might be a good idea to add a 'Collapse All' button to the Projects view
of the Java Browsing Perspective. (cfr. Package Explorer view in Java Perspective)
Created attachment 83355
Patch to R3_3_maintenance branch to add "Collapse All" button

Apply this patch to org.eclipse.jdt.ui
I've only tested it on the latest from branch R3_3_maintenance because I am not set up with a 3.4 environment. If someone can try it against the latest from HEAD, please report back the results.
One other note about the patch. It seems to me that the CollapseAllAction should be generic and not buried in an internal package like this. I don't see any reason why it couldn't be used by other components. Could we ask a JFace committer to take a look?
Thanks Eric.
It would be nicer to reuse the 'CollapseAllAction' from the package explorer
(org.eclipse.jdt.internal.ui.packageview)
- move it to org.eclipse.jdt.internal.ui.viewsupport
- let it take a TreeViewer

Sorry, just read your last comment. Yes, what you write makes sense. I would suggest you to file a bug request against JFace. New API normally takes longer. When it's there we can easily replace this solution.
I filed Bug 210528 to request a reusable CollapseAllAction.

Aside: I'm surprised (disappointed) that there are so many independent implementations of this kind of thing scattered around the code base but nobody bothered to make this request before. It is not the first time I've noticed such a trend in the Eclipse code - is that a sign of a general lack of cross-project cooperation/communication?

APIs are a lot of work to design and to maintain. We only have one chance to get it right.
So it's better to hesitate and wait until there's a certain pain point reached.
For trivial code like the CollapseAllAction it's also not clear if its worth the effort or if clients don't prefer to stay flexible with their own code.




Any chance this can make it into the next milestone build? The patch is relatively simple and easy to test.
Can you incorporate the suggestions form comment 3?
(In reply to comment #8)
> Can you incorporate the suggestions form comment 3?
> 

I'll work on it this week. When is the next milestone build scheduled?
Created attachment 85993
Patch to R3_3_maintenance branch to add "Collapse All" button

Per Comment 3, moved the action to the viewsupport package and made it take a TreeViewer instead of AbstractTreeViewer
Eric, there are a few things missing from the patch:
- org.eclipse.jdt.internal.ui.packageview.CollapseAllAction should be removed i.e.
  the Package Explorer should also use the new action
- copyright info and @since tags are missing
(In reply to comment #11)
> Eric, there are a few things missing from the patch:
> - org.eclipse.jdt.internal.ui.packageview.CollapseAllAction should be removed
> i.e.
>   the Package Explorer should also use the new action
> - copyright info and @since tags are missing
> 

OK, but I'm not 100% sure that this new Action is completely compatible with what is in org.eclipse.jdt.internal.ui.packageview.CollapseAllAction, which calls collapseAll() on the PackageExplorerPart. Here's that code:

public void collapseAll() {
    try {
        fViewer.getControl().setRedraw(false);		
        fViewer.collapseToLevel(getViewPartInput(), AbstractTreeViewer.ALL_LEVELS);
    } finally {
        fViewer.getControl().setRedraw(true);
    }
}

[fViewer is a ProblemTreeViewer]
The visual behavior seems to be the same, but I'm not sure of the intent of the above as it would differ from just TreeViewer.collapseAll()


>OK, but I'm not 100% sure that this new Action is completely compatible with...
If so, it makes no sense to offer it in the viewsupport package.

I guess Martin's idea was to use the existing action as template and move it to the viewsupport package.
Disregard Comment 12 - I did some more digging and the code in PackageExplorerPart.collapseAll() is logically equal to TreeViewer.collapseAll(). I suspect PackageExplorerPart.collapseAll() was written first, and it is only called by CollapseAllAction.
I will be attaching a new patch that addresses all the issues from Comment 11
Created attachment 86349
Patch to R3_3_maintenance branch to add "Collapse All" button

This new patch addresses the issues raised in Comment 11
Looked at the patch. Some minor stuff:
- don't change ProjectsView.createViewer(Composite): you can get the viewer
  using getViewer()
- delete the messages that are no longer used due to deletion of the action
- the copyright header should read:
   * Copyright (c) 2008 Eric Rizzo and others.
  (just to confirm: you do this on your own private time and not while
   working for a company - right?)
- you need to add your credentials to the other files you touch too
  (add an entry below "IBM Corporation - initial API and implementation")

I'm targeting this for M5.
(In reply to comment #16)
> Looked at the patch. Some minor stuff:
> - don't change ProjectsView.createViewer(Composite): you can get the viewer
>   using getViewer()

getViewer() [inherited from JavaBrowsingPart] returns StructuredViewer, but the action needs the more specific TreeViewer. I could cast getViewer() to TreeViewer, but I find storing the created viewer in an i-var to be (slightly) more elegant and less brittle. It's a small thing though, so feel free to insist if you feel strongly.

Other items from comment 16 are done. Waiting for reply to above to submit a new patch.
I insist ;-)
Created attachment 86850
 Patch to R3_3_maintenance branch to add "Collapse All" button to Projects view

Addressed items in Comment 16
Should use the facilities from bug 168757 now.
>Should use the facilities from bug 168757 now.
I know, that's why I marked it as dependent ;-) Will add this when I apply the patch.
I've committed your patch with some changes:
- register the action as handler for the new command (see bug 168757)
- register the action with the help system
- call super first in ProjectsView.fillToolBar(IToolBarManager)
- use f-prefix for fields
- use compact assignment
- moved the action its correct package: org.eclipse.jdt.internal.ui.actions
  (including NLS stuff)

Also fixed broken value of org.eclipse.jdt.internal.ui.IJavaHelpContextIds.COLLAPSE_ALL_ACTION

Fixed in HEAD.
Available in builds > N20080117-0010.
*** Bug 28468 has been marked as a duplicate of this bug. ***

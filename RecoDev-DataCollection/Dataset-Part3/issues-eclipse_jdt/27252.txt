I200211261143

Qualified names is never removed (always added) by Organize Imports.
But, accordant with Preferences -> Java -> "Organize Imports" -> "Number of 
import needed ... ", the .* is added.

I200211261143

Qualified names is never removed (always added) by Organize Imports.
But, accordant with Preferences -> Java -> "Organize Imports" -> "Number of 
import needed ... ", the .* is added.
'Add import' never removes existing imports, but 'organize imports' will 
replace qualified import by on-demand imports.

Can you please give a reproducible example?
regrettably, i can`t give a simple sample, because of problem appears somehow 
strange :(
So, more details description.
I have some projects which contains references to another ones and references 
to extegnal librarys. Some projects have compilation warnings about 
deprecations. All projects contains a lot of classes (more then 10) (this may 
be one of important condition).
When in one of those classes type CTRL-SHIFT-O, the lines like:
----
import org.jdom.*;
----
will be replaced by:
----
import org.jdom.*;
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.JDOMException;
import org.jdom.Namespace;
----

The setting 'Number of imports needed for .* ...' equals to 3

This problem never appears for java.* imports.
This problem never appears for the simple projects without projects 
dependenses.
This problem never appers for eclipse prior to I200211261143.

ok, I see, looks like a bug of the import structure with a new feature I added 
for I20021126. The reason why it does that is because if found 
import org.jdom.Document;
import org.jdom.Element;
import org.jdom.JDOMException;
import org.jdom.Namespace;

in another star imported package, so it decided to make them explicit (as 
otherwise the compiler would report an ambigous import). Is that possible?

Can you test this: Navigate->Open Type, enter Document and tell me in which and 
who many packages a 'Document' exists?
Created attachment 2551
the Open Type for Document

the screenshot of Open Type for Document.
There's my bug, org.jdom.Document is two times on the class path: Two different 
JARs on your classpath contain the same files.
I'll fix that.

However, I recommend you to remove the duplicated JAR from the project's 
classpath if possible. 
fixed for M4

Build: R2.1

Start with the following:

public class Simple {
  class B {
    public void doit() {
      foo(bar());
    }
  }
  public void foo(int value) {}
  public int bar() {
    return 0;
  }
}

2) Select nested type B, and do the "Convert nested type to top level"
refactoring.  The result for B.java is:

class B {
  private final Simple simple;
  B(Simple simple) {
    this.simple = simple;
  }
  public void doit() {
    this.simple.foo(bar());
  }
}

NOTE: the reference to bar() in type B is broken.  It should be "simple.bar()".

As a side note, this refactoring produces lots of "this." references that aren't
necessary.  It would be nice to omit the "this." if possible.

Build: R2.1

Start with the following:

public class Simple {
  class B {
    public void doit() {
      foo(bar());
    }
  }
  public void foo(int value) {}
  public int bar() {
    return 0;
  }
}

2) Select nested type B, and do the "Convert nested type to top level"
refactoring.  The result for B.java is:

class B {
  private final Simple simple;
  B(Simple simple) {
    this.simple = simple;
  }
  public void doit() {
    this.simple.foo(bar());
  }
}

NOTE: the reference to bar() in type B is broken.  It should be "simple.bar()".

As a side note, this refactoring produces lots of "this." references that aren't
necessary.  It would be nice to omit the "this." if possible.
'this' references are the subject of bug 38227
tests added, bug fixed

build 20011219
See also http://dev.eclipse.org/bugs/show_bug.cgi?id=7324

The case is the same, ie:

1. Create a java project with two source folders, say src1 and src2
2. Add the same file (eg. foo.txt) to each source folder so that you have
  MyProject
    /bin
    /src1
      foo.txt
    /src2
      foo.txt

3. Build the project.  It will attempt to copy both foo.txt files, one from 
each source, to the destination folder.

This results in a fatal build problem(the project doesn't get build).

This is a problem given the builder's overly helpful habit of copying 
everything from the source folders to the build output folder.  In our specific 
case, our new CVS support will create the 'correct' CVS client folder and meta 
files for each directory.  As a result, for projects with multiple source 
folders, we will get a case similar to the foo.txt one above, where foo.txt is 
the CVS meta files.

I assume there will exist cases other than CVS where some client tool that the 
user is attempting to apply against the workspace data is creating additional 
files that may collide when copied to the build output folder.

Would it be possible to make this a non-fatal error?  A warning would be even 
better.  Since the builder copies files which are not required for the 
execution of the program being built, I don't believe we can assume that a 
collision disqualifies the build.

build 20011219
See also http://dev.eclipse.org/bugs/show_bug.cgi?id=7324

The case is the same, ie:

1. Create a java project with two source folders, say src1 and src2
2. Add the same file (eg. foo.txt) to each source folder so that you have
  MyProject
    /bin
    /src1
      foo.txt
    /src2
      foo.txt

3. Build the project.  It will attempt to copy both foo.txt files, one from 
each source, to the destination folder.

This results in a fatal build problem(the project doesn't get build).

This is a problem given the builder's overly helpful habit of copying 
everything from the source folders to the build output folder.  In our specific 
case, our new CVS support will create the 'correct' CVS client folder and meta 
files for each directory.  As a result, for projects with multiple source 
folders, we will get a case similar to the foo.txt one above, where foo.txt is 
the CVS meta files.

I assume there will exist cases other than CVS where some client tool that the 
user is attempting to apply against the workspace data is creating additional 
files that may collide when copied to the build output folder.

Would it be possible to make this a non-fatal error?  A warning would be even 
better.  Since the builder copies files which are not required for the 
execution of the program being built, I don't believe we can assume that a 
collision disqualifies the build.
I would expect the first resource instance (based on CP order) to be the only 
one copied (the other one getting a warning saying it is shadowed by another 
one). 
A warning is now issued.

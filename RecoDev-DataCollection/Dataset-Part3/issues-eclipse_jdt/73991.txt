How to reproduce:

1. Change filter preferences in package explorer (to make it save the 
preferences at least once)
2. Install a plugin that defines a filter using the extension point 
org.eclipse.jdt.ui.javaElementFilters
3. This new filter will be disabled in the package explorer even if it should 
be enabled by default

Cause:
When loading the filters in 
org.eclipse.jdt.ui.actions.CustomFiltersActionGroup line 526, the following 
code is executed:

  String id= (String)iter.next();
  Boolean isEnabled= new Boolean(store.getBoolean(id));
  fEnabledFilterIds.put(id, isEnabled);

Unfortunately, isEnabled will be set to false for all new filters because 
store returns false if it cannot find an entry for the given id.
This problem could be solved by using the following code instead:

  String id= (String)iter.next();
  if (store.contains(id)){
    Boolean isEnabled= new Boolean(store.getBoolean(id));
    fEnabledFilterIds.put(id, isEnabled);
  }

(Note that fEnabledFilterIds already contains all the filters before this code 
is executed, the only thing that happens here is overriding the entries with 
the stored non-default preferences. If the store does not contain an entry for 
the given id, we will get the default preferences for that filter which is 
IMHO the desired behaviour.)

I've quickly tested this fix and it seems to work.

How to reproduce:

1. Change filter preferences in package explorer (to make it save the 
preferences at least once)
2. Install a plugin that defines a filter using the extension point 
org.eclipse.jdt.ui.javaElementFilters
3. This new filter will be disabled in the package explorer even if it should 
be enabled by default

Cause:
When loading the filters in 
org.eclipse.jdt.ui.actions.CustomFiltersActionGroup line 526, the following 
code is executed:

  String id= (String)iter.next();
  Boolean isEnabled= new Boolean(store.getBoolean(id));
  fEnabledFilterIds.put(id, isEnabled);

Unfortunately, isEnabled will be set to false for all new filters because 
store returns false if it cannot find an entry for the given id.
This problem could be solved by using the following code instead:

  String id= (String)iter.next();
  if (store.contains(id)){
    Boolean isEnabled= new Boolean(store.getBoolean(id));
    fEnabledFilterIds.put(id, isEnabled);
  }

(Note that fEnabledFilterIds already contains all the filters before this code 
is executed, the only thing that happens here is overriding the entries with 
the stored non-default preferences. If the store does not contain an entry for 
the given id, we will get the default preferences for that filter which is 
IMHO the desired behaviour.)

I've quickly tested this fix and it seems to work.
Markus, when changing the code ensure that filters which are disabled via XML
really are disabled.
Sorry, this one slipped through. I'll release the fix in early 3.2.
It looks like this problem still exists. Can chance of getting the fix in for 3.2M5?
Thanks for the ping. Finally released the fix for I20060131.
Hm, the fix did not work for e.g. the "Synchronized members" filter in the outline view. I fixed it by setting the default value to the value from the plugin contributions. That makes it independent of whether the preference was stored before or not.
*** Bug 125453 has been marked as a duplicate of this bug. ***

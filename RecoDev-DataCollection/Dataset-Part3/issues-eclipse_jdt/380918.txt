Build Identifier: I20120518-2345

In my workspace, I have two projects.  Project 1 is linked to Project 2 in the
.classpath file as a "src" entry that is optional.  The jar that Project 1
creates is also added to the .classpath of Project 2 as a "lib" entry.  Project 1 is closed when not being actively worked on.  When I try to run JUnit tests within Project 2, the launch fails with the message "Project 1 does not exist" in my Progress view.

This should not fail since Project 1 is optional and only linked for debugging
purposes (source linkage).  The classes from Project 1 are available thorough
the jar that is present in Project 2.  Launching Project 2 in the Servers view
works fine, so I don't think it is all types of launching that are affected --
it may be isolated to JUnit.

(See attachment for the projects.)

Reproducible: Always

Steps to Reproduce:
1. Import projects from attached archive
2. Close Project 1
3. Launch Main as Java application or Tests as JUnit test suite
4. Check Progress view for "Project 1 does not exist"

Build Identifier: I20120518-2345

In my workspace, I have two projects.  Project 1 is linked to Project 2 in the
.classpath file as a "src" entry that is optional.  The jar that Project 1
creates is also added to the .classpath of Project 2 as a "lib" entry.  Project 1 is closed when not being actively worked on.  When I try to run JUnit tests within Project 2, the launch fails with the message "Project 1 does not exist" in my Progress view.

This should not fail since Project 1 is optional and only linked for debugging
purposes (source linkage).  The classes from Project 1 are available thorough
the jar that is present in Project 2.  Launching Project 2 in the Servers view
works fine, so I don't think it is all types of launching that are affected --
it may be isolated to JUnit.

(See attachment for the projects.)

Reproducible: Always

Steps to Reproduce:
1. Import projects from attached archive
2. Close Project 1
3. Launch Main as Java application or Tests as JUnit test suite
4. Check Progress view for "Project 1 does not exist"
Created attachment 216406
Test projects
Created attachment 220666
patch for this bug

I am attaching the proposed patch. I am describing below the changes I made and why I thought this was a better way of doing it.
I modified the JavaRuntime class's gatherJavaLibraryPathEntries method so that an entry is not added to the classpath when the entry is optional and the project is not open. 

I will outline the scenario as to why launching currently fails: 

1. In gatherJavaLibraryPathEntries we call the project.getRawClasspath , which then call the ->getPerProjectInfo on JavaProject class. 

2. The getPerProjectInfo in the JavaProject class calls getPerProjectInfoCheckExistence on JavaModelManager. 

3.  The getPerProjectInfoCheckExistence  calls getPerProjectInfo which tries to get the project info from the perProjectInfos map. (another fix would have been to not remove a closed project from perProjectInfos map, but I thought it may have undesirable impacts). This map does not contains info about a closed project and hence returns null.

4. When getPerProjectInfoCheckExistence gets null  from getPerProjectInfo, it checks to see if the project has JavaNature by calling JavaProject.hasJavaNature. This utlimately calls checkAccessible method on Project class. This method throws ResourceException because the projects is not open. (another way to fix would be to not check if the project is open or not before getting the nature of the project in the Project class, but this modification would be in the org.eclipse.core.internal.resources package which I wanted to avoid. Again it may cause undesirable impact).
5. ResourceException causes the launch to fail.
Pushed a fix similar to Samrat's patch to: http://git.eclipse.org/c/jdt/eclipse.jdt.debug.git/commit/?id=a24fc830484b476e2526766f1317d8c97c79d347

That commit also contains updated tests to include a closed project that is optionally referenced from our default 1.4 testing project and some test updates to address the failures here: http://download.eclipse.org/eclipse/downloads/drops4/N20120910-2000/testResults.php

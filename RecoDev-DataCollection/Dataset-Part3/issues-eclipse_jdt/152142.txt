In Eclipse 3.2, the NLS key tab is not available in the search dialog window.
It is not listed in the 'Customize...' list either.

It is still documented in Eclipse 3.2 doc but the corresponding class
NLSSearchPage is no longer part of the o.e.jdt.ui plugin (org.eclipse.jdt.ui_3.2.0.v20060605-1400.jar)
http://dev.eclipse.org/viewcvs/index.cgi/org.eclipse.jdt.ui/ui%20refactoring/org/eclipse/jdt/internal/ui/refactoring/nls/search/Attic/NLSSearchPage.java

It seems that the documentation is not up to date but in doubt, I open this bug
in UI since the new actions related to NLS keys does not cover all the
functionalities which were availbale in the NLS search page.

In Eclipse 3.2, the NLS key tab is not available in the search dialog window.
It is not listed in the 'Customize...' list either.

It is still documented in Eclipse 3.2 doc but the corresponding class
NLSSearchPage is no longer part of the o.e.jdt.ui plugin (org.eclipse.jdt.ui_3.2.0.v20060605-1400.jar)
http://dev.eclipse.org/viewcvs/index.cgi/org.eclipse.jdt.ui/ui%20refactoring/org/eclipse/jdt/internal/ui/refactoring/nls/search/Attic/NLSSearchPage.java

It seems that the documentation is not up to date but in doubt, I open this bug
in UI since the new actions related to NLS keys does not cover all the
functionalities which were availbale in the NLS search page.
>It seems that the documentation is not up to date
Correct.

>since the new actions related to NLS keys does not cover all the
>functionalities which were availbale in the NLS search page.
What are you missing?
(In reply to comment #1)
> >since the new actions related to NLS keys does not cover all the
> >functionalities which were availbale in the NLS search page.
> What are you missing?

After some more investigation, nothing is missing. 
At first, I did not understand that I needed to select the property
accessor before selecting 'Find Broken Externalized Strings' to 
make it work like the NLS key tab.
I was selecting the Java project src folder and was clueless
about the error message 'No NLS property files with corresponding
accessor class found in the selection'.
So, I still have the functionality I need but it'd be great if the error
message was more meaningful, something like 'Select the property accessor
Java class to find its corresponding broken externalized Strings.'

With an updated doc, everything will be fine :-)

thanks


> I was selecting the Java project src folder and was clueless
> about the error message 'No NLS property files with corresponding
> accessor class found in the selection'.

Strange, this should work. Dou you have a property file in this project/src folder? And if yes, can you select it and then run 'Find Broken Externalized Strings' without getting the error message?

> So, I still have the functionality I need but it'd be great if the error
> message was more meaningful, something like 'Select the property accessor
> Java class to find its corresponding broken externalized Strings.'

I agree, it is better to be positive and propose a solution for the problem.

> With an updated doc, everything will be fine :-)


Created attachment 47305
A Java project to test the name of the propery class accessor
(In reply to comment #3)
> > I was selecting the Java project src folder and was clueless
> > about the error message 'No NLS property files with corresponding
> > accessor class found in the selection'.
> 
> Strange, this should work. Dou you have a property file in this project/src
> folder? And if yes, can you select it and then run 'Find Broken Externalized
> Strings' without getting the error message?

It seems the 'Find Broken Externalized Strings' actionworks only on project/src if the property accessor class is named Messages.
In my project, its legacy name was Translate and it didn't work.
I just refactored its name to Messages (the expeted default value) 
and the action works as expected.

After a quick glance to the NLSRefactoring code, it seems to be a bug since
it takes into account only property accessor classes named by default Messages.

To show the bug, I've attached a nls Java project.
* the property class accessor is named Translated -> the action does not work
* I refactored the name to Messages -> the action works and find a broken externalized string
I did a small debug session and I found out why it was not working when the prop
accessor class is named Translate.

Apparently, the code in FindBrokenNLSKeysAction will look for a properties file
and try to find a Java compilation unit with the same name (+/- the upper case
on the first letter).
I was not aware of that fact: the resource bundle and the property accessor must
share the same name.
Indeed, if I rename the prop accessor class to Translate.java and the resource
bundle file to translate.properties, FindBrokenNLSKeysAction works.

For the doc see bug 150823


Created attachment 66498
fix

This patch fixes the issue, but it has a very high price: create an AST for each CU in the selection... The problem is that we do not have a "backlink" from the property file to its accessor class. I'm not too concerned about the performance, this is an action which is not often executed on project level, but it is a huge change for RC1. Dani, what you think?
Defer to 3.4.
Created attachment 76037
fix

Better patch, way less ASTs need to be created.
fixed > I20070809-1105

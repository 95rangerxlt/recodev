Hello!  I have been trying to export my code, specifying a manifest, into
a jar file.  However, my manifest file is not placed in the jar.  A blank
manifest file is inserted instead.

I go to File->Export->Jar file

I select my project, mark "export generated class files and resources",
specify the jar name and check the "compress jar" option.

<Next>

I check "Save a description of this jar file in the workspace"

<Next>

I mark, "Use existing manifest from the workspace" and specify the
location of my manifest file.

<Finish>


I couldn't attach my manifest file, but here is it's contents. . .

Main-Class: com.sbc.cb.Application
Class-Path: . cbhelp.jar jaxb-rt-1.0-ea.jar jhall.jar lumberjack.jar pvjfc60.jar

Hello!  I have been trying to export my code, specifying a manifest, into
a jar file.  However, my manifest file is not placed in the jar.  A blank
manifest file is inserted instead.

I go to File->Export->Jar file

I select my project, mark "export generated class files and resources",
specify the jar name and check the "compress jar" option.

<Next>

I check "Save a description of this jar file in the workspace"

<Next>

I mark, "Use existing manifest from the workspace" and specify the
location of my manifest file.

<Finish>


I couldn't attach my manifest file, but here is it's contents. . .

Main-Class: com.sbc.cb.Application
Class-Path: . cbhelp.jar jaxb-rt-1.0-ea.jar jhall.jar lumberjack.jar pvjfc60.jar
Problem with exporting Java code to a JAR file.
Moving to JDT/UI for comment.
It works for me. Please give more information.

Build ID?
What happens if you press finish? (log, dialog...)Since you did not attach the
manifest I can not tell if it is correct. The file is passed to the Manifest
class which will reject the manifest file if it is not following the Manifest
spec. But this seems not the case: The manifest that I created with your sampel
was added to the JAR.

Please check if your manifest file contains the correct line breaks.

Created attachment 560
manifest file
Eclipse build 20020321

When I create a jar file and provide the manifest outside of Eclipse, the jar 
file is created and the manifest is included.  Inside Eclipse, my manifest file 
is not being included in the jar file.

I'm using jdk1.3.1_02 inside and outside of Eclipse.
Your manifest file does not conform to the spec:
http://java.sun.com/j2se/1.3/docs/guide/jar/jar.html

Outside Eclipse the file is simply added to the JAR without any checking (and
would not work later). Inside Eclipse the file is read and then a manifest is
created.

Note that your manifest
- has no version (Manifest-Version: 1.0)
- has line longer than 72
and eventually other defects.

Having no version causes the Manifest class to ignore the attributes (see
manifest spec: unknown attributes are skipped). If you would add at least the
version info then the file would be recognized as manifest and an error would be
displayed (invalid header).

You might also want to check the JDK bugparade because Eclipse directly uses the
javax.util.jar.Manifest class. if you'd like to get better error reporting then
this class should do it.

I consider to post-process the result from javax.util.jar.Manifest and warn if
manifest file is empty put this is low prio enhancement.

Moving from P1 to P3 and removing M6

To follow up:

You stated that: "Your manifest file does not conform to the spec:
http://java.sun.com/j2se/1.3/docs/guide/jar/jar.html

Outside Eclipse the file is simply added to the JAR without any checking (and
would not work later). Inside Eclipse the file is read and then a manifest is
created."

1)  the file is added to the JAR outside of Eclipse.  However, the JAR file 
DOES work.  Inside of eclipse, the file is simply not included and then my JAR 
file does not work.

You stated:"
Note that your manifest
- has no version (Manifest-Version: 1.0)
- has line longer than 72
and eventually other defects."

2)  What other defects?  According to the HTML page provided:
"Attributes which are not understood are ignored."  Nothing in the HTML 
document states that any of the attributes are required.  Only 
that, ". . .attributes that can appear in the main section are referred to as 
main attributes. . ."  I take that "can appear" to mean all attributes are 
optional.  

As for my line being longer than 72 characters, the HTML page states: "Binary 
data of any form is represented as base64. Continuations are required for 
binary data which causes line length to exceed 72 bytes. Examples of binary 
data are digests and signatures."

Maybe I misunderstood the manifest file HTML page that you sent me, but I still 
feel this should work both inside and outside of Eclipse.  Why does Eclipse 
read and edit check my manifest file while the jar utility simply adds it?
Thanks for your time looking at this!





Note that your manifest
- has no version (Manifest-Version: 1.0)
- has line longer than 72
and eventually other defects.

Having no version causes the Manifest class to ignore the attributes (see
manifest spec: unknown attributes are skipped). If you would add at least the
version info then the file would be recognized as manifest and an error would be
displayed (invalid header).

You might also want to check the JDK bugparade because Eclipse directly uses the
javax.util.jar.Manifest class. if you'd like to get better error reporting then
this class should do it.

I consider to post-process the result from javax.util.jar.Manifest and warn if
manifest file is empty put this is low prio enhancement.

Moving from P1 to P3 and removing M6

> ... DOES ... work
It does/might run but it might very well fail (which would be even more correct
than running) on any other JDK since it IS a wrong manifest files.

Check the section "Notes on Manifest and Signature Files":
* Line length:
  No line may be longer than 72 bytes (not characters), in its UTF8-encoded form.   
  If a value would make the initial line longer than this, it should be continued 
  on extra lines (each starting with a single SPACE).

* Limitations:
  Because header names cannot be continued, the maximum length of a header name 
  is 70 bytes (there must be a colon and a SPACE after the name).
  
* Versions:
  Manifest-Version and Signature-Version must be first, and in exactly that case 
  (so that they can be recognized easily as magic strings). Other than that, the 
  order of attributes within a main section is not significant.

>2)  What other defects?
I wrote "eventually" which means I did not check against all spec rules

Just a funny remark that supports my findings: when I run Eclipse with J9 VM and
use your manifest file then it is included. This is because J9 VM does not
strictly follow/implement the spec (as it seems).

The JAR Packager now shows a yellow warning at the top if the Manifest-Version
attribute is missing.

Fixed > 20020412 (probably not part of M5 build)



I20060410

SourceViewerInformationControl (the jdt-ui one) does not respect the size hint - its setSizeConstraints method is a noop.

We should remember the size constraints and use them when computing the size, similar to what DefaultInformationControl does.

Patch is ready.

I20060410

SourceViewerInformationControl (the jdt-ui one) does not respect the size hint - its setSizeConstraints method is a noop.

We should remember the size constraints and use them when computing the size, similar to what DefaultInformationControl does.

Patch is ready.
Dani, can you target for RC1?
fixed > 20060410
What issue did this fix, Tom?  It looks like it broke the "code folding" popup code (under Mac OS X 10.4.6 with Java 1.4.2, at least) - they're about as big as the associated editor now, which doesn't look correct.  Or was that the intent?

Here's what seems to be going on:

Pre-1.21, AbstractInformationControlManager.internalShowInformationControl would call SourceViewerInformationControl.computeSizeHint to get the size of the control.  Since setSizeConstraints was a noop, fMaxWidth/fMaxHeight would still be SWT.DEFAULT, hence fShell.computeSize would call Composite.computeSize, leading to layout.computeSize calculating the actual size of the control.

In 1.21, fMaxWidth/fMaxHeight are set to approx. the size of the associated editor.  Since they're no longer SWT.DEFAULT, fShell.computeSize/Composite.computeSize simply returns new Point (fMaxWidth, fMaxHeight) instead of calling layout.computeSize - giving you a big control.

BrowserInformationControl and DefaultInformationControl aren't affected since they've got independent code.  ChangeHoverInformationControl, however, extends SourceViewerInformationControl, but it didn't break.  Note that ChangeHoverInformationControl.computeSizeHint calls super().computeSizeHint, and when the call is first made SourceViewerInformationControl's private fMaxWidth/fMaxHeight are still SWT.DEFAULT, so the control gets its size calculated correctly as show above.

I'm not quite sure what it will take fix this bug since I'm not sure what was fixed by the change.  Again, I'm assuming that the large code folding popup is not correct, but perhaps I'm wrong :-)
You're right - I filed bug 137162 to track this.

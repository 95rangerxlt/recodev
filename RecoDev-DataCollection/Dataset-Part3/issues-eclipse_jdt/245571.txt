Build ID: I20070625-1500

Steps To Reproduce:
1. Create a class with 
		int x = 0;
2. Set a breakpoint after this declaration
3. Add this expressions to the expressions view: x++

RESULT: the expressions view continually increments x

More information:

Build ID: I20070625-1500

Steps To Reproduce:
1. Create a class with 
		int x = 0;
2. Set a breakpoint after this declaration
3. Add this expressions to the expressions view: x++

RESULT: the expressions view continually increments x

More information:
That build ID is actually 3.3, not 3.4. Adjusting version.
My bad. The build number is actually I20080617-2000 which is 3.4. I can't figure out how to change the build number in the bug but I set it back to 3.4. 
Right, this is 3.4, as per Mac's correction.  Also, this is a regression -- it does not reproduce for me in 3.3.1.1 (build M20071023-1652).

Also, this is not a bug in the JDT, it is a bug in the core Eclipse debugger code.  Although Mac's repro case is with the JDT, we originally ran into it Flex Builder's Eclipse-based Flex debugger.
Should consider in 3.4.2 as well, depending on complexity of the fix.
The fix to bug 222267 caused this problem. An expression is updated when a variable value changes, which causes a circular update.
When an expression modifies a variable value that is contained in the expression itself it causes the expression to update infinitely. In general (i.e. in the standard model), we can't tell if an expression depends on a specific variable. Thus, the platform should not update expressions when a variable value changes. This could be done by model specific model proxies in the expression view.

Fixed in HEAD (ExpressionEventHandler).
Please verify, Sam.
(In reply to comment #5)
> The fix to bug 222267 caused this problem. An expression is updated when a
> variable value changes, which causes a circular update.

Does fixing this revert the fix for bug 222267? If so CDT 6 will see a regression when built against 3.5M7...


(In reply to comment #8)
> (In reply to comment #5)
> > The fix to bug 222267 caused this problem. An expression is updated when a
> > variable value changes, which causes a circular update.
> Does fixing this revert the fix for bug 222267? If so CDT 6 will see a
> regression when built against 3.5M7...

Yes, this effectively reverts the fix for bug 222267 in 3.5 M7. This is problematic for CDT - since the platform provides the only implementation of IWatchExpression, it provides the only model proxy to update the watch expressions. However, the problem the fixed caused is bad and must be addressed. I don't see a good fix to address the issue - without adding API to somehow tell if a variable update will cause a circular update.

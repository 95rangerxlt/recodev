While testing code assist in the super class field in the new class wizard I
noticed that '.' auto activate code assist. IMO this makes sense for cases where
we have a method class after a dot. But in the case where we only enter class
names '.' shouldn't auto activate code assist.

Opinions.

While testing code assist in the super class field in the new class wizard I
noticed that '.' auto activate code assist. IMO this makes sense for cases where
we have a method class after a dot. But in the case where we only enter class
names '.' shouldn't auto activate code assist.

Opinions.
I use the same settings as the java editor. When you have auto-activation
enabled and start typing "java.", you also get the code assist there. I don't
see why auto-activation for package names would not be as helpful as for type or
member names.
IMO things are different in the editor and in fields where we type in type names:

- users typically don't enter package names in these fields. They start typing
  the type name and then activate code assist.

- it gets in the way in cases like  ArrayList<String.  

  Although this is not typical I was suprised to get code assist after I typed
  the dot after String. The problem was that . and > are on the same key on 
  English key boards and if you forget to press Shift you get code assist 
  instead
Disabled auto activation of type content assist in dialog fields.
Waiting for the first PR that wants dialog fields to obey preferences ;-).

While trying to reproduce 1FWSFNS: ITPJCORE:WIN98 - Assertion Failed in javamodel,
I did the following:

- load RemoteJUnitRunner solution from hydrogen
- it builds
- result is one error in junit.servletui/HTMLWriter.java
  due to missing java.lang.Object
- add rt.jar to class path
- it rebuilds only HTMLWriter.java, producing HTMLWriter.class
- no other .java files are compiled

This is because the compiler aborted early when it detected the missing expected library class.
Only HTMLWriter came back as a result (with proper dependencies).
Since the builder doesn't have dependencies for the other units, it can't know to recompile them
when the missing packages are added.

NOTES:

PM (6/22/00 2:50:16 PM)
	The builder should know it has no build state for the other units.

NE (6/22/00 4:32:55 PM)
	It does, but it can't necessarily act on this knowledge.
	It doesn't know whether the change may fix the problem.
	The only alternative is for it to try recompiling every compilation unit with no dependency info
	every time there is a change, which would be expensive and may not actually fix the problem.

While trying to reproduce 1FWSFNS: ITPJCORE:WIN98 - Assertion Failed in javamodel,
I did the following:

- load RemoteJUnitRunner solution from hydrogen
- it builds
- result is one error in junit.servletui/HTMLWriter.java
  due to missing java.lang.Object
- add rt.jar to class path
- it rebuilds only HTMLWriter.java, producing HTMLWriter.class
- no other .java files are compiled

This is because the compiler aborted early when it detected the missing expected library class.
Only HTMLWriter came back as a result (with proper dependencies).
Since the builder doesn't have dependencies for the other units, it can't know to recompile them
when the missing packages are added.

NOTES:

PM (6/22/00 2:50:16 PM)
	The builder should know it has no build state for the other units.

NE (6/22/00 4:32:55 PM)
	It does, but it can't necessarily act on this knowledge.
	It doesn't know whether the change may fix the problem.
	The only alternative is for it to try recompiling every compilation unit with no dependency info
	every time there is a change, which would be expensive and may not actually fix the problem.
PRODUCT VERSION:
029 in VA/Java


Closed - not reproducable with new builder.

The new builder rebuilds the project whenever the classpath is changed.

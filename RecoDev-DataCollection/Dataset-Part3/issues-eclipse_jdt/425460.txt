// ERROR: Cannot convert from Object[] to Integer[]
final Integer[] boom =
  Arrays.asList("1", "22", "333")
  .stream()
  .map(str -> str.length())
  .toArray(i -> new Integer[i]);

// WORKAROUND: casting
final Integer[] boom =
  Arrays.asList("1", "22", "333")
  .stream()
  .map(str -> str.length())
  .toArray((IntFunction<Integer[]>) i -> new Integer[i]);

// ERROR: Cannot convert from Object[] to Integer[]
final Integer[] boom =
  Arrays.asList("1", "22", "333")
  .stream()
  .map(str -> str.length())
  .toArray(i -> new Integer[i]);

// WORKAROUND: casting
final Integer[] boom =
  Arrays.asList("1", "22", "333")
  .stream()
  .map(str -> str.length())
  .toArray((IntFunction<Integer[]>) i -> new Integer[i]);
Stephan, thanks for taking a look.
Inference fails to reduce this constraint:

⟨(<no type> i) -> new Integer[i] ⊆throws java.util.function.IntFunction<A#0[]>⟩

I reckon that A#0 should have been substituted at that point, because we actually fail at "sam.returnType.isProperType(true)", where this return type is A#0[]

This sounds similar to http://mail.openjdk.java.net/pipermail/lambda-spec-experts/2013-December/000455.html

For this a fix has been promised in http://mail.openjdk.java.net/pipermail/lambda-spec-experts/2013-December/000476.html just I haven't yet seen this in the spec diffs

-> deferring until all spec changes have been fully adopted.
Two parts to the fix:

ArrayBinding was lacking implementations of collectInferenceVariables() and substituteInferenceVariable().

For 18.5.2 we need to determine a subset of a given set of constraints "satisfying the property that, for each constraint, no input variable depends on an output variable of another constraint in C ([...] dependencies between inference variable are defined in 18.4)."  I guess we should assume the following rule which is not explicit in 18.4:

  An inference variable depends on itself.


With these two changes the example is accepted by the compiler.

Released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=18214de46fa9202fa142bc8c10e22754e8ddc00c
Great job, thank you!

(In reply to Stephan Herrmann from comment #3)
> Two parts to the fix:
> 
> ArrayBinding was lacking implementations of collectInferenceVariables() and
> substituteInferenceVariable().
> 
> For 18.5.2 we need to determine a subset of a given set of constraints
> "satisfying the property that, for each constraint, no input variable
> depends on an output variable of another constraint in C ([...] dependencies
> between inference variable are defined in 18.4)."  I guess we should assume
> the following rule which is not explicit in 18.4:
> 
>   An inference variable depends on itself.
> 
> 
> With these two changes the example is accepted by the compiler.
> 
> Released via
> http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
> ?h=BETA_JAVA8&id=18214de46fa9202fa142bc8c10e22754e8ddc00c

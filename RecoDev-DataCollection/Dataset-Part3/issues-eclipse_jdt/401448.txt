JSR 355 0.6.1 uses the phrase "assignment or invocation contexts" to denote
situations where an expression may be a poly expression.

The introduction of section 5 has an informal discussion 
where item 2 bullet 1 starts:

  "Assignment contexts (including return statements, etc.) are supported" 

which implies that the term "assignment context" is used loosely, to include
many more syntactic constructs. I cannot find a precise definition for this.

This needs clarification, for which I could envision two alternatives:
(a) give a complete positive list of syntactic contexts
(b) explicitly extend the notion to all expression contexts *except for*
    statement contexts.

JSR 355 0.6.1 uses the phrase "assignment or invocation contexts" to denote
situations where an expression may be a poly expression.

The introduction of section 5 has an informal discussion 
where item 2 bullet 1 starts:

  "Assignment contexts (including return statements, etc.) are supported" 

which implies that the term "assignment context" is used loosely, to include
many more syntactic constructs. I cannot find a precise definition for this.

This needs clarification, for which I could envision two alternatives:
(a) give a complete positive list of syntactic contexts
(b) explicitly extend the notion to all expression contexts *except for*
    statement contexts.
A fix had been promised in http://mail.openjdk.java.net/pipermail/lambda-spec-experts/2013-February/000235.html but still in 0.7.0 I can't find a real answer.

By including return statements into the list, most obvious cases are already covered, but still a full list would be helpful.
This has been acknowledged as a gap in JLS and a bug has been raised by the
spec lead: https://bugs.openjdk.java.net/browse/JDK-8030361. 

So no further action is required from Eclipse side in this ticket.

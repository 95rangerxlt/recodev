Created attachment 238533
Screenshot of spurious errors

With 4.3.1 + JAVA8_Beta (1.0.0.v20131221-0104_BETA_JAVA8), there are a number of spurious local variable resolution errors in the Graal project source code. Unfortunately I cannot reproduce a small test case. However, checking out the code and reproducing the problem is fairly straightforward:

hg clone http://hg.openjdk.java.net/graal/graal/rev/72e2ec923b7b
cd graal
unzip eclipse-config.zip # attached to this bug report

Start Eclipse (running on top of JDK8) with new workspace directory being graal.
Configure a JavaSE-1.8 Execution Environment.
File | Import... | General | Existing Projects into Workspace
Choose graal/graal subdirectory and import all discovered projects.

Once "Building workspace" completes, you should see about 33 errors in the Problems View, most of which are obviously spurious variable resolution errors. See attached screenshot.

Created attachment 238533
Screenshot of spurious errors

With 4.3.1 + JAVA8_Beta (1.0.0.v20131221-0104_BETA_JAVA8), there are a number of spurious local variable resolution errors in the Graal project source code. Unfortunately I cannot reproduce a small test case. However, checking out the code and reproducing the problem is fairly straightforward:

hg clone http://hg.openjdk.java.net/graal/graal/rev/72e2ec923b7b
cd graal
unzip eclipse-config.zip # attached to this bug report

Start Eclipse (running on top of JDK8) with new workspace directory being graal.
Configure a JavaSE-1.8 Execution Environment.
File | Import... | General | Existing Projects into Workspace
Choose graal/graal subdirectory and import all discovered projects.

Once "Building workspace" completes, you should see about 33 errors in the Problems View, most of which are obviously spurious variable resolution errors. See attached screenshot.
Created attachment 238534
Eclipse project configurations
Working on it.
Created attachment 238550
Unresolved Dependencies

Hi Doug,
I have attached a list of unresolved dependencies which do not allow me to proceed ahead with the build. Could you please suggest a way on getting around these.

Thanks
(In reply to shankha banerjee from comment #3)
> Created attachment 238550 [details]
> Unresolved Dependencies
> 
> Hi Doug,
> I have attached a list of unresolved dependencies which do not allow me to
> proceed ahead with the build. Could you please suggest a way on getting
> around these.
> 
> Thanks

In particular these two:

1 )Project 'com.oracle.graal.lir.hsail' is missing required library: '\Users\dsimon\linz\basic-graal\lib\okra-1.2.jar'	com.oracle.graal.lir.hsail		Build path	Build Path Problem 

2) Internal compiler error: java.lang.UnsupportedClassVersionError: JVMCFRE003 bad major version; class=com/oracle/graal/options/OptionProcessor, offset=6 at java.lang.ClassLoader.defineClassImpl(Native Method)	BasePhase.java	/com.oracle.graal.phases/src/com/oracle/graal/phases	line 0	Java Problem 

Thanks
Hi Shankha,

The first dependency is available at http://cr.openjdk.java.net/~tdeneau/okra-1.2.jar

With respect to the internal compiler error, are you sure you are running Eclipse itself on JDK8? This is the exact version I'm using:

$ /Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/bin/java -version
java version "1.8.0-ea"
Java(TM) SE Runtime Environment (build 1.8.0-ea-b117)
Java HotSpot(TM) 64-Bit Server VM (build 25.0-b59, mixed mode)

The com/oracle/graal/options/OptionProcessor class is part of an annotation processor used by the project containing BasePhase.java.

BTW, I see other internal compiler errors in my setup (as also shown in the screenshot). I will file separate bug reports for them at some point unless they are somehow related to this bug.
Hi Doug,
I am running eclipse on JDK 8 (b120).

I encounter the following errors:

Errors occurred during the build.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.api.meta'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.api.meta'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.api.code'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.amd64'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.api.replacements'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.api.replacements'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.api.runtime'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.api.runtime'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.asm'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.asm.amd64'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.bytecode'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.debug'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.graph'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.hsail'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.asm.hsail'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.nodes'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.lir'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.lir.hsail'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.lir.amd64'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.asm.ptx'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.lir.ptx'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.alloc'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.options'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.options'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.phases'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.java'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.java.decompiler'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.phases.common'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.loop'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.ptx'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.replacements.verifier'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.service.processor'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.sparc'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.virtual'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.compiler'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.compiler.ptx'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.compiler.hsail'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.replacements.hsail'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.compiler.amd64'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.printer'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.runtime'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.word'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.replacements'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.replacements.amd64'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.hotspot'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.hotspot.amd64'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.hotspot.ptx'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.hotspot.hsail'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.asm.sparc'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.lir.sparc'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.compiler.sparc'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.hotspot.sparc'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.truffle.api'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.truffle.api'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.truffle'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.truffle.hotspot'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.graal.truffle.hotspot.amd64'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.truffle.api.dsl'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Java Builder' on project 'com.oracle.truffle.api.dsl.test'.
Inconsistent stackmap frames at branch target 816
Exception Details:
  Location:
    com/oracle/truffle/dsl/processor/node/NodeParser.finalizeSpecializations(Ljava/util/List;Lcom/oracle/truffle/dsl/processor/node/NodeData;)V @816: invokevirtual
  Reason:
    Type 'java/lang/String' (current frame, stack[2]) is not assignable to '[Ljava/lang/Object;' (stack map, stack[2])
  Current Frame:
    bci: @810
    flags: { }
    locals: { 'com/oracle/truffle/dsl/processor/node/NodeParser', 'java/util/List', 'com/oracle/truffle/dsl/processor/node/NodeData', 'java/util/List', 'java/util/List', 'com/oracle/truffle/dsl/processor/node/SpecializationData', 'java/util/List', 'com/oracle/truffle/dsl/processor/node/SpecializationData', integer, integer, 'com/oracle/truffle/dsl/processor/node/SpecializationData', 'java/util/Iterator' }
    stack: { 'com/oracle/truffle/dsl/processor/node/SpecializationData', 'java/lang/String', 'java/lang/String' }
  Stackmap Frame:
    bci: @816
    flags: { }
    locals: { 'com/oracle/truffle/dsl/processor/node/NodeParser', 'java/util/List', 'com/oracle/truffle/dsl/processor/node/NodeData', 'java/util/List', 'java/util/List', 'com/oracle/truffle/dsl/processor/node/SpecializationData', 'java/util/List', 'com/oracle/truffle/dsl/processor/node/SpecializationData', integer, integer, 'com/oracle/truffle/dsl/processor/node/SpecializationData', 'java/util/Iterator' }
    stack: { 'com/oracle/truffle/dsl/processor/node/SpecializationData', 'java/lang/String', '[Ljava/lang/Object;' }
  Bytecode:
    0000000: bb00 9d59 2cb6 014f b701 354e 2db9 02a0
    0000010: 0100 9900 04b1 2db9 0063 0100 3a05 a700
    0000020: 1619 05b9 0069 0100 c001 e13a 042a 2b19
    0000030: 04b7 038e 1905 b900 7401 009a ffe6 bb00
    0000040: 9d59 b700 9f3a 042d b900 6301 003a 06a7
    0000050: 0021 1906 b900 6901 00c0 01e1 3a05 1905
    0000060: b603 9299 000d 1904 1905 b900 a002 0057
    0000070: 1906 b900 7401 009a ffdb 1904 b900 a601
    0000080: 0004 a000 4b2d b900 a601 0004 a000 4119
    0000090: 04b9 0063 0100 3a06 a700 2b19 06b9 0069
    00000a0: 0100 c001 e13a 0519 0513 0395 05bd 0154
    00000b0: 5903 1219 b601 5653 5904 121f b601 5653
    00000c0: b603 9719 06b9 0074 0100 9aff d101 3a05
    00000d0: 1904 b900 a601 0004 a400 3a19 04b9 0063
    00000e0: 0100 3a07 a700 2319 07b9 0069 0100 c001
    00000f0: e13a 0619 0613 0398 04bd 0154 5903 1219
    0000100: b601 5653 b603 9719 07b9 0074 0100 9aff
    0000110: d9b1 1904 b900 a601 0004 a000 1319 0403
    0000120: b902 fb02 00c0 01e1 3a05 a700 1f2c 2ab4
    0000130: 00d0 b601 cb99 0014 2a2c 2db7 039a 3a05
    0000140: 2d19 05b9 00a0 0200 5719 05c6 00e1 1905
    0000150: b603 9eb9 0063 0100 3a07 a700 8d19 07b9
    0000160: 0069 0100 c001 aa3a 0619 06b6 03a1 b803
    0000170: a299 0006 a700 73bb 0115 59b7 0127 3a08
    0000180: 2db9 0063 0100 3a0a a700 3019 0ab9 0069
    0000190: 0100 c001 e13a 0919 0919 06b6 01e6 b601
    00001a0: e93a 0b19 0bc6 0013 1908 190b b603 a1b8
    00001b0: 028e b901 3302 0057 190a b900 7401 009a
    00001c0: ffcc 1908 b901 fc01 0004 a400 1d19 0519
    00001d0: 06b6 01e6 bb01 aa59 1906 2cb6 0200 b602
    00001e0: 04b7 03a6 b603 a919 07b9 0074 0100 9aff
    00001f0: 6fbb 03ad 5913 03af 2c19 05b6 03b1 0101
    0000200: 1905 b603 b219 05b6 03b5 b703 b63a 0619
    0000210: 06b6 03b9 b903 bc01 002d bb01 e159 1906
    0000220: 0304 03b7 0209 b900 a002 0057 2db8 03bf
    0000230: 2c2d b601 70bb 009d 59b7 009f 3a06 2db9
    0000240: 0063 0100 3a08 a700 3f19 08b9 0069 0100
    0000250: c001 e13a 0719 07b6 0392 9900 0e19 0713
    0000260: 03c2 b603 c4a7 0020 1907 b603 c799 000e
    0000270: 1907 1303 afb6 03c4 a700 0d19 0619 07b9
    0000280: 00a0 0200 5719 08b9 0074 0100 9aff bd2c
    0000290: b803 ca99 003a 1906 b803 ce3a 0703 3608
    00002a0: a700 2119 0615 08b9 02fb 0200 c001 e119
    00002b0: 0715 08b9 02fb 0200 c000 ceb6 03c4 8408
    00002c0: 0115 0819 07b9 00a6 0100 a1ff d901 3a07
    00002d0: 0336 0804 3609 2db9 0063 0100 3a0b a700
    00002e0: f719 0bb9 0069 0100 c001 e13a 0a19 0ab6
    00002f0: 03c7 9900 0c19 0a04 b603 d1a7 00da 1907
    0000300: c600 3619 0719 0ab6 03d5 9900 2c19 07b6
    0000310: 03d9 b902 a001 0099 001f 190a 1303 dc19
    0000320: 0ab6 0392 9900 0913 03c2 a700 0613 03de
    0000330: b603 97a7 0029 1509 9a00 2419 0ab6 03e0
    0000340: c600 1c19 0a13 03dc 190a b603 9299 0009
    0000350: 1303 c2a7 0006 1303 deb6 0397 190a 1509
    0000360: b603 d119 0a2a b400 d0b6 03e1 9a00 0603
    0000370: 3609 190a b603 929a 005a 0436 0c19 0ab6
    0000380: 03b5 b900 6301 003a 0ea7 0037 190e b900
    0000390: 6901 00c0 01aa 3a0d 190d b601 b4b6 01dc
    00003a0: 9a00 06a7 001d 190d b601 b73a 0f15 0c2c
    00003b0: b602 0019 0fb6 03e4 b900 a601 0068 360c
    00003c0: 190e b900 7401 009a ffc5 1508 150c 6036
    00003d0: 0819 0a3a 0719 0bb9 0074 0100 9aff 052c
    00003e0: b603 e89c 000b 2c15 0804 64b6 03eb 2cb6
    00003f0: 01d8 c600 122c b601 d8b6 03ef 9a00 082c
    0000400: 04b6 03eb b1                           
  Stackmap Table:
    append_frame(@22,Object[#100])
    full_frame(@33,{Object[#1],Object[#100],Object[#89],Object[#100],Top,Object[#106]},{})
    same_frame(@52)
    full_frame(@82,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Top,Object[#106]},{})
    same_frame(@112)
    same_frame(@155)
    same_frame(@195)
    full_frame(@205,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100]},{})
    full_frame(@231,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Top,Object[#106]},{})
    same_frame(@263)
    full_frame(@274,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481]},{})
    same_frame(@301)
    same_frame(@329)
    full_frame(@349,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Top,Object[#106]},{})
    full_frame(@375,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#426],Object[#106]},{})
    full_frame(@395,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#426],Object[#106],Object[#293],Top,Object[#106]},{})
    same_frame(@440)
    full_frame(@487,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Top,Object[#106]},{})
    full_frame(@556,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481]},{})
    full_frame(@585,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Top,Object[#106]},{})
    full_frame(@616,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Object[#106]},{})
    same_frame(@635)
    full_frame(@645,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Top,Object[#106]},{})
    full_frame(@675,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#100],Integer},{})
    same_frame(@705)
    chop_frame(@717,2)
    full_frame(@737,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Top,Object[#106]},{})
    full_frame(@766,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Object[#481],Object[#106]},{})
    full_frame(@813,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Object[#481],Object[#106]},{Object[#481],Object[#206]})
    full_frame(@816,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Object[#481],Object[#106]},{Object[#481],Object[#206],Object[#1020]})
    same_frame(@822)
    full_frame(@854,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Object[#481],Object[#106]},{Object[#481],Object[#206]})
    full_frame(@857,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Object[#481],Object[#106]},{Object[#481],Object[#206],Object[#1020]})
    same_frame(@860)
    same_frame(@882)
    full_frame(@908,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Object[#481],Object[#106],Integer,Top,Object[#106]},{})
    full_frame(@934,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Object[#481],Object[#106],Integer,Object[#426],Object[#106]},{})
    full_frame(@960,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Object[#481],Object[#106],Integer,Top,Object[#106]},{})
    full_frame(@977,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Object[#481],Object[#106]},{})
    full_frame(@981,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Top,Object[#106]},{})
    full_frame(@1006,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer},{})
    same_frame(@1028)

Errors running builder 'Integrated External Tool Builder' on project 'com.oracle.truffle.dsl.processor'.
The builder launch configuration could not be found.
The builder launch configuration could not be found.
Errors running builder 'Java Builder' on project 'com.oracle.truffle.sl'.
Inconsistent stackmap frames at branch target 816
Exception Details:
  Location:
    com/oracle/truffle/dsl/processor/node/NodeParser.finalizeSpecializations(Ljava/util/List;Lcom/oracle/truffle/dsl/processor/node/NodeData;)V @816: invokevirtual
  Reason:
    Type 'java/lang/String' (current frame, stack[2]) is not assignable to '[Ljava/lang/Object;' (stack map, stack[2])
  Current Frame:
    bci: @810
    flags: { }
    locals: { 'com/oracle/truffle/dsl/processor/node/NodeParser', 'java/util/List', 'com/oracle/truffle/dsl/processor/node/NodeData', 'java/util/List', 'java/util/List', 'com/oracle/truffle/dsl/processor/node/SpecializationData', 'java/util/List', 'com/oracle/truffle/dsl/processor/node/SpecializationData', integer, integer, 'com/oracle/truffle/dsl/processor/node/SpecializationData', 'java/util/Iterator' }
    stack: { 'com/oracle/truffle/dsl/processor/node/SpecializationData', 'java/lang/String', 'java/lang/String' }
  Stackmap Frame:
    bci: @816
    flags: { }
    locals: { 'com/oracle/truffle/dsl/processor/node/NodeParser', 'java/util/List', 'com/oracle/truffle/dsl/processor/node/NodeData', 'java/util/List', 'java/util/List', 'com/oracle/truffle/dsl/processor/node/SpecializationData', 'java/util/List', 'com/oracle/truffle/dsl/processor/node/SpecializationData', integer, integer, 'com/oracle/truffle/dsl/processor/node/SpecializationData', 'java/util/Iterator' }
    stack: { 'com/oracle/truffle/dsl/processor/node/SpecializationData', 'java/lang/String', '[Ljava/lang/Object;' }
  Bytecode:
    0000000: bb00 9d59 2cb6 014f b701 354e 2db9 02a0
    0000010: 0100 9900 04b1 2db9 0063 0100 3a05 a700
    0000020: 1619 05b9 0069 0100 c001 e13a 042a 2b19
    0000030: 04b7 038e 1905 b900 7401 009a ffe6 bb00
    0000040: 9d59 b700 9f3a 042d b900 6301 003a 06a7
    0000050: 0021 1906 b900 6901 00c0 01e1 3a05 1905
    0000060: b603 9299 000d 1904 1905 b900 a002 0057
    0000070: 1906 b900 7401 009a ffdb 1904 b900 a601
    0000080: 0004 a000 4b2d b900 a601 0004 a000 4119
    0000090: 04b9 0063 0100 3a06 a700 2b19 06b9 0069
    00000a0: 0100 c001 e13a 0519 0513 0395 05bd 0154
    00000b0: 5903 1219 b601 5653 5904 121f b601 5653
    00000c0: b603 9719 06b9 0074 0100 9aff d101 3a05
    00000d0: 1904 b900 a601 0004 a400 3a19 04b9 0063
    00000e0: 0100 3a07 a700 2319 07b9 0069 0100 c001
    00000f0: e13a 0619 0613 0398 04bd 0154 5903 1219
    0000100: b601 5653 b603 9719 07b9 0074 0100 9aff
    0000110: d9b1 1904 b900 a601 0004 a000 1319 0403
    0000120: b902 fb02 00c0 01e1 3a05 a700 1f2c 2ab4
    0000130: 00d0 b601 cb99 0014 2a2c 2db7 039a 3a05
    0000140: 2d19 05b9 00a0 0200 5719 05c6 00e1 1905
    0000150: b603 9eb9 0063 0100 3a07 a700 8d19 07b9
    0000160: 0069 0100 c001 aa3a 0619 06b6 03a1 b803
    0000170: a299 0006 a700 73bb 0115 59b7 0127 3a08
    0000180: 2db9 0063 0100 3a0a a700 3019 0ab9 0069
    0000190: 0100 c001 e13a 0919 0919 06b6 01e6 b601
    00001a0: e93a 0b19 0bc6 0013 1908 190b b603 a1b8
    00001b0: 028e b901 3302 0057 190a b900 7401 009a
    00001c0: ffcc 1908 b901 fc01 0004 a400 1d19 0519
    00001d0: 06b6 01e6 bb01 aa59 1906 2cb6 0200 b602
    00001e0: 04b7 03a6 b603 a919 07b9 0074 0100 9aff
    00001f0: 6fbb 03ad 5913 03af 2c19 05b6 03b1 0101
    0000200: 1905 b603 b219 05b6 03b5 b703 b63a 0619
    0000210: 06b6 03b9 b903 bc01 002d bb01 e159 1906
    0000220: 0304 03b7 0209 b900 a002 0057 2db8 03bf
    0000230: 2c2d b601 70bb 009d 59b7 009f 3a06 2db9
    0000240: 0063 0100 3a08 a700 3f19 08b9 0069 0100
    0000250: c001 e13a 0719 07b6 0392 9900 0e19 0713
    0000260: 03c2 b603 c4a7 0020 1907 b603 c799 000e
    0000270: 1907 1303 afb6 03c4 a700 0d19 0619 07b9
    0000280: 00a0 0200 5719 08b9 0074 0100 9aff bd2c
    0000290: b803 ca99 003a 1906 b803 ce3a 0703 3608
    00002a0: a700 2119 0615 08b9 02fb 0200 c001 e119
    00002b0: 0715 08b9 02fb 0200 c000 ceb6 03c4 8408
    00002c0: 0115 0819 07b9 00a6 0100 a1ff d901 3a07
    00002d0: 0336 0804 3609 2db9 0063 0100 3a0b a700
    00002e0: f719 0bb9 0069 0100 c001 e13a 0a19 0ab6
    00002f0: 03c7 9900 0c19 0a04 b603 d1a7 00da 1907
    0000300: c600 3619 0719 0ab6 03d5 9900 2c19 07b6
    0000310: 03d9 b902 a001 0099 001f 190a 1303 dc19
    0000320: 0ab6 0392 9900 0913 03c2 a700 0613 03de
    0000330: b603 97a7 0029 1509 9a00 2419 0ab6 03e0
    0000340: c600 1c19 0a13 03dc 190a b603 9299 0009
    0000350: 1303 c2a7 0006 1303 deb6 0397 190a 1509
    0000360: b603 d119 0a2a b400 d0b6 03e1 9a00 0603
    0000370: 3609 190a b603 929a 005a 0436 0c19 0ab6
    0000380: 03b5 b900 6301 003a 0ea7 0037 190e b900
    0000390: 6901 00c0 01aa 3a0d 190d b601 b4b6 01dc
    00003a0: 9a00 06a7 001d 190d b601 b73a 0f15 0c2c
    00003b0: b602 0019 0fb6 03e4 b900 a601 0068 360c
    00003c0: 190e b900 7401 009a ffc5 1508 150c 6036
    00003d0: 0819 0a3a 0719 0bb9 0074 0100 9aff 052c
    00003e0: b603 e89c 000b 2c15 0804 64b6 03eb 2cb6
    00003f0: 01d8 c600 122c b601 d8b6 03ef 9a00 082c
    0000400: 04b6 03eb b1                           
  Stackmap Table:
    append_frame(@22,Object[#100])
    full_frame(@33,{Object[#1],Object[#100],Object[#89],Object[#100],Top,Object[#106]},{})
    same_frame(@52)
    full_frame(@82,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Top,Object[#106]},{})
    same_frame(@112)
    same_frame(@155)
    same_frame(@195)
    full_frame(@205,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100]},{})
    full_frame(@231,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Top,Object[#106]},{})
    same_frame(@263)
    full_frame(@274,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481]},{})
    same_frame(@301)
    same_frame(@329)
    full_frame(@349,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Top,Object[#106]},{})
    full_frame(@375,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#426],Object[#106]},{})
    full_frame(@395,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#426],Object[#106],Object[#293],Top,Object[#106]},{})
    same_frame(@440)
    full_frame(@487,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Top,Object[#106]},{})
    full_frame(@556,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481]},{})
    full_frame(@585,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Top,Object[#106]},{})
    full_frame(@616,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Object[#106]},{})
    same_frame(@635)
    full_frame(@645,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Top,Object[#106]},{})
    full_frame(@675,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#100],Integer},{})
    same_frame(@705)
    chop_frame(@717,2)
    full_frame(@737,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Top,Object[#106]},{})
    full_frame(@766,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Object[#481],Object[#106]},{})
    full_frame(@813,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Object[#481],Object[#106]},{Object[#481],Object[#206]})
    full_frame(@816,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Object[#481],Object[#106]},{Object[#481],Object[#206],Object[#1020]})
    same_frame(@822)
    full_frame(@854,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Object[#481],Object[#106]},{Object[#481],Object[#206]})
    full_frame(@857,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Object[#481],Object[#106]},{Object[#481],Object[#206],Object[#1020]})
    same_frame(@860)
    same_frame(@882)
    full_frame(@908,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Object[#481],Object[#106],Integer,Top,Object[#106]},{})
    full_frame(@934,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Object[#481],Object[#106],Integer,Object[#426],Object[#106]},{})
    full_frame(@960,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Object[#481],Object[#106],Integer,Top,Object[#106]},{})
    full_frame(@977,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Object[#481],Object[#106]},{})
    full_frame(@981,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer,Top,Object[#106]},{})
    full_frame(@1006,{Object[#1],Object[#100],Object[#89],Object[#100],Object[#100],Object[#481],Object[#100],Object[#481],Integer,Integer},{})
    same_frame(@1028)

Thanks
Created attachment 238551
Unix shell script to reproduce errors with batch compiler
I see the same errors ;-)

This seems to be a problem with the JDT core compiler. The annotation processors that are in the attached eclipse-config.jar were compiled with javac. I've attached a shell script that demonstrates the issue when compiling one of these annotation processors with the JDT batch compiler. After copying org.eclipse.jdt.core_3.9.2.v*_BETA_JAVA8.jar into the workspace directory, you should be able to reproduce the errors by running the attached run.sh in this directory:

$ ./run.sh
----------
1. ERROR in /Users/dsimon/linz/fff/graal/com.oracle.truffle.dsl.processor/src/com/oracle/truffle/dsl/processor/node/NodeCodeGenerator.java (at line 2139)
	CodeExecutableElement method = new CodeExecutableElement(modifiers(PROTECTED, expectType != null ? STATIC : FINAL), param.getType(), childExecuteName);
	                                                         ^^^^^^^^^
The method modifiers(Modifier...) in the type Utils is not applicable for the arguments (Modifier, Modifier[])
----------
----------
2. ERROR in /Users/dsimon/linz/fff/graal/com.oracle.truffle.dsl.processor/src/com/oracle/truffle/dsl/processor/node/NodeParser.java (at line 332)
	nodeData.setAssumptions(new ArrayList<>(assumptionsList));
	         ^^^^^^^^^^^^^^
The method setAssumptions(List<String>) in the type NodeData is not applicable for the arguments (ArrayList)
----------
3. ERROR in /Users/dsimon/linz/fff/graal/com.oracle.truffle.dsl.processor/src/com/oracle/truffle/dsl/processor/node/NodeParser.java (at line 332)
	nodeData.setAssumptions(new ArrayList<>(assumptionsList));
	                                        ^^^^^^^^^^^^^^^
assumptionsList cannot be resolved or is not a field
----------
3 problems (3 errors)
Hi Doug,

I will follow your script and let you know the results.

-----------------------------------------------------------------------------
I was working with the code which you gave and was able to get around most of them. 

1) There are complains about import of some classes from 
import com.oracle.truffle.api.dsl.test.AssumptionsTestFactory


I do not see AssumptionsTestFactory.java in my workspace. Do you see it in yours?

2) In com.oracle.graal.graph.NodeList.java:

@Override
    @SuppressWarnings("unchecked")
    public <A> A[] toArray(A[] template) {
        // public static <T,U> T[] copyOf(U[] original, int newLength, Class<? extends T[]> newType)
        return (A[]) Arrays.copyOf(nodes, size, template.getClass());
    }


Description	Resource	Path	Location	Type
The method copyOf(U[], int, Class<? extends T[]>) in the type Arrays is not applicable for the arguments (Node[], int, Class<capture#8-of ? extends Object[]>)	NodeList.java	/com.oracle.graal.graph/src/com/oracle/graal/graph	line 284	Java Problem

-------------------------------------------------------------------------

In Comment 8 I see only 3 errors. Where are the rest 33 (local variable resolution errors ?)


Thanks,
Shankha
(In reply to shankha banerjee from comment #9)
> Hi Doug,
> 
> I will follow your script and let you know the results.
> 
> -----------------------------------------------------------------------------
> I was working with the code which you gave and was able to get around most
> of them. 
> 
> 1) There are complains about import of some classes from 
> import com.oracle.truffle.api.dsl.test.AssumptionsTestFactory
> 
> 
> I do not see AssumptionsTestFactory.java in my workspace. Do you see it in
> yours?

No. This is a class generated by an annotation processor. Since there is a problem with the annotation processors, this class is not being generated. I should have stated earlier that this code base works fine with an un-patched Eclipse 4.3.1. 

> 2) In com.oracle.graal.graph.NodeList.java:
> 
> @Override
>     @SuppressWarnings("unchecked")
>     public <A> A[] toArray(A[] template) {
>         // public static <T,U> T[] copyOf(U[] original, int newLength,
> Class<? extends T[]> newType)
>         return (A[]) Arrays.copyOf(nodes, size, template.getClass());
>     }
> 
> 
> Description	Resource	Path	Location	Type
> The method copyOf(U[], int, Class<? extends T[]>) in the type Arrays is not
> applicable for the arguments (Node[], int, Class<capture#8-of ? extends
> Object[]>)	NodeList.java	/com.oracle.graal.graph/src/com/oracle/graal/graph
> line 284	Java Problem
> 
> -------------------------------------------------------------------------
> 
> In Comment 8 I see only 3 errors. Where are the rest 33 (local variable
> resolution errors ?)

The script in Comment 8 is there to simply reproduce a subset of the problems seen in the IDE itself. While ideally it would be great to have them all solved, I think focusing on a small set of JDT errors first is the best way to go about it.

BTW, the local variable resolution should be easy to debug as is right? They are obviously spurious since the local variables are declared immediately above the problematic line in some cases.
There are few discrepancies in the results. Please bear with me.

I executed the steps as specified in the script. I see no errors (with the latest JDT core code). It is clean. You see 3 errors.

What do I do after I have run your script? I go back to the steps you specified in Comment 0? I did that. The issue I have now is I do not see any src folders 
under the child directories of graal\graal\. e.g. There is no src folder under
graal\graal\com.oracle.graal.alloc.

I will try out with a fresh copy of everything and let you know.

Thanks
Hi Doug,
You mention (Comment 10):

"code base works fine with an un-patched Eclipse 4.3.1."

Does that mean you do not see any of the 33 local variable resolution error messages.

Thanks
(In reply to shankha banerjee from comment #11)
> There are few discrepancies in the results. Please bear with me.
> 
> I executed the steps as specified in the script. I see no errors (with the
> latest JDT core code). It is clean. You see 3 errors.

Where can I get a copy of JDT batch compiler jar you are using? 

> What do I do after I have run your script? I go back to the steps you
> specified in Comment 0? I did that. The issue I have now is I do not see any
> src folders 
> under the child directories of graal\graal\. e.g. There is no src folder
> under
> graal\graal\com.oracle.graal.alloc.

That's weird - nothing I've described should have caused the src folders to disappear.

> I will try out with a fresh copy of everything and let you know.

Executing 'hg up -C' should get you back to a clean state.

Do you have python 2.7 on your PATH? If so, then try this:

cp org.eclipse.jdt.core_3.9.2.v20131221-0104_BETA_JAVA8.jar mx/ecj.jar
./mxtool/mx clean
./mxtool/mx ideclean
./mxtool/mx -v eclipseinit

This is the process we use to generate our annotation processor jars and Eclipse project configurations. The tail output of this for me is:

/Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/bin/java -Xmx1g -jar /Users/dsimon/linz/424591/mx/ecj.jar -1.7 -cp /Users/dsimon/linz/424591/graal/com.oracle.truffle.api/bin -g -enableJavadoc -d /Users/dsimon/linz/424591/graal/com.oracle.truffle.api/bin -proc:none -properties /Users/dsimon/linz/424591/graal/com.oracle.truffle.api/.settings/org.eclipse.jdt.core.prefs @/Users/dsimon/linz/424591/graal/com.oracle.truffle.api/javafilelist.txt
----------
1. WARNING in /Users/dsimon/linz/424591/graal/com.oracle.truffle.api/src/com/oracle/truffle/api/nodes/GraphPrintVisitor.java (at line 101)
	// TODO: difference (create removeNode,removeEdge elements)
	   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TODO: difference (create removeNode,removeEdge elements)
----------
----------
2. ERROR in /Users/dsimon/linz/424591/graal/com.oracle.truffle.api/src/com/oracle/truffle/api/nodes/Node.java (at line 362)
	return new Iterable<Node>() {
	           ^^^^^^^^^^^^^^^^
The type new Iterable<Node>(){} must implement the inherited abstract method Iterable<Node>.forEach(Consumer<? super Node>)
----------
3. ERROR in /Users/dsimon/linz/424591/graal/com.oracle.truffle.api/src/com/oracle/truffle/api/nodes/Node.java (at line 362)
	return new Iterable<Node>() {
	           ^^^^^^^^^^^^^^^^
The type new Iterable<Node>(){} must implement the inherited abstract method Iterable<Node>.spliterator()
----------
----------
4. ERROR in /Users/dsimon/linz/424591/graal/com.oracle.truffle.api/src/com/oracle/truffle/api/nodes/NodeUtil.java (at line 203)
	static class NodeIterator implements Iterator<Node> {
	             ^^^^^^^^^^^^
The type NodeUtil.NodeIterator must implement the inherited abstract method Iterator<Node>.forEachRemaining(Consumer<? super Node>)
----------
----------
5. WARNING in /Users/dsimon/linz/424591/graal/com.oracle.truffle.api/src/com/oracle/truffle/api/nodes/instrument/InstrumentationProbeNode.java (at line 89)
	// TODO (mlvdv) making the internal*() methods public is a workaround for a bug/limitation in
	   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TODO (mlvdv) making the internal
----------
----------
6. WARNING in /Users/dsimon/linz/424591/graal/com.oracle.truffle.api/src/com/oracle/truffle/api/nodes/serial/PostOrderDeserializer.java (at line 165)
	// TODO add support for source sections
	   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TODO add support for source sections
----------
----------
7. WARNING in /Users/dsimon/linz/424591/graal/com.oracle.truffle.api/src/com/oracle/truffle/api/source/SourceManager.java (at line 145)
	// TODO (mlvdv) make this private once some related code changes propagate
	   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TODO (mlvdv) make this private once some related code changes propagate
----------
7 problems (3 errors, 4 warnings)
[exit code: 255]
(In reply to shankha banerjee from comment #12)
> Hi Doug,
> You mention (Comment 10):
> 
> "code base works fine with an un-patched Eclipse 4.3.1."
> 
> Does that mean you do not see any of the 33 local variable resolution error
> messages.

Yes, that is what I mean (after running the 'mxtool/mx eclipseinit' as described above).
Created attachment 238554
ecj compiler with the latest code.

Hi Doug,
I have created the ecj compiler (batch compiler) with the latest code. You can try this one out.

Thanks,
Shankha
(In reply to shankha banerjee from comment #15)
> Created attachment 238554 [details]
> ecj compiler with the latest code.
> 
> Hi Doug,
> I have created the ecj compiler (batch compiler) with the latest code. You
> can try this one out.

I downloaded it and get exactly the same warnings & errors as in Comment 13.
Created attachment 238607
Project Configuration File
Created attachment 238608
Javac Compilation log: No errors
In this comment I am going to state the  problem and steps to reproduce the problem.
The basic goal of this bug is to the http://openjdk.java.net/projects/graal/
compile with JDT.

1) Install merucrial and add it to your path. Please download graal repo: hg clone http://hg.openjdk.java.net/graal/graal/rev/72e2ec923b7b .
2) cd  to_the_repository
3) Set JAVA_HOME environment variable to point to the javac (b120).
JAVA_HOME=c:/Work/JDK/b120/jdk8/jdk1.8.0
4) Please install Python 2.7. 
5) Create a copy of the batch compiler (ecj_all.jar)
6) Download https://bugs.eclipse.org/bugs/attachment.cgi?id=238607 (Project Configuration File) and
   copy it into mx/projects
7) The batch compiler which you created as part of step 5 should be copied into mx/ .   
8) Create mx/env with JAVA_HOME pointing to a JDK8 installation (b120) installation.
9) hg status

The setup is ready.

10) mxtool/mx clean
11) mxtool/mx ideclean
12) Build with javac. No errors:
mxtool/mx --java-home=/c/Work/JDK/b120/jdk8/jdk1.8.0 -v build --no-native

The log message is attached as https://bugs.eclipse.org/bugs/attachment.cgi?id=238608

13) mxtool/mx clean
14) mxtool/mx ideclean
15) Build with jdt
   mxtool/mx --java-home=/c/Work/JDK/b120/jdk8/jdk1.8.0 -v build --no-native --jdt=path_to_ecj
  
JDT throws up warnings / errors:

1. WARNING in C:\Work\SR1\e2\Bug424591-2\72e2ec923b7b\graal\com.oracle.truffle.api\src\com\oracle\truffle\api\nodes\GraphPrintVisitor.java (at line 101)
        // TODO: difference (create removeNode,removeEdge elements)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TODO: difference (create removeNode,removeEdge elements)
----------
----------
2. WARNING in C:\Work\SR1\e2\Bug424591-2\72e2ec923b7b\graal\com.oracle.truffle.api\src\com\oracle\truffle\api\nodes\instrument\InstrumentationProbeNode.java (at line 89)
        // TODO (mlvdv) making the internal*() methods public is a workaround for a bug/limitation in
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TODO (mlvdv) making the internal
----------
----------
3. WARNING in C:\Work\SR1\e2\Bug424591-2\72e2ec923b7b\graal\com.oracle.truffle.api\src\com\oracle\truffle\api\nodes\serial\PostOrderDeserializer.java (at line 165)
        // TODO add support for source sections
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TODO add support for source sections
----------
----------
4. WARNING in C:\Work\SR1\e2\Bug424591-2\72e2ec923b7b\graal\com.oracle.truffle.api\src\com\oracle\truffle\api\source\SourceManager.java (at line 145)
        // TODO (mlvdv) make this private once some related code changes propagate
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TODO (mlvdv) make this private once some related code changes propagate
----------
4 problems (4 warnings)
Compiling Java sources for com.oracle.graal.options with JDT...
c:/Work/JDK/b120/jdk8/jdk1.8.0\bin\java.exe -Xmx1g -jar c:/Work/SR1/e2/Bug424591-2/ecj_all.jar -1.8 -cp c:\Work\SR1\e2\Bug424591-2\72e2ec923b7b\graal\com.oracle.graal.options\bin -g -enableJavadoc -d c:\Work\SR1\e2\Bug424591-2\72e2ec923b7b\graal\com.oracle.graal.options\bin -proc:none -properties c:
\Work\SR1\e2\Bug424591-2\72e2ec923b7b\graal\com.oracle.graal.options\.settings\org.eclipse.jdt.core.prefs @c:\Work\SR1\e2\Bug424591-2\72e2ec923b7b\graal\com.oracle.graal.options\javafilelist.txt
----------
1. WARNING in C:\Work\SR1\e2\Bug424591-2\72e2ec923b7b\graal\com.oracle.graal.options\src\com\oracle\graal\options\OptionValue.java (at line 231)
        Collection<T> values = c == null ? new ArrayList<T>() : c;
                                               ^^^^^^^^^
Redundant specification of type arguments <T>
----------



c:/Work/JDK/b120/jdk8/jdk1.8.0\bin\java.exe -Xmx1g -jar c:/Work/SR1/e2/Bug424591-2/ecj_all.jar -1.8 -cp c:\Work\SR1\e2\Bug424591-2\72e2ec923b7b\graal\com.oracle.graal.debug\bin;c:\Work\SR1\e2\Bug424591-2\72e2ec923b7b\graal\com.oracle.graal.api.meta\bin;c:\Work\SR1\e2\Bug424591-2\72e2ec923b7b\graal\c
om.oracle.graal.api.code\bin;c:\Work\SR1\e2\Bug424591-2\72e2ec923b7b\graal\com.oracle.graal.graph\bin -g -enableJavadoc -d c:\Work\SR1\e2\Bug424591-2\72e2ec923b7b\graal\com.oracle.graal.graph\bin -proc:none -properties c:\Work\SR1\e2\Bug424591-2\72e2ec923b7b\graal\com.oracle.graal.graph\.settings\or
g.eclipse.jdt.core.prefs @c:\Work\SR1\e2\Bug424591-2\72e2ec923b7b\graal\com.oracle.graal.graph\javafilelist.txt
----------
1. ERROR in C:\Work\SR1\e2\Bug424591-2\72e2ec923b7b\graal\com.oracle.graal.graph\src\com\oracle\graal\graph\NodeList.java (at line 283)
        return (A[]) Arrays.copyOf(nodes, size, template.getClass());
                            ^^^^^^
The method copyOf(U[], int, Class<? extends T[]>) in the type Arrays is not applicable for the arguments (Node[], int, Class<capture#8-of ? extends Object[]>)
----------
1 problem (1 error)
[exit code: -1]
[]$
I now suspect the local variable resolution problem is a red herring.

Here is a simple example showing the difference between javac and JDT:

import java.util.Arrays;
public class MyList {
    protected Object[] elements;
    private int size;
    @SuppressWarnings("unchecked")
    public <A> A[] toArray(A[] a) {
        return (A[]) Arrays.copyOf(elements, size, a.getClass());
    }
}

This compiles fine with javac from JDK8 but not with JDT:

$ /Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/bin/java -version
java version "1.8.0-ea"
Java(TM) SE Runtime Environment (build 1.8.0-ea-b117)
Java HotSpot(TM) 64-Bit Server VM (build 25.0-b59, mixed mode)
$ /Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/Contents/Home/bin/javac -source 8 -target 8 MyList.java
$ java -jar org.eclipse.jdt.core_3.9.2.v20131221-0104_BETA_JAVA8.jar -1.8 MyList.java
----------
1. ERROR in /Users/dsimon/linz/424591/MyList.java (at line 11)
	return (A[]) Arrays.copyOf((Object[])nodes, size, template.getClass());
	                    ^^^^^^
The method copyOf(U[], int, Class<? extends T[]>) in the type Arrays is not applicable for the arguments (Object[], int, Class<capture#1-of ? extends Object[]>)
----------
1 problem (1 error)
(In reply to Doug Simon from comment #20)
> I now suspect the local variable resolution problem is a red herring.
> [...]
> ----------
> 1. ERROR in /Users/dsimon/linz/424591/MyList.java (at line 11)
> 	return (A[]) Arrays.copyOf((Object[])nodes, size, template.getClass());
> 	                    ^^^^^^
> The method copyOf(U[], int, Class<? extends T[]>) in the type Arrays is not
> applicable for the arguments (Object[], int, Class<capture#1-of ? extends
> Object[]>)
> ----------
> 1 problem (1 error)


If indeed this is the core problem, then I need to check if the new type inference has a problem with captures of array types. I'll take a look soonish.
I don't think this is specific to array types:

import java.util.*;
public class Test {
	public static void main(String[] args) {
        Test.forObject(new HashSet<>());
	}
    public static Test forObject(Object o) {
        return null;
    }
}

$ /usr/lib/jvm/jdk1.8.0/bin/javac -source 1.8 -target 1.8 Test.java
$ java -jar org.eclipse.jdt.core_3.9.2.v20131221-0104_BETA_JAVA8.jar -1.8 Test.java 
----------
1. ERROR in /home/dsimon/linz/basic-graal8/424591/src/Test.java (at line 4)
	Test.forObject(new HashSet<>());
	     ^^^^^^^^^
The method forObject(Object) in the type Test is not applicable for the arguments (new HashSet<>())
----------
1 problem (1 error)
(In reply to Doug Simon from comment #22)

This is an example of a really bad error message.

I believe the root cause here is that we cannot infer the type argument to replace the diamond. I see no direct connection to the previous example.

I'll make a note in bug 404675 to make sure we improve our error message also for this case.
Back to the example from comment 20 and including some private discussion with Shankha:

Yes, you're right, there's s.t. fishy in ParameterizedMethodBinding.instantiateGetClass():

See where we create the raw type of the erasure of receiverType!

We should do some archaeology to find why this happens here.
(In reply to Stephan Herrmann from comment #24)

The rawType is calculated as follows:
TypeBinding rawType = environment.convertToRawType(receiverType.erasure(), false /*do not force conversion of enclosing types*/);

in the function:
ParameterizedMethodBinding.instantiateGetClass(TypeBinding, MethodBinding, Scope)

The erasure is calculated through:

TypeVariableBinding.java
public TypeBinding erasure() {
	    if (this.firstBound != null) {
			return this.firstBound.erasure();
	    }
	    return this.superclass; // java/lang/Object
	}

The erasure is calculated through this.superclass and thus leads the rawType to be java.lang.Object[]

Call Stack:

TypeVariableBinding.erasure() line: 342	
ArrayBinding.erasure() line: 199	
ParameterizedMethodBinding.instantiateGetClass(TypeBinding, MethodBinding, Scope) line: 316
Looking into R4_3_maintainence to figure out why we do not generate the error.
Srikanth: the example from comment 22 fails in AE.isCompatibleWith(). We start with left being BTB("j.l.Object") then we get a null from .actualType() and bail out (saying that 'this' is not compatible with j.l.Object :) ).

Using .actualType() was introduced via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=0bcd341ea781d3ca9f30d724e6161bfab2161b14

Do you have any background info on why this was necessary? Using RunAllJava8Tests I cannot find a reason for using actualType(). Was that perhaps a stop-gap measure in the absence of proper type inference?
(In reply to Stephan Herrmann from comment #27)
> Srikanth: the example from comment 22 fails in AE.isCompatibleWith(). We
> start with left being BTB("j.l.Object") then we get a null from
> .actualType() and bail out (saying that 'this' is not compatible with
> j.l.Object :) ).
> 
> Using .actualType() was introduced via
> http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
> ?h=BETA_JAVA8&id=0bcd341ea781d3ca9f30d724e6161bfab2161b14
> 
> Do you have any background info on why this was necessary? Using
> RunAllJava8Tests I cannot find a reason for using actualType(). Was that
> perhaps a stop-gap measure in the absence of proper type inference?

Srikanth, some background would help, as I hate removing code whose purpose I don't understand ... :)
Retesting today, AE.isCompatibleWith() no longers seems to be the issue.
Investigating again.
After several theories have been rejected, I took a closer look at reduction.

At some point we need to check type argument containment:
  ⟨capture#1-of ? extends java.lang.Object[] <= ? extends T#0[]⟩
and finally sub-typing:
  ⟨capture#1-of ? extends java.lang.Object[] <: T#0[]⟩

That last constraint requires this: "among the supertypes of S that are array types, a most-specific type is identified".
We don't seem to have any mechanism at hand to compute this 'most-specific super array type', and I don't even now if such type exists if S is an intersection type, but for simple type variables we may just check if we have a single super type that is an array type.

BTW, the example from comment 22 no longer gives an error :)

Tests & fix released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=7b2f4aa5695fcdfd1d231766a2116c4508084163
*** Bug 426585 has been marked as a duplicate of this bug. ***
(In reply to Stephan Herrmann from comment #30)
> After several theories have been rejected, I took a closer look at reduction.
> 
> At some point we need to check type argument containment:
>   ⟨capture#1-of ? extends java.lang.Object[] <= ? extends T#0[]⟩
> and finally sub-typing:
>   ⟨capture#1-of ? extends java.lang.Object[] <: T#0[]⟩
> 
> That last constraint requires this: "among the supertypes of S that are
> array types, a most-specific type is identified".
> We don't seem to have any mechanism at hand to compute this 'most-specific
> super array type', and I don't even now if such type exists if S is an
> intersection type, but for simple type variables we may just check if we
> have a single super type that is an array type.
> 
> BTW, the example from comment 22 no longer gives an error :)
> 
> Tests & fix released via
> http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
> ?h=BETA_JAVA8&id=7b2f4aa5695fcdfd1d231766a2116c4508084163

I don't think this is completely fixed:

public class Test2 {
    public static native <T> T applyToSet(java.util.Set<String> s);

    public static void applyToList(java.util.List<String> s) {
        applyToSet(new java.util.HashSet<>(s));
    }
}

$ /usr/lib/jvm/jdk1.8.0/bin/javac Test2.java
$ java -jar org.eclipse.jdt.core_3.9.2.v20140202-0105_BETA_JAVA8.jar -1.8 Test2.java
----------
1. ERROR in /home/dsimon/Test2.java (at line 13)
	applyToSet(new HashSet<>(s));
	^^^^^^^^^^
The method applyToSet(Set<String>) in the type Test2 is not applicable for the arguments (new HashSet<>(s))
----------
1 problem (1 error)
$

Removing the (unused) "<T>" from applyToSet makes the problem go away.
(In reply to Doug Simon from comment #32)
> I don't think this is completely fixed:

Thanks. This definitely is not an issue of capture-of-array, hence I filed a new bug for this: bug 427224.

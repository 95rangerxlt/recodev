Files generated by Java 6 annotation processors during a build are only removed during a clean: that is, the dependency information specified by the processor is ignored. Instead, generated files should be deleted during any subsequent build in which they are not re-generated, just as for Java 5 files.

Files generated by Java 6 annotation processors during a build are only removed during a clean: that is, the dependency information specified by the processor is ignored. Instead, generated files should be deleted during any subsequent build in which they are not re-generated, just as for Java 5 files.
Created attachment 76184
Proposed patch

I believe I have gotten this to work, using the existing AptCompilationParticipant to handle the deletion.  Essentially what now happens in a build is:

1. Units are compiled and Java 6 annotation processing is performed, possibly resulting in generation of some files.  Generated files are recorded in the AptCompilationParticipant.

2. The AptCompilationParticipant is then called to handle Java 5 annotation processing, possibly resulting in even more files being generated.  These files are recorded in the BuildEnv (which unfortunately doesn't exist during step 1).

3. Finally, the AptCompilationParticipant calls GeneratedFileManager to delete any files that were generated in previous builds but that were not generated during step 1 or 2 above.

4. At the end of the build, the list of files created in step 1 is cleared.  (The list created in step 2 was deleted when the BuildEnv was deleted, at the end of step 3.)

So, deletion of both Java 5 and Java 6 generated files is handled via the pre-existing (Java 5) mechanism.

The implementation relies on the fact that files are only generated by Java 6 processors during a build, as opposed to reconcile.  I think this is likely to remain true, but if not, we will have to get more sophisticated about how the list in step 1 is recorded and communicated to step 3.

I have released this change to HEAD.  Jess, please review for inclusion in 3.3.1.
Approved for 3.3.1.
Released to 3.3.1.

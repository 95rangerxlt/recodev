Steps to reproduce:
1. Invoke "Convert Local to Field" refactoring on "m" local variable in code below
2. The resulting code cannot be compiled ("Duplicate field")

class ConvertLocalToFieldBug {

    void g() {
        new Object() {
            int m;

            void f() {
                // Invoke "Convert Local Variable to Field" on "m"
                int m;
            }
        };
    }
}

(Thanks to Yilong Li for helping with the bug report.)

Steps to reproduce:
1. Invoke "Convert Local to Field" refactoring on "m" local variable in code below
2. The resulting code cannot be compiled ("Duplicate field")

class ConvertLocalToFieldBug {

    void g() {
        new Object() {
            int m;

            void f() {
                // Invoke "Convert Local Variable to Field" on "m"
                int m;
            }
        };
    }
}

(Thanks to Yilong Li for helping with the bug report.)
Issue is reproducible using I20121210-0800. 

An interesting behavior noticed while testing. In the refactoring wizard, click the "Preview" button. No error/warning is displayed. Click the "Back" button and again use "Preview". From this point onward the validation check is in place and the refactoring is not allowed. The user is informed of the fatal error.
Created attachment 227382
Patch

The bug was that while creating the Name Field in 'PromoteTempWizard.PromoteTempInputPage.addFieldNameField(Composite result)', the corresponding field name string in 'PromoteTempToFieldRefactoring' was not initialized. It used to get initialized only when user modified the name field or in createChange(...) if no modification was done. Hence, in case of no modification by the user, the checks were based on "" as field name and no error was reported.

After the fix, user will be informed about the name conflict with existing field and refactoring will not be allowed.
The fix is good, but I prefer to use the same variable when setting the text. I've changed that and committed the fix with http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=e6cca01f9de9b59c2f34a2f94a8dcc4f7276008b


In addition, the same problem arises with the quick assist. Fixed with http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=721039a345ac588d8e79eff09cd67564ec482b89
(In reply to comment #3)
> In addition, the same problem arises with the quick assist. Fixed with
> http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/
> ?id=721039a345ac588d8e79eff09cd67564ec482b89

I reverted that one again for two reasons:
1) It's strange that the Quick Assist appears but then does nothing.
2) We should allow to apply the Quick Assist so that the user can then change the
   name.

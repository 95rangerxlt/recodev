AK (6/11/01 4:35:16 PM)
	1. add a resource (not source) folder to your project
	2. create a java class in it (or, rather, drag and drop a compilation unit in there)
	3. observe: you cannot rename the compilation unit (i mean, it only renames the file then)
		which is correct - it just happens to ba a .java file but it is just a resource

	4. however, you can invoke all other refactorings - which is wrong

AK (6/11/01 4:39:54 PM)
	why is it a ICompilationUnit then?
	why opening it opens the java editor?
	why is the outliner populated?
	why ...
	it is just a resource file with .java extension

AK (6/11/01 4:35:16 PM)
	1. add a resource (not source) folder to your project
	2. create a java class in it (or, rather, drag and drop a compilation unit in there)
	3. observe: you cannot rename the compilation unit (i mean, it only renames the file then)
		which is correct - it just happens to ba a .java file but it is just a resource

	4. however, you can invoke all other refactorings - which is wrong

AK (6/11/01 4:39:54 PM)
	why is it a ICompilationUnit then?
	why opening it opens the java editor?
	why is the outliner populated?
	why ...
	it is just a resource file with .java extension
moved to 'active'
PRODUCT VERSION:
	122


refactorings should only be enabled for java files on the build path.
otherwise refactorings don't makes sense since we only index Java files on the 
build path.
not a problem now - i did nothing but .java files are in folders (out of 
classpath) are not reported as cus anymore (only as resources)

closing

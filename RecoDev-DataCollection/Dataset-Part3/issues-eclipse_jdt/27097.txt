Openable.exists() creates a lot of garbage objects - it may be wise not to call 
it on selection changes
affected actions are:

FindAction.canOperateOn(IJavaElement)
ModifyParametersAction.shouldAcceptElement(IMethod)
MoveInnerToTopAction.shouldAcceptElement(IType)
OpenSuperImplementationAction.checkMethod(Object)
UseSupertypeAction.shouldAcceptElement(IType)

Openable.exists() creates a lot of garbage objects - it may be wise not to call 
it on selection changes
affected actions are:

FindAction.canOperateOn(IJavaElement)
ModifyParametersAction.shouldAcceptElement(IMethod)
MoveInnerToTopAction.shouldAcceptElement(IType)
OpenSuperImplementationAction.checkMethod(Object)
UseSupertypeAction.shouldAcceptElement(IType)
Good point. This should go together with bug 24746 which states that on 
selection changes we shouldn't call exists.

I will close this PR and extend bug 24746 with the list of "guilty" classes.

*** This bug has been marked as a duplicate of 24746 ***
Reopened since we should address this separately from 24746. Responsible coders:

Daniel Megert
  FindAction

Martin Aeschlimann
  OpenSuperImplementationAction

Adam Kiezun
  ModifyParamtersAction
  UseSupertypeAction
  MoveInnerToTopAction

Daniel, can you please have a look and then pass the PR to Martin.
created separat PR for FindAction: (see bug 27292)


Removed the exists() for OpenSuperImplementationAction,
however, there are still accesses that probably will internally do an exist() 
(IMethod.getFlags()). Have to find out if this is bad.

Moving to Adam
fixed

I have an abstract class X with some abstract methods, some regular methods, some static methods, and some subclasses. X has an abstract base class B. In fact, B is empty: It has no methods, no fields, nothing yet.

I want to move three abstract methods from X to B.  I could have simply used cut&paste in this situation. But instead, I choose to use "refactor->pull up".

That bombed on me.

The .metadata/.log has this to say (due to an oversecured internet setup, I have to copy this by typing it in, so pardon any mistakes):

!ENTRY org.eclipse.ltk.ui.refactoring 4 10000 2006-01-26 14:10:28.07
!MESSAGE Internal Error
!STACK 0
java.lang.reflect.InvocationTargetException
   at org.eclipse.jface.operation.ModalContext.run(ModelContext.java:327)
   at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:830)
   at org.eclipse.ltk.ui.refactoring.RefactoringWizard.createChange(RefactoringWizard.java:573)
   at org.eclipse.ltk.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:416)
   at org.eclipse.ltk.ui.refactoring.RefactoringWizardPage.computeSuccessorPage(UserInputWizardPage.java:74)
   at org.eclipse.jdt.internal.ui.refactoring.PullUpWizard$PullUpInputPage2.getNextPage(PullUpWizard.java:1150)
   at org.eclipse.jface.wizard.WizardDialg.nextPressed(WizardDialg.java:747)
- and so on - 
Caused by: java.lang.IllegalArgumentException
   at org.eclipse.jdt.core.dom.rewrite.ASTRewrite.createStringPlaceholder(ASTRewrite.java:428)
   at org.eclipse.jdt.internal.context.refactoring.structure.PullUpRefactoring.createJavadocForStub(PullUpRefactoring.java:1035)
   at org.eclipse.jdt.internal.context.refactoring.structure.PullUpRefactoring.addMethodStubsToNonAbstractSubclassesOfTargetClass(PullUpRefactoring.java:415)
   at org.eclipse.jdt.internal.context.refactoring.structure.PullUpRefactoring.createChangeManager(PullUpRefactoring.java:1002)
      at org.eclipse.jdt.internal.context.refactoring.structure.PullUpRefactoring.checkFinalConditions(PullUpRefactoring.java:615)
- and so on -

Regards, and thank you for providing fine software.

I have an abstract class X with some abstract methods, some regular methods, some static methods, and some subclasses. X has an abstract base class B. In fact, B is empty: It has no methods, no fields, nothing yet.

I want to move three abstract methods from X to B.  I could have simply used cut&paste in this situation. But instead, I choose to use "refactor->pull up".

That bombed on me.

The .metadata/.log has this to say (due to an oversecured internet setup, I have to copy this by typing it in, so pardon any mistakes):

!ENTRY org.eclipse.ltk.ui.refactoring 4 10000 2006-01-26 14:10:28.07
!MESSAGE Internal Error
!STACK 0
java.lang.reflect.InvocationTargetException
   at org.eclipse.jface.operation.ModalContext.run(ModelContext.java:327)
   at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:830)
   at org.eclipse.ltk.ui.refactoring.RefactoringWizard.createChange(RefactoringWizard.java:573)
   at org.eclipse.ltk.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:416)
   at org.eclipse.ltk.ui.refactoring.RefactoringWizardPage.computeSuccessorPage(UserInputWizardPage.java:74)
   at org.eclipse.jdt.internal.ui.refactoring.PullUpWizard$PullUpInputPage2.getNextPage(PullUpWizard.java:1150)
   at org.eclipse.jface.wizard.WizardDialg.nextPressed(WizardDialg.java:747)
- and so on - 
Caused by: java.lang.IllegalArgumentException
   at org.eclipse.jdt.core.dom.rewrite.ASTRewrite.createStringPlaceholder(ASTRewrite.java:428)
   at org.eclipse.jdt.internal.context.refactoring.structure.PullUpRefactoring.createJavadocForStub(PullUpRefactoring.java:1035)
   at org.eclipse.jdt.internal.context.refactoring.structure.PullUpRefactoring.addMethodStubsToNonAbstractSubclassesOfTargetClass(PullUpRefactoring.java:415)
   at org.eclipse.jdt.internal.context.refactoring.structure.PullUpRefactoring.createChangeManager(PullUpRefactoring.java:1002)
      at org.eclipse.jdt.internal.context.refactoring.structure.PullUpRefactoring.checkFinalConditions(PullUpRefactoring.java:615)
- and so on -

Regards, and thank you for providing fine software.
I tried to pull up four or five methods and a few fields from two abstract classes into an abstract base class.  Three of the methods were abstract.  I went through the wizard, and clicked on the "finish" button, and got an error box that said "Exception does not provide a detail message".  When I dismissed that box, Eclipse hung.  I finally had to kill it.

I'll attach the relevant lines from .log, and my configuration details.
Created attachment 53426
Eclipse configuration just after crash
Created attachment 53427
Error log of crash
I remembered a bit more about how the problem went...

After the error dialog, I was given the option to undo any changes.  I accepted the offer, and *then* Eclipse hung.

When I restarted and brought up all the files, one of the classes had had the methods pulled out of it, but the other two affected methods were unchanged.  So it looks like it failed part way through the refactoring, but hung while trying to undo.


Wow, this one (pulling up few abstract methods from one abstract class into another one) is still present in the 3.7.0 Eclipse. Cool.

Stack:

eclipse.buildId=I20110613-1736
java.version=1.6.0_25
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_US
Framework arguments:  -showLocation
Command-line arguments:  -os linux -ws gtk -arch x86_64 -showLocation

Error
Fri Sep 23 13:57:47 CEST 2011
Internal Error

java.lang.reflect.InvocationTargetException
	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:421)
	at org.eclipse.jface.wizard.WizardDialog.run(WizardDialog.java:1029)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.createChange(RefactoringWizard.java:631)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:470)
	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.computeSuccessorPage(UserInputWizardPage.java:74)
	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.getNextPage(UserInputWizardPage.java:114)
	at org.eclipse.jdt.internal.ui.refactoring.PullUpMethodPage.getNextPage(PullUpMethodPage.java:450)
	at org.eclipse.jface.wizard.WizardDialog.nextPressed(WizardDialog.java:908)
	at org.eclipse.jface.wizard.WizardDialog.buttonPressed(WizardDialog.java:428)
	at org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:624)
	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:240)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1258)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3588)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3209)
	at org.eclipse.jface.window.Window.runEventLoop(Window.java:825)
	at org.eclipse.jface.window.Window.open(Window.java:801)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation$1.run(RefactoringWizardOpenOperation.java:181)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:193)
	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:116)
	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:38)
	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startPullUpRefactoring(RefactoringExecutionStarter.java:423)
	at org.eclipse.jdt.ui.actions.PullUpAction.run(PullUpAction.java:128)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:275)
	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:251)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:584)
	at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:501)
	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:411)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1258)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3588)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3209)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2696)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2660)
	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2494)
	at org.eclipse.ui.internal.Workbench$7.run(Workbench.java:674)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:667)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:123)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1410)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1386)
Caused by: java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.rewrite.ASTRewrite.createStringPlaceholder(ASTRewrite.java:620)
	at org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor.createJavadocForStub(PullUpRefactoringProcessor.java:1299)
	at org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor.addMethodStubForAbstractMethod(PullUpRefactoringProcessor.java:513)
	at org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor.addNecessaryMethodStubs(PullUpRefactoringProcessor.java:536)
	at org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor.createChangeManager(PullUpRefactoringProcessor.java:1208)
	at org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor.checkFinalConditions(PullUpRefactoringProcessor.java:765)
	at org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFinalConditions(ProcessorBasedRefactoring.java:224)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:85)
	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:121)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:121)
Root exception:
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.rewrite.ASTRewrite.createStringPlaceholder(ASTRewrite.java:620)
	at org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor.createJavadocForStub(PullUpRefactoringProcessor.java:1299)
	at org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor.addMethodStubForAbstractMethod(PullUpRefactoringProcessor.java:513)
	at org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor.addNecessaryMethodStubs(PullUpRefactoringProcessor.java:536)
	at org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor.createChangeManager(PullUpRefactoringProcessor.java:1208)
	at org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor.checkFinalConditions(PullUpRefactoringProcessor.java:765)
	at org.eclipse.ltk.core.refactoring.participants.ProcessorBasedRefactoring.checkFinalConditions(ProcessorBasedRefactoring.java:224)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:85)
	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:121)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2344)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:121)
The interesting part of the exception

> Root exception:
> java.lang.IllegalArgumentException
>     at
> org.eclipse.jdt.core.dom.rewrite.ASTRewrite.createStringPlaceholder(ASTRewrite.java:620)
>     at
> org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor.createJavadocForStub(PullUpRefactoringProcessor.java:1299)
>     at
> org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor.addMethodStubForAbstractMethod(PullUpRefactoringProcessor.java:513)
>     at
> org.eclipse.jdt.internal.corext.refactoring.structure.PullUpRefactoringProcessor.addNecessaryMethodStubs(PullUpRefactoringProcessor.java:536)
>     at

Javadoc of org.eclipse.jdt.ui.CodeGeneration.getMethodComment(ICompilationUnit, String, MethodDeclaration, boolean, String, String, String[], String) clearly states that this method can return null. We could check for null before calling ASTRewrite.createStringPlaceholder(..)

Having said that, I cannot reproduce the exception so far. 

Andrey, do you have a code snippet to reproduce this?
Steps:
1. set "Java Code Style > Code Template" settings:
  - make "Comments > Overriding methods" empty
  - check "Automatically add comments &for new methods and types"

2. Pull Up m():

abstract class A {
	
}

abstract class B extends A {
	abstract void m();
}

class C extends A {
	
}
Fixed in master - c2b87671e25f496909e03a7e4970fdf952dec5ea

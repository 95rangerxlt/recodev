I20031203 with your latest patch:

try introducing a factory method for constructor A in class B. Code I used is:

public class A {
    {
        field= 10;
    }
    
    public A() {
        
    }
    
    private int field;
    
    static class XX extends A {
        public void foo() {
            bar();
        }
        public void bar() {
        }
    }
    public void foo(int y) {
        Runnable runnable= new Runnable() {
            private int field;
            public void run() {
                {
                    A a= null;
                }
            }
        };
    }
    
    public String foo(String ss) {
        A a= new A();
        return ss;
    }
}


/*
 * Created on Nov 12, 2003
 *
 * To change the template for this generated file go to
 * Window - Preferences - Java - Code Generation - Code and Comments
 */

/**
 * @author dbaeumer
 *
 * To change the template for this generated type comment go to
 * Window - Preferences - Java - Code Generation - Code and Comments
 */
public class B {
	private static interface I {
		public void foo();
	}
	private static class CC implements I {

		public void foo() {
		}
	}
	
	public void foo() {
		I i= new I() {
			public void foo() {
			}
			public void bar() {
				foo();
			}
		};
		
		CC c= new CC() {};
		B b;
	}
	
	public void bar() {
		class X {
			public void baz() {
				
			}
		}
		
		class Y extends X {
			public void baz() {
				
			}
		}
	}
}



exception is:
'org.eclipse.jdt.core.dom.SimpleName('XX')' in compilation unit 'A.java']
	at java.lang.Throwable.<init>(Throwable.java)
	at java.lang.Throwable.<init>(Throwable.java)
	at org.eclipse.core.runtime.CoreException.<init>(CoreException.java:35)
	at org.eclipse.jdt.core.JavaModelException.<init>
(JavaModelException.java:67)
	at 
org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring.ge
tCtorCallAt(IntroduceFactoryRefactoring.java:857)
	at 
org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring.re
placeConstructorCalls(IntroduceFactoryRefactoring.java:788)
	at 
org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring.ad
dAllChangesFor(IntroduceFactoryRefactoring.java:720)
	at 
org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring.cr
eateChange(IntroduceFactoryRefactoring.java:902)
	at org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run
(CreateChangeOperation.java:104)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)

I20031203 with your latest patch:

try introducing a factory method for constructor A in class B. Code I used is:

public class A {
    {
        field= 10;
    }
    
    public A() {
        
    }
    
    private int field;
    
    static class XX extends A {
        public void foo() {
            bar();
        }
        public void bar() {
        }
    }
    public void foo(int y) {
        Runnable runnable= new Runnable() {
            private int field;
            public void run() {
                {
                    A a= null;
                }
            }
        };
    }
    
    public String foo(String ss) {
        A a= new A();
        return ss;
    }
}


/*
 * Created on Nov 12, 2003
 *
 * To change the template for this generated file go to
 * Window - Preferences - Java - Code Generation - Code and Comments
 */

/**
 * @author dbaeumer
 *
 * To change the template for this generated type comment go to
 * Window - Preferences - Java - Code Generation - Code and Comments
 */
public class B {
	private static interface I {
		public void foo();
	}
	private static class CC implements I {

		public void foo() {
		}
	}
	
	public void foo() {
		I i= new I() {
			public void foo() {
			}
			public void bar() {
				foo();
			}
		};
		
		CC c= new CC() {};
		B b;
	}
	
	public void bar() {
		class X {
			public void baz() {
				
			}
		}
		
		class Y extends X {
			public void baz() {
				
			}
		}
	}
}



exception is:
'org.eclipse.jdt.core.dom.SimpleName('XX')' in compilation unit 'A.java']
	at java.lang.Throwable.<init>(Throwable.java)
	at java.lang.Throwable.<init>(Throwable.java)
	at org.eclipse.core.runtime.CoreException.<init>(CoreException.java:35)
	at org.eclipse.jdt.core.JavaModelException.<init>
(JavaModelException.java:67)
	at 
org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring.ge
tCtorCallAt(IntroduceFactoryRefactoring.java:857)
	at 
org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring.re
placeConstructorCalls(IntroduceFactoryRefactoring.java:788)
	at 
org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring.ad
dAllChangesFor(IntroduceFactoryRefactoring.java:720)
	at 
org.eclipse.jdt.internal.corext.refactoring.code.IntroduceFactoryRefactoring.cr
eateChange(IntroduceFactoryRefactoring.java:902)
	at org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run
(CreateChangeOperation.java:104)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:101)
Created attachment 7128
Patch for IntroduceFactoryRefactoring.java to fix bug

This is not a top-level patch file; it's a one-line patch specifically for the
single file IntroduceFactoryRefactoring.java.
Bob, can you please check if this is still a problem in M8
Created attachment 10235
Patch for jdt.ui.tests.refactoring against I2004-0413 to add JUnit test for bug fix
Bob, can you please provide a patch that is compiled against a newer version. 
04-13 is fairly old and we did some clean-up work due to API changes in Search 
which required changes in IntroduceFactory as well. I would recommend that you 
use I20040505_0200 and take the JDT/UI version v20040504. This should give you 
a quick starting point to compile the patch.
Created attachment 10339
Modified patch for jdt.ui.tests against I2004-0504 for JUnit test
Bob, actually I was asking for a newer patch againts 
IntroducFactoryRefactoring since I can't apply the one attached via comment #1
I must be missing something; IntroduceFactoryRefactoring.java in CVS I20040504 
looks to me as though it already has the patch. Look at the "node instanceof 
SimpleName" branch in getCtorCallAt(), which was the only line patched. The 
patched version has the (slightly) more complicated conditional. Also, this 
patch file applied cleanly for me to I20040504 when I tested it last week.
Bob,

I don't know what's wrong here but I can't apply the patch provided under 
coomment #1 against version 1.29 of class IntroduceFactoryRefactoring. I can 
merge it by hand if the additional conditional test should go into the build. 
But better would be to get a clean patch against version 1.29.
Dirk, you already applied the patch, as of version 1.25 (committed on April 
19th). You might try to see whether you can "reverse apply" it to the current 
source, just as a sanity check.
Stupid me. I always get tricked by the same mistake (you see a difference in 
the merge dialog but this dialog doesn't consider the actual content). 

Thanks for pointing this out. I released the additional test cases.

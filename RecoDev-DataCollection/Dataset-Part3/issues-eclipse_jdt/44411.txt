Build 20030930

JavaSearchResultCollector.fView is null:

Thread [ModalContext] (Suspended (exception NullPointerException))
	JavaSearchResultCollector.accept(IResource, int, int, IJavaElement, 
int) line: 130
	MatchLocator.report(IResource, int, int, IJavaElement, int) line: 923
	MatchLocator.report(int, int, IJavaElement, int) line: 916
	MatchLocator.reportAccurateReference(int, int, char[][], IJavaElement, 
int) line: 984
	TypeReferenceLocator.matchReportReference(ArrayTypeReference, 
IJavaElement, int, MatchLocator) line: 162
	TypeReferenceLocator.matchReportReference(AstNode, IJavaElement, int, 
MatchLocator) line: 176
	MatchLocator.reportMatching(AbstractMethodDeclaration, IJavaElement, 
int, boolean, MatchingNodeSet) line: 1155
	MatchLocator.reportMatching(TypeDeclaration, IJavaElement, int, 
MatchingNodeSet) line: 1330
	MatchLocator.reportMatching(CompilationUnitDeclaration, boolean) line: 
1216
	MatchLocator.process(PossibleMatch, boolean) line: 857
	MatchLocator.locateMatches(JavaProject, PossibleMatch[], int, int) 
line: 590
	MatchLocator.locateMatches(JavaProject, PossibleMatchSet) line: 627
	MatchLocator.locateMatches(String[], IWorkspace, ICompilationUnit[]) 
line: 714
	SearchEngine.search(IWorkspace, ISearchPattern, IJavaSearchScope, 
IJavaSearchResultCollector) line: 568
	SearchEngine.search(IWorkspace, IJavaElement, int, IJavaSearchScope, 
IJavaSearchResultCollector) line: 495
	JavaSearchOperation.execute(IProgressMonitor) line: 96
	WorkspaceModifyOperation$1.run(IProgressMonitor) line: 71
	Workspace.run(IWorkspaceRunnable, ISchedulingRule, IProgressMonitor) 
line: 1555
	Workspace.run(IWorkspaceRunnable, IProgressMonitor) line: 1572
	JavaSearchOperation(WorkspaceModifyOperation).run(IProgressMonitor) 
line: 85
	ModalContext$ModalContextThread.run() line: 101

Build 20030930

JavaSearchResultCollector.fView is null:

Thread [ModalContext] (Suspended (exception NullPointerException))
	JavaSearchResultCollector.accept(IResource, int, int, IJavaElement, 
int) line: 130
	MatchLocator.report(IResource, int, int, IJavaElement, int) line: 923
	MatchLocator.report(int, int, IJavaElement, int) line: 916
	MatchLocator.reportAccurateReference(int, int, char[][], IJavaElement, 
int) line: 984
	TypeReferenceLocator.matchReportReference(ArrayTypeReference, 
IJavaElement, int, MatchLocator) line: 162
	TypeReferenceLocator.matchReportReference(AstNode, IJavaElement, int, 
MatchLocator) line: 176
	MatchLocator.reportMatching(AbstractMethodDeclaration, IJavaElement, 
int, boolean, MatchingNodeSet) line: 1155
	MatchLocator.reportMatching(TypeDeclaration, IJavaElement, int, 
MatchingNodeSet) line: 1330
	MatchLocator.reportMatching(CompilationUnitDeclaration, boolean) line: 
1216
	MatchLocator.process(PossibleMatch, boolean) line: 857
	MatchLocator.locateMatches(JavaProject, PossibleMatch[], int, int) 
line: 590
	MatchLocator.locateMatches(JavaProject, PossibleMatchSet) line: 627
	MatchLocator.locateMatches(String[], IWorkspace, ICompilationUnit[]) 
line: 714
	SearchEngine.search(IWorkspace, ISearchPattern, IJavaSearchScope, 
IJavaSearchResultCollector) line: 568
	SearchEngine.search(IWorkspace, IJavaElement, int, IJavaSearchScope, 
IJavaSearchResultCollector) line: 495
	JavaSearchOperation.execute(IProgressMonitor) line: 96
	WorkspaceModifyOperation$1.run(IProgressMonitor) line: 71
	Workspace.run(IWorkspaceRunnable, ISchedulingRule, IProgressMonitor) 
line: 1555
	Workspace.run(IWorkspaceRunnable, IProgressMonitor) line: 1572
	JavaSearchOperation(WorkspaceModifyOperation).run(IProgressMonitor) 
line: 85
	ModalContext$ModalContextThread.run() line: 101
Daniel, can you please comment on this. I think this is in since 1.0. I don't 
really understand how this can happen at all.
Do you have a test case?
Was there some other error in .log?
The view should be opened in IJavaSearchResultCollector.aboutToStart().

One scenario where this could happen is when J Core does not send aboutToStart
for some reason (exception?) but then continues sending
IJavaSearchResultCollector.accept.

I now protect that call but this is just a workaround and not a regression on
the J Search UI side. Not a must-fix for M4.

Moving to J Core to comment about the mentioned scenario.


until you found a case where JDTCore is guilty, please keep it on your end.
I was just asking for comment.
I added a null-check on the UI side.


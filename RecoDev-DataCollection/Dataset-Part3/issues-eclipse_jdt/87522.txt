When eclipse reports an unused variable and offers to remove the variable and
all assignments without side effects, it can have side effects.   For instance

MyDialog d;
d = new MyDialog();

In this case it would remove the constructor "new MyDialog()".  However the
constructor could be doing something useful, such as displaying itself.  Thus
removing it will have side effects.  If it just changed it to this:

new MyDialog();

it would not have side effects.

When eclipse reports an unused variable and offers to remove the variable and
all assignments without side effects, it can have side effects.   For instance

MyDialog d;
d = new MyDialog();

In this case it would remove the constructor "new MyDialog()".  However the
constructor could be doing something useful, such as displaying itself.  Thus
removing it will have side effects.  If it just changed it to this:

new MyDialog();

it would not have side effects.
Quickfix lives in JDT/UI
*** Bug 89369 has been marked as a duplicate of this bug. ***
*** Bug 100268 has been marked as a duplicate of this bug. ***
*** Bug 104482 has been marked as a duplicate of this bug. ***
*** Bug 102976 has been marked as a duplicate of this bug. ***
*** Bug 112612 has been marked as a duplicate of this bug. ***
*** Bug 165797 has been marked as a duplicate of this bug. ***
Created attachment 61430
Does not remove Initializer

Initializers are not removed if they are method invocations or constructors. Single line statements are split up to preserve correct order of initialization. Fields are always removed.
Created attachment 61522
Added old way as alternative if applicable

Proposes 2 quickfixes if situation is ambigous. The remove initializer is first because it is most common.
Created attachment 61576
Different approach

There are always 2 choices. First do everything without side-effect, second remove all assignments completly.
Created attachment 61685
Slight modifications

Some internal responsibility cleanup
patch released > 20070327

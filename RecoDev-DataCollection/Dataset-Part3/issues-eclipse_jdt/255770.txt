A very nice feature of the new Eclispe version is the different colouring of variables when they are just read or written. So I marked read occurrences as green markers and write occurrences as red markers. Hunting a bug in my code, I couldn't find the problem where a variable suddenly changed its value as I just inspected the red markers. Finally after step-by-step debugging I noticed another line in the code that writes the variable

   pDest.amount = pSource.amount;

These are 2 different instances pDest, pSource from the same class. Now, the variable "amount" is colored red on the left side and green on the right site - but the occurences marker just shows a green marker - probably because the red write marker is covered by the green (?) ...

A very nice feature of the new Eclispe version is the different colouring of variables when they are just read or written. So I marked read occurrences as green markers and write occurrences as red markers. Hunting a bug in my code, I couldn't find the problem where a variable suddenly changed its value as I just inspected the red markers. Finally after step-by-step debugging I noticed another line in the code that writes the variable

   pDest.amount = pSource.amount;

These are 2 different instances pDest, pSource from the same class. Now, the variable "amount" is colored red on the left side and green on the right site - but the occurences marker just shows a green marker - probably because the red write marker is covered by the green (?) ...
Cannot reproduce using 3.5 M3. If you still see this there please provide more detailed steps, especially with more than just one line of source.
Well you just need 1 line as the same variable is in 1 line: one time for reading (right side) and 1 time for writiung (left side). I guess it depends on how many lines of code the editor shows. Just add sevral hundred remark lines above and below - this is about the original source here. Perhaps you don't see this behaviour because with view lines, both markers are displayed separately.
>Perhaps you don't see this behavior because 
Yes I don't see it and I don't have time to play around that's why we need a step-by-step example if want this to get investigated.
Here's a simple test:

1. File > New > File

2. paste this code:

----------------start below: ------------
/*
 *     Class: $Workfile:$
 *   Version: $Revision:$
 *      Date: $Date:$
 * Copyright: iComps InfoComponents Software + Service GmbH
 */
package de.icomps.rat;

public class test {
    private String thisIsATest = null;
    
    
    public void test() {
        thisIsATest = thisIsATest + "."; //select here!!!
    }

}
----------------end above -------------------

3. click on thisIsATest int the test() method.

=> you will see 1 red marker for the initialization (=> okay).

But you will just see 1 green marker for the code line in method test()! And this hides the writing of the variable in this method.
Are you talking about the overview ruler (at the right of the editor area)? If yes, I'd consider this a dup of bug 163813.
Yeah, I guess that's what he talks about. If so, the problem is that they are declared to be on the same presentation layer. There's bug 80089 to give the user more control over this.

But given that write it more important than read occurrence I can fix this concrete issue.
Fixed in HEAD.
Available in builds > N20081119-2000.

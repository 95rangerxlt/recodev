Markers are added for wrong build paths. However these
	markers only seem to be updated (added/removed) if I
	change the build path and not if
	- autobuild
	- build the project
	- rebuild the project

	This leads to problems if I restart Eclipse and some of
	the JARs have gone: there is no indication about the error.
	I can add Java files and rebuild them but no marker will be
	generated telling me about the wrong build path.

	As far as I can remember it works when doing a catch up (but that
	should be verified) and some of the JARs have gone ==> the build
	path seems to be updated via code. So instead of validating the build
	path on each (re-build), it could at least be validated on startup.


NOTES:

PM (9/13/2001 11:15:32 AM)
	A build action will not cause the build path to become any better, this is why it does not cause them to be refreshed.
	Currently, the only way to get these markers to be refreshed is whenever modifying the build path.

	When opening a project, we should go for a build path marker refresh, in particular the startup would cause a refresh (or close/reopen a project).
	Ideally, we would want to also hook into the "refresh from local" mechanism, so as to get an indication that something outside the workspace has changed.
	
	A fullbuild might also be a candidate for forcing to refresh these markers...

Markers are added for wrong build paths. However these
	markers only seem to be updated (added/removed) if I
	change the build path and not if
	- autobuild
	- build the project
	- rebuild the project

	This leads to problems if I restart Eclipse and some of
	the JARs have gone: there is no indication about the error.
	I can add Java files and rebuild them but no marker will be
	generated telling me about the wrong build path.

	As far as I can remember it works when doing a catch up (but that
	should be verified) and some of the JARs have gone ==> the build
	path seems to be updated via code. So instead of validating the build
	path on each (re-build), it could at least be validated on startup.


NOTES:

PM (9/13/2001 11:15:32 AM)
	A build action will not cause the build path to become any better, this is why it does not cause them to be refreshed.
	Currently, the only way to get these markers to be refreshed is whenever modifying the build path.

	When opening a project, we should go for a build path marker refresh, in particular the startup would cause a refresh (or close/reopen a project).
	Ideally, we would want to also hook into the "refresh from local" mechanism, so as to get an indication that something outside the workspace has changed.
	
	A fullbuild might also be a candidate for forcing to refresh these markers...
PRODUCT VERSION:
	0.135



A full build would be a good opportunity to refresh the buildpath markers.

Look at JavaProject.getResolvedClasspath implementations, one allows to tell 
whether we want to refresh the markers, it should be used when doing a full 
build (when the classpath changes, it will also cause a full build).
Changed JavaProject.getExpandedClasspath(boolean, boolean) to flush the old 
markers & recompute the new ones, and also changed the NameEnvironment to ask 
the JavaProject to generate the problem markers.

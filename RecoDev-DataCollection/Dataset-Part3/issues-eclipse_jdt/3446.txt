AK (10/10/2001 10:55:06 AM)
package p;
class B{
	void m(){
	}
	void f(){
		m();
	}
}
class A extends B{
	void m(){
	}
}

. i have a pointer to A::m()
. i ask for superTypeHierarchy on A  (temp is called superTypes)
. then, i search for declarations of m in the hierarchy of A
. i find 2 matches - one is reported in B (temp is called typeB)
. i call superTypes.contains(typeB)
	and it incorrectly returns false because although superTypes does contain a type B it;s parent is a WorkingCopy, 
	while the B i have in typeB has a parent that is a CopilationUnit, so they're not equal and the method returns false.



NOTES:

AK (10/10/2001 10:55:06 AM)
package p;
class B{
	void m(){
	}
	void f(){
		m();
	}
}
class A extends B{
	void m(){
	}
}

. i have a pointer to A::m()
. i ask for superTypeHierarchy on A  (temp is called superTypes)
. then, i search for declarations of m in the hierarchy of A
. i find 2 matches - one is reported in B (temp is called typeB)
. i call superTypes.contains(typeB)
	and it incorrectly returns false because although superTypes does contain a type B it;s parent is a WorkingCopy, 
	while the B i have in typeB has a parent that is a CopilationUnit, so they're not equal and the method returns false.



NOTES:
PRODUCT VERSION:
	jcore 203_08


This issue should be along the same line as 
http://bugs.eclipse.org/bugs/show_bug.cgi?id=7625

Type hierarchy can now be created on types coming from a working copy.
Verified that Adam's test case now works.

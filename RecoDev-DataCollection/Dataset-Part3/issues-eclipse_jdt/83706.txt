When indicating the "Javadoc location" for a JAR file (a library), it will
interesting to give Eclipse a location inside the workspace, when exactly the
same logic that "Java Source Attachement" (give either a folder or a zip file).

When indicating the "Javadoc location" for a JAR file (a library), it will
interesting to give Eclipse a location inside the workspace, when exactly the
same logic that "Java Source Attachement" (give either a folder or a zip file).
This is important for multi platform development environment (absolute paths are platform dependent).
I think the severity of the bug should be higher than enhancement.
> I think the severity of the bug should be higher than enhancement.
I agree. In my team, we cannot integrate the javadoc of 3rd party jars in Eclipse because we check-in the .classpath. Since workspace relative path are not supported for javadoc archive locations, we would check-in a location specific to a developer.
That's very sad... Just not usable.

I have to agree also, this is not just a little annoyance or enhancement request, it is a serious flaw.  The consequence of this is that most of our developers don't have easy enough access to javadoc for third-party jars or even our own jars that are used by a different project team.
This is too late for 3.2, but should definitely be considered for 3.3.
Post 3.2
Is 'later' now ? It is post 3.2...
Reopening
*** Bug 162568 has been marked as a duplicate of this bug. ***
I would be happy to see it in 3.3 !
This might be a limitation of the UI side.
I believe a url like:
jar:platform:/resource/projectName/docName.zip!/

should work.
Moving to JDT/UI for comment
Problem for us is that help.ui, which we use to show the external Javadoc in a browser does not yet support the platform:/ protocol. I filed bug 174201.
fixed > 20070215

Added a control to specify whether the archive path is a external or workspace path.
When choosing a wokspace path, we configuring the URL as suggested in comment 10.
Note that the URL still contains the project name. But that's the best we can do.
*** Bug 177919 has been marked as a duplicate of this bug. ***

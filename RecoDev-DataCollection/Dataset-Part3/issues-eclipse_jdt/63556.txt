class Alpha<A,B,C extends java.util.List<A>> {}

Under jdk1.5.0b1 this class compiles correctly. Under cheetah 0.5 it gives
following error:
"A cannot be resolved to a type"
This happens only if there is a extra parameter between specialized type and
originating type - for example, in above case, following versions will work
correctly under cheetah:
class Alpha<A,C extends java.util.List<A>,B> {}
class Alpha<B,A,C extends java.util.List<A>> {}

class Alpha<A,B,C extends java.util.List<A>> {}

Under jdk1.5.0b1 this class compiles correctly. Under cheetah 0.5 it gives
following error:
"A cannot be resolved to a type"
This happens only if there is a extra parameter between specialized type and
originating type - for example, in above case, following versions will work
correctly under cheetah:
class Alpha<A,C extends java.util.List<A>,B> {}
class Alpha<B,A,C extends java.util.List<A>> {}
Added regression test GenericTypeTest#test209.
Problem is in parser, which omits first type parameter declaration 'A' in 
constructed AST.


Fixed and released in 1.5 stream.
Reenabled the test 209.

Generated file dependencies are supposed to be serialized to a file, so that dependencies persist across editing sessions.

This file is not getting written in the case where only Java 6 processors exist on the factory path.

The problem is that GeneratedFileManager.writeState() is called from APTDispatchRunnable.build(BuildEnv), which is short-circuited if there are no factories.  It gets its list of factories passed in from AptCompilationParticipant.processAnnotations(), and the list contains only Java 5 factories.

This is present in 3.3.1 and HEAD, but is not a regression, because in 3.3.0 we didn't handle file dependencies for Java 6 files at all.

Generated file dependencies are supposed to be serialized to a file, so that dependencies persist across editing sessions.

This file is not getting written in the case where only Java 6 processors exist on the factory path.

The problem is that GeneratedFileManager.writeState() is called from APTDispatchRunnable.build(BuildEnv), which is short-circuited if there are no factories.  It gets its list of factories passed in from AptCompilationParticipant.processAnnotations(), and the list contains only Java 5 factories.

This is present in 3.3.1 and HEAD, but is not a regression, because in 3.3.0 we didn't handle file dependencies for Java 6 files at all.
Note that this will not normally manifest itself in JUnit tests on a dev workspace, because the Java 5 processors in apt.tests are on the factory path by default.  However, it would show up in releng tests, where only one test plug-in at a time is in the launch configuration.  See FilerTests in apt.pluggable.tests for an example of how to work around this discrepancy.
Created attachment 78805
proposed patch

Proposed patch always writes the GeneratedFileMap state, even if no Java 5 processing is performed.  With this patch, state is correctly serialized across sessions whether only Java 5, only Java 6, or a mix of processors is active in a project.
Jess, please review for inclusion in 3.3.2
+1 for inclusion in 3.3.2.
Released for 3.4M2 and 3.3.2.

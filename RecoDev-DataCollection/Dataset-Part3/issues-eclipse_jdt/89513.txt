I20050329-2000

Consider this type:

class Generic<T> {
	T fT;
}

- choose Source>Generate delegate method
> expected: delegates for 'hashcode', 'toString' and 'equals' are proposed
< actual: dialog box telling me that the operation is not possible on type variables

Now consider this type:

class Generic<T extends Object> {
	T fT;
}

> expected: delegates for 'hashcode', 'toString' and 'equals' are proposed
< actual: the only proposed method is 'hashcode'


Now consider this type: 

class Generic3<T extends Number> {
	T field;
}

> expected: delegates for the 'hashcode', 'toString' and 'equals' as well as
'intValue', 'doubleValue', 'floatValue' etc. are proposed
< actual: the only proposed methods are the ones from Object and 'intValue'

I20050329-2000

Consider this type:

class Generic<T> {
	T fT;
}

- choose Source>Generate delegate method
> expected: delegates for 'hashcode', 'toString' and 'equals' are proposed
< actual: dialog box telling me that the operation is not possible on type variables

Now consider this type:

class Generic<T extends Object> {
	T fT;
}

> expected: delegates for 'hashcode', 'toString' and 'equals' are proposed
< actual: the only proposed method is 'hashcode'


Now consider this type: 

class Generic3<T extends Number> {
	T field;
}

> expected: delegates for the 'hashcode', 'toString' and 'equals' as well as
'intValue', 'doubleValue', 'floatValue' etc. are proposed
< actual: the only proposed methods are the ones from Object and 'intValue'
Tobias, since we are using bindings now the information should be available.
Fixed > 20050504

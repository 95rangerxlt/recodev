I would like to color annotations in the same way as I can color javadoc tags.
For example, in the following snippet

  @Retention(RetentionPolicy.RUNTIME)
  @Target(ElementType.METHOD)

I would like to have control over the rendering of Retention and Target

I would like to color annotations in the same way as I can color javadoc tags.
For example, in the following snippet

  @Retention(RetentionPolicy.RUNTIME)
  @Target(ElementType.METHOD)

I would like to have control over the rendering of Retention and Target
Additionally, the word rule for simple method name highlighting incorrectly 
colorizes @Annotation as method name because of the following opening 
parenthesis.
Basic color support works now (I20050112-1200). Open issues:

@Test.A("1")
class Test {
    @A(value="2")
    @interface A {
        String value();
    }
}

- @A("2"): correctly colored
- @Test.A("1"):
    @Test correctly colored as annotation;
    .A colored as method name (should be colored as annotation)
- value: colored as method name (should be colored as method declaration)
fixed: 

- qualified annotation names or inner annotation types correctly highlighed
(@Test.A)
- method declarations rendered as such (instead of method name)
- element=value pairs: 
  - fixed rendering of the element name as abstract method by default
  - added semantic highlighting for element names

References to Enums, literals etc in annotation declarations or element-value
pairs are as is. No intention to change that.

We don't handle comments interspersed with the annotation declaration, and
probably never will :-):

    @ /* comment */ Target

is not rendered correctly, see bug 82452.
avail. > 20050118

NPE is generated by org.eclipse.jdt.apt.core.internal.env.BaseProcessorEnv$BindingRequestor's acceptBinding(String bindingKey, IBinding binding) if 'binding' is null comming in.  

Looks like the if block on the check for null ought be for both lines in the method. (i.e. missing {} ).

public void acceptBinding(String bindingKey, IBinding binding)
{
  if( binding != null )
	_result = binding;
	_kind = binding.getKind();
}

NPE is generated by org.eclipse.jdt.apt.core.internal.env.BaseProcessorEnv$BindingRequestor's acceptBinding(String bindingKey, IBinding binding) if 'binding' is null comming in.  

Looks like the if block on the check for null ought be for both lines in the method. (i.e. missing {} ).

public void acceptBinding(String bindingKey, IBinding binding)
{
  if( binding != null )
	_result = binding;
	_kind = binding.getKind();
}
Hi, Kosta & Scott.  I'll try to give that a look over the weekend.  What version do you need a fix in?
Hi Walter,
Looking to get this in Ganymede.
Thanks.
Eclipse 3.4.1 RC1 is about to be declared in the next couple days, so it's probably too late to get a fix in for that; 3.4.2 I can probably manage.  I'll attach any fix I come up with to this bug, so that you can adopt it sooner if need be.
What is the scenario where this occurs?  Got a stack trace for me?
Never mind, I found a trivial repro.  I'm currently CVS-challenged (till Tuesday) so I'll put it in the comment:

In MirrorDeclarationTests.testEnvFactory, add the following code:

    TypeDeclaration bogus = env.getTypeDeclaration("test.XXX");
    assertTrue(null == bogus);

This test should pass, but instead NPE's in the reported code.

The fix is similarly obvious.  I will try to get it into 3.4.1, but that will require PMC approval which may not be forthcoming; failing that, it will be in 3.4.2.
Created attachment 111372
Proposed patch for head

Proposed patch for HEAD - includes regression test.
Created attachment 111373
Proposed patch for 3.4.1

Proposed patch for 3.4.x - identical to HEAD patch except for version numbers in plugin manifest
Hi Philippe.  I would like to get this into Eclipse 3.4.1 if there is still time; if not, then 3.4.2.  Please let me know what you think.

I believe the bug is serious (simply calling a public APT API with the name of a nonexistent type causes the NPE), and the bug fix is safe (all it is doing is putting a null check on a line of code that would otherwise have NPE'ed).

Thanks!
+1 for 3.4.1rc2
Fixed in 3.4.x maintenance branch (for 3.4.1 RC2).  Will also fix in HEAD.
Fixed in HEAD.

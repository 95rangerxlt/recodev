Method rename and method signature could be combined, to save 2 steps when both
signature and name are changed.

Method rename and method signature could be combined, to save 2 steps when both
signature and name are changed.
I would not remove rename, but we could add changing the method name to change 
method signature.

Adam, any comments ?


*** Bug 37960 has been marked as a duplicate of this bug. ***
I also don't think removing rename would be a good idea, since renaming is 
much more common than changing signatures; it's also used for renaming other
types as well (packages, fields, classes) and so would be decidedly 'missing'
if it just disappeared from the menu.

However, adding rename functionality to the change signature would definately
be an improvement since this would allow both to be done from one dialog if
both were required.
Adam, any opinion ?
yes, we need to find a way to combine the two but leave rename as well.
given that rename is now participant-enabled i'm not sure how realistic that 
(comment 5) is 
*** Bug 39310 has been marked as a duplicate of this bug. ***
unfortunately, i won't be able to do this for M3 given my time constraints
back to inbox for re-assignment
*** Bug 23878 has been marked as a duplicate of this bug. ***
I have a request which probably belongs with the rest of these.

Sometimes, I'd like to be able to change a signature and automatically leave a
deprecated stub behind so that I don't break other callers.

For eg, suppose I refactor 

    OldF old_f(X x,Y y) {...} 

to

    NewF new_f(Y y,Z z) {...}

I'd like to be able to automatically leave behind a stub, something like

    /** @deprecated Use new_f(Y y,Z z) instead */
    OldF old_f(X unused,Y y){
         return (OldF) new_f(y, null);
    }

(-: My request sounded much simpler before I tried to type an example. :-)
This got addressed for 3.0.

Regarding the deprecated stub (comment #11). There is separate PR for this.
I've searched all over and could not find anything like comment #11. Could you
point me in the right direction?
Brad,

comment #11 refers to the 11th comment in this bug report.
Sorry, I guess I wasn't too clear. I can't find any other bugzilla bugs that
look like what is described in comment #11.

For rename https://bugs.eclipse.org/bugs/show_bug.cgi?id=70135.

From the 3.1 plan (uncommitted item):

Support creation of delegate methods to provide API compatibility (change method
signature, rename, move, ...)
70135 suggests leaving the old function in place, with a deprecated tag.

comment #11 suggests replacing the body of the old function with a stub that
calls the new function, a more difficult and useful option that I don't believe
has been implemented.

I'm happy to have a go at adding this.  I haven't worked on eclipse before, so
if anyone is in a hurry to get this functionality implemented, I'm not the best
person, but I'm prepared to learn.
70315 simply doesn't mention to delegate to the new method. But without this the
whole function would not make any sense since it wouldn't sematic preserving for
clients which call the method. 

Please move the dicussion about this feature to 70315. This bug is marked as
fixed now.

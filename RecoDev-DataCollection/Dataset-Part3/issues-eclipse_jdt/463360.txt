Follow-up from bug 353472 and bug 420116: while it's great that annotations are copied, this may create redundant annotations when a @NonNullByDefault is in effect at the subtype.

To respect the purpose of @NNBD (reduce the number of annotations), we should consider this and avoid generating redundant annotations.

Follow-up from bug 353472 and bug 420116: while it's great that annotations are copied, this may create redundant annotations when a @NonNullByDefault is in effect at the subtype.

To respect the purpose of @NNBD (reduce the number of annotations), we should consider this and avoid generating redundant annotations.
New Gerrit change created: https://git.eclipse.org/r/46372
(In reply to Eclipse Genie from comment #1)
> New Gerrit change created: https://git.eclipse.org/r/46372

This change only covers the simple changes, i.e., for declaration annotations.

I've file bug 465335 (targeted 4.6) for the case of type annotations.
Gerrit change https://git.eclipse.org/r/46372 was merged to [master].
Commit: http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=1483c37e93bc423a24f004548c59ebd23545c8a0
Released for 4.5 M7.

Could not release via gerrit, since this change, too, is consuming the new API from bug 429813, which isn't yet visible in gerrit-hudson builds.


Brief description of what is changed:

Relevant clients of StubUtility2.createImplementationStub() determine an IBinding describing the current context element (most clients already have it in their hands) and pass it down.

Inside createImplementationStub() we use that binding to search for a @NonNullByDefault effective at that context position. Result is an IAnnotationBinding representing this @NonNullByDefault application.

Via getImplementationModifiers() and createParameters() we pass this annotation binding down into SubUtility2.isCopyOnInheritAnnotation(): if looking at @NonNull and @NonNullByDefault is effective, *do not* copy.

New utility methods are inserted into suitable locations:
 - ASTNodes.getEnclosingDeclaration(ASTNode)
 - Bindings.findNullnessDefault(IBinding, IJavaProject)

All locations performing "work" are guarded by checks if null-annotations are enabled.

New tests are added into tests for completion and quick assist.

That's all.

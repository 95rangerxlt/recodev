If output folder is equal to source folder, trying to open a class file shows previous content of source file.

Steps to reproduce:
1. Create new Java project. Use project folder as root for sources and class files for simplicity.
2. Create new class X.
3. Build project, X.class is generated.
4. Try to open X.class.
=> ClassFileEditor is opened for X.class showing content of X.java.
5. Modify X.java e.g. add new method.
6. Build project, X.class is regenerated.
7. Try to open X.class.
=> ClassFileEditor is opened for X.class showing previous content of X.java.

In point 4 and 7, if output folder was different than source folder, ClassFileEditor would show "Source not found" message and correct compiled content of X.java.

If output folder is equal to source folder, trying to open a class file shows previous content of source file.

Steps to reproduce:
1. Create new Java project. Use project folder as root for sources and class files for simplicity.
2. Create new class X.
3. Build project, X.class is generated.
4. Try to open X.class.
=> ClassFileEditor is opened for X.class showing content of X.java.
5. Modify X.java e.g. add new method.
6. Build project, X.class is regenerated.
7. Try to open X.class.
=> ClassFileEditor is opened for X.class showing previous content of X.java.

In point 4 and 7, if output folder was different than source folder, ClassFileEditor would show "Source not found" message and correct compiled content of X.java.
Fixed with http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=0d0cfe448a96c7d67443c790114041fde16e0df7
I tried to verify the fix using I20130115-1300 but the bug is still there.
OK, I did not do step 1 as indicated but instead used the defaults. In that scenario the bug is that it shows the source at all: projects don't have attached source and hence it should show the disassembled class file like it does with the default setup (bin/src). Showing the source as it currently does also has other issues, like a quick diff ruler which shows strange (binary) stuff.

Are there any issues for your project if we fix it that way?
Created attachment 225767
JDT Core patch
(In reply to comment #3)
> OK, I did not do step 1 as indicated but instead used the defaults. In that
> scenario the bug is that it shows the source at all: projects don't have
> attached source and hence it should show the disassembled class file like it
> does with the default setup (bin/src). Showing the source as it currently
> does also has other issues, like a quick diff ruler which shows strange
> (binary) stuff.
> 
> Are there any issues for your project if we fix it that way?

No, not showing the source for class files is fine for me.
(In reply to comment #5)
> No, not showing the source for class files is fine for me.

Thx, Szymon. Filed bug bug 398490 against JDT Core with a link to the patch.

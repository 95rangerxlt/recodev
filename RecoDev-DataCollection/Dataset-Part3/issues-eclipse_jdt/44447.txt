from junit.awtui.TestRunner#createJUnitMenu():
		MenuItem mi= new MenuItem("About...");
		mi.addActionListener(
		    new ActionListener() {
		        public void actionPerformed(ActionEvent event) {
		            about();
		        }
		    }
		);

Selecting this and pressing Ctrl+I results in a strange indentation:
		MenuItem mi= new MenuItem("About...");
		mi.addActionListener(
				new ActionListener() {
			public void actionPerformed(ActionEvent event) {
				about();
			}
		}
				);

from junit.awtui.TestRunner#createJUnitMenu():
		MenuItem mi= new MenuItem("About...");
		mi.addActionListener(
		    new ActionListener() {
		        public void actionPerformed(ActionEvent event) {
		            about();
		        }
		    }
		);

Selecting this and pressing Ctrl+I results in a strange indentation:
		MenuItem mi= new MenuItem("About...");
		mi.addActionListener(
				new ActionListener() {
			public void actionPerformed(ActionEvent event) {
				about();
			}
		}
				);
I'll get you...

One (and probably the best) solution will be to throw out our own formatting
code and just determine the reference point by backward scanning, then use the
new formatter. The hard part is the reference point anyway...

the proposed solution will not work as the formatter will possibly change the
line breaks, which we cannot use for indenting.
fixed > 20031117

20021113
found in the log

java.lang.IllegalArgumentException: Argument not valid
	at org.eclipse.swt.SWT.error(SWT.java:2166)
	at org.eclipse.swt.SWT.error(SWT.java:2110)
	at org.eclipse.jface.text.DocumentAdapter.getLine(DocumentAdapter.java
(Compiled Code))
	at org.eclipse.swt.custom.StyledText$ContentWidthCache.calculate
(StyledText.java(Compiled Code))
	at org.eclipse.swt.custom.StyledText.draw(StyledText.java(Compiled 
Code))
	at org.eclipse.swt.custom.StyledText.draw(StyledText.java(Compiled 
Code))
	at org.eclipse.swt.custom.StyledText.redrawLines(StyledText.java
(Compiled Code))
	at org.eclipse.swt.custom.StyledText.internalRedrawRange(StyledText.java
(Compiled Code))
	at org.eclipse.swt.custom.StyledText.redrawRange(StyledText.java:6098)
	at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.draw
(ProblemPainter.java(Compiled Code))
	at 
org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.handleDrawRequest
(ProblemPainter.java(Compiled Code))
	at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.disablePainting
(ProblemPainter.java:95)
	at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.updatePainting
(ProblemPainter.java:143)
	at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.access$1
(ProblemPainter.java:142)
	at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter$1.run
(ProblemPainter.java:162)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1418)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:831)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)

20021113
found in the log

java.lang.IllegalArgumentException: Argument not valid
	at org.eclipse.swt.SWT.error(SWT.java:2166)
	at org.eclipse.swt.SWT.error(SWT.java:2110)
	at org.eclipse.jface.text.DocumentAdapter.getLine(DocumentAdapter.java
(Compiled Code))
	at org.eclipse.swt.custom.StyledText$ContentWidthCache.calculate
(StyledText.java(Compiled Code))
	at org.eclipse.swt.custom.StyledText.draw(StyledText.java(Compiled 
Code))
	at org.eclipse.swt.custom.StyledText.draw(StyledText.java(Compiled 
Code))
	at org.eclipse.swt.custom.StyledText.redrawLines(StyledText.java
(Compiled Code))
	at org.eclipse.swt.custom.StyledText.internalRedrawRange(StyledText.java
(Compiled Code))
	at org.eclipse.swt.custom.StyledText.redrawRange(StyledText.java:6098)
	at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.draw
(ProblemPainter.java(Compiled Code))
	at 
org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.handleDrawRequest
(ProblemPainter.java(Compiled Code))
	at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.disablePainting
(ProblemPainter.java:95)
	at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.updatePainting
(ProblemPainter.java:143)
	at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter.access$1
(ProblemPainter.java:142)
	at org.eclipse.jdt.internal.ui.javaeditor.ProblemPainter$1.run
(ProblemPainter.java:162)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java(Compiled 
Code))
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java(Compiled Code))
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java
(Compiled Code))
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java
(Compiled Code))
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1418)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:831)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:462)
	at java.lang.reflect.Method.invoke(Native Method)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
I ran into this problem also but have been unable to reproduce the problem.  I 
did track down that redrawRange was being called with a length of -1.  This may 
be related to [Bug 26204] or to shifting code.  I ran across this bug when 
looking at that bug.
Analysing the code shows that this could happen when a problem starts in the 
middle of a line delimiter (case 2a). The other cases (in which the line length 
or the position length is -1 or smaller) are unlikely because line tracker and 
position updater code explicitly prevents this.

Starting at handleDrawRequest:268 :

paintEnd - paintStart == -1
paintEnd == paintStart - 1;
Math.min(line.getOffset() + line.getLength(), p2) 
 == Math.max(line.getOffset(), p1) - 1;

1)
line.getOffset() + line.getLength() == line.getOffset() - 1
-> line.getLength() == -1

2) 
line.getOffset() + line.getLength() == p1 - 1
if (line.getOffset() <= p1)
2a)	line.getLength() >= -1
else if (line.getOffset() > p1)
2b)	line.getLength() < -1

3) 
p2 == line.getOffset() - 1
-> line.getLength() == -1

4) p2 == p1 - 1
Math.min(offset + length, p.getOffset() + p.getLength()) 
  == Math.max(offset, p.getOffset()) - 1

4a)
offset + length == offset - 1
-> length == -1

4b)
offset + length == p.getOffset() - 1
-> no overlap

4c)
p.getOffset() + p.getLength() == offset - 1
-> no overlap

4d)
p.getOffset() + p.getLength() == p.getOffset() - 1
-> p.getLength() == -1

Added guard to code. Will not be part of M3.

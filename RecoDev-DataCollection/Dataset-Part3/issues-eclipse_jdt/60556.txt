Not sure, whether this is a bug or simply not implemented, but this code: 

    List<A> x(List<A> list)
    {
        return Collections.unmodifiableList(list);
    }

gives the following error messages:

 * The method unmodifiableList(List<? extends T>) in the type Collections is
   not applicable for the arguments (List<A>)
 * Type mismatch: cannot convert from List<T> to List<A>

The J2SDK 1.5.0b1 compiler was able to compile my code. I am using Build 
I20040428 with Cheetah04.

Not sure, whether this is a bug or simply not implemented, but this code: 

    List<A> x(List<A> list)
    {
        return Collections.unmodifiableList(list);
    }

gives the following error messages:

 * The method unmodifiableList(List<? extends T>) in the type Collections is
   not applicable for the arguments (List<A>)
 * Type mismatch: cannot convert from List<T> to List<A>

The J2SDK 1.5.0b1 compiler was able to compile my code. I am using Build 
I20040428 with Cheetah04.
Type inference did not pattern match correctly: List<? extends T> with 
List<X>, and failed to consider T as substituted with X.

Fixed. Added regression test GenericTypeTest#test152.
Fixed

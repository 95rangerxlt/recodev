org.eclipse.jdt.internal.ui.preferences.BuildPathsPropertyPage.getProject() logic is flawed.  The current scheme adapts to IJavaElement then runs the getProject() method to return the project.  

This logic requires any custom navigator content provider to have an IJavaElement adapter and a dependancy on JDT.  Proper logic could continue to check for IJavaElement adapter, but if that fails try an IProject adapter.

The issue is vissible inside the JSDT script explorer perspective with Dynamic Web Projects.  JavaScriptProject elements exist in the viewer but do not adopt to IJavaElement.  This causes the Buildpath properties page to not be visible from this perspective.  JavaScriptProject elements correctly adopt to IProject.

Suggested change:

org.eclipse.jdt.internal.ui.preferences.BuildPathsPropertyPage.getProject() goes from:

	private IProject getProject() {
		IAdaptable adaptable= getElement();
		if (adaptable != null) {
			IJavaElement elem= (IJavaElement) adaptable.getAdapter(IJavaElement.class);
			if (elem instanceof IJavaProject) {
				return ((IJavaProject) elem).getProject();
			}
					}
		return null;
	}

to:

	private IProject getProject() {
		IAdaptable adaptable= getElement();
		if (adaptable != null) {
			IJavaElement elem= (IJavaElement) adaptable.getAdapter(IJavaElement.class);
			if (elem instanceof IJavaProject) {
				return ((IJavaProject) elem).getProject();
			}
			IProject project = (IProject)adaptable.getAdapter(IProject.class);
			return project;
		}
		return null;
	}

org.eclipse.jdt.internal.ui.preferences.BuildPathsPropertyPage.getProject() logic is flawed.  The current scheme adapts to IJavaElement then runs the getProject() method to return the project.  

This logic requires any custom navigator content provider to have an IJavaElement adapter and a dependancy on JDT.  Proper logic could continue to check for IJavaElement adapter, but if that fails try an IProject adapter.

The issue is vissible inside the JSDT script explorer perspective with Dynamic Web Projects.  JavaScriptProject elements exist in the viewer but do not adopt to IJavaElement.  This causes the Buildpath properties page to not be visible from this perspective.  JavaScriptProject elements correctly adopt to IProject.

Suggested change:

org.eclipse.jdt.internal.ui.preferences.BuildPathsPropertyPage.getProject() goes from:

	private IProject getProject() {
		IAdaptable adaptable= getElement();
		if (adaptable != null) {
			IJavaElement elem= (IJavaElement) adaptable.getAdapter(IJavaElement.class);
			if (elem instanceof IJavaProject) {
				return ((IJavaProject) elem).getProject();
			}
					}
		return null;
	}

to:

	private IProject getProject() {
		IAdaptable adaptable= getElement();
		if (adaptable != null) {
			IJavaElement elem= (IJavaElement) adaptable.getAdapter(IJavaElement.class);
			if (elem instanceof IJavaProject) {
				return ((IJavaProject) elem).getProject();
			}
			IProject project = (IProject)adaptable.getAdapter(IProject.class);
			return project;
		}
		return null;
	}
This is not a bug as those projects that have the Java nature should offer such an adapter in the first place. I assume the JavaScriptProject does so, right? If not, the suggested change wouldn't help anyway as we only handle projects with the Java nature.

Having said that, the whole getProject() code can be simplified to:

private IProject getProject() {
        IAdaptable adaptable= getElement();
	return adaptable == null ? null : 
		(IProject)adaptable.getAdapter(IProject.class);
}

Fixed in HEAD.
Available in builds > N20080730-2000.
The project is a Dynamic Web Project so it does have the Java nature.  Dynamic Web Project is part of the greater webtools package and not JSDT.

Our problem is that from within the Script Explorer perspective, the project node is represented in the navigator as a JavaScriptProject object coming from the JSDT plugin.  In order for the JavaScriptProject object to adapt to IJavaElement we would incur a dependency on the JDT that doesn't already exist.

Either way I see that you did the fix.  Thanks for the quick turnaround!

-brad


*** Bug 242587 has been marked as a duplicate of this bug. ***

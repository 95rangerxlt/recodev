Eclipse Java Development Tools
Version: 3.0.2
Build id: 200503110845

Hi to all and thank for the tool, very nice work.  :)

I start Eclipse.
I open one of my java file under my only open project. (3 closed)
I expand the following.

-->private DefaultTableModel tableModel = new DefaultTableModel()
   {
      public boolean isCellEditable(int rowIndex, int mColIndex)
      {
         return false;
      }
      	//  Returning the Class of each column will allow different
      	//  renderers to be used based on Class
      public Class getColumnClass(int column)
	      {
		         return getValueAt(0, column).getClass();
	      }
   };

I select the following line and I copy it CTRL-C:
"      	//  Returning the Class of each column will allow different"
I set my cursor before the following line:
"      public boolean isCellEditable(int rowIndex, int mColIndex)"
And I hit CTRL-V. (for pasting.)

And I have this error poping up:

 ________________________________________________
| Error Executing Command                        |
|________________________________________________|
|   The command for the key you pressed failed   |
|                                                |
|   Reason:                                      |
|   / by zero                                    |
|________________________________________________|


Thanks for your time.  If you have any other questions, let me know.
Keep in mind that in other place on the same file, copy and paste work fine, 
it's only at specific place.

Ciao,
François.

Eclipse Java Development Tools
Version: 3.0.2
Build id: 200503110845

Hi to all and thank for the tool, very nice work.  :)

I start Eclipse.
I open one of my java file under my only open project. (3 closed)
I expand the following.

-->private DefaultTableModel tableModel = new DefaultTableModel()
   {
      public boolean isCellEditable(int rowIndex, int mColIndex)
      {
         return false;
      }
      	//  Returning the Class of each column will allow different
      	//  renderers to be used based on Class
      public Class getColumnClass(int column)
	      {
		         return getValueAt(0, column).getClass();
	      }
   };

I select the following line and I copy it CTRL-C:
"      	//  Returning the Class of each column will allow different"
I set my cursor before the following line:
"      public boolean isCellEditable(int rowIndex, int mColIndex)"
And I hit CTRL-V. (for pasting.)

And I have this error poping up:

 ________________________________________________
| Error Executing Command                        |
|________________________________________________|
|   The command for the key you pressed failed   |
|                                                |
|   Reason:                                      |
|   / by zero                                    |
|________________________________________________|


Thanks for your time.  If you have any other questions, let me know.
Keep in mind that in other place on the same file, copy and paste work fine, 
it's only at specific place.

Ciao,
François.
*** Bug 90017 has been marked as a duplicate of this bug. ***
François, thanks for your kind words. Looks like you're using the Java editor
with enable folding, right? Could you share the file that causes this?
Created attachment 19465
Just a sample file to show the problem.

The file is alot smaller, but the problem remain at the same place.
Salut Daniel,

I've attach the file...with some modification.  But the problem remain at the 
same place.  And yes folding is enable.

Thanks.

Ciao,
François.
I'm currenly looking at the file that I just send you and it's not very well 
indented.  The only thing I change in the preferences is the "Displayed tab 
width", I set it to 0 (zero) at the beginning of the project.  Just to let you 
know.
The important part here is to set the display tab with to 0.

Here's the .log:

java.lang.ArithmeticException: / by zero
at
org.eclipse.jdt.internal.ui.text.java.JavaAutoIndentStrategy.computeVisualLength(JavaAutoIndentStrategy.java:826)
at
org.eclipse.jdt.internal.ui.text.java.JavaAutoIndentStrategy.subtractIndent(JavaAutoIndentStrategy.java:738)
at
org.eclipse.jdt.internal.ui.text.java.JavaAutoIndentStrategy.smartPaste(JavaAutoIndentStrategy.java:656)
at
org.eclipse.jdt.internal.ui.text.java.JavaAutoIndentStrategy.customizeDocumentCommand(JavaAutoIndentStrategy.java:1017)
at org.eclipse.jface.text.TextViewer.customizeDocumentCommand(TextViewer.java:3234)
at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.customizeDocumentCommand(CompilationUnitEditor.java:248)
at org.eclipse.jface.text.TextViewer.handleVerifyEvent(TextViewer.java:3256)
at
org.eclipse.jface.text.source.projection.ProjectionViewer.handleVerifyEvent(ProjectionViewer.java:1175)
at
org.eclipse.jface.text.TextViewer$TextVerifyListener.verifyText(TextViewer.java:347)
at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:193)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:796)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)
at org.eclipse.swt.widgets.Widget.notifyListeners(Widget.java:613)
at org.eclipse.swt.custom.StyledText.modifyContent(StyledText.java:5571)
at org.eclipse.swt.custom.StyledText.sendKeyEvent(StyledText.java:6441)
at org.eclipse.swt.custom.StyledText.paste(StyledText.java:5638)
at org.eclipse.jface.text.TextViewer.doOperation(TextViewer.java:3417)
at org.eclipse.jface.text.source.SourceViewer.doOperation(SourceViewer.java:757)
at
org.eclipse.jface.text.source.projection.ProjectionViewer.doOperation(ProjectionViewer.java:1410)
at
org.eclipse.jdt.internal.ui.javaeditor.JavaSourceViewer.doOperation(JavaSourceViewer.java:152)
at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor$AdaptedSourceViewer.doOperation(CompilationUnitEditor.java:199)
at
org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doPasteWithImportsOperation(ClipboardOperationAction.java:432)
at
org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:254)
at
org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction$1.run(ClipboardOperationAction.java:225)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
at
org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:223)
at org.eclipse.jface.action.Action.runWithEvent(Action.java:881)
at org.eclipse.ui.commands.ActionHandler.execute(ActionHandler.java:143)
at org.eclipse.ui.internal.commands.Command.execute(Command.java:132)
at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.executeCommand(WorkbenchKeyboard.java:453)
at org.eclipse.ui.internal.keys.WorkbenchKeyboard.press(WorkbenchKeyboard.java:871)
at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.processKeyEvent(WorkbenchKeyboard.java:912)
at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.filterKeySequenceBindings(WorkbenchKeyboard.java:530)
at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.access$2(WorkbenchKeyboard.java:478)
at
org.eclipse.ui.internal.keys.WorkbenchKeyboard$1.handleEvent(WorkbenchKeyboard.java:243)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
at org.eclipse.swt.widgets.Display.filterEvent(Display.java:741)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:795)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:820)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:805)
at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1734)
at org.eclipse.swt.widgets.Control.sendKeyEvent(Control.java:1730)
at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:3067)
at org.eclipse.swt.widgets.Control.windowProc(Control.java:2970)
at org.eclipse.swt.widgets.Display.windowProc(Display.java:3339)
at org.eclipse.swt.internal.win32.OS.CallWindowProcW(Native Method)
at org.eclipse.swt.internal.win32.OS.CallWindowProc(OS.java:1397)
at org.eclipse.swt.internal.BidiUtil.windowProc(BidiUtil.java:647)
at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:1473)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2430)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1377)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1348)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:254)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:141)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:96)
at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:335)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:273)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:129)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:324)
at org.eclipse.core.launcher.Main.basicRun(Main.java:185)
at org.eclipse.core.launcher.Main.run(Main.java:704)
at org.eclipse.core.launcher.Main.main(Main.java:688)

Fixed in HEAD (JavaIndenter, CommentFormattingStrategy, JavaAutoIndentStrategy).
Available in builds > 20050404

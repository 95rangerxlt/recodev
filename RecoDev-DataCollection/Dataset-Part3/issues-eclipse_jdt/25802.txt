I love the new tab-out-of-quotes (t-o-o-q)and auto-complete parens features in
2.1-M2 and I'd like to see the tab-out functionality expanded to include
parentheses.  Tabs (as a spacer) don't have any utility for me inside
parentheses, and since using the t-o-o-q, I found myself hitting the tab key to
get out of my paren block once out of the quotes.  For example, tabbing ([\t])
moves the cursor to the caret:

     logger.debug("foo[\t]" )
                           ^
hitting the tab key her should move the cursor here:

     logger.debug("foo"[\t])
                            ^

I don't have a clue as to the effort involved, and thanks for the great work so far.

I love the new tab-out-of-quotes (t-o-o-q)and auto-complete parens features in
2.1-M2 and I'd like to see the tab-out functionality expanded to include
parentheses.  Tabs (as a spacer) don't have any utility for me inside
parentheses, and since using the t-o-o-q, I found myself hitting the tab key to
get out of my paren block once out of the quotes.  For example, tabbing ([\t])
moves the cursor to the caret:

     logger.debug("foo[\t]" )
                           ^
hitting the tab key her should move the cursor here:

     logger.debug("foo"[\t])
                            ^

I don't have a clue as to the effort involved, and thanks for the great work so far.
Here here. I was just thinking about this the other day. Especially considering
how templates work, it's rather confusing that you can't tab (especially between
the parts of a for declaration). Is there anyone out there that actually wants
to insert a tab in the middle of a parameter list or for declaration?

mike

I find myself hitting tab-tab, expecting to jump out of a linked position and 
then to the end of the paren, as described in this enhancement request. 

Would you consider this feature if a patch were submitted?

-Andrew
Created attachment 2944
Patch to use Tab to navigate to the outside of the matching, enclosing parenthesis 


This patch does the following:	If the user types '\t', it determines if they
are in a parenthetical code block that does not span multiple lines.  If they
are, it moves the cursor to the right of the appropriate closing paren.  

It does not affect the usage of tab at the begining of the line, if they have a
selection, or if they are in a String literal.	Limiting the scope to one line
also prevents usurping control from the user when they may want a tab for
formatting purposes on line-split statements. 

There is also a special case to move the right of the '{' if that is all that
remains on the line (thus if you continue to hit tab from inside a conditional
statement or loop you will eventually reach the end of the line, where you can
hit enter and start coding the body of the conditional or loop.  

This patch does not include a preference, but adding one should be trivial.  

if ( (""<TAB>.equals(""))<GOES HERE> ) {
}

if ( ("".equals(""<TAB>)<GOES HERE>) ) {
}

if ( ("".equals("") )<TAB> {<GOES HERE>
}

-Andrew

I have modified the behavior a little after experimenting with this.  TAB will 
now move you to the next logical position, not restricted to matching parens 
and the special case of "{".  If no matching paren is found, it will move the 
cursor to the right of the next ")", "{", or ";" character.  If none is found, 
it will move to the end of the line.  Tab at the begining or end of a line 
works normally.  Shift-Tab works as it always has (inserts a Tab), which means 
it is always possible to insert a tab if you wanted to for some reason.  

The previous comments all hold true, but Tab navigation now works in more cases 
(e.g. by going to the end of the line if no ")" or "{" is found). 

CVS patch coming soon, but the code is also here (TabNavigator) 
http://sourceforge.net/project/showfiles.php?group_id=58078&release_id=135116

-Andrew
I've been using Andrew's patch for a little while (on M4), and it perfectly
addresses the functionality expected by this feature request.  The enhanced Tab
navigation is completely intuitive.
The original request (getting out of nested parens, templates etc.) has been
fixed a while ago. 

Tab navigation is not implemented - if you still want this, please file a new
bug report.

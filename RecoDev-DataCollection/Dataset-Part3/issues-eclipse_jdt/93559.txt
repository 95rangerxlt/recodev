The decision has been made to make ResourceMapping and it's supporting classes 
non-API. Hence, these classes are being moved to an internal package. For now 
we have copied them to the internal package
(org.eclipse.core.internal.resources.mapping) to give JDT a chance to adjust 
to the change. I will attach a patch that changes JDT to reference the classes 
in their new package. Pleaee apply this patch ASAP so we can finish the move 
on the Core/UI/Team/CVS plugins.

The decision has been made to make ResourceMapping and it's supporting classes 
non-API. Hence, these classes are being moved to an internal package. For now 
we have copied them to the internal package
(org.eclipse.core.internal.resources.mapping) to give JDT a chance to adjust 
to the change. I will attach a patch that changes JDT to reference the classes 
in their new package. Pleaee apply this patch ASAP so we can finish the move 
on the Core/UI/Team/CVS plugins.
Created attachment 20646
Patch to org.eclipse.jdt.ui
I should clearify that the classes in question are being made non-API for 3.1 
with the expectation that they will become API in 3.2 (i.e. it is to be viewed 
as provisional API). Therefore, we still intend to support ResourceMappings in 
the CVS plugin.
Given that HEAD must be kept viable for nightly builds, please release early 
in the day to give Ottawa enough time to release the rest of the required 
changes.
Since we don't have a nightly build for today I am not releasing this. Otherwise
I would force everybody to use core.resources from HEAD which we normally don't
do. As soon as there is a new nightly build containing the changes I will
release the patch
Created attachment 20675
Patch to make copy processor internal again
Created attachment 20676
Patch to make copy processor internal again
I have released the changes. In addition to the patch I made the id for the copy
processor, which referred to resource mapping in its spec, internal as well.

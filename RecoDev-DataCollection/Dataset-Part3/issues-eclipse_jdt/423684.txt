I previously reported this to the openjdk but it turns out it works correctly when compiled with javac: https://bugs.openjdk.java.net/browse/JDK-8029707

The problem exists only with Eclipse compiled classes:
Eclipse Version: 4.3.1
Build id: M20130911-1000

Ubuntu 12.10 32bits
Java(TM) SE Runtime Environment (build 1.8.0-ea-b118)

Given a package private class with a public method and a public subclass that inherits the public method, if we try to use the inherited public method using a lambda expression like:
c.forEach(subclass::inheritedMethod);

we get an java.lang.IllegalAccessError

STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :
Considering the following scenario:
A package 'mypackage' containing a package private class called MyPackagePrivateBaseClass:
class MyPackagePrivateBaseClass {

    public void doSomething(String input) {
        System.out.println(input);
    }
}
and a public subclass called MyPublicClass:
public class MyPublicClass extends MyPackagePrivateBaseClass {
}

If I try to access the inherited public method 'doSomething' from a class in a different package using a lambda expression I get a Exception in thread "main" java.lang.IllegalAccessError: tried to access class mypackage.MyPackagePrivateBaseClass from class Test
	at Test.doesNotWork(Test.java:37)
	at Test.main(Test.java:31)


public class Test {
    public static void main(String[] args) {
        doesWork();
        doesNotWork();
    }

    public static void doesNotWork() {
        MyPublicClass victim = new MyPublicClass();
        List<String> items = Arrays.asList("first", "second", "third");
        items.forEach(victim::doSomething); //illegal access error here
    }

    public static void doesWork() {
        MyPublicClass victim = new MyPublicClass();
        List<String> items = Arrays.asList("first", "second", "third");
        for (String item : items) {
            victim.doSomething(item);
        }
    }
}

I previously reported this to the openjdk but it turns out it works correctly when compiled with javac: https://bugs.openjdk.java.net/browse/JDK-8029707

The problem exists only with Eclipse compiled classes:
Eclipse Version: 4.3.1
Build id: M20130911-1000

Ubuntu 12.10 32bits
Java(TM) SE Runtime Environment (build 1.8.0-ea-b118)

Given a package private class with a public method and a public subclass that inherits the public method, if we try to use the inherited public method using a lambda expression like:
c.forEach(subclass::inheritedMethod);

we get an java.lang.IllegalAccessError

STEPS TO FOLLOW TO REPRODUCE THE PROBLEM :
Considering the following scenario:
A package 'mypackage' containing a package private class called MyPackagePrivateBaseClass:
class MyPackagePrivateBaseClass {

    public void doSomething(String input) {
        System.out.println(input);
    }
}
and a public subclass called MyPublicClass:
public class MyPublicClass extends MyPackagePrivateBaseClass {
}

If I try to access the inherited public method 'doSomething' from a class in a different package using a lambda expression I get a Exception in thread "main" java.lang.IllegalAccessError: tried to access class mypackage.MyPackagePrivateBaseClass from class Test
	at Test.doesNotWork(Test.java:37)
	at Test.main(Test.java:31)


public class Test {
    public static void main(String[] args) {
        doesWork();
        doesNotWork();
    }

    public static void doesNotWork() {
        MyPublicClass victim = new MyPublicClass();
        List<String> items = Arrays.asList("first", "second", "third");
        items.forEach(victim::doSomething); //illegal access error here
    }

    public static void doesWork() {
        MyPublicClass victim = new MyPublicClass();
        List<String> items = Arrays.asList("first", "second", "third");
        for (String item : items) {
            victim.doSomething(item);
        }
    }
}
Created attachment 238238
Test Case

Test Case:

Hi Andrea,
I have uploaded the test case. I do not encounter any errors/warnings.
Could you please try out the latest build to check if you still see the same issue. 

Platform Tested on: Windows.

Thanks
Hi Shankha,
I investigated a little more and I still have the issue on Ubuntu 12.10.
I updated to the latest version using what is described here: http://wiki.eclipse.org/JDT/Eclipse_Java_8_Support_%28BETA%29 and I got the latest org.eclipse.jdt.core_3.9.2.v20131212-0103_BETA_JAVA8.jar
I downloaded your test case and compiled it using: /usr/lib/jvm/jdk1.8.0/bin/java -jar org.eclipse.jdt.core_3.9.2.v20131212-0103_BETA_JAVA8.jar -classpath rt.jar mypackage/MyPackagePrivateBaseClass.java mypackage/MyPublicClass.java mypackage2/Test.java -8

and ran it: /usr/lib/jvm/jdk1.8.0/bin/java mypackage2/Test

This is the output i get: Exception in thread "main" java.lang.IllegalAccessError: tried to access class mypackage.MyPackagePrivateBaseClass from class mypackage2.Test
	at mypackage2.Test.doesNotWork(Test.java:14)
	at mypackage2.Test.main(Test.java:8)

If I look with javap the Test.class I see: 
 #54 = MethodType         #53            //  (Ljava/lang/Object;)V
  #55 = Methodref          #56.#58        //  mypackage/MyPackagePrivateBaseClass.doSomething:(Ljava/lang/String;)V
  #56 = Class              #57            //  mypackage/MyPackagePrivateBaseClass
  #57 = Utf8               mypackage/MyPackagePrivateBaseClass
  #58 = NameAndType        #59:#60        //  doSomething:(Ljava/lang/String;)V
  #59 = Utf8               doSomething
  #60 = Utf8               (Ljava/lang/String;)V
  #61 = MethodHandle       #5:#55         //  invokevirtual mypackage/MyPackagePrivateBaseClass.doSomething:(Ljava/lang/String;)V
  #62 = MethodType         #60            //  (Ljava/lang/String;)V


As far as I understand it invokes the package private doSomething and thats the reason of the IllegalAccessError while it should invoke public subclass doSomething ... I might be wrong though, that's not exactely my area.
I can reproduce on Windows on command line:

b115 -> java

java -jar ecj_all.jar  -1.8 mypackage/MyPackagePrivateBaseClass.java mypackage/MyPublicClass.java mypackage2/Test.java

java mypackage2/Test


first
second
third
Exception in thread "main" java.lang.IllegalAccessError: tried to access class mypackage.MyPackagePrivateBaseClass from class mypackage2.Test
        at mypackage2.Test.doesNotWork(Test.java:15)
        at mypackage2.Test.main(Test.java:9)

ecj_all.jar is build on the JAVA8 branch.

I can reproduce by launching the project from Eclipse. Must have made a mistake earlier.

Thanks
b115:

first
second
third
first
second
third
I thought we had closed on this bridge method issue - Did something change ?
Thanks for the defect report Andrea. Fix and tests released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=e2125fea167d1caf4be142775a9b5fb051e1dd71

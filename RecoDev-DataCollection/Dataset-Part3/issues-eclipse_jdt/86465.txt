I know ResultCollector is part of the internal API, but
AFAIK it is the only entrypoint to provide Java completions
in non-java files (such as JSPs, HBM.xml, etc.) without
reimplementing the logic found in it.

Until now it has been quite easy to adapt it for many purposes
by extending it, but between 3.1M4 and M5 the internalAcceptMethod
has been made private instead of protected.

I would suggest to make this method protected again or even better
provide an API that could reuse the JDT completion logic.

I know ResultCollector is part of the internal API, but
AFAIK it is the only entrypoint to provide Java completions
in non-java files (such as JSPs, HBM.xml, etc.) without
reimplementing the logic found in it.

Until now it has been quite easy to adapt it for many purposes
by extending it, but between 3.1M4 and M5 the internalAcceptMethod
has been made private instead of protected.

I would suggest to make this method protected again or even better
provide an API that could reuse the JDT completion logic.


*** This bug has been marked as a duplicate of 84998 ***
(In reply to comment #1)
> 
> *** This bug has been marked as a duplicate of 84998 ***

Would like to remark that one thing is provide the API (as in 84998),
but another probably more realistic one would be if you could just
make those private methods protected as they were before.
Please note that this class will go away for 3.1 M6.

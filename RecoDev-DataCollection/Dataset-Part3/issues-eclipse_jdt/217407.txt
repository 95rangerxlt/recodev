3.4M4

In presence of missing types (deducted from markers) wouldn't it be nice to offer to add more entries to build path based on available types ?

There are cases where some missing types are present in your workspace, but just missing from someone's classpath. If you could find out (using searchAllTypeNames) then you could offer to add an entry on the buildpath (or let PDE fix the manifest for you)

3.4M4

In presence of missing types (deducted from markers) wouldn't it be nice to offer to add more entries to build path based on available types ?

There are cases where some missing types are present in your workspace, but just missing from someone's classpath. If you could find out (using searchAllTypeNames) then you could offer to add an entry on the buildpath (or let PDE fix the manifest for you)
From Martin:

That's almost there, in a open way, with an extension point. But it's currently limited to unresolvable imports:
When you invoke quick fix on an unresolvable import, we will ask all contributors of the classpathFixProcessor to provide solutions how to fix the classpath. For normal Java projects this will search the workspace and add project dependencies or adds JAR's found in the workspace. For PDE projects this will use the information in all MANIFEST.MF to find the plugin that exports this type or package. NaNW 3.4 M3 has an entry about this.
The reason why this is limited to unresolvable imports is that this is quite an expensive quick fix to compute the proposals for. Unresolvable types are very common and a slow quick fix in this area would be a problem. But, we could think of providing a 'Fix class path...' proposal that will only start to compute those proposals when invoked.

quick fix added > 20080423

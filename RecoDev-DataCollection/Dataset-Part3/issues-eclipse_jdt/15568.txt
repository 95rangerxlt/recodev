In java.lang.String, place a watchpoint on "serialVersionUID" in the private 
static CaseInsensitiveComparator class when you have open the source on the 
class String.  The watchpoint does not show in the editor ruler.

If you open the type CaseInsensitiveComparator, and add the watchpoint, the 
breakpoint shows in the ruler.

In java.lang.String, place a watchpoint on "serialVersionUID" in the private 
static CaseInsensitiveComparator class when you have open the source on the 
class String.  The watchpoint does not show in the editor ruler.

If you open the type CaseInsensitiveComparator, and add the watchpoint, the 
breakpoint shows in the ruler.
Same situation for method breakpoints.
Moving to JUI - the marker annotation model & ruler lives there.
More clarification - a watchpoint or method breakpoint on an inner class does 
not appear in the ruler in the top-level class.
even more clarification:
* methodbreakpoint show up properly in methods of the 
  top level type, but not in methods of inner types.
* when opening the inner type in its own editor using F3 then the breakpoint 
shows up properly.

When the editor tests for affected markers it only tests the class file that is 
its input. It doesn't test against inner classes. The test is done using the 
JDT Core provided method JavaCore.getJavaCore().isReferencedBy(). This method 
would have to handle this case. - on to JDT CORE
JavaCore#isReferencedBy APIs are now able to cycle through enclosing types as 
well.

Fixed

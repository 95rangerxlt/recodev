The MANIFEST.MF holds:

org.eclipse.jdt.annotation;bundle-version="[1.1.0,2.0.0)",
org.eclipse.jdt.annotation;bundle-version="[2.0.0,3.0.0)"

which looks strange to me why not directly setting 

org.eclipse.jdt.annotation;bundle-version="[1.1.0,3.0.0)"

the CBI builds fails with the current definition

The MANIFEST.MF holds:

org.eclipse.jdt.annotation;bundle-version="[1.1.0,2.0.0)",
org.eclipse.jdt.annotation;bundle-version="[2.0.0,3.0.0)"

which looks strange to me why not directly setting 

org.eclipse.jdt.annotation;bundle-version="[1.1.0,3.0.0)"

the CBI builds fails with the current definition
Tom,

Agreed, it looks strange, but this is because we have two jdt.annotation projects with the same bundle name but with different project names and versions. This allows us to use the SE7 annotation as well as upgrade the annotations to TYPE_USE, which is introduced in Java 8. The Java 8 edition of jdt.annotation project required JavaSE-1.8 in the path. We need to figure out how we can address this in the build.
This is on BETA_JAVA8, right?
(In reply to Thomas Schindl from comment #0)
> the CBI builds fails with the current definition

What's the error message?
That tycho can not resolve 1.1.0, 2.0.0 the definition does not make any sense to me. What difference to do you think you get by 

org.eclipse.jdt.annotation;bundle-version="[1.1.0,2.0.0)",
org.eclipse.jdt.annotation;bundle-version="[2.0.0,3.0.0)"

vs

org.eclipse.jdt.annotation;bundle-version="[1.1.0,3.0.0)"

there can never be a system who is able to fullfill both requirements, how can it?
this is fixed by markus with http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?id=74cb74226fe254108607eae80c548bb2b6719e32
(In reply to Thomas Schindl from comment #4)
> That tycho can not resolve 1.1.0, 2.0.0 the definition does not make any
> sense to me. What difference to do you think you get by 
> 
> org.eclipse.jdt.annotation;bundle-version="[1.1.0,2.0.0)",
> org.eclipse.jdt.annotation;bundle-version="[2.0.0,3.0.0)"
> 
> vs
> 
> org.eclipse.jdt.annotation;bundle-version="[1.1.0,3.0.0)"
> 
> there can never be a system who is able to fullfill both requirements, how
> can it?

Documenting for posterity: Markus answered this in bug 416580 comment 1:

 "The test bundle actually needs two versions of jdt.annotation"

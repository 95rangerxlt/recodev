Mea culpa !

org.eclipse.jdt.internal.compiler.parser.Parser.consumeNestedLambda()

has this line of code: 

LambdaExpression lambda = new LambdaExpression(this.compilationUnit.compilationResult, this instanceof AssistParser);

that breaks ECJ runs with a ClassDefNotFound error.

Fix is simple - to introduce a level of indirection using a virtual call.

(A lambda needs to know if it was created by the assist parser so it can
apply less strict rules for compatibility. Code is being written "just now",
if we apply strict rules, we would often reject overloaded calls that
would be resolved correctly once the completion which was the raison d'etre
for the lambda is done.)

(There are also some interesting chicken and egg situations here. The programmer
could be completing return statements, which influence the overload resolution
which would influence the target type which would influence the return type
completion ...)

Mea culpa !

org.eclipse.jdt.internal.compiler.parser.Parser.consumeNestedLambda()

has this line of code: 

LambdaExpression lambda = new LambdaExpression(this.compilationUnit.compilationResult, this instanceof AssistParser);

that breaks ECJ runs with a ClassDefNotFound error.

Fix is simple - to introduce a level of indirection using a virtual call.

(A lambda needs to know if it was created by the assist parser so it can
apply less strict rules for compatibility. Code is being written "just now",
if we apply strict rules, we would often reject overloaded calls that
would be resolved correctly once the completion which was the raison d'etre
for the lambda is done.)

(There are also some interesting chicken and egg situations here. The programmer
could be completing return statements, which influence the overload resolution
which would influence the target type which would influence the return type
completion ...)
This was fixed as part of http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=a98d7d87df415161ba75f53acbdbe8d316ea160c.

Stephan, please pick up these changes into your branch as soon as
possible, Jay tripped into this problem twice when running tests
from your branch. TIA.
(In reply to Srikanth Sankaran from comment #1)
> This was fixed as part of
> http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/
> ?h=BETA_JAVA8&id=a98d7d87df415161ba75f53acbdbe8d316ea160c.
> 
> Stephan, please pick up these changes into your branch as soon as
> possible, Jay tripped into this problem twice when running tests
> from your branch. TIA.

Done.

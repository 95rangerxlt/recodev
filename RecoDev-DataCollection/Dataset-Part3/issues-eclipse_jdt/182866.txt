Build ID: I20070323-1616

Steps To Reproduce:
1. Eclipse launch in Windows Vista (Japanese)
2. Window > preference >
     General > Appearance > Color and Fonts
   "MS UI Gotic" set as the Dialog font.
3. Execute "New Java Class" wizard.

More information:
The width of the wizard displayed by Operation-1 and
Operation-2 of the operations is different. 

Operation-1:
- File menu > New > Other
- Select "Class"

Operation-2
- Click Downward triangle of (C+) button in the tool bar
- Select "Class"

Build ID: I20070323-1616

Steps To Reproduce:
1. Eclipse launch in Windows Vista (Japanese)
2. Window > preference >
     General > Appearance > Color and Fonts
   "MS UI Gotic" set as the Dialog font.
3. Execute "New Java Class" wizard.

More information:
The width of the wizard displayed by Operation-1 and
Operation-2 of the operations is different. 

Operation-1:
- File menu > New > Other
- Select "Class"

Operation-2
- Click Downward triangle of (C+) button in the tool bar
- Select "Class"
Operation-2 executes the following codes; 

In org.eclipse.jdt.ui
/ui/org/eclipse/jdt/ui/actions/
AbstractOpenWizardAction.java
run() method

	WizardDialog dialog= new WizardDialog(shell, wizard);
	if (shell != null) {
		PixelConverter converter= new PixelConverter(shell);
		dialog.setMinimumPageSize(
			converter.convertWidthInCharsToPixels(70), 					converter.convertHeightInCharsToPixels(20));
	}

In the above-mentioned, PixelConverter calculates the pixel value without using the dialog font specified by "Color and Fonts". 

In Vista (Japanese), the value of FontMetrics.getAverageCharWidth is large.
See bug 182859.

Therefore, it becomes a wizard which is wider than the wizard displayed 
with Operation-1.  

As far as I know, it is the recommended way to use the average character width when computing width hints. We do this almost everywhere.

Do you think it is a bug that FontMetrics.getAverageCharWidth is so large for this Japanese font?
About font "Meiryo";
  Microsoft is declaring that it is new ClearType font.
  See (Japanese)
     http://www.microsoft.com/japan/presspass/detail.aspx?newsid=2353
  I think that it is a specification that FontMetrics.getAverageCharWidth
  is so large. 

About this bug;
  This problem is not to use the dialog font in processing that calculates
  the size of the wizard (dialog).  When the size of the wizard (dialog)
  is calculated, it is necessary to use the dialog font by processing
  of PixelConverter class. 
fixed > 20070420

The size is now computed using the dialog font (not the shell font).
However, the dialog opened with 'New' uses hard-coded values (500 pixels wide) which I think is wrong approach.
Let me know if the fix helped.

Java code assist needs to be enabled inside Java string partition to fix bug 110188.

Currently the jdtcore completion engine is never called when the cursor is
inside a string literal.

class X {
  String s = "aa|aa"; // cursor is at | location
}

Java code assist needs to be enabled inside Java string partition to fix bug 110188.

Currently the jdtcore completion engine is never called when the cursor is
inside a string literal.

class X {
  String s = "aa|aa"; // cursor is at | location
}
David, will JDT Core to provide completions? If not, we will leave it to clients
like APT to register their javaCompletionProposalComputer for the string partition.
JDT Core will propose completion inside string literal (bug 110190).

But even if JDT Core don't propose completion inside string literal, JDT Core
compute java completion context (CompletionContext). Currently if JDT Core is
not enabled for string partition, JDT Core cannot compute the context.
>Currently if JDT Core is not enabled for string partition, JDT Core cannot
>compute the context.
I see. I had a different life-cycle model in mind where the context is decoupled
from code assist but the current solution is fine as well. We should make sure
that the context computation for code assist inside strings is lazy and also
check the performance impact for 1.4 code (maybe disable for 1.4).
I released my fix for bug 110188 but as long as this one isn't fixed the
behavior added by my fix cannot be used.
finally fixed > 20060106
finally fixed > 20060106

(In reply to comment #3)
> We should [...]
> check the performance impact for 1.4 code (maybe disable for 1.4).

Performance impact is small. Additionally, content assist within string partitions is not as crucial as normal (ie. java) content assist (we currently only have spelling and word completion within string literals).

The 'Ctrl+C' copy shortcut doesn't work in the Java class file editor (the one 
which appears when no source is available). The Windows shortcut 'Ctrl+Ins' 
works correctly.

There's also no context menu with 'Copy' on it, nor is 'Copy' eabled on 
the 'Edit' pull down menu. Curiously, 'Select All' IS enabled, but doesn't 
seem to do anything.

The 'Ctrl+C' copy shortcut doesn't work in the Java class file editor (the one 
which appears when no source is available). The Windows shortcut 'Ctrl+Ins' 
works correctly.

There's also no context menu with 'Copy' on it, nor is 'Copy' eabled on 
the 'Edit' pull down menu. Curiously, 'Select All' IS enabled, but doesn't 
seem to do anything.
*** Bug 30036 has been marked as a duplicate of this bug. ***
*** Bug 24246 has been marked as a duplicate of this bug. ***
*** Bug 63278 has been marked as a duplicate of this bug. ***
*** Bug 65683 has been marked as a duplicate of this bug. ***
*** Bug 22326 has been marked as a duplicate of this bug. ***
*** Bug 72966 has been marked as a duplicate of this bug. ***
*** Bug 73280 has been marked as a duplicate of this bug. ***
*** Bug 27973 has been marked as a duplicate of this bug. ***
*** Bug 97794 has been marked as a duplicate of this bug. ***
definitely +1 here
Adam, I suggest to vote for the bug then, or even better: provide a patch ;-)
I just tried to solve this issue. To handle Ctrl+C, we need to overwrite the actionhandler with null. But i don't know how to active the copy button in the menu. Any suggestions?
The class file editor would need to register its own 'Copy' action in case there's no source. Of course, once source gets attached the original 'Copy' action has to be put in place again.
NOTE: simply setting the handler to null also destroys copy when there's source.
You're lucky: I had a good lunch and decided to fix this ;-)

Available in builds > N20060721-0010.
.
*** Bug 31504 has been marked as a duplicate of this bug. ***
*** Bug 151414 has been marked as a duplicate of this bug. ***
In build N20060724-0010, the Edit>Copy menu item is working correctly, however, if you try to copy text using Ctrl+C, the selected text is not copied onto the clipboard.
reopening then.
Fixed the copy key binding.
Here is how to create a temporary copy context menu in the Class File Editor (Eclipse 3.x)
Inject a BeanShell console with StackTrace from http://www.adaptj.com/root/main/download
Locate the StyledText instance by using:
c = swtSelectOnRelease();
Click on the editor and press Enter in the console.
Paste the following method in the console and then run it: swtTextMenu(c);

swtTextMenu(org.eclipse.swt.widgets.Control c)
{
    mm = new org.eclipse.jface.action.MenuManager();
    ca = new org.eclipse.jface.action.Action() {
        public void run() {
            String textData = c.getSelectionText();
            if (textData.length() > 0) {
                cb = new org.eclipse.swt.dnd.Clipboard(c.getDisplay());
                textTransfer = org.eclipse.swt.dnd.TextTransfer.getInstance();
                cb.setContents(new Object[]{textData}, new org.eclipse.swt.dnd.Transfer[]{textTransfer});
                cb.dispose();
            }
        }
    };
    ca.setText("Copy");
    mm.add(ca);
    r = new Runnable() {
        public void run() {
            c.setMenu(mm.createContextMenu(c));
        }
    };
    asyncExec(r);
}




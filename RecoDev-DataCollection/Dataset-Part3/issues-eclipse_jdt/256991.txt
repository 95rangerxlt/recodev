Created attachment 119095
Screenshot of bug

Version: 3.5.0
Build id: I20081030-1917

In the following constructors of ConstructorSyntaxColoring, the arguments to this() and super() (in both cases, SomeClass.FOO) are not syntax highlighted. See the attached screenshot, which has syntax highlighting enabled for class names and static variables.

class SuperClass
{
  SuperClass(Object x)
  {
  }
}

class ConstructorSyntaxColoring
    extends SuperClass
{
  ConstructorSyntaxColoring()
  {
    this(SomeClass.FOO); // no highlighting for SomeClass.FOO
    System.out.println(SomeClass.FOO);  // highlighting okay for SomeClass.FOO
  }

  ConstructorSyntaxColoring(Object x)
  {
    super(SomeClass.FOO); // no highlighting for SomeClass.FOO
  }

  private static class SomeClass
  {
    static Object FOO = new Object();
  }
}

Created attachment 119095
Screenshot of bug

Version: 3.5.0
Build id: I20081030-1917

In the following constructors of ConstructorSyntaxColoring, the arguments to this() and super() (in both cases, SomeClass.FOO) are not syntax highlighted. See the attached screenshot, which has syntax highlighting enabled for class names and static variables.

class SuperClass
{
  SuperClass(Object x)
  {
  }
}

class ConstructorSyntaxColoring
    extends SuperClass
{
  ConstructorSyntaxColoring()
  {
    this(SomeClass.FOO); // no highlighting for SomeClass.FOO
    System.out.println(SomeClass.FOO);  // highlighting okay for SomeClass.FOO
  }

  ConstructorSyntaxColoring(Object x)
  {
    super(SomeClass.FOO); // no highlighting for SomeClass.FOO
  }

  private static class SomeClass
  {
    static Object FOO = new Object();
  }
}
Fixed in HEAD.
Available in builds > N20081130-2000.

From my logfile:

!SESSION 2012-08-02 08:19:17.758 -----------------------------------------------
eclipse.buildId=I20120608-1400
java.version=1.7.0_04
java.vendor=Oracle Corporation
BootLoader constants: OS=linux, ARCH=x86, WS=gtk, NL=de_DE
Command-line arguments:  -os linux -ws gtk -arch x86

!ENTRY org.eclipse.jface.text 2 0 2012-08-02 10:10:56.675
!MESSAGE 
!STACK 0
java.lang.ClassCastException: org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to org.eclipse.jdt.core.dom.ChildListPropertyDescriptor
	at org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring.createMethodBody(ExtractMethodRefactoring.java:1115)
	at org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring.createNewMethod(ExtractMethodRefactoring.java:960)
	at org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring.createChange(ExtractMethodRefactoring.java:508)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.RefactoringCorrectionProposal.createTextChange(RefactoringCorrectionProposal.java:59)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.createChange(CUCorrectionProposal.java:244)
	at org.eclipse.jdt.ui.text.java.correction.ChangeCorrectionProposal.getChange(ChangeCorrectionProposal.java:355)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.getTextChange(CUCorrectionProposal.java:254)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.getAdditionalProposalInfo(CUCorrectionProposal.java:141)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.RefactoringCorrectionProposal.getAdditionalProposalInfo(RefactoringCorrectionProposal.java:71)
	at org.eclipse.jface.text.contentassist.AdditionalInfoController$3.run(AdditionalInfoController.java:106)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

From my logfile:

!SESSION 2012-08-02 08:19:17.758 -----------------------------------------------
eclipse.buildId=I20120608-1400
java.version=1.7.0_04
java.vendor=Oracle Corporation
BootLoader constants: OS=linux, ARCH=x86, WS=gtk, NL=de_DE
Command-line arguments:  -os linux -ws gtk -arch x86

!ENTRY org.eclipse.jface.text 2 0 2012-08-02 10:10:56.675
!MESSAGE 
!STACK 0
java.lang.ClassCastException: org.eclipse.jdt.core.dom.ChildPropertyDescriptor cannot be cast to org.eclipse.jdt.core.dom.ChildListPropertyDescriptor
	at org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring.createMethodBody(ExtractMethodRefactoring.java:1115)
	at org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring.createNewMethod(ExtractMethodRefactoring.java:960)
	at org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring.createChange(ExtractMethodRefactoring.java:508)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.RefactoringCorrectionProposal.createTextChange(RefactoringCorrectionProposal.java:59)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.createChange(CUCorrectionProposal.java:244)
	at org.eclipse.jdt.ui.text.java.correction.ChangeCorrectionProposal.getChange(ChangeCorrectionProposal.java:355)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.getTextChange(CUCorrectionProposal.java:254)
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.getAdditionalProposalInfo(CUCorrectionProposal.java:141)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.RefactoringCorrectionProposal.getAdditionalProposalInfo(RefactoringCorrectionProposal.java:71)
	at org.eclipse.jface.text.contentassist.AdditionalInfoController$3.run(AdditionalInfoController.java:106)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)
Moving to JDT/UI.

Holger, can you please attach a code snippet showing the problem? Thanks!
Comparing with local history I found:

OLD:
------------------
    public static boolean compare(final MultiAlignment first, final MultiAlignment second) {
        assert first.m_totalCost == second.m_totalCost;
        final Set<InDelSequence> unchecked = new HashSet<>(second);
        outer: for (final InDelSequence f : first) {
            for (final Iterator<InDelSequence> iterator = unchecked.iterator(); iterator.hasNext();) {
                final InDelSequence s = iterator.next();
                if (f.equals(s)) {
                    iterator.remove();
                    continue outer;
                }
            }
            assert false : "No match for " + f + " in " + second;
        }
        return true;
    }



NEW:
----------------
    public static boolean equal(final MultiAlignment first, final MultiAlignment second) {
        assert first.m_totalCost == second.m_totalCost;
        final Set<InDelSequence> unchecked = new HashSet<>(second);
        outer: for (final InDelSequence f : first) {
            for (final Iterator<InDelSequence> iterator = unchecked.iterator(); iterator.hasNext();) {
                final InDelSequence s = iterator.next();
                if (InDelSequence.equal(f, s)) {
                    iterator.remove();
                    continue outer;
                }
            }
            assert false : "No match for " + f + " in " + second;
        }
        assert unchecked.isEmpty() : String.format("Could not match %d of %s in %s%n%s",
            unchecked.size(), second, first, unchecked);
        return true;
    }


BTW: As there are other changes, I suspect, I was trying to issue the rename while the editor was still dirty (possibly not compiling)
I don't see how this could happen. Please reopen if you have more information.
Sorry, for the misleading code snippet in comment 2 ... I was hunting for refactorings and only found that one.

But now, I nailed the true culprit:

public class Proposal {

    public static void main(final String[] args) {
        int[] array = {1,2,3};

        for (int i : array) { // <- select HERE
            System.out.println(i);
        }
    }

}



Steps to reproduce:
1. select everything between () of the for loop
2. invoke content assist by Ctrl+1
3. Cursor down over entry "extract method"
4. The initial exception is written to the log
5. if you keep on cycling with the cursor around, an additional followup exception is logged:

!SESSION 2012-08-25 09:26:45.899 -----------------------------------------------
eclipse.buildId=I20120810-1300
java.version=1.7.0_06
java.vendor=Oracle Corporation
BootLoader constants: OS=linux, ARCH=x86, WS=gtk, NL=de_DE
Command-line arguments:  -os linux -ws gtk -arch x86

[...]

!ENTRY org.eclipse.jface.text 2 0 2012-08-25 10:19:10.221
!MESSAGE 
!STACK 0
java.lang.NullPointerException
	at org.eclipse.jdt.ui.text.java.correction.CUCorrectionProposal.getAdditionalProposalInfo(CUCorrectionProposal.java:142)
	at org.eclipse.jdt.internal.ui.text.correction.proposals.RefactoringCorrectionProposal.getAdditionalProposalInfo(RefactoringCorrectionProposal.java:71)
	at org.eclipse.jface.text.contentassist.AdditionalInfoController$3.run(AdditionalInfoController.java:106)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)



BTW: I updated to 4.3M1
Thanks, fixed with http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=f3a6bb494a448de140b9d6f3983d1f4b5f49c893

Note that "int i : array" cannot be extracted, since the variable declaration must stay there. But you can extract "array".
(In reply to comment #5)
> Note that "int i : array" cannot be extracted, since the variable
> declaration must stay there. But you can extract "array".

Actually I had not intent to extract anything. I just had to cursor over it to get to the more relevant refactorings to convert the loop to iterator or index based. Now I wonder how Eclipse determines the order / relevance of such proposals?

Anyway, I'm glad you could fix it now.

I200302061700 eclipse linux-gtk

Paste autoindent works sufficiently that I'm surprised when it fails.

When I have an expression spread across multiple lines, especially in the form
of a method call, paste autoindents one tab shy of correct.

Example. Starting with:
	assertEquals(
		expectedMessage.getToPSet(),
		db.item().getToParticipants(itemId)
	);

Trying to paste in a line, I end up with
	assertEquals(
	"to",
		expectedMessage.getToPSet(),
		db.item().getToParticipants(itemId)
	);
rather than the desired
	assertEquals(
		"to",
		expectedMessage.getToPSet(),
		db.item().getToParticipants(itemId)
	);

This can actually be an irritation when I making a systematic change to a large
number of calls, since without autoindent I could usually get my paste buffer to
contain exactly the right number of tabs.  Now, even if I take the care to get
the right number of tabs before cutting, autoindent "corrects" my desired value
to give me something that I have to go back and fix up.

I200302061700 eclipse linux-gtk

Paste autoindent works sufficiently that I'm surprised when it fails.

When I have an expression spread across multiple lines, especially in the form
of a method call, paste autoindents one tab shy of correct.

Example. Starting with:
	assertEquals(
		expectedMessage.getToPSet(),
		db.item().getToParticipants(itemId)
	);

Trying to paste in a line, I end up with
	assertEquals(
	"to",
		expectedMessage.getToPSet(),
		db.item().getToParticipants(itemId)
	);
rather than the desired
	assertEquals(
		"to",
		expectedMessage.getToPSet(),
		db.item().getToParticipants(itemId)
	);

This can actually be an irritation when I making a systematic change to a large
number of calls, since without autoindent I could usually get my paste buffer to
contain exactly the right number of tabs.  Now, even if I take the care to get
the right number of tabs before cutting, autoindent "corrects" my desired value
to give me something that I have to go back and fix up.
Fixed a while ago.

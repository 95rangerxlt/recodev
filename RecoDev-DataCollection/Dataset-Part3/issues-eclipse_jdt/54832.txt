In the current code, the way to check that it's still possible to perform an
undo of a refactoring action, is to call isValid() on each Changes of the undo,
and if at least one answer a fatal error, the undo is no performed.
This is not really flexible, undo should manage warning and non-fatal error too.

In JDT Debug, we have rename participant to update the launch configurations and
the breakpoint when a Java element is renamed.
In the launch configuration case, we currently return a fatal error if the
launch configuration has been delete, because otherwise the execution of the
perform() will fail. But this is no a fatal error, it's just an error. The fact
that we cannot undo this change shouldn't block the user to perform the undo.
This change is not an important one, and things won't stop working because this
change was not undo.
Also, if you modify a launch configuration between a refactoring action and the
undo, performing the undo may overwrite these modification. It would be better
if we were able to return a warning in case, and let the user decide if he wants
to overwrite his modification.

To display those warnings and errors, a dialog like the refactoring preview
dialog/page should be perfect.

In the current code, the way to check that it's still possible to perform an
undo of a refactoring action, is to call isValid() on each Changes of the undo,
and if at least one answer a fatal error, the undo is no performed.
This is not really flexible, undo should manage warning and non-fatal error too.

In JDT Debug, we have rename participant to update the launch configurations and
the breakpoint when a Java element is renamed.
In the launch configuration case, we currently return a fatal error if the
launch configuration has been delete, because otherwise the execution of the
perform() will fail. But this is no a fatal error, it's just an error. The fact
that we cannot undo this change shouldn't block the user to perform the undo.
This change is not an important one, and things won't stop working because this
change was not undo.
Also, if you modify a launch configuration between a refactoring action and the
undo, performing the undo may overwrite these modification. It would be better
if we were able to return a warning in case, and let the user decide if he wants
to overwrite his modification.

To display those warnings and errors, a dialog like the refactoring preview
dialog/page should be perfect.
Nice suggestion. I will look what I can do here.
In M9 you now get a dialog when a undo object generates a status in isValid. 
As long as the status isn't fatal the user can proceed with the undo.

The following line in the testPackageImpl fails the assertion because it finds 80 classes within java.util rather than 79.

ProcessorTestStatus.assertEquals("Number of classes in java.util", 79, classes.size());

I'm running these tests on a PowerPC platform and don't have access to a Sun JRE so I don't know why there apparently is a difference of one class in java.util.

Assuming that the IBM Java2 java.util package is ok, and contains the correct classes, this test should be changed to tolerate the result from the IBM JRE.

The following line in the testPackageImpl fails the assertion because it finds 80 classes within java.util rather than 79.

ProcessorTestStatus.assertEquals("Number of classes in java.util", 79, classes.size());

I'm running these tests on a PowerPC platform and don't have access to a Sun JRE so I don't know why there apparently is a difference of one class in java.util.

Assuming that the IBM Java2 java.util package is ok, and contains the correct classes, this test should be changed to tolerate the result from the IBM JRE.
Similar to the problem we have with 1.6. We need to move away from a dependency on anything in rt.jar.
The related bug (for Java 1.6) is bug 152534.
Test rewritten so that it looks for specific types rather than just counting the size of the returned collection.
*** Bug 188935 has been marked as a duplicate of this bug. ***

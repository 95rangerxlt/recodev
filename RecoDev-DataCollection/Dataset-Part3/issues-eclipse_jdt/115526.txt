I have this javadoc.xml that defines a javadoc export spanning several Eclipse
projects. The problem is that for one of the projects the UI is populated
incorrectly, that is, some of the packages are left unselected (and hence not
included in the final documentation).

The project organization is as follows:
BuddyStream Java API (all selected)
BuddyStream Server
c~.b~.db (should be all selected, but it's empty)
c~.b~.db.mysql (should be all selected, but it's empty)
c~.b~.logging (should be all selected, but it's empty)
c~.b~.plugins (should be all selected, but it's empty)
c~.b~.server (all files but one are selected, that's expected)
c~.b~.util (all selected)
... a few other projects, some all selected, some partially, all work as expected.

The only project that seems to have problems is the one that mixes per package
and per file selections. In this case, the only package that is not wholly
selected is c~.b~.server, and I believe that causes the problem. All packages up
to that one are listed by package in javadoc.xml, but c~.b~.server and
c~.b~.util are described file by file. The former appear unselected while the
latter appear properly selected.

The result is that everytime I want to generate the documentation I have to
manually add those packages.

The javadoc.xml file will be attached below.

I have this javadoc.xml that defines a javadoc export spanning several Eclipse
projects. The problem is that for one of the projects the UI is populated
incorrectly, that is, some of the packages are left unselected (and hence not
included in the final documentation).

The project organization is as follows:
BuddyStream Java API (all selected)
BuddyStream Server
c~.b~.db (should be all selected, but it's empty)
c~.b~.db.mysql (should be all selected, but it's empty)
c~.b~.logging (should be all selected, but it's empty)
c~.b~.plugins (should be all selected, but it's empty)
c~.b~.server (all files but one are selected, that's expected)
c~.b~.util (all selected)
... a few other projects, some all selected, some partially, all work as expected.

The only project that seems to have problems is the one that mixes per package
and per file selections. In this case, the only package that is not wholly
selected is c~.b~.server, and I believe that causes the problem. All packages up
to that one are listed by package in javadoc.xml, but c~.b~.server and
c~.b~.util are described file by file. The former appear unselected while the
latter appear properly selected.

The result is that everytime I want to generate the documentation I have to
manually add those packages.

The javadoc.xml file will be attached below.
Created attachment 29555
Eclipse Javadoc XML description
Hm, tricky. I wasn't able to reproduce this example. It would be good if you
have a simplified scenario.

Not that you don't need to open the wizard to run Javadoc, you could also
directly invoke the javadoc.xml using ANT.
I'll try to produce a smaller scenario. But did you try with the wizard?

I remember that last time I used ant externally to generate Javadoc using that
javadoc.xml, it suffered either the same or a similar problem. One way or
another, the results differed from what was expected.
Created attachment 29630
Workspace without metadata

This is an Eclipse 3.1.1 workspace without the .metadata directory.
(In reply to comment #4)
> This is an Eclipse 3.1.1 workspace without the .metadata directory.

The reason for not including the metadata is that it makes the bzip'd tarball 2
MB big.

As you can see by inspecting the included javadoc.xml, all files except =Javadoc
Test/com/second/C.java should be passed to Javadoc, but when you open the wizard
or run it through Ant, you'll see that both =Javadoc Test/com/first and =Javadoc
Test/com/third packages appear unselected.

Projects "A Project" and "Z Projekt" seem to be necessary somehow to trigger the
bug. I couldn't reproduce it with just project "Javadoc Test."
Thanks a lot!
fixed > 20060425

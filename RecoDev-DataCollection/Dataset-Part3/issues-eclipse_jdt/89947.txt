I20050331-2000

- See suggestions from bug 89541
- The view menu has an item "Filter Inexact". Users without a 'generics' context
could easily confuse this with a filter for potential matches. This problem
could be alleviated with a new filter "Filter Potential Matches"


Here's a little test class for playing around with filters:

package a;
public class Cells {
	static class Cell<T> {}
	
	void ls(Cell<String> arg) {}
	void li(Cell<Integer> arg) {}
	void ln(Cell<Number> arg) {}
	void lo(Cell<Object> arg) {}
		
	void raw(Cell arg) {}
	void wild(Cell<?> arg) {}
	void ext(Cell<? extends Number> arg) {}
	void sup(Cell<? super Number> arg) {}
	
	
	void potential(aa.Cell arg) {}
}

I20050331-2000

- See suggestions from bug 89541
- The view menu has an item "Filter Inexact". Users without a 'generics' context
could easily confuse this with a filter for potential matches. This problem
could be alleviated with a new filter "Filter Potential Matches"


Here's a little test class for playing around with filters:

package a;
public class Cells {
	static class Cell<T> {}
	
	void ls(Cell<String> arg) {}
	void li(Cell<Integer> arg) {}
	void ln(Cell<Number> arg) {}
	void lo(Cell<Object> arg) {}
		
	void raw(Cell arg) {}
	void wild(Cell<?> arg) {}
	void ext(Cell<? extends Number> arg) {}
	void sup(Cell<? super Number> arg) {}
	
	
	void potential(aa.Cell arg) {}
}
Fixed.
.
*** Bug 66352 has been marked as a duplicate of this bug. ***

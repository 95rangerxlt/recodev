Build 20020531

- open any large class, e.g. IWorkbenchGraphicConstants
- move around in it in the editor using the cursor keys, going into and 
between field and/or method declarations
- the outline selects the type when you move between declarations
- this can cause a lot of distracting scrolling (both horizontal and vertical) 
in the outline
- for indented declarations, it also seems incorrect since it selects the type 
when the cursor is at the left of the first line of the declaration

Recommend extending the effective range of one declaration to the start of the 
next one.  It should only select the type when you go up to the type 
declaration (or between the type declaration and the first member).

Build 20020531

- open any large class, e.g. IWorkbenchGraphicConstants
- move around in it in the editor using the cursor keys, going into and 
between field and/or method declarations
- the outline selects the type when you move between declarations
- this can cause a lot of distracting scrolling (both horizontal and vertical) 
in the outline
- for indented declarations, it also seems incorrect since it selects the type 
when the cursor is at the left of the first line of the declaration

Recommend extending the effective range of one declaration to the start of the 
next one.  It should only select the type when you go up to the type 
declaration (or between the type declaration and the first member).
I would recommend extending the effective range of a declaration to the *end* of
the *previous* one.  This would cause the declaration's javadoc to be naturally
included as part of the declaration's "space".

Text now uses a post selection listener. The outline will only updated after the
cursor stands still.

Also, Javadoc is part of a Java elements declaration and hence selecting Javadoc
selects the correct element in the Java Outline page.

Verified using I20030717-rebuild

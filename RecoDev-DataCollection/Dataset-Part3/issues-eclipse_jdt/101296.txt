3.1-RC2

- have the CU below
- invoke code assist at the caret (|)
- note the foreach template proposed
- select (don't apply) the template
- wait until the preview appears
- apply the template

Expected: when tabbing to the Iterable in the for loop, there should be a
proposal popup offering 'strings' and 'ints'.

Actual: there is no popup

-------- MVGuess.java-------
public class MVGuess {
	void iterate(String[] strings, int... ints) {
		foreach
	}

}
----------------------------

Reason: JavaContextType$Array.resolve() only sets the context's
MultiVariableGuess if there isn't one there already. Showing the preview already
sets the MultiVariableGuess.

Proposed Fix: Always set the MultiVariableGuess - since every template is
resolved anew when it is applied, the MVGuess of the template being applied will
 win.

3.1-RC2

- have the CU below
- invoke code assist at the caret (|)
- note the foreach template proposed
- select (don't apply) the template
- wait until the preview appears
- apply the template

Expected: when tabbing to the Iterable in the for loop, there should be a
proposal popup offering 'strings' and 'ints'.

Actual: there is no popup

-------- MVGuess.java-------
public class MVGuess {
	void iterate(String[] strings, int... ints) {
		foreach
	}

}
----------------------------

Reason: JavaContextType$Array.resolve() only sets the context's
MultiVariableGuess if there isn't one there already. Showing the preview already
sets the MultiVariableGuess.

Proposed Fix: Always set the MultiVariableGuess - since every template is
resolved anew when it is applied, the MVGuess of the template being applied will
 win.
Not a regression (same in 3.0), albeit more visible since the foreach template
is probably more visible than the 'for - iterate over array with temp variable'
template.
Created attachment 23757
JavaContextType.diff
fixed right after 3.1

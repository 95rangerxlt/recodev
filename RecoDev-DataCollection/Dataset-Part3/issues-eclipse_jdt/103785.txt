3.1

List<String> li= null;
li.ad |code assist

The proposals are:
add(int index, String element)
add(String element)
..

I checked that all proposals get the same relevance from jdt.core
It would be better that for method with the same name, methods with less
argumnets are ordered first.
That would be consistent with the JavaElementSorter used for the package explorer

3.1

List<String> li= null;
li.ad |code assist

The proposals are:
add(int index, String element)
add(String element)
..

I checked that all proposals get the same relevance from jdt.core
It would be better that for method with the same name, methods with less
argumnets are ordered first.
That would be consistent with the JavaElementSorter used for the package explorer
+1.

That would be very helpful in the normal use case add(E). Currently, you always
have to select the right proposal manually, or you have to delete the comma and
the guessed second argument.

If add(E) has a higher priority, you can still easily write ", " (instead of
pressing the tab key) when you actually have two arguments to pass.
Fixed > 20051208

Here is original source codes:

public class A {
	public int i = 0;	
}

public class B extends A{
	public void m(C target)
	{
		i++;
	}
}

public class C {
}

Now we apply MOVE refactoring to method "m()" with delegate. The result is shown below:

public class A {
	public int i = 0;	
}

public class B extends A{
	public void m(C target)
	{
		target.m(this);
	}
}

public class C {
	public void m(B b)
	{
		i++;		//error
	}
}

The inherited variable "i" should be updated to "b.i".


-- Configuration Details --
Product: Eclipse 1.5.0.20120131-1544 (org.eclipse.epp.package.jee.product)
Installed Features:
 org.eclipse.jdt 3.8.0.v20120525-1249-8-8nFqlFNOfwKDRGz-pXLdGxEM83

Here is original source codes:

public class A {
	public int i = 0;	
}

public class B extends A{
	public void m(C target)
	{
		i++;
	}
}

public class C {
}

Now we apply MOVE refactoring to method "m()" with delegate. The result is shown below:

public class A {
	public int i = 0;	
}

public class B extends A{
	public void m(C target)
	{
		target.m(this);
	}
}

public class C {
	public void m(B b)
	{
		i++;		//error
	}
}

The inherited variable "i" should be updated to "b.i".


-- Configuration Details --
Product: Eclipse 1.5.0.20120131-1544 (org.eclipse.epp.package.jee.product)
Installed Features:
 org.eclipse.jdt 3.8.0.v20120525-1249-8-8nFqlFNOfwKDRGz-pXLdGxEM83
Works for this.*, but not for plain field access:

public class B extends A{
	public void m(C target)
	{
		i++;
		this.i++;
		i= i + 1;
		this.i= this.i + 1;
	}
}

Fixed with http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=6693cd7dcfa0c2698a2c74d908f2e6c8d47b4b71

Created attachment 130923
Patch for SelfEncapsulateFieldRefactoring

Build ID:  I20090313-0100

Steps To Reproduce:
To reproduce the bug apply the refactoring on field 'zip' in the following example:

public class Foo {
	public volatile static int zip, zap;
}


More information:
The refactoring transforms the program into
...
public volatile static int zap;
private int zip;
public static void setZip(int zip) { ...}
public static int getZip() { ... }

A correct transformation would declare field zip as
private volatile static int zip;

Created attachment 130923
Patch for SelfEncapsulateFieldRefactoring

Build ID:  I20090313-0100

Steps To Reproduce:
To reproduce the bug apply the refactoring on field 'zip' in the following example:

public class Foo {
	public volatile static int zip, zap;
}


More information:
The refactoring transforms the program into
...
public volatile static int zap;
private int zip;
public static void setZip(int zip) { ...}
public static int getZip() { ... }

A correct transformation would declare field zip as
private volatile static int zip;
Probably the same problem as bug 266885.
The fix should also preserve annotations. See e.g. VariableDeclarationRewrite.
Fixed in HEAD of SelfEncapsulateFieldRefactoring.java and added more modifiers to testTwoFragmentsWithSetter().

Did not use the patch, since it didn't take annotations into account. Using the same utility as in bug 266885 now.

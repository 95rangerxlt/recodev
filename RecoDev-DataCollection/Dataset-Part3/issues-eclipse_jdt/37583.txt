In the TestRunnerViewPart class of jdt.internal.junit.ui, lines 561 to 564 are:

561 private void postAsyncRunnable(Runnable r) {
562  if (!isDisposed())
563    getDisplay().syncExec(r);
564 }

isn't 563 supposed to read "getDisplay().asyncExec(r);"? Otherwise
postAsyncRunnable is equivalent to postSyncRunnable.

In the TestRunnerViewPart class of jdt.internal.junit.ui, lines 561 to 564 are:

561 private void postAsyncRunnable(Runnable r) {
562  if (!isDisposed())
563    getDisplay().syncExec(r);
564 }

isn't 563 supposed to read "getDisplay().asyncExec(r);"? Otherwise
postAsyncRunnable is equivalent to postSyncRunnable.
Good catch - but the current behaviour is correct (it fixes and event flooding 
bug on GTK). Obviously the clean-up after the fix is not complete. 

Replaced all calls with postSync* and removed the unused postAsync* call. 

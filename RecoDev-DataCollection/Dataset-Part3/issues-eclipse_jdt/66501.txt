200406092000

In the java editor, Delete Next Word (Ctrl+Delete) and Delete Previous Word
(Ctrl+Backspace) behave unexpected. They should always just delete the selection
iff it is not zero-length. That's the behavior we're used to with unmodified
Delete and Backspace, and it's also what the Text Editor already does.

	void foo() {
		System.out.println(123);
	}

Set cursor to before "out.", then press 2x Ctrl+Shift+Right to select "out."
with the caret after the selection.

Expected: Ctrl+Delete deletes selection.
Was: Ctrl+Delete then deletes "println", leaving the selection alone.

Similar problems with Ctrl+Backspace and when caret is at the start of the
selection.

200406092000

In the java editor, Delete Next Word (Ctrl+Delete) and Delete Previous Word
(Ctrl+Backspace) behave unexpected. They should always just delete the selection
iff it is not zero-length. That's the behavior we're used to with unmodified
Delete and Backspace, and it's also what the Text Editor already does.

	void foo() {
		System.out.println(123);
	}

Set cursor to before "out.", then press 2x Ctrl+Shift+Right to select "out."
with the caret after the selection.

Expected: Ctrl+Delete deletes selection.
Was: Ctrl+Delete then deletes "println", leaving the selection alone.

Similar problems with Ctrl+Backspace and when caret is at the start of the
selection.
Can reproduce in R3.0.
Works OK if smart caret positioning in Java names is disabled.

fixed > 20040728

added check in Delete{Next,Previous}SubWordAction in JavaEditor.java.

BETA_JAVA8

The following program should trigger only two errors, but triggers four
instead. Basically strictfp and synchronized should not allowed only
at interface abstract method declarations and should be accepted at
default method declaration sites as these after all describe an 
implementation and are so suitable sites to annotate implementation
concerns:

// -----

interface I {
  strictfp void foo() default {}
  synchronized void goo() default {}
  strictfp void boo();
  synchronized void zoo();
}

BETA_JAVA8

The following program should trigger only two errors, but triggers four
instead. Basically strictfp and synchronized should not allowed only
at interface abstract method declarations and should be accepted at
default method declaration sites as these after all describe an 
implementation and are so suitable sites to annotate implementation
concerns:

// -----

interface I {
  strictfp void foo() default {}
  synchronized void goo() default {}
  strictfp void boo();
  synchronized void zoo();
}
Tests and fix released for BETA_JAVA8 as commit 8875593d9253c455d8f189d55bb69262f4967ae1.

Parser:
- set new bit ExtraCompilerModifiers.AccDefaultMethod

MethodScope.createMethod()
- don't mark default methods as abstract

MethodScope.checkAndSetModifiersForMethod()
- do accept strictfp and synchronized for default methods

ProblemReporter & friends:
- differentiate error message to list the correct set of legal modifiers (regular ifc method vs. default method)


All tests have to be written as negative tests at this point to prevent class file verification while we don't yet have a JVM that accepts non-abstract interface methods.

When doing a refresh on a node in the treeview you can see flicker even when 
the label and icon doesn't change. In this particular scenario the elements are 
not equal but are rendered the same way (once the elements are from a working 
copy and once they are not). 

Options:
- viewer have support for pluggable equality checking
- the viewer protects against this case

When doing a refresh on a node in the treeview you can see flicker even when 
the label and icon doesn't change. In this particular scenario the elements are 
not equal but are rendered the same way (once the elements are from a working 
copy and once they are not). 

Options:
- viewer have support for pluggable equality checking
- the viewer protects against this case
Where in the UI does this occur?
To avoid this we will have to query SWT for the current text and image, 
compare to the new values, and avoid setting them if equal.
This will have some performance overhead (although there's a lot of room for 
improvement in other areas of refresh).
Do you consider this a P1 issue for 2.0?
He is a test case.

1) Open PackageExplorerPart.java in the editor (or another type with lots of 
members)
2) enable the sorting in the outliner
3) change the name of a static member
->observe the flicker even though only a single label changes.
The code internally calls refresh in this case.

I don't consider this to be a P1 item.
This is definitely noticeable.
A workaround would be to recognize this case and issue only an update for the 
affected element.  Refresh is potentially expensive no matter what you do.
This may be due to updating icons.
Check for RC1.

The issue is with the JavaReconciler. It calls a refresh on the entire class 
after a reconcile which then updates all of the labels in the update view.
A fix could be to call refresh(false) in the JavaOutlinerViewer instead of 
refresh. Moving to JDT/Text since the outliner doesn't some optimized 
refreshing.


Note that the updateLabels flag was ignored in AbstractTreeViewer, but is now 
honoured as of I20030218 (but only if the order of elements doesn't change).

Changed all occurrences of refresh() in JavaOutlinePage to refresh(false)
Available in builds > N20030220

start verifying
reopening due to problems in viewer implementation
Nick, 
Is it safe to switch to refresh(false)?
Saw that bug 32414 has been resolved.
Build > 20030306.

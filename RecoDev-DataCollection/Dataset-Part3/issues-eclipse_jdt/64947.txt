Reproduced on 2 different machines, one running RHEL 3.0 and one running SLES 9 
Beta 6.

IES Build 200405060200

To reproduce:

Make sure you are in a german locale and have the 3.0 NL fragments installed so 
that menus, etc. are in german.  Create a new java project and switch to the 
java perspective.  Then, create a new class.  When you click finish to create 
the class, it will fail and a dialog will pop up complaining about an "invalid 
thread access".  No special german characters are required to produce the bug.

Reproduced on 2 different machines, one running RHEL 3.0 and one running SLES 9 
Beta 6.

IES Build 200405060200

To reproduce:

Make sure you are in a german locale and have the 3.0 NL fragments installed so 
that menus, etc. are in german.  Create a new java project and switch to the 
java perspective.  Then, create a new class.  When you click finish to create 
the class, it will fail and a dialog will pop up complaining about an "invalid 
thread access".  No special german characters are required to produce the bug.
Created attachment 11359
Eclipse log file
The invalid thread access is caused by the Java template support trying to open
an error dialog outside the UI thread:

	at org.eclipse.jface.dialogs.ErrorDialog.openError(ErrorDialog.java:284)
	at
org.eclipse.jdt.internal.corext.template.java.CodeTemplates.create(CodeTemplates.java:71)
	at
org.eclipse.jdt.internal.corext.template.java.CodeTemplates.<init>(CodeTemplates.java:56)
	at
org.eclipse.jdt.internal.corext.template.java.CodeTemplates.getInstance(CodeTemplates.java:49)
	at org.eclipse.jdt.internal.ui.JavaPlugin.getCodeTemplateStore(JavaPlugin.java:697)
	at
org.eclipse.jdt.internal.corext.codemanipulation.StubUtility.getCompilationUnitContent(StubUtility.java:348)
	at
org.eclipse.jdt.ui.CodeGeneration.getCompilationUnitContent(CodeGeneration.java:43)
	at
org.eclipse.jdt.ui.wizards.NewTypeWizardPage.createType(NewTypeWizardPage.java:1414)
	at
org.eclipse.jdt.internal.ui.wizards.NewClassCreationWizard.finishPage(NewClassCreationWizard.java:55)
	at
org.eclipse.jdt.internal.ui.wizards.NewElementWizard$2.run(NewElementWizard.java:108)
	at
org.eclipse.jdt.internal.core.BatchOperation.executeOperation(BatchOperation.java:34)
	at
org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:700)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1656)
	at org.eclipse.jdt.core.JavaCore.run(JavaCore.java:3331)
	at
org.eclipse.jdt.internal.ui.actions.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:61)
	at
org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:101)

Also CC'ing Doug for the possibly unrelated keybinding exception in the log file:

org.eclipse.ui.keys.ParseException: Cannot create key stroke with invalid
natural key: ENTF
	at java.lang.Throwable.<init>(Throwable.java)
	at java.lang.Throwable.<init>(Throwable.java)
	at org.eclipse.ui.keys.ParseException.<init>(ParseException.java:36)
	at org.eclipse.ui.keys.KeyStroke.getInstance(KeyStroke.java:181)
	at org.eclipse.ui.keys.KeySequence.getInstance(KeySequence.java:174)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.initializeOutOfOrderKeys(WorkbenchKeyboard.java:182)
	at
org.eclipse.ui.internal.keys.WorkbenchKeyboard.<clinit>(WorkbenchKeyboard.java:121)
	at java.lang.Class.initializeImpl(Native Method)
	at java.lang.Class.initialize(Class.java)
	at
org.eclipse.ui.internal.contexts.ws.WorkbenchContextSupport.<init>(WorkbenchContextSupport.java:245)
	at org.eclipse.ui.internal.Workbench.init(Workbench.java:755)
	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1301)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:243)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:140)
	at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:90)
	at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:283)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:242)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:119)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:59)
	at java.lang.reflect.Method.invoke(Method.java:390)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:269)
	at org.eclipse.core.launcher.Main.run(Main.java:700)
	at org.eclipse.core.launcher.Main.main(Main.java:684)

problem is in the code that loades the code templates
Please open a separate bug for the key binding error, and attach  
"org.eclipse.ui.workbench/Eclipse 
UI/org/eclipse/ui/internal/keys/WorkbenchKeyboard.properties" as well. 
I fixed the error by not showing dialogs from (Code)Templates.

Other issues with Template xml encoding are continued in bug .
... bug 65584.
start verifying
I verified in the code of I200406110010 that the dialog is not shown. In order
to really verify that the error that caused the dialog to appear has been fixed
I need the 3.0 NL fragments. Jonathan, can you either attach them to this bug
report or e-mail them to me.

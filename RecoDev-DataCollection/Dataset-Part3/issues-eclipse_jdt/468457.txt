If a parameter is of type object it looks like the quickfix for convertion to lambda is missing.

Example from the eclipse.platform.runtime repository:

1.)Change plug-in: org.eclipse.e4.core.tests to be based on Java 8. 
2.) Open ContextDynamicTest.java
3.) Try to convert the following in testReplaceFunctionWithStaticValue via Quickfix

context.set("bar", new IContextFunction() {
			@Override
			public Object compute(IEclipseContext context, String contextKey) {
				return "baz1";
			}
		});

Manual convertion seem to work

context.set("bar", (IContextFunction) (context1, contextKey) -> "baz1");

If a parameter is of type object it looks like the quickfix for convertion to lambda is missing.

Example from the eclipse.platform.runtime repository:

1.)Change plug-in: org.eclipse.e4.core.tests to be based on Java 8. 
2.) Open ContextDynamicTest.java
3.) Try to convert the following in testReplaceFunctionWithStaticValue via Quickfix

context.set("bar", new IContextFunction() {
			@Override
			public Object compute(IEclipseContext context, String contextKey) {
				return "baz1";
			}
		});

Manual convertion seem to work

context.set("bar", (IContextFunction) (context1, contextKey) -> "baz1");
Noopur, please take a look.
New Gerrit change created: https://git.eclipse.org/r/48753
For the conversion to lambda, it was expected that the target type should be a functional interface and since Object type is not a FI, the quick assist was not provided.

See LambdaExpressionsFix - line 632:
//TODO: could also cast to the CIC type instead of aborting...

Attached fix removes this expectation and casts the lambda expression to CIC type if the target type is not a FI.
Also, added a test for this case.

Markus, please have a look.


Not related to this bug: see bug 425412 also which needs the cast, but for different scenarios and conditions.
Noopur, is this a regression compared to 4.4?
(In reply to Dani Megert from comment #4)
> Noopur, is this a regression compared to 4.4?

No, this case was not handled and left as TODO comment in the code.
Tested the change with my example and its looks fine to me. As the change is only a one-liner I would think that the risk is minimal for RC3, given that the tests are also running successfully.
Can this be fixed for M1?
Gerrit change https://git.eclipse.org/r/48753 was merged to [master].
Commit: http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=d8744d49be133ac504ccbb29257c1afbd83cd8d8
Since we are out of 4.5 RC phase, this looks safe to be committed.
Fixed with comment #8.

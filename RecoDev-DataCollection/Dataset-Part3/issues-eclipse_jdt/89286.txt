Generating constructors is broken in M5a. 

- Problem #1

My code style defines prefixes: "a" for method arguments, and "its" for fields.
Eclipse now uses the field prefix for constructor arguments. For instance, if I
have this class:
class A
{
  private String itsName;
}

Using "Generate constructor using fields" I get the following constructor:

public A (String itsName)
{
  this.itsName = itsName;
}

In previous versions I had the expected result, which is:

public A (String aName)
{
  itsName = aName;
}

- Problem #2

Now, I create the following class:
class B extends A
{
  public String itsFoo;
}

If I use again generate constructor using fields, select the "itsFoo" field and
"A (String aName)" super constructor, I get the following, which obviously does
not compile:

public B(String aName, String aName, String itsFoo)
{
  super(aName, aName);
  this.itsFoo = itsFoo;
}

Generating constructors is broken in M5a. 

- Problem #1

My code style defines prefixes: "a" for method arguments, and "its" for fields.
Eclipse now uses the field prefix for constructor arguments. For instance, if I
have this class:
class A
{
  private String itsName;
}

Using "Generate constructor using fields" I get the following constructor:

public A (String itsName)
{
  this.itsName = itsName;
}

In previous versions I had the expected result, which is:

public A (String aName)
{
  itsName = aName;
}

- Problem #2

Now, I create the following class:
class B extends A
{
  public String itsFoo;
}

If I use again generate constructor using fields, select the "itsFoo" field and
"A (String aName)" super constructor, I get the following, which obviously does
not compile:

public B(String aName, String aName, String itsFoo)
{
  super(aName, aName);
  this.itsFoo = itsFoo;
}
Move to JDT/UI
Tobias, can you please investigate. Since this is a regression we have to fix
this for 3.1. Is this doable for M6 ?
Fixed in M6 (see bug 87643, bug 88196)
Sorry to have filed this duplicate report, but anybody has an idea why searching
for "generate constructor" on https://bugs.eclipse.org/bugs/ only gives one
result (bug 49478)?

Build 20020328

In the following compilation unit, I tried using Ctrl+Space at <|> to generate 
an inherited method implementation (for fillContextMenu).
Instead, it inserted "OpenActionGroup".
The statements following <|> were intended to be the body of the new method.
It works OK if these extra statements are not there.

package org.eclipse.ui.views.navigator;

import org.eclipse.ui.PlatformUI;
import org.eclipse.ui.actions.ActionGroup;
import org.eclipse.ui.actions.OpenFileAction;

/**
 * This is the action group for the open actions.
 */
public class OpenActionGroup extends ActionGroup {

	private IResourceNavigatorPart navigator;
	private OpenFileAction openFileAction;
//	private OpenSystemEditorAction openSystemEditorAction;
	public static final String ID = PlatformUI.PLUGIN_ID 
+ ".OpenWithSubMenu";//$NON-NLS-1$

	public OpenActionGroup(IResourceNavigatorPart navigator) {
		this.navigator = navigator;
		makeActions();
	}

	private void makeActions() {
		openFileAction = new OpenFileAction(navigator.getSite().getPage
());
//		openSystemEditorAction = new OpenSystemEditorAction
(site.getPage());
	}

<|>

		selectionChanged(selection);

		boolean anyResourceSelected =
			!selection.isEmpty()
				&& ResourceSelectionUtil.allResourcesAreOfType(
					selection,
					IResource.PROJECT | IResource.FOLDER | 
IResource.FILE);
		boolean onlyFilesSelected =
			!selection.isEmpty()
				&& ResourceSelectionUtil.allResourcesAreOfType
(selection, IResource.FILE);

		if (onlyFilesSelected)
			menu.add(openFileAction);

		if (anyResourceSelected) {
			fillOpenWithMenu(menu, selection);
			fillOpenToMenu(menu, selection);
		}
	}

	
}

Build 20020328

In the following compilation unit, I tried using Ctrl+Space at <|> to generate 
an inherited method implementation (for fillContextMenu).
Instead, it inserted "OpenActionGroup".
The statements following <|> were intended to be the body of the new method.
It works OK if these extra statements are not there.

package org.eclipse.ui.views.navigator;

import org.eclipse.ui.PlatformUI;
import org.eclipse.ui.actions.ActionGroup;
import org.eclipse.ui.actions.OpenFileAction;

/**
 * This is the action group for the open actions.
 */
public class OpenActionGroup extends ActionGroup {

	private IResourceNavigatorPart navigator;
	private OpenFileAction openFileAction;
//	private OpenSystemEditorAction openSystemEditorAction;
	public static final String ID = PlatformUI.PLUGIN_ID 
+ ".OpenWithSubMenu";//$NON-NLS-1$

	public OpenActionGroup(IResourceNavigatorPart navigator) {
		this.navigator = navigator;
		makeActions();
	}

	private void makeActions() {
		openFileAction = new OpenFileAction(navigator.getSite().getPage
());
//		openSystemEditorAction = new OpenSystemEditorAction
(site.getPage());
	}

<|>

		selectionChanged(selection);

		boolean anyResourceSelected =
			!selection.isEmpty()
				&& ResourceSelectionUtil.allResourcesAreOfType(
					selection,
					IResource.PROJECT | IResource.FOLDER | 
IResource.FILE);
		boolean onlyFilesSelected =
			!selection.isEmpty()
				&& ResourceSelectionUtil.allResourcesAreOfType
(selection, IResource.FILE);

		if (onlyFilesSelected)
			menu.add(openFileAction);

		if (anyResourceSelected) {
			fillOpenWithMenu(menu, selection);
			fillOpenToMenu(menu, selection);
		}
	}

	
}
moving to JDT Core for investigation
Fixed.

If you extract an empty interface from class X, and select "update references",
the resulting program will contain a type error because the type of idealEndPos
is updated but the type of ideal is not updated.

package bug;
public class Bug {
	private void foo() {
		X idealEndPos[][] = null;
		X ideal[] = null;
		ideal[2] = (false
				? idealEndPos[3][2]
				: idealEndPos[2][1]);
		int j = ideal.length;
	}
}

class X { }

If you extract an empty interface from class X, and select "update references",
the resulting program will contain a type error because the type of idealEndPos
is updated but the type of ideal is not updated.

package bug;
public class Bug {
	private void foo() {
		X idealEndPos[][] = null;
		X ideal[] = null;
		ideal[2] = (false
				? idealEndPos[3][2]
				: idealEndPos[2][1]);
		int j = ideal.length;
	}
}

class X { }
I have a fix for this now. See also bug #51053.

  -Frank
Fixed for M7

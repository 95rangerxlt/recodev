The default Java formatter seems to handle empty type arguments incorrectly if the second part of an assignment is placed after a newline.

Steps to reproduce
    1. Launch Eclipse, create workspace and new Java project
    2. Keep using the default formatter settings
    3. Create a new class with a method.
    3. Enter the following code fragment into the just created method:
        List<String> wrong =
                new ArrayList<>();
        System.out.println( wrong );
    4. Select entire file, press Ctrl+i for correct indentation

Expected outcome:
    No change

Actual outcome:
    List<String> wrong =
            new ArrayList<>();
            System.out.println( wrong ); // Incorrect indentation

Reproducibility:
    Always

Eclipse versions:
    4.3.1-5 for Fedora 19 (32 bit)
    Every recent build of 4.3.1 for Windows 64-bit

Workaround (which I don't like a lot):
    List<String> wrong
    = new ArrayList<>();
    System.out.println( wrong );

Bye,
G.

The default Java formatter seems to handle empty type arguments incorrectly if the second part of an assignment is placed after a newline.

Steps to reproduce
    1. Launch Eclipse, create workspace and new Java project
    2. Keep using the default formatter settings
    3. Create a new class with a method.
    3. Enter the following code fragment into the just created method:
        List<String> wrong =
                new ArrayList<>();
        System.out.println( wrong );
    4. Select entire file, press Ctrl+i for correct indentation

Expected outcome:
    No change

Actual outcome:
    List<String> wrong =
            new ArrayList<>();
            System.out.println( wrong ); // Incorrect indentation

Reproducibility:
    Always

Eclipse versions:
    4.3.1-5 for Fedora 19 (32 bit)
    Every recent build of 4.3.1 for Windows 64-bit

Workaround (which I don't like a lot):
    List<String> wrong
    = new ArrayList<>();
    System.out.println( wrong );

Bye,
G.
Reproducible with latest 4.4 I-build also.
Added the check for '<>' which was missing. Also, added tests and verified that existing JDT Text tests are green with the fix.

Released in master with:
http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=f7f5ff38485ff2cf32c4f989ec83f81dc98e6c44

Dani, please have a look.

MA (28.03.01 16:11:22)
 	1.	create a class A

	import java.util.List;
	class A {
		private List fList;

	}

	2. Hover over 'List' from the instance variable: This shows you 'java.util.List': correctly resolved
	3. Set the cursor at the beginning of the empty line, type 'List' and look at the hover help:
		This shows you 'java.util.List' and 'java.awt.List'
	4. add a space and a letter after 'List': now code resolve is showing only 'java.util.List'

NOTES:

PM (4/12/2001 3:19:27 PM)
	This is a bug in our SelectionParser which doesn't produce a fake field of type List for:

	class A {
		private List fList;
		List<--------------------------- Open on selection
	}

	Thus it activates the plan B: perform a simple name search in the context of the unit (thus finds 2 candidates).

PM (4/23/2001 4:23:16 PM)
	This behavior comes from the fact we wrote the selection engine for mostly correct code (browsing almost correct code), as opposed to	
	the completion engine which handles partial code better.

	We should synchronize the two implementations.

PM (6/18/2001 5:07:55 PM)
	Assessed.

MA (28.03.01 16:11:22)
 	1.	create a class A

	import java.util.List;
	class A {
		private List fList;

	}

	2. Hover over 'List' from the instance variable: This shows you 'java.util.List': correctly resolved
	3. Set the cursor at the beginning of the empty line, type 'List' and look at the hover help:
		This shows you 'java.util.List' and 'java.awt.List'
	4. add a space and a letter after 'List': now code resolve is showing only 'java.util.List'

NOTES:

PM (4/12/2001 3:19:27 PM)
	This is a bug in our SelectionParser which doesn't produce a fake field of type List for:

	class A {
		private List fList;
		List<--------------------------- Open on selection
	}

	Thus it activates the plan B: perform a simple name search in the context of the unit (thus finds 2 candidates).

PM (4/23/2001 4:23:16 PM)
	This behavior comes from the fact we wrote the selection engine for mostly correct code (browsing almost correct code), as opposed to	
	the completion engine which handles partial code better.

	We should synchronize the two implementations.

PM (6/18/2001 5:07:55 PM)
	Assessed.
Might be solved by triggering a code assist in this case (before searching for 
declarations)
PRODUCT VERSION:
	0.1.033 032601H19


Now selection parser produce a fake field for this case.

Fixed

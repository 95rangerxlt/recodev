Search for Issues in our plug-ins and clean up.
	This was found for JDT:

org.eclipse.jdt.ui.wizards.NewJavaProjectWizardPage
	 * [Issue: It is slightly unfortunate to make appeal to a preference in an API 
	 *  method but not expose that preference as API.
	 * ]
	public void setDefaultClassPath(IClasspathEntry[] entries, boolean appendDefaultJRE) {
	==>   There's a setter but no getter. This is a designed. Remove the Issue comment.

org.eclipse.jdt.ui.JavaUI
	 * [Issue: SelectionDialogs must be parented. shell must not be null.]
	 * @param parent the parent shell of the dialog to be created
	public static SelectionDialog createMainTypeDialog(Shell parent, IRunnableContext cont...
	==>  This is a designed: we want to allow unparented dialogs. Remove the Issue comment.


	 * [Issue: Explain semantics of opening an editor on a class file.]
	 * </p>
	 * <p>
	 * [Issue: Explain under which conditions it returns null, throws JavaModelException,
	 *  or throws JavaModelException.
	 * ]
	 * </p>
	 * @param element the input element; either a compilation unit 
	 *   (<code>ICompilationUnit</code>) or a class file (</code>IClassFile</code>)
	 * @return the editor, or </code>null</code> if wrong element type or opening failed
	 * @exception PartInitException if the editor could not be initialized
	 * @exception JavaModelException if this element does not exist or if an
	 *		exception occurs while accessing its underlying resource
	 */
	public static IEditorPart openInEditor(IJavaElement element) throws JavaModelException, PartInitException {
	==>   Better explanation would be good.

	 * Reveals the source range of the given source reference element in the
	 * given editor. No checking is done if the editor displays a compilation unit or
	 * class file that contains the given source reference.
	 * <p>
	 * [Issue: Explain what is meant by that last sentence.]
	 * </p>
	 * <p>
	 * [Issue: Explain what happens if the source reference is from some other
	 *  compilation unit, editor is not open, etc.]
	 * </p>
	public static void revealInEditor(IEditorPart part, ISourceReference element) {
	==>   Better explanation would be good.

	PackageViewer
		// defensive code. Multithread issue?
		if (item.isDisposed())
	==>   Would write: // guard for thread safety --- or --- remove the ?



NOTES:

Search for Issues in our plug-ins and clean up.
	This was found for JDT:

org.eclipse.jdt.ui.wizards.NewJavaProjectWizardPage
	 * [Issue: It is slightly unfortunate to make appeal to a preference in an API 
	 *  method but not expose that preference as API.
	 * ]
	public void setDefaultClassPath(IClasspathEntry[] entries, boolean appendDefaultJRE) {
	==>   There's a setter but no getter. This is a designed. Remove the Issue comment.

org.eclipse.jdt.ui.JavaUI
	 * [Issue: SelectionDialogs must be parented. shell must not be null.]
	 * @param parent the parent shell of the dialog to be created
	public static SelectionDialog createMainTypeDialog(Shell parent, IRunnableContext cont...
	==>  This is a designed: we want to allow unparented dialogs. Remove the Issue comment.


	 * [Issue: Explain semantics of opening an editor on a class file.]
	 * </p>
	 * <p>
	 * [Issue: Explain under which conditions it returns null, throws JavaModelException,
	 *  or throws JavaModelException.
	 * ]
	 * </p>
	 * @param element the input element; either a compilation unit 
	 *   (<code>ICompilationUnit</code>) or a class file (</code>IClassFile</code>)
	 * @return the editor, or </code>null</code> if wrong element type or opening failed
	 * @exception PartInitException if the editor could not be initialized
	 * @exception JavaModelException if this element does not exist or if an
	 *		exception occurs while accessing its underlying resource
	 */
	public static IEditorPart openInEditor(IJavaElement element) throws JavaModelException, PartInitException {
	==>   Better explanation would be good.

	 * Reveals the source range of the given source reference element in the
	 * given editor. No checking is done if the editor displays a compilation unit or
	 * class file that contains the given source reference.
	 * <p>
	 * [Issue: Explain what is meant by that last sentence.]
	 * </p>
	 * <p>
	 * [Issue: Explain what happens if the source reference is from some other
	 *  compilation unit, editor is not open, etc.]
	 * </p>
	public static void revealInEditor(IEditorPart part, ISourceReference element) {
	==>   Better explanation would be good.

	PackageViewer
		// defensive code. Multithread issue?
		if (item.isDisposed())
	==>   Would write: // guard for thread safety --- or --- remove the ?



NOTES:
moved to 'active'
issues in NewJavaProjectWizardPage are fixed.

Claude, please fix dialog issue and then move PR to Kai
done.
Not fixed in I20020226. Leaving as is but moving from critical to normal.

With the 2.0 Javadoc path.

DW (6/4/01 11:37:04 AM)
	118

	When I change a project's output location, the previous class files remain in
	the old output location. This is confusing since I now have class files in two
	locations.

EG (6/4/2001 7:33:10 AM)
	the tracking of class path changes is done in the Java model, cleaning
	up class files should also be done by the the Java model.
	Moving to JCORE

JW (6/4/01 3:34:59 PM)
	I believe the only hope on this problem is in the UI, but await PM.

PM (6/5/2001 10:08:37 AM)
	The builder is responsible for resource copying. In the incremental scenario, it should detect a binary output change, but currently does not.

JW (6/5/01 6:42:07 PM) How much work is this (complexity?)

JW (6/5/01 6:53:40 PM) Related to 1GEABIS: ITPJUI:WIN - Some imported elements cannot be deleted

PM (6/15/2001 2:04:50 PM)
	It would be quite hard to solve this one. Basically, the fact that the od binary output is obsolete is hard to detect, and I am unsure that this would
	allow the builder to flush it one last time. It simply means, from now on do not touch it anymore.
	Maybe the change operation could be handled at the JavaModel level instead, like when renaming a public type and offering to rename the CU accordingly.

DW (6/4/01 11:37:04 AM)
	118

	When I change a project's output location, the previous class files remain in
	the old output location. This is confusing since I now have class files in two
	locations.

EG (6/4/2001 7:33:10 AM)
	the tracking of class path changes is done in the Java model, cleaning
	up class files should also be done by the the Java model.
	Moving to JCORE

JW (6/4/01 3:34:59 PM)
	I believe the only hope on this problem is in the UI, but await PM.

PM (6/5/2001 10:08:37 AM)
	The builder is responsible for resource copying. In the incremental scenario, it should detect a binary output change, but currently does not.

JW (6/5/01 6:42:07 PM) How much work is this (complexity?)

JW (6/5/01 6:53:40 PM) Related to 1GEABIS: ITPJUI:WIN - Some imported elements cannot be deleted

PM (6/15/2001 2:04:50 PM)
	It would be quite hard to solve this one. Basically, the fact that the od binary output is obsolete is hard to detect, and I am unsure that this would
	allow the builder to flush it one last time. It simply means, from now on do not touch it anymore.
	Maybe the change operation could be handled at the JavaModel level instead, like when renaming a public type and offering to rename the CU accordingly.
Intentially, the new builder does NOT delete the previous class files when the 
output location is changed.

If we want to change this behaviour, let me know.
I think we can live with the current behavior. Suggest closing.
Closed.

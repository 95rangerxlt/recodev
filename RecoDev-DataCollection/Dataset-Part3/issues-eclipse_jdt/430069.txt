Ref Bug 429571 comment 13.
The following needs to be modified/moved to address the issue that these tests cannot run in 1.8

jdt.core.tests.build.IncrementalTests18 (5)- all errors(5)
jdt.core.tests.compiler(2) - all failures(2) - GRT_1.7.429203, CDT.test429110
jdt.core.tests.model(8) -All Errors (all tests in NullAnnotationModelTests)

Ref Bug 429571 comment 13.
The following needs to be modified/moved to address the issue that these tests cannot run in 1.8

jdt.core.tests.build.IncrementalTests18 (5)- all errors(5)
jdt.core.tests.compiler(2) - all failures(2) - GRT_1.7.429203, CDT.test429110
jdt.core.tests.model(8) -All Errors (all tests in NullAnnotationModelTests)
Created attachment 240745
Proposed Patch

fix: Checks for the compliance level before firing up the tests
Stephan, do you agree with the changes to the null annotation related tests ?
I can look through the other ones later today.

Basically this exercise is to make sure that our tests run clean when run
on JRE7- skipping what must be skipped properly. Thanks.
(In reply to Srikanth Sankaran from comment #2)
> Stephan, do you agree with the changes to the null annotation related tests ?
> I can look through the other ones later today.
> 
> Basically this exercise is to make sure that our tests run clean when run
> on JRE7- skipping what must be skipped properly. Thanks.

For a quick solution: yes, changes are OK.

If we anticipate a period were testing *on* JRE8 will be sparse, then we should adopt the approach taken already in org.eclipse.jdt.core.tests.compiler.regression.AbstractNullAnnotationTest.setUp(), which should succeed in accessing org.eclipse.jdt.annotation_2.0.0 even when running on JRE7-. In that scenario the annotation bundle is INSTALLED, just not RESOLVED (OSGi level). The API Platform.getBundles() does not expose un-RESOLVED bundles, but the PackageAdmin does, and I have word from Tom W. (Equinox) that that API will stay despite of being deprecated.
Setting flag to unblock immediate action.

LMK if I should prepare a patch for the long-term solution mentioned in comment 3.
This needs to be released soonish - in a day or two so that we don't have to
filter out these known issues as we look at the test results from releng runs. 

If that time frame sounds good for you - by all means please provide a patch. 
Let me know one way or other. Thanks.
(In reply to Srikanth Sankaran from comment #5)
> This needs to be released soonish - in a day or two so that we don't have to
> filter out these known issues as we look at the test results from releng
> runs. 
> 
> If that time frame sounds good for you - by all means please provide a
> patch. 
> Let me know one way or other. Thanks.

I can do it today, I'll batch 2 or 3 patches for one big test run and post a patch after success.
I released the changes to all files other than null annotation tests here:
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=8b665958137e1588837bfc81f220a8077bb55dba

I changed the proposed patch so we don't invent a new mechanism and simply
reuse the existing one: AbstractCompilerTest.buildMinimalComplianceTestSuite

Stephan, after you release your part, please resolve. Thanks.
(In reply to Srikanth Sankaran from comment #7)
> Stephan, after you release your part, please resolve. Thanks.

Patch for NullAnnotationModelTests is ready.
Since its in the middle of a batch of three commits, let me ask:
OK to wait for +1 in bug 424624 and bug 430084, or do you want this one sooner?
(In reply to Stephan Herrmann from comment #8)
> (In reply to Srikanth Sankaran from comment #7)
> > Stephan, after you release your part, please resolve. Thanks.
> 
> Patch for NullAnnotationModelTests is ready.
> Since its in the middle of a batch of three commits, let me ask:
> OK to wait for +1 in bug 424624 and bug 430084, or do you want this one
> sooner?

End of day/(night ?) release is good enough.
(In reply to Srikanth Sankaran from comment #7)
> Stephan, after you release your part, please resolve. Thanks.

Changes for NullAnnotationModelTests have been released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=04462acb576297f6fd2704a63e0758e525633e09

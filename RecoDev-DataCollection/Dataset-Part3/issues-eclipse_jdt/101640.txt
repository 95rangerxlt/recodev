Build id: I20050624-0010

Source:

public class Y {
	void foo () {}                 // a
	void fo() {}                   // b
	void bar () {
		new Y().foo();         // c
	}
}

Scenario:
- put the cursor within the foo of line c; the foo of line a get highlighted;
- delete an o; the foo of line a remains highlighted, whereas the fo of line
  b should get highlighted instead;
- delete one more o; an error mark appears on the left (since we have no f
  defined), but the foo of line a remains highlighted.
Note that refreshing the interface (either by internal means like navigating
within the source with keyboard arrows or by internal means like changing Linux
workspaces) yields the expected results (the right method declarations get
highlithted).

Build id: I20050624-0010

Source:

public class Y {
	void foo () {}                 // a
	void fo() {}                   // b
	void bar () {
		new Y().foo();         // c
	}
}

Scenario:
- put the cursor within the foo of line c; the foo of line a get highlighted;
- delete an o; the foo of line a remains highlighted, whereas the fo of line
  b should get highlighted instead;
- delete one more o; an error mark appears on the left (since we have no f
  defined), but the foo of line a remains highlighted.
Note that refreshing the interface (either by internal means like navigating
within the source with keyboard arrows or by internal means like changing Linux
workspaces) yields the expected results (the right method declarations get
highlithted).
This has been fixed a while ago. Tested using I20071002-1342.

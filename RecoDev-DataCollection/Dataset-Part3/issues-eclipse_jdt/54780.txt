i20040310

The toarray template pattern should not contain a trailing ';'. Ideally, it
should generate an expression that could be used in many different contexts
without any changes. Adding a trailing semi-colon manually is not a burden at all.

i20040310

The toarray template pattern should not contain a trailing ';'. Ideally, it
should generate an expression that could be used in many different contexts
without any changes. Adding a trailing semi-colon manually is not a burden at all.
Just wondering: what would be the use cases for using this without a ; ? I would
assume that the 80% use case is to add/use the template with trailing ;
The code generated by toarray can be passed as an argument to another method.

Right now, the generated code is neither a complete statement (it is valid, but
not useful alone) nor a valid expression (because of the trailing semi-colon).

Even when I want a ';' (usually in the return statement), I always end up having
duplicate ';'s (one is generated, I type the other one), because I can stop
thinking of toarray as an expression, and feel compelled to complete the statement.

I understand that this may be just me, and that I can edit the template if I
want to. 
Passing as parameter is a good use case.
This is already fixed in the latest I-build - if you have customized your
templates, you won't see the change, though, without reverting everything to the
defaults... not what you want, probably. --> you have to change the template
yourself.


@ comment 1: the use case is when the toArray template is used as parameter
proposal. 

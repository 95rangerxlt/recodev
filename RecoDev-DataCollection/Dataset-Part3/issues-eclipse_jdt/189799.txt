The Eclipse and javac implementations of Elements.getDocComment(Element) handle whitespace somewhat differently.  The spec is unfortunately very vague; the definition of "documentation comment" in the old JLS 1 chapter 18.1 "The Text of a Documentation Comment" (http://java.sun.com/docs/books/jls/first_edition/html/18.doc.html), and this definition is also given in the javadoc tool reference page at http://java.sun.com/javase/6/docs/technotes/tools/solaris/javadoc.html.  Neither of these references describes what happens to newlines or tabs, both of which javac treats oddly.

Nonetheless, we should try to ascertain as much of javac's behavior as we can and emulate it.

The Eclipse and javac implementations of Elements.getDocComment(Element) handle whitespace somewhat differently.  The spec is unfortunately very vague; the definition of "documentation comment" in the old JLS 1 chapter 18.1 "The Text of a Documentation Comment" (http://java.sun.com/docs/books/jls/first_edition/html/18.doc.html), and this definition is also given in the javadoc tool reference page at http://java.sun.com/javase/6/docs/technotes/tools/solaris/javadoc.html.  Neither of these references describes what happens to newlines or tabs, both of which javac treats oddly.

Nonetheless, we should try to ascertain as much of javac's behavior as we can and emulate it.
Created attachment 69196
Patch to add test case

Some test cases of whitespace that we should try to pass.
Created attachment 69439
Patch and enhanced test case

Enhanced test case, and patch that makes the tests pass.  I don't think this completely emulates javac in all regards but I will explore to see if it is good enough for our needs.
This patch does not suffice.  Another one of javac's bizarre behaviors is that if the first line of javadoc is just "/**" the line is omitted entirely, including the newline; but if the asterisks are followed by whitespace, e.g. "/** ", then the whitespace is omitted but the newline is preserved.  It appears that we need to emulate this behavior.
Created attachment 69902
Improved patch and test case

Test case and patch that also handles the case of a multiline comment where the first line contains only whitespace after the delimiter.
Olivier, the patch you showed me fixes this, so when you commit that you can resolve this.  I don't know if you also included tests but if not, feel free to add the attached test case.
Interestingly enough, my patch doesn't cover your regression tests, but it covers mine.
I'll work on a fix.
I think I got it.
If the line starts with spaces + tabs, then we want to keep one space + the number of tabs converted to 8 spaces.
I'll run all tests with this patch again.
Released for 3.3.1.
Regression tests added in org.eclipse.jdt.compiler.apt.tests.processors.elementutils.ElementUtilsProc#examineGetDocComment
Released for 3.4M1.
Same regression tests as for 3.3.1.
Philippe, +1 for 3.3.1?
The problem is inside APT. Should I request +1 from APT lead or you?
I'm not the APT lead, but here's my +1 for 3.3.1.

Also, I fixed a comment in ElementsImpl.java to better reflect the fact that we now do a pretty good job of behaving like javac.  Olivier, please include that fix in 3.3.1 as well, if possible.
+1

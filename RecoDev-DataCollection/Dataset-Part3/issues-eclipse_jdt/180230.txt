Hi,
If you have a class C that contain an inner class B in jar file J.
   public class C {
      class B {
         public D(String str) {
         }
      }
   }
If in a project you have J on the classpath, and a class like this :
  public class Test {
     public void method(String s)
        B.D variable = new B.D(s) {
        };
  }

When you try to refactor it (Convert Anonymous to nested) you have an error message with a JavaModelException that claims that B.D doesn't exist.

The problem is located in the refactoring class in the method 'addParametersToNewConstructor' that try to reuse parameters names from the original constructor to create the new one. Unfortunately in case of binary inner class as parent of the anonymous, the Binding and JavaModel levels object for the constructor have not the same number of parameter.
The Java model level have a reference to the enclosing type as first parameter of the constructor.
So when trying to access to the constructor object an JavaModelException is raised !
One solution is to use arg0, arg1 ... as parameter name in case of binary inner class.

Alexandre.

Hi,
If you have a class C that contain an inner class B in jar file J.
   public class C {
      class B {
         public D(String str) {
         }
      }
   }
If in a project you have J on the classpath, and a class like this :
  public class Test {
     public void method(String s)
        B.D variable = new B.D(s) {
        };
  }

When you try to refactor it (Convert Anonymous to nested) you have an error message with a JavaModelException that claims that B.D doesn't exist.

The problem is located in the refactoring class in the method 'addParametersToNewConstructor' that try to reuse parameters names from the original constructor to create the new one. Unfortunately in case of binary inner class as parent of the anonymous, the Binding and JavaModel levels object for the constructor have not the same number of parameter.
The Java model level have a reference to the enclosing type as first parameter of the constructor.
So when trying to access to the constructor object an JavaModelException is raised !
One solution is to use arg0, arg1 ... as parameter name in case of binary inner class.

Alexandre.
Move to JDT/UI
Your example has several compile errors. Can you provide a working example that shows the error? Is the something in the .log? 

Created attachment 62974
The solution that reproduce the bug

Open the solution, add lib.jar to the classpath and compile.
Then try to refactore it with convert anonymous to nested, we obtain an arror panel.
Created attachment 62975
The library needed to compile the solution
(In reply to comment #2)
> Your example has several compile errors. Can you provide a working example that
> shows the error? Is the something in the .log? 

The log :
!ENTRY org.eclipse.ltk.ui.refactoring 4 10000 2007-04-04 21:58:41.376
!MESSAGE Internal Error
!STACK 1
Java Model Exception: Java Model Status [InnerClassB(lib.ClassA, java.lang.String) {key=Llib/ClassA$InnerClassB;.(Ljava/lang/String;)V} [in InnerClassB [in ClassA$InnerClassB.class [in lib [in C:\Documents and Settings\afau\My Documents\lib.jar [in BugInRefactoring]]]]] does not exist]
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException(JavaElement.java:485)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:516)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:249)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo(JavaElement.java:235)
	at org.eclipse.jdt.internal.core.BinaryMethod.getParameterNames(BinaryMethod.java:167)
	at org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring.addParametersToNewConstructor(ConvertAnonymousToNestedRefactoring.java:959)
	at org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring.createNewConstructorIfNeeded(ConvertAnonymousToNestedRefactoring.java:780)
	at org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring.createNewNestedClass(ConvertAnonymousToNestedRefactoring.java:616)
	at org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring.addNestedClass(ConvertAnonymousToNestedRefactoring.java:568)
	at org.eclipse.jdt.internal.corext.refactoring.code.ConvertAnonymousToNestedRefactoring.createChange(ConvertAnonymousToNestedRefactoring.java:416)
	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:121)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:189)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1737)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)
!SUBENTRY 1 org.eclipse.jdt.core 4 969 2007-04-04 21:58:41.376
!MESSAGE InnerClassB(lib.ClassA, java.lang.String) {key=Llib/ClassA$InnerClassB;.(Ljava/lang/String;)V} [in InnerClassB [in ClassA$InnerClassB.class [in lib [in C:\Documents and Settings\afau\My Documents\lib.jar [in BugInRefactoring]]]]] does not exist


Thanks for the attached code example.
The problem got fixed in 3.3

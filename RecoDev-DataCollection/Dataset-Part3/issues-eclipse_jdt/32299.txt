I have the following method where the call to execute(Runnable) throws an 
Exception. The code does not compile with:

Kind	Status	Priority	Description	Resource	In Folder
	Location
Error			Unhandled exception type EmptyThreadPoolException
	MQCommunicationManager.java	Transidiom-
DevE/Java/Source/com/seagullsw/appinterface/server/comm/ibmmq	line 129

which is good but there is no quick fix to wrap the call with a try catch 
block: "No corrections available".

	protected void processNextInputQueueMessage() {
		final MQMessage inputMessage = this.readNextInputQueueMessage
();
		if ((this.isStopFlagUp()) || (inputMessage == null)) {
			return;
		}
        final String request = this.getStringMessage(inputMessage);
		if (request != null) {
			this.getAIS().execute(new Runnable() {
				public void run() {
					String response = 
MQCommunicationManager.this.execute(request, inputMessage);
					if (response != null) {
					
	MQCommunicationManager.this.putMessageOnQ(response, 
MQCommunicationManager.this.getOutputQueue(), inputMessage);
					}
				}
			});
		}
	}

Version: 2.1
Build id: 200302061700

I have the following method where the call to execute(Runnable) throws an 
Exception. The code does not compile with:

Kind	Status	Priority	Description	Resource	In Folder
	Location
Error			Unhandled exception type EmptyThreadPoolException
	MQCommunicationManager.java	Transidiom-
DevE/Java/Source/com/seagullsw/appinterface/server/comm/ibmmq	line 129

which is good but there is no quick fix to wrap the call with a try catch 
block: "No corrections available".

	protected void processNextInputQueueMessage() {
		final MQMessage inputMessage = this.readNextInputQueueMessage
();
		if ((this.isStopFlagUp()) || (inputMessage == null)) {
			return;
		}
        final String request = this.getStringMessage(inputMessage);
		if (request != null) {
			this.getAIS().execute(new Runnable() {
				public void run() {
					String response = 
MQCommunicationManager.this.execute(request, inputMessage);
					if (response != null) {
					
	MQCommunicationManager.this.putMessageOnQ(response, 
MQCommunicationManager.this.getOutputQueue(), inputMessage);
					}
				}
			});
		}
	}

Version: 2.1
Build id: 200302061700
Martin, any comments.
dirk, we should look if the ExceptionAnalyser finds the exception. 
Test case to reproduce:

public class T {
	static class EmptyThreadPoolException extends Exception {
	}
	public void foo() {
		run(new Runnable() {
			public void run() {
				bar();
			}
		});
	}
	public void run(Runnable r) throws Exception {
	}
	public void bar() throws EmptyThreadPoolException {
	}
}


Fixed for RC1

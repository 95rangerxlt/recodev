20030711

Up & Down button have to be enabled according to the selection: Only if a move
is possible, the button has to be enabled. E.g. if the top element is selected,
up is not possible.

It is also standard to allow multiple selection.

Not that 'D' and 'S' are used twice as Mnemonic

20030711

Up & Down button have to be enabled according to the selection: Only if a move
is possible, the button has to be enabled. E.g. if the top element is selected,
up is not possible.

It is also standard to allow multiple selection.

Not that 'D' and 'S' are used twice as Mnemonic
Created attachment 5544
proposed fix.

+ fixes bug 40290 
+ fixes bug 40292
+ fixes bug 39907
- multiselect in list still not option
released > 20030724

please have a look at the following:
- The label on the top should be improved: 'Select super constructor to invoke:'
- Menemonics are used twice
- The parameter names of the created contructor can clash 
-> public A(int x, int x) {
     super(c);
     this.x= x;
}
- no warning for duplicated constructors

- still get the exception

java.lang.IllegalArgumentException: Index out of bounds
	at org.eclipse.swt.SWT.error(SWT.java:2351)
	at org.eclipse.swt.SWT.error(SWT.java:2295)
	at org.eclipse.swt.widgets.Widget.error(Widget.java:389)
	at org.eclipse.swt.widgets.Combo.getItem(Combo.java:492)
	at
org.eclipse.jdt.ui.actions.CreateNewConstructorAction$CreateNewConstructorSelectionDialog.addSuperClassConstructorChoices(CreateNewConstructorAction.java:578)
	at
org.eclipse.jdt.ui.actions.CreateNewConstructorAction$CreateNewConstructorSelectionDialog.createDialogArea(CreateNewConstructorAction.java:455)
	at org.eclipse.jface.dialogs.Dialog.createContents(Dialog.java:577)
	at org.eclipse.jface.window.Window.create(Window.java:302)
	at
org.eclipse.ui.dialogs.SelectionStatusDialog.create(SelectionStatusDialog.java:143)
	at
org.eclipse.ui.dialogs.CheckedTreeSelectionDialog.access$superCreate(CheckedTreeSelectionDialog.java:215)
	at
org.eclipse.ui.dialogs.CheckedTreeSelectionDialog.access$0(CheckedTreeSelectionDialog.java:214)
	at
org.eclipse.ui.dialogs.CheckedTreeSelectionDialog$1.run(CheckedTreeSelectionDialog.java:240)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:84)
	at
org.eclipse.ui.dialogs.CheckedTreeSelectionDialog.create(CheckedTreeSelectionDialog.java:238)
	at org.eclipse.jface.window.Window.open(Window.java:552)
	at
org.eclipse.ui.dialogs.CheckedTreeSelectionDialog.open(CheckedTreeSelectionDialog.java:209)
	at
org.eclipse.jdt.ui.actions.CreateNewConstructorAction.run(CreateNewConstructorAction.java:331)
	at
org.eclipse.jdt.ui.actions.CreateNewConstructorAction.run(CreateNewConstructorAction.java:173)
	at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:194)
	at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:172)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:542)
	at
org.eclipse.jface.action.ActionContributionItem.access$4(ActionContributionItem.java:496)
	at
org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:468)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:848)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2188)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1878)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1680)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1663)
	at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:858)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)

class B {
  private B() {
  }
}
class C {
  int x;
}

- AddCustomConstructorOperation is still buggy
  at line 81 it takes the method returned at index null. Should be the index
from the combo. It would be better to not calculate StubUtility.genOverrideStubs
again in the operation but to pass in the selected constructor to the operation.
- the progress monitor in AddCustomConstructorOperation declares 3 steps but 45
are used.

StubUtility.genOverrideStubs() is only calculated in the operation. 
StubUtility.getOverridableConstructors() is calculated both in the action and 
the operation and this might be improved (look at the constructor for 
AddCustomConstructorOperation.
*** Bug 39804 has been marked as a duplicate of this bug. ***
Created attachment 5706
proposed fix.

fixed bug 40290 
fixed bug 40292
fixed bug 39907
fixed bug 40294
fixed bug 40298
fixed bug 40302
fixed bug 40305
+ added global source action
+ fixed collisions
+ renamed classes
+ code refactor
Created attachment 5707
proposed fix.
Created attachment 5709
plugin.xml
released patch > 20030811

bugs found so far:
- can press ok when no field checked: results in invalid code
- javadoc commenet generated by wixard misses @param tags
- The 'omit...' setting is not persisted
Created attachment 5739
proposed fixes and enhancements.

+ persists omit
+ adds to @param names in javadoc
+ only adds final fields if not set in <clinit>
changes visibility of one StubUtility method
adds a new operation class for creating constructors
adds visibility logic to SourceActionDialog and removes it from being
Getter/Setter Action specific
Created attachment 5744
proposed fixes and enhancements.
released > 20030813

BETA_JAVA8:

The following triggers two errors. I believe it should be accepted:

// ---------
interface I {
	Integer foo(X x);
}

public class X {

	int foo(I ...i) { return 10;}

	int goo() { return 0;}
	
	{
		foo(X::goo);
		foo(()-> {return 10;});
	}
}

// ----------
Interestingly javac accepts the first call to foo and rejects the second.

BETA_JAVA8:

The following triggers two errors. I believe it should be accepted:

// ---------
interface I {
	Integer foo(X x);
}

public class X {

	int foo(I ...i) { return 10;}

	int goo() { return 0;}
	
	{
		foo(X::goo);
		foo(()-> {return 10;});
	}
}

// ----------
Interestingly javac accepts the first call to foo and rejects the second.
Actually here is the intended test case - this compiles fine with javac.
but fails with eclipse: 

// --
interface I {
	Integer foo(X x);
}

public class X {
	int foo(I ...i) { return 10;}

	int goo() { return 0;}
	
	{
		foo(X::goo);
		foo((x)-> {return 10;});
	}
}

I get three errors:
Two complaints about target type not being an interface and one NPE.
Fix and tests released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=f6ec98c28a6dab858ad73a502050b5fb2a693eb4

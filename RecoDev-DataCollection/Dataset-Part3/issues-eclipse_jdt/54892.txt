Using build I20040226 on a Win2K SP4 box, the Call Hierarchy view is
consistently fooled by method names present in javadoc statement. Take this
situation: a certain method A is mentioned in the javadoc comments for another
method B (for example, in a {@link} tag). When using Call Hierarchy for method
A, it lists method B as calling method A. 

This is of course not true, since method A only appears in method B's javadoc
comments. Call Hierarchy should ignore any javadoc or regular comments appearing
in the methods.

Using build I20040226 on a Win2K SP4 box, the Call Hierarchy view is
consistently fooled by method names present in javadoc statement. Take this
situation: a certain method A is mentioned in the javadoc comments for another
method B (for example, in a {@link} tag). When using Call Hierarchy for method
A, it lists method B as calling method A. 

This is of course not true, since method A only appears in method B's javadoc
comments. Call Hierarchy should ignore any javadoc or regular comments appearing
in the methods.
Hi Arnout, please change the Component to UI (the Call Hierarchy lives there). 
Hi Markus,

I agree with Arnout that the reference from Javadoc should not show up in the
call hierarchy. When following the code flow, it is only interesting to see the
actual code references.

I know that "Search for references" also includes Javadoc references in the
result. However, can you tell me whether there is an easy way to avoid Javadoc
refs using the SearchEngine?
Jesper, we could hack something together by scanning the source string of each
match and determine whether the search result is in a comment. But since this is
very expensive, we should wait for better support from jdt-core.
Yes, I figured that might be a (rather expensive) solution. I'd prefer to wait
for  JDT Core to hopefully implement the changes in bug #51357.
This can now be fixed with the new search API from bug 56449.
Jesper, wanna have a look?
I'll take a shot - but I can almost guarantee that it will be post-M9.

/Jesper
Created attachment 9888
Patch changing search to new API

Hi Markus,

(Patch against org.eclipse.jdt.internal.corext.callhierarchy)

I took a closer look at it - and found out that it wasn't that big a deal. I've
implemented the changes. I'll make a test case showing the now Javadoc
non-issue over the weekend.
I was sure you would implement this within 24h ... ;-)

Released the patch with the following changes:
- organize imports
- removed unused ProgressMonitor field from MethodReferencesSearchRequestor

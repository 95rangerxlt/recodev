Eclipse F2
Linux motif

The default background for trees and tables in motif is grey.  As a result, any 
white backgrounds stand out.

Things like the S/C/N/F/A and running man decorations in the outline and 
hierarchy view have a white background around the letter/image.  This blends 
into the background in the default windows settings but stands out in the motif 
default setting. Does not look as elegant as on windows.  I think they should 
be transparent.

Eclipse F2
Linux motif

The default background for trees and tables in motif is grey.  As a result, any 
white backgrounds stand out.

Things like the S/C/N/F/A and running man decorations in the outline and 
hierarchy view have a white background around the letter/image.  This blends 
into the background in the default windows settings but stands out in the motif 
default setting. Does not look as elegant as on windows.  I think they should 
be transparent.
I've ordered a new version of the C icon, the other ones seem to work OK and 
the white border helps to distinguish them.
the synchronize overlay icon also had this problem. Ordered a new one
Claude, can you please check this PR.
I can confirm that the decorators look ugly.
Also, the wizard icons which have a white background look 'out of place' as 
well.
I usually use .Xresources to set the backgrounds to white, so I wouldn't notice.
But even with GTK, I see the white background occasionally, like when an 
element is selected. The difference is that on GTK, selected elements in tree 
view highlight the whole line, while on Motif, only the text label is 
highlighted.
The Class icon 'C' has this octagonal look when selected, because it's been 
antialiased against a white background. 
Also, GTK does an additional colored border (is this yellow and green?) around
the selection if the widget has the focus. It seems to do some sort of color 
negation, which looks ugly for icons which touch the upper and lower border of 
the line.

The thin border arround static, final, ... is on purpose. This guarantees that 
the icon is even "readable" if the background color matches the adornment's 
color.

Problematic are the override and implements icons. They got a larger border to 
make sure that they fully hide the synchronized icon. The problem here is that 
the override icon gets added by a decortator which doesn't know anything about 
the Java element adornments and about free "spaces". 

This is a more general issue that must be addressed by the platform.
*** Bug 19914 has been marked as a duplicate of this bug. ***
This got fixed for 3.0. We now have special icons which combine synchronized 
with override/implements to avoid the white background.

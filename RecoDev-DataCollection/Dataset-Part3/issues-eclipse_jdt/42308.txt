Refactor/Move... on the Class Name should move class to another package.

Refactor/Move... on the Class Name should move class to another package.
I mean when I right-click on the Class Name in the source because sometime
outline can be closed and isn't so obvious as directly in the source or in the
Resource Navigator (where I even can't find menu item Refactor).
This works when a top level type is selected. Member types can't be moved to a 
different package they can only be moved to another type. 

Please reopen and provide steps to reproduce the problem.
Try to right-click on the Class Name

public class ClassForMovingToAnotherPkg extends SomeOther {
                      /|\
-----------------------|   Right-click/refactor/move... 

Say: Select a static method, a static field or an instance method that  can be
moved to a component (parameter or field).               

This seems to be a regression (it used to work in the past. May be we broke it 
when fixing activation problems for other move actions).

Markus, can you please investigate.
Created attachment 5998
Fix

The problem was that the general ReorgMoveAction didn't work on text
selections.

Enabling it could cause UI problems, because it may not always be clear what's
going to be moved. Therefore, the move dialogs have been enhanced to show this
explicitly.
Martin, I released the patch. However can you please rephrase the sentence if 
more than one element is selected. We never use item in the UI. The sentence 
should read: "Choose destination for 2 selected elements"
Created attachment 6011
Fix 2

( Renamed Martin->Markus ;-)

> We never use item in the UI.
... except for the StatusLine message for multiselections in the Package
Explorer (which is probably to look similar to the Resource Navigator).

ReorgMove can also be applied to non-java files. Should they also also be
called 'elements' or should we distinguish (java: 'elements' / non-java:
'items')?
We talk about:

- items, iff we enumerate thing with knowing what they are
- resource, iff we talk about projects, folders, ....
- Java element or elements, iff we talk about Java specific elements.

Since we mostly move Java elements I would stick to elements.

Fixed released to HEAD.

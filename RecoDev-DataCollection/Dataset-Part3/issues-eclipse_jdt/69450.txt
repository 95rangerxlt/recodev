I used Refactor -> Extract local variable on the following piece of code:

[ getPattern().matcher(line).matches();]
^^ note space in beginning of selection

I was told that in order to use the Extract Local, I had to select an expression.

Getting rid of the space that I'd highlighted, it worked fine:
[getPattern().matcher(line).matches();]

Matcher matcher = getPattern().matcher(line);
matcher.matches();

It seems that ignoring whitespace would be trivial and that it wouldn't need to prevent such extractions 
from happening.

Mac OS X.3.4 (though suspect platform agnostic) on Eclipse 3.0 final.

I used Refactor -> Extract local variable on the following piece of code:

[ getPattern().matcher(line).matches();]
^^ note space in beginning of selection

I was told that in order to use the Extract Local, I had to select an expression.

Getting rid of the space that I'd highlighted, it worked fine:
[getPattern().matcher(line).matches();]

Matcher matcher = getPattern().matcher(line);
matcher.matches();

It seems that ignoring whitespace would be trivial and that it wouldn't need to prevent such extractions 
from happening.

Mac OS X.3.4 (though suspect platform agnostic) on Eclipse 3.0 final.
Move to JDT/UI
We should indeed try to me a little bit smarter here.
[does not seem to be Mac specific. Setting Hardware & OS to "All"]
no plans for this at the moment.
As of now 'LATER' and 'REMIND' resolutions are no longer supported.
Please reopen this bug if it is still valid for you.
Any plans to fix this issue? 

BTW: in some cases "Extract local variable" works even with selecteded the leading whitespace:

[ getPattern()] works (even though Eclipse correctly reports a compile error on that line due to the missing ';')
[ getPattern();] selecting everything including the ';' work
[ getPattern();] selecting everything but not the ';' does NOT work


(Tested with Eclipse 4.2.0)
(In reply to comment #6)
> Any plans to fix this issue? 
> 
> BTW: in some cases "Extract local variable" works even with selecteded the
> leading whitespace:
> 
> [ getPattern()] works (even though Eclipse correctly reports a compile error
> on that line due to the missing ';')
> [ getPattern();] selecting everything including the ';' work
> [ getPattern();] selecting everything but not the ';' does NOT work
> 
> 
> (Tested with Eclipse 4.2.0)

I think you got it wrong. If the ';' is also selected then the refactoring is not available which is expected. The whitespace bug got fixed a while go.
Created attachment 225384
Refactoring works with selected semicolon
Created attachment 225385
Refactoring does not work without selected semicolon
Please see the two screenshot that shows the behaviour in my Java editor (Eclipse 4.2.0)
(In reply to comment #10)
> Please see the two screenshot that shows the behaviour in my Java editor
> (Eclipse 4.2.0)

I see. But still, the white psace itself is no longer a problem.

zrh plugin-export I20040310.from20040312_1045

- set caret into a method invocation of an overloaded method
- Edit > Parameter Hints
-> the popup shell is resizable but the table doesn't resize, revealing black
background

zrh plugin-export I20040310.from20040312_1045

- set caret into a method invocation of an overloaded method
- Edit > Parameter Hints
-> the popup shell is resizable but the table doesn't resize, revealing black
background
*** Bug 60066 has been marked as a duplicate of this bug. ***
Patch for: (org.eclipse.jface.text)
org.eclipse.jface.text.contentassist.ContextInformationPopup

Changed layout code to be like the CompletionProposalPopup (minus remembering
size).  No longer sets a minimum size on te table's layout, but creates the
shell with the minimum size and allows children to grow/shrink as needed.

Index: ContextInformationPopup.java
===================================================================
RCS file:
/home/eclipse/org.eclipse.jface.text/src/org/eclipse/jface/text/contentassist/ContextInformationPopup.java,v
retrieving revision 1.22
diff -u -r1.22 ContextInformationPopup.java
--- ContextInformationPopup.java	21 May 2004 09:02:35 -0000	1.22
+++ ContextInformationPopup.java	12 Jun 2004 23:30:01 -0000
@@ -25,6 +25,8 @@
 import org.eclipse.swt.events.VerifyEvent;
 import org.eclipse.swt.graphics.Color;
 import org.eclipse.swt.graphics.Point;
+import org.eclipse.swt.layout.GridData;
+import org.eclipse.swt.layout.GridLayout;
 import org.eclipse.swt.widgets.Control;
 import org.eclipse.swt.widgets.Display;
 import org.eclipse.swt.widgets.Shell;
@@ -476,10 +478,19 @@
 		fContextSelectorShell= new Shell(control.getShell(), SWT.ON_TOP | SWT.RESIZE);
 		fContextSelectorTable= new Table(fContextSelectorShell, SWT.H_SCROLL |
SWT.V_SCROLL);
 
+		fContextSelectorTable.setLocation(0, 0);
+		
+		GridLayout layout= new GridLayout();
+		layout.marginWidth= 0;
+		layout.marginHeight= 0;     
+		fContextSelectorShell.setLayout(layout);       
+		
+		GridData data= new GridData(GridData.FILL_BOTH);
+		
 		int height= fContextSelectorTable.getItemHeight() * 10;
-		fContextSelectorShell.setSize(302, height + 2);
-		fContextSelectorTable.setSize(300, height);
-		fContextSelectorTable.setLocation(1, 1);
+		
+		fContextSelectorTable.setLayoutData(data);
+		fContextSelectorShell.setSize(300, height);
 		
 	
fContextSelectorShell.setBackground(control.getDisplay().getSystemColor(SWT.COLOR_BLACK));
 		

Thanks for the patch. I fixed the bug differently though: the table defines the
size via layout so that we don't need to use setSize.

*** Bug 77616 has been marked as a duplicate of this bug. ***
*** Bug 83918 has been marked as a duplicate of this bug. ***

In a Java class try to declare a protected field by typing "prot <ctrl-space>"
The only option you are given it so declare a protected method.  The simple, 
complete "prot" to "protected" is not an option.

Same is true for public/private...

Also, interestingly, if you do "priv<ctrl-space>" you get the additional option 
of declaring a private static method.  Why can I not do code completion to 
declare a public static method?

In a Java class try to declare a protected field by typing "prot <ctrl-space>"
The only option you are given it so declare a protected method.  The simple, 
complete "prot" to "protected" is not an option.

Same is true for public/private...

Also, interestingly, if you do "priv<ctrl-space>" you get the additional option 
of declaring a private static method.  Why can I not do code completion to 
declare a public static method?
the entries for private, protected and public methods are all templates.
given that it is trivial for users to add their own new templates i think
closing should be considered here.
currently there're simply no templates for fields.

moving to text 
The current set of templates is sensible and focuses on methods. Users can 
create additional templates if they like.
I beg to differ.  Even simple IDEs will allow you to complete Java keywords 
simply as java keywords.  An answer like "users can add it themselves" is 
certainly good for whacky/unusual things but most everyone needs to type these 
keywords.  The current situation forces everyone to type the whole thing (one 
of the things that code completion/assist is supposed to prevent).

I suggest that these templates be included in JDT as standard.
Has been fixed a while ago.

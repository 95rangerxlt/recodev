I20050610-0010

- Have the code below
- move member type to new file
-> B2 is changed from a non-generic type to a generic type

Expected: this should only happen if the inner type is non-static, as the inner
type really does not have a reference to the outer's type parameter.

Enhancement: even if the inner type was non-static, the reference could be made
optional if there are not references from the inner type (similar to the
optional 'enclosing instance field' name).

I20050610-0010

- Have the code below
- move member type to new file
-> B2 is changed from a non-generic type to a generic type

Expected: this should only happen if the inner type is non-static, as the inner
type really does not have a reference to the outer's type parameter.

Enhancement: even if the inner type was non-static, the reference could be made
optional if there are not references from the inner type (similar to the
optional 'enclosing instance field' name).
(In reply to comment #0)
> - Have the code below

class A<T> {
	static class B2 {
	}
	
	private B2 foo() {
		return new B2();
	}
}


Fixed in HEAD > 20060322

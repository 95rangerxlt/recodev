Build 20020328

Define and save the following class:

public class A {
	protected B b;
	public void doit() {
		b = new B();
	}
}

The problem underlining shows squiggles under the declaration and reference to 
B, because such a type does not exist.  Now define type B.  The compile problems 
(markers) go away in A.java, but the error underlining and "bird's eye view" 
still indicate problems in A until A is next dirtied.

The reverse is also true.  If I delete type B, the problem painting and "bird's 
eye view" do not show errors in type A until the editor for A is dirtied.

Build 20020328

Define and save the following class:

public class A {
	protected B b;
	public void doit() {
		b = new B();
	}
}

The problem underlining shows squiggles under the declaration and reference to 
B, because such a type does not exist.  Now define type B.  The compile problems 
(markers) go away in A.java, but the error underlining and "bird's eye view" 
still indicate problems in A until A is next dirtied.

The reverse is also true.  If I delete type B, the problem painting and "bird's 
eye view" do not show errors in type A until the editor for A is dirtied.
idea was to trigger a reconcile on activation as well.
Build F2.

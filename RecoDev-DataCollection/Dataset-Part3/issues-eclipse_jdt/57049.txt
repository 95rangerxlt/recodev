I am constructing a wizard that will import java projects from a legacy IDE 
into eclipse. To do this I am pre-processing an external project and passing 
information to the New Java Project wizard. I am doing this by creating my own 
wizard and adding the java project wizard pages in after my initial page. 
Unfortunately I am finding that I must replace both the Java project pages 
because there is no way to set the name field in the first page since it is 
held in a final inner class. If I could subclass to add a setter for the 
project name field than I would not have to play catchup every time the 
project page classes change. In fact, if a setter was provided instead of just 
a getter, I wouldn't have to subclass at all.

I am constructing a wizard that will import java projects from a legacy IDE 
into eclipse. To do this I am pre-processing an external project and passing 
information to the New Java Project wizard. I am doing this by creating my own 
wizard and adding the java project wizard pages in after my initial page. 
Unfortunately I am finding that I must replace both the Java project pages 
because there is no way to set the name field in the first page since it is 
held in a final inner class. If I could subclass to add a setter for the 
project name field than I would not have to play catchup every time the 
project page classes change. In fact, if a setter was provided instead of just 
a getter, I wouldn't have to subclass at all.
The JavaProjectWizardFirstPage is an internal class which is an 
evolved 'WizardNewProjectCreationPage'.
Same for the JavaProjectWizardSecondPage that has evolved from 
the 'JavaCapabilityConfigurationPage'

So the clean way of doing it is to use WizardNewProjectCreationPage and the 
JavaCapabilityConfigurationPage.
See the attachment of an example how would this be done.
Created attachment 9136
example code
The problem is that the New Java Project uses a modified 
WizardNewProjectCreationPage and thus I am doing my own thing there and NOT 
what New Java Project is doing. In this case I am doing this through the 
Import wizard and must mimic the New Java Project functionality in every way 
while augmenting with the additional information that I have to import. Your 
solution means that I still have to track the changes you make with each 
release.
I can add a setter, but you will still have to track all my changes: It's an 
internal class as we need the freedom to experiment at this stage. Only with 
the API classes you're guaranteed to not be broken.

Is it just the latest UI you want or are you using the class path detector code?

added a setter for the name > 20040402
But, as said, using internal classes is never a good idea.
I am using the whole page. I realize that internal classes shouldn't be used 
in this way, but these classes really shouldn't be internal.
We're trying out UI ideas on the JavaProjectWizardFirstPage hoping that they 
will eventually go into the 'WizardNewProjectCreationPage'.
Cool

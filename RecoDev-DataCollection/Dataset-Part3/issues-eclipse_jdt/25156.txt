With balance parens enabled, if code assist generates, e.g., foo(|), where |
indicates the cursor position, and you enter an argument and type a right
parenthesis at the end, e.g., foo(true|), the result is foo(true)|.

However, if you are already within parenthesis and perform the same actions,
typing a right parenthesis, e.g., bar(foo(true|)), the result is bar(foo(true)|)).

This is not only inconsistent, it makes the feature much harder to use.

With balance parens enabled, if code assist generates, e.g., foo(|), where |
indicates the cursor position, and you enter an argument and type a right
parenthesis at the end, e.g., foo(true|), the result is foo(true)|.

However, if you are already within parenthesis and perform the same actions,
typing a right parenthesis, e.g., bar(foo(true|)), the result is bar(foo(true)|)).

This is not only inconsistent, it makes the feature much harder to use.
Still broken in M4. Very frustrating.
"Unassign" PRs because of changes in staffing
This has been fixed for M5, assuming that you does not leave the "smart mode" 
in between, i.e. nesting of parenthesis, brackets, quotes is now supported.
Good, but why is this a mode?

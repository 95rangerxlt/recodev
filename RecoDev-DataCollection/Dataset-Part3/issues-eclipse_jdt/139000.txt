N20060426

- have the CU below
- invoke code assist at the caret (|)
- select the proposal for the X.Z.Y type

> expected: pr136124.X.Z.Y is added to the imports
< actual: the inserted type name is fully qualified

--------- X.java ----------
package pr136124;

public class X {
    void foo() {
        Y|
    }

    class Z<T> {
        public class Y {}
    }
}
---------------------------

The reasons seems to be that ContextSensitiveImportRewriteContext::findInContext considers any matching type found in an inner type to be a collision; it should rather not count it and report NOT_FOUND.

N20060426

- have the CU below
- invoke code assist at the caret (|)
- select the proposal for the X.Z.Y type

> expected: pr136124.X.Z.Y is added to the imports
< actual: the inserted type name is fully qualified

--------- X.java ----------
package pr136124;

public class X {
    void foo() {
        Y|
    }

    class Z<T> {
        public class Y {}
    }
}
---------------------------

The reasons seems to be that ContextSensitiveImportRewriteContext::findInContext considers any matching type found in an inner type to be a collision; it should rather not count it and report NOT_FOUND.
fixed > I20060628-1135

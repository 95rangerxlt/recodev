In I20070809-0010.

I have the following code in my createPartControl(*):
		final Action a = new Action() {
			public void run() {
				System.out.println("Run away!"); //$NON-NLS-1$
			}
		};
using org.eclipse.jface.action.Action.

When I put my cursor in Action(^) and hit CTRL+SPACE I see the list of constructors I can use.  Selecting one pops up the Override/Implement methods dialog and doesn't leave me with the contructor "parameter tooltips" like I expected.

It might have something to do with Action being declared abstract ... but I've already made it concrete.

PW

In I20070809-0010.

I have the following code in my createPartControl(*):
		final Action a = new Action() {
			public void run() {
				System.out.println("Run away!"); //$NON-NLS-1$
			}
		};
using org.eclipse.jface.action.Action.

When I put my cursor in Action(^) and hit CTRL+SPACE I see the list of constructors I can use.  Selecting one pops up the Override/Implement methods dialog and doesn't leave me with the contructor "parameter tooltips" like I expected.

It might have something to do with Action being declared abstract ... but I've already made it concrete.

PW
>Selecting one pops up the Override/Implement methods
>dialog and doesn't leave me with the contructor "parameter tooltips" like I
>expected.
That wouldn't make much sense there as you can only use the 0-arg constructor with that code. Hence we give you the possibility to add further methods.
(In reply to comment #1)
> >Selecting one pops up the Override/Implement methods
> >dialog and doesn't leave me with the contructor "parameter tooltips" like I
> >expected.
> That wouldn't make much sense there as you can only use the 0-arg constructor
> with that code. Hence we give you the possibility to add further methods.
> 

All the constructors are valid at that location, and are shown in the content assist proposal window. ex (which is what I was heading for):

Action a = new Action("&Help") {
};

I expect it to work exactly the same as this code (which does what I expect):

MenuManager manager = new MenuManager(^) {
};

Later,
PW

Dani now gets a coffee ;-)
>When I put my cursor in Action(^) and hit CTRL+SPACE I see the list of
>constructors I can use. 
This is not true and that's the bug ;-)
What you see are the Anonymous Inner Type proposals (look at the label).

If you look at the MenuManager use case you see that you have both: the constructor and the anonymous inner type proposals.

The constructor proposals are missing for the new Action() {...} case.

Moving to JDT Core.
Code assist works as design.
When the completed type is abstract only anonymous type are proposed. Constructors are not proposed because it would produce invalid code ('new Action(){};' is valid but 'new Action();' isn't).

If you are only interested by "parameter tooltips" you should use Ctrl+Shift+Space (Context Information) instead of Ctrl+Space (Code Assist).
But Context Information seems to have a bug for abstract type like Action and doesn't show parameters in this case.

Move to JDT Text.
We should go and ask for anonymous type proposals and try to get the parameter hints from them.
Fixed in HEAD.
Available in builds > N20070912-0010.

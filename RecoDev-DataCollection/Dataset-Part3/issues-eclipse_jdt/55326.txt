build I20040318

- In the following CU, select the programs var and choose Ctrl+1 / Local Rename.
- Type abc (without Enter or Esc)
- move the cursor to the start of the line using Home
- Enter
- The first box is undrawn properly, but not the other two.
- Moving the cursor to those lines cleans it up.
- Other variants like typing before or after the box on the same line also has
problems.

import org.eclipse.swt.program.Program;

public class Test {
    public static void main(String[] args) {
        
        Program[] programs = Program.getPrograms();
        for (int i = 0; i < programs.length; ++i) {
            System.out.println(programs[i].getName());
        }
    }
}

build I20040318

- In the following CU, select the programs var and choose Ctrl+1 / Local Rename.
- Type abc (without Enter or Esc)
- move the cursor to the start of the line using Home
- Enter
- The first box is undrawn properly, but not the other two.
- Moving the cursor to those lines cleans it up.
- Other variants like typing before or after the box on the same line also has
problems.

import org.eclipse.swt.program.Program;

public class Test {
    public static void main(String[] args) {
        
        Program[] programs = Program.getPrograms();
        for (int i = 0; i < programs.length; ++i) {
            System.out.println(programs[i].getName());
        }
    }
}
Could reproduce (though not consistently). Hopefully for M8
To reproduce, it is important to not have any squiggles in the cu, as updating
these will also fix the painting. Also, turn off mark occurrences. Modified the
example to be import free:


package test;

public class PR55326 {
    public static void main(String[] args) {
        
        Object[] programs = new Object[0];
        for (int i = 0; i < programs.length; ++i) {
            System.out.println(programs[i].toString());
        }
    }
}
I suspect the following:

- upon leaving linked mode:
    - the annotations get removed 
    - a corresponding event is sent out
    - the annotation painter posts an async redraw
    - the positions that the annotations are based on get removed 
      from the document
    - the document is updated, but the positions are not
    - the painter invalidates the wrong region of the text widget based on 
      out-of-date positions

This happens if the linked mode is exited due to a typed key
(LinkedUIControl.[...].verifyKey), and the key modifies the document. In other
cases, the async paint request gets run before the document is modified again.

Solution paths I will try:
- posting the exit call on the LinkedEnvironment asynchronously, so that the
document changes get reflected on the positions.
- however, this is a problem of AnnotationPainter. It could perhaps hang on to
the positions that the annotations are based on, and update the itself using a
DefaultPositionUpdater?
fixed > 20040319

fix involves two spots:
- in the linkedUI leave method, post the removal of positions to make sure any
pending document changes are reflected in the positons
- in LinkedEnvironment::DocumentListener: don't exit in the aboutToBeChanged,
but only in the documentChanged method to ensure that all positions are updated
to the change at hand.
fixed

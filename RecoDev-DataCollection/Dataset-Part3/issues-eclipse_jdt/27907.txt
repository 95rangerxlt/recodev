If you type something like the following

void myMethod()
{
  try
  {
    a=someCall();
  }
  catch(Exception e)
  {
  }
  System.out.println(a);
}

the variable 'a' isn't declared and code assist proposes to create a 
declaration for the local variable 'a'. But it is created inside the
current block and not in the context of the method:

void myMethod()
{
  try
  {
    int a=someCall();
  }
  catch(Exception e)
  {
  }
  System.out.println(a); // we've still got a problem here...
}

Code assist should detect wether the variable is used only inside the current 
block and create the delcaration only block local if the variable isn't used 
outside of the block.

If you type something like the following

void myMethod()
{
  try
  {
    a=someCall();
  }
  catch(Exception e)
  {
  }
  System.out.println(a);
}

the variable 'a' isn't declared and code assist proposes to create a 
declaration for the local variable 'a'. But it is created inside the
current block and not in the context of the method:

void myMethod()
{
  try
  {
    int a=someCall();
  }
  catch(Exception e)
  {
  }
  System.out.println(a); // we've still got a problem here...
}

Code assist should detect wether the variable is used only inside the current 
block and create the delcaration only block local if the variable isn't used 
outside of the block.
fixed > 20031212

Quic fix now evaluates the correct place to add the new declaration so that also
other errors of the missing variable are fixed.

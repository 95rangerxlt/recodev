The Preview window shouldn't be sized to fit the larger display if it actually shows up on the smaller 
display.
OS X 10.3.8, Java 1.4.2.  Use two displays of different sizes (laptop 1280 x 854, external monitor 1280 
x 1024, menu and dock on the smaller laptop display), two Eclipse windows open, one per display, 
maximized, containing the same project. Select a java file in Package Explorer on either window and 
choose Refactor|Rename..., then change the name in the Rename Compilation Unit dialog and select 
Preview.  The preview UI will usually appear centered on the smaller laptop display, but since it is too 
large it gets clipped on the top and bottom and you cannot access the window title bar (with it's close, 
maximize and iconize icons), the grow handle in the lower right corner or the Cancel and OK buttons. 
The scroll bar is also clipped so you cannot view all the items in the original source and refactored 
source columns. You can still press the escape key to cancel or press return for OK.

The Preview window shouldn't be sized to fit the larger display if it actually shows up on the smaller 
display.
OS X 10.3.8, Java 1.4.2.  Use two displays of different sizes (laptop 1280 x 854, external monitor 1280 
x 1024, menu and dock on the smaller laptop display), two Eclipse windows open, one per display, 
maximized, containing the same project. Select a java file in Package Explorer on either window and 
choose Refactor|Rename..., then change the name in the Rename Compilation Unit dialog and select 
Preview.  The preview UI will usually appear centered on the smaller laptop display, but since it is too 
large it gets clipped on the top and bottom and you cannot access the window title bar (with it's close, 
maximize and iconize icons), the grow handle in the lower right corner or the Cancel and OK buttons. 
The scroll bar is also clipped so you cannot view all the items in the original source and refactored 
source columns. You can still press the escape key to cancel or press return for OK.
This issue also exists with Eclipse 3.0.1 using the exact same setup as mentioned, except for using 
3.0.1 instead of 3.1M5, of course ;-)
The refactoring dialog is created using the parent shell which is the workbench
window. To deterimine the maximum size the dialog uses 

Rectangle display= shell.getDisplay().getClientArea();

Veronika, is shell.getDisplay() multi display aware ?
Display.getClientArea() returns the combined client area of all the monitors.  
You should use shell.getMonitor().getClientArea().  The getMonitor() method 
returns the monitor that the shell primarily occupies.  Alternately, you can 
use display.getMonitors() to get all the monitors and make a decision based on 
the various sizes.
Thanks Veronika.
Fixed.

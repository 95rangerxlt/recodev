When I go to the libraries tab of the Java build path, and select the Edit 
button, I should be able to select a different variable to extend without 
having to also re-select the library file.

Here's an example:
1. Create a project
2. Create a classpath variable named "ECLIPSE" and point it to your existing 
Eclipse directory (i.e. the same location referenced by "ECLIPSE_HOME").
3. On the project's Java build path, add a variable that points 
to "ECLIPSE/plugins/org.junit_3.7.0/junit.jar"
4. Change the classpath variable "ECLIPSE" in the global properties to point to 
C:\temp.  Notice that you correctly get a build error for that library no 
longer being locatable.
5. Edit the properties again for the project.  On the Libraries tab, select the 
entry for junit.jar and press Edit.
6. In the dialog that pops up, select "ECLIPSE_HOME" instead of "ECLIPSE".  At 
this point, the OK button should be enabled since I selected a valid location 
for junit.jar.  In other words, the choice of a different variable in the Edit 
dialog should force validation on the existing extension relative to that 
variable.

Let me know if this scenario is unclear.  It is a scenario I encountered 
recently, and it's painful if you have numerous entries that have to be 
corrected this way (I actually had my own "ECLIPSE" variable 
before "ECLIPSE_HOME" started showing up in Eclipse builds).

When I go to the libraries tab of the Java build path, and select the Edit 
button, I should be able to select a different variable to extend without 
having to also re-select the library file.

Here's an example:
1. Create a project
2. Create a classpath variable named "ECLIPSE" and point it to your existing 
Eclipse directory (i.e. the same location referenced by "ECLIPSE_HOME").
3. On the project's Java build path, add a variable that points 
to "ECLIPSE/plugins/org.junit_3.7.0/junit.jar"
4. Change the classpath variable "ECLIPSE" in the global properties to point to 
C:\temp.  Notice that you correctly get a build error for that library no 
longer being locatable.
5. Edit the properties again for the project.  On the Libraries tab, select the 
entry for junit.jar and press Edit.
6. In the dialog that pops up, select "ECLIPSE_HOME" instead of "ECLIPSE".  At 
this point, the OK button should be enabled since I selected a valid location 
for junit.jar.  In other words, the choice of a different variable in the Edit 
dialog should force validation on the existing extension relative to that 
variable.

Let me know if this scenario is unclear.  It is a scenario I encountered 
recently, and it's painful if you have numerous entries that have to be 
corrected this way (I actually had my own "ECLIPSE" variable 
before "ECLIPSE_HOME" started showing up in Eclipse builds).
new edit dialog for classpath variables added (similar to source attachments 
for variables).
> 20020924

I have a simple example of a class that has an Annotation and Annotation factory jar configured thru the APT UI. When I uncheck the 'Enable project specific settings' on the 'Annotation Processing' dialog then click ok, the rebuild dialog appears on which I click 'Yes'. If a rebuild had infact occured since now the annotaiton processign has been turned off I would expect to see build errors. 

Code sample below and annotation factory jar attached

Occurs in version 3.2 and 3.1.2

Repro Steps
--------------
1. New Java project
2. New Class Testing, see code sample below
3. Add HelloWorld.jar to build path
4. Enable project specific settings and annotation processing on 'Annotation Processing' dialog (project properties --> java compiler --> annotaiton processing --> 'enable project specific properties' and 'Enable annotation processing'
5. Enable 'Project Specific settings' on Factory path dialog (project properties --> Java Compiler --> Annotation Processing --> Factory path --> Enable project Specific settings)
5. Add HelloWorld.jar as external jar on Annotation Factory Path (Project Properties --> Java Compiler --> Annotation Processing --> Factory Path --> Add External JARs...)
6. Make sure project builds
7. Now un-check the Project Specific settings on the Factory path dialog and click Yes on the rebuild pop up dialog. (project properties --> java compiler --> annotaiton processing --> 'enable project specific properties')
8. Project has no build errors
9. Open 'Annotation Processing' dialog again and see that now annotation processing is not enabled for project. Would expect build errors?


Code Sample
-------------------
package com.testing;

import generatedfilepackage.GeneratedFileTest;
import org.eclipse.jdt.apt.tests.annotations.helloworld.*;

public class Testing {

	
	@HelloWorldAnnotation
	public void myMethod() {
		
		GeneratedFileTest.helloWorld();
		
	}
}

I have a simple example of a class that has an Annotation and Annotation factory jar configured thru the APT UI. When I uncheck the 'Enable project specific settings' on the 'Annotation Processing' dialog then click ok, the rebuild dialog appears on which I click 'Yes'. If a rebuild had infact occured since now the annotaiton processign has been turned off I would expect to see build errors. 

Code sample below and annotation factory jar attached

Occurs in version 3.2 and 3.1.2

Repro Steps
--------------
1. New Java project
2. New Class Testing, see code sample below
3. Add HelloWorld.jar to build path
4. Enable project specific settings and annotation processing on 'Annotation Processing' dialog (project properties --> java compiler --> annotaiton processing --> 'enable project specific properties' and 'Enable annotation processing'
5. Enable 'Project Specific settings' on Factory path dialog (project properties --> Java Compiler --> Annotation Processing --> Factory path --> Enable project Specific settings)
5. Add HelloWorld.jar as external jar on Annotation Factory Path (Project Properties --> Java Compiler --> Annotation Processing --> Factory Path --> Add External JARs...)
6. Make sure project builds
7. Now un-check the Project Specific settings on the Factory path dialog and click Yes on the rebuild pop up dialog. (project properties --> java compiler --> annotaiton processing --> 'enable project specific properties')
8. Project has no build errors
9. Open 'Annotation Processing' dialog again and see that now annotation processing is not enabled for project. Would expect build errors?


Code Sample
-------------------
package com.testing;

import generatedfilepackage.GeneratedFileTest;
import org.eclipse.jdt.apt.tests.annotations.helloworld.*;

public class Testing {

	
	@HelloWorldAnnotation
	public void myMethod() {
		
		GeneratedFileTest.helloWorld();
		
	}
}
Created attachment 38709
@HelloWorldAnnotation factory jar

Simple Annotation factory jar for the annotation HellowWorldAnnotation, generates simple class that has static hellow world method.
Walter, can you take a look at this?
With autobuild turned on, we get an autobuild in response to deleting the .settings/...apt.core.prefs file, even before the manual build that clicking "yes" is about to cause.  The autobuild thread hits GeneratedResourceChangeListener with a PRE_BUILD, but since that file is not a parent file nor a generated file, nothing happens; and then we clear the list of changed resources.

Then the manual build fires.  This calls project.build().  The delta it comes up with is empty, presumably because the autobuild already caught the change, so nothing happens in Workspace.aboutToBuild().  But then it goes on to fire a Java build anyway.  But at this point, the list of CompilationParticipants is empty, because AptCompilationParticipant.doesParticipateInProject() checks whether APT is enabled, and it isn't.

So basically, this is yet another bug caused by trying to pretend that APT doesn't exist when compiling non-APT projects.  More thought required to figure how to patch this particular hole.
In AptConfigurationBlock (the UI), we check to see if settings have changed, and call the refresh routines in AptProject() if so.  Right fix is to enhance this check so that if the project no longer has project-specific settings, we check the original values against the default values to see if a refresh is in order.  Fixed in 3.1.2, need to merge into 3.2 as well.
Fixed in 3.2 as well.

20020521
The natural user action when presented with the cute little "light bulb" icon 
in the breakpoint bar is to try to right-click on the light bulb.
It would be really nice if "Quick Fix" was on the popup menu there.
(i.e. the same popup menu that has Add/Enable Breakpoints and Add Bookmark/Task)

This would probably be less of a "cognitive leap" for new users, and old users 
might find it handy too.  :)

20020521
The natural user action when presented with the cute little "light bulb" icon 
in the breakpoint bar is to try to right-click on the light bulb.
It would be really nice if "Quick Fix" was on the popup menu there.
(i.e. the same popup menu that has Add/Enable Breakpoints and Add Bookmark/Task)

This would probably be less of a "cognitive leap" for new users, and old users 
might find it handy too.  :)
+1 from here
i entered that before
since F2 you can click on the light bulb directly. We will not add the action 
to the context menu for 2.0
Consider for 2.1
You can just click on the icon. However, it should also appear in the menu.
Easy to implement by putting sth. like the following into CompilationUnitEditor:

protected void rulerContextMenuAboutToShow(IMenuManager menu) {
	super.rulerContextMenuAboutToShow(menu);
	IAction action= getAction("CorrectionAssistProposal"); 
	if (action != null && action.isEnabled())
		addAction(menu, ITextEditorActionConstants.MB_ADDITIONS,
"CorrectionAssistProposal");
}

We'll need the following from the quick fix action (JDT UI): 

1) Real enablement code (should be possible, the menu entry should only be
present when a light bulb is showing) (We're not talking about the blue (quick
assist) lightbulb here).

2) A way to set the offset for which quick fix proposals are to be shown. At the
moment, JavaCorrectionAssistant takes the position from the viewer selection,
but when invoking from the ruler context menu, we'll want the relevant proposals
for the line where the marker is at / the context menu is opened for.

Martin, what do you think.


fixed > 20030916

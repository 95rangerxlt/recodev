I20020618

In a java file editor type:
   File.getP and invoke code assist.

Scroll down to getPath and wait for hover help.

The help claims that "The resulting string uses the { character..."

Clearly the { character is not used to separate path components.

If you check the Java Doc at 
http://java.sun.com/products/jdk/1.2/docs/api/index.html

You find that { is actually a link "default nae-separator character".  So I 
suspect the problem is whatever we use to massage JavaDoc into hover help 
content does not handle links properly.

I20020618

In a java file editor type:
   File.getP and invoke code assist.

Scroll down to getPath and wait for hover help.

The help claims that "The resulting string uses the { character..."

Clearly the { character is not used to separate path components.

If you check the Java Doc at 
http://java.sun.com/products/jdk/1.2/docs/api/index.html

You find that { is actually a link "default nae-separator character".  So I 
suspect the problem is whatever we use to massage JavaDoc into hover help 
content does not handle links properly.
moving to jdt.ui
This is a bug in Java2HTMLReader.printBlockTag. The tokenizer used is not smart 
enough. Should be doced in the readme. Post 2.0
Reopening for 2.1 consideration
*** Bug 59837 has been marked as a duplicate of this bug. ***
Created attachment 12855
Patch - see comment

This should fix the bug mentioned in this bug, and also fix the handling of
{@docRoot} which causes the Javadoc for String#split(String) beeing rendered in
a complety useless form.

Patch is against HEAD
see also bug 42738
*** Bug 76131 has been marked as a duplicate of this bug. ***
bug 76131 is about syntax highlighting ignoring the following type of tag:

<p align=center>

This tag should be colored the same as <p>. I don't see the relationship to 
this bug.
*** Bug 42738 has been marked as a duplicate of this bug. ***
I will review the patch provided in comment 5.
Could you also take a look at the patch i provided in bug 42739 comment 7 ?
I will.
I reviewed both patches:
Nico, your patch does not work for members with more than one parameter

Brock, your patch fixes the problem and also makes the method more robust
resulting in e.g. @docRoot being fixed as well. There were some minor issues
related to spaces which I fixed.

Added more test cases to JavaDoc2HTMLTextReaderTester.

Daniel, did you try it with multiple parameterized values?  Something like
{@link Foo<Object, Object> bar(String, Foo<Object, Object>) fooBar}.  I think it
may have trouble with the space in the return type.  Should be as simple as
trying to match the angle brackets.  The second instance should be ok as it is
wrapped in parentheses.  I haven't tried this because i don't have/use J2SE5 at
the moment.
I did not add test cases for generics yet. There was one space too much at the
beginning. 

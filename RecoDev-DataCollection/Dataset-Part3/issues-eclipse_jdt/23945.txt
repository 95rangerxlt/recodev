For example, using a square bracket, and typing '[[[', the result will be
'[[[]]]'.  
With paranthesis, this doesn't work if the opening paranthesis is already beside
any character besides space.

'(a' will result in '(a'
'method(someOtherMethod(' will result in 'method(someOtherMethod()'

wheras the square brackets work as expected:

'[a' results in '[]a'
'method[someOtherMethod[' results in 'method[someOtherMethod[]]'

Not really a show stopper by any stretch of the imagination, but the glitch does
severly limit the usefulness of this particular feature.

Thanks in advance
William Underwood

For example, using a square bracket, and typing '[[[', the result will be
'[[[]]]'.  
With paranthesis, this doesn't work if the opening paranthesis is already beside
any character besides space.

'(a' will result in '(a'
'method(someOtherMethod(' will result in 'method(someOtherMethod()'

wheras the square brackets work as expected:

'[a' results in '[]a'
'method[someOtherMethod[' results in 'method[someOtherMethod[]]'

Not really a show stopper by any stretch of the imagination, but the glitch does
severly limit the usefulness of this particular feature.

Thanks in advance
William Underwood
This is intentionally. The original behavior, same as [] caused people to 
switch off this feature. Won't change if not more users complain.
Gah!!!  it sounds as if the people who didn't like the original behaviour with
() simply didn't like it with (), and therefore it should be switchable
seperately from [].  (Note that the current bahaviour, different from [], is
also likely to cause people to not use the feature - I now have it disabled) 

The text description already differentiates between [] and (), perhaps it could
even be extended to an arbitrary number of 'open-close' tags, and therefore also
allow {} tags, and even potentially 'try' 'catch' tags.  Note that this would
really be neccessary to be consistent with the good ol' "0, 1, n" saying.

 -- William Underwood
Build M2.

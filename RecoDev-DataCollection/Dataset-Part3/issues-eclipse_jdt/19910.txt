The javadoc tool does not generate javadoc for an anonymous inner class.  So,
javadoc comments like this, as generated by the codecompletion, do not help:


        Iterator whatAClutter = new Iterator() {
            /**
             * @see java.util.Iterator#hasNext()
             */
            public boolean hasNext() {
                return false;
            }

            /**
             * @see java.util.Iterator#next()
             */
            public Object next() {
                return null;
            }

            /**
             * @see java.util.Iterator#remove()
             */
            public void remove() {}
        }

But such comments do clutter the source code.  Code clutter is an issue with
anonymous inner classes anyway.  So this javadoc comments really should not be
there.


(This is somewhat related to bug 11028.)

The javadoc tool does not generate javadoc for an anonymous inner class.  So,
javadoc comments like this, as generated by the codecompletion, do not help:


        Iterator whatAClutter = new Iterator() {
            /**
             * @see java.util.Iterator#hasNext()
             */
            public boolean hasNext() {
                return false;
            }

            /**
             * @see java.util.Iterator#next()
             */
            public Object next() {
                return null;
            }

            /**
             * @see java.util.Iterator#remove()
             */
            public void remove() {}
        }

But such comments do clutter the source code.  Code clutter is an issue with
anonymous inner classes anyway.  So this javadoc comments really should not be
there.


(This is somewhat related to bug 11028.)
I fixed this: Now now comments are generated for methods in anonymous classes.


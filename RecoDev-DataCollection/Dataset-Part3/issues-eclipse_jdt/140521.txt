I20060505-1306

The implementations of com.sun.mirror.declaration.Declaration#accept(DeclarationVisitor) in apt.core call super.accept(visitor), e.g. 
    public class MethodDeclarationImpl [..] {
        [..]
        public void accept(DeclarationVisitor visitor)
        {
            super.accept(visitor);
            visitor.visitMethodDeclaration(this);
        }
        [..]
    }

This is not correct, according to the javadoc of type DeclarationVisitor:
 * When a visitor is passed to a declaration's {@link
 * Declaration#accept accept} method, the most specific
 * <tt>visit<i>Xxx</i></tt> method applicable to that declaration is
 * invoked.

This contract explicitly says that this is the ordinary visitor pattern, so the implementations of #accept(DeclarationVisitor) are not allowed to call super.accept(..).

This bug makes Eclipse's APT support very incompatible with other implementations. I tried jdk1.5.0_06's apt.exe, and I found that it does not invoke super.accept(..).

I20060505-1306

The implementations of com.sun.mirror.declaration.Declaration#accept(DeclarationVisitor) in apt.core call super.accept(visitor), e.g. 
    public class MethodDeclarationImpl [..] {
        [..]
        public void accept(DeclarationVisitor visitor)
        {
            super.accept(visitor);
            visitor.visitMethodDeclaration(this);
        }
        [..]
    }

This is not correct, according to the javadoc of type DeclarationVisitor:
 * When a visitor is passed to a declaration's {@link
 * Declaration#accept accept} method, the most specific
 * <tt>visit<i>Xxx</i></tt> method applicable to that declaration is
 * invoked.

This contract explicitly says that this is the ordinary visitor pattern, so the implementations of #accept(DeclarationVisitor) are not allowed to call super.accept(..).

This bug makes Eclipse's APT support very incompatible with other implementations. I tried jdk1.5.0_06's apt.exe, and I found that it does not invoke super.accept(..).
Created attachment 40672
Patch for visitor problem

Proposed patch that fixes both types of visitors: TypeVisitor and DeclarationVisitor. We'll add tests for both of these as well.
Though the change seems indicated, I am wondering about the consequences on existing algorithm, as side effects may be real there... 
 
There are certainly side effects on existing Eclipse clients, but the current implementation violates the spec and is incompatible with JDK's correct APT implementation. IMO, this should be fixed for the first official Eclipse APT release, but the change should be announced on the apt list.
I've announced the change on the APT list. I doubt anyone is relying on the current, incorrect behavior. I've not seen anyone use the visitors when writing processors, which explains how this bug managed to get so far without being noticed.
I think we should fix this for RC4. Looking for approval from other leads.
I agree with Markus. Approving to fix this for 3.2 RC4.
+1 for 3.2 RC4.
Fixed in HEAD, tests added as DeclarationVisitorTests in the apt.tests plugin.

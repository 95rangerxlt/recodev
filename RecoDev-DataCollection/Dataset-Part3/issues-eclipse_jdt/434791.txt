If the command Quick Assist - Inline local variable is bound to Ctrl+Alt+Right in Preferences->General->Keys and that combination is activated and a local variable is thus inlined, pressing the Delete key afterwards has no effect. Delete key starts working again after some characters are selected with Shift+Any arrow key or the caret jumps to a different location by pressing Ctrl+Right, Ctrl+Left, Home, End.

To reproduce the bug, take this source:

import java.util.ArrayList;
import java.util.function.Supplier;
import java.util.stream.Collector;
import java.util.stream.Collectors;

class DeleteKey<T> {
	public void inline() {
		// inline collectionFactory by pressing Ctrl+Alt+Right with the caret within it:
		Supplier<ArrayList<T>> collectionFactory = ArrayList<T>::new;
		Collector<T, ?, ArrayList<T>> collection = Collectors.toCollection(collectionFactory);
	}
}

Steps:
1. Open Preferences -> General -> Keys and find Quick Assist - Inline local variable, bind it to the key combination Ctrl+Alt+Right Arrow, and press OK.
2. Move the caret in the middle of the name of the variable collectionFactory.
3. Press Ctrl+Alt+Right Arrow key combination.
4. Press Delete, but it doesn't delete anything.

Tested with Eclipse SDK Version: Luna (4.4) Build id: I20140510-1500

If the command Quick Assist - Inline local variable is bound to Ctrl+Alt+Right in Preferences->General->Keys and that combination is activated and a local variable is thus inlined, pressing the Delete key afterwards has no effect. Delete key starts working again after some characters are selected with Shift+Any arrow key or the caret jumps to a different location by pressing Ctrl+Right, Ctrl+Left, Home, End.

To reproduce the bug, take this source:

import java.util.ArrayList;
import java.util.function.Supplier;
import java.util.stream.Collector;
import java.util.stream.Collectors;

class DeleteKey<T> {
	public void inline() {
		// inline collectionFactory by pressing Ctrl+Alt+Right with the caret within it:
		Supplier<ArrayList<T>> collectionFactory = ArrayList<T>::new;
		Collector<T, ?, ArrayList<T>> collection = Collectors.toCollection(collectionFactory);
	}
}

Steps:
1. Open Preferences -> General -> Keys and find Quick Assist - Inline local variable, bind it to the key combination Ctrl+Alt+Right Arrow, and press OK.
2. Move the caret in the middle of the name of the variable collectionFactory.
3. Press Ctrl+Alt+Right Arrow key combination.
4. Press Delete, but it doesn't delete anything.

Tested with Eclipse SDK Version: Luna (4.4) Build id: I20140510-1500
This got broken during 4.4 M7.

There's no need to assign a shortcut:

1. paste this:
	public void bug(String s2) {
		String s1= "3";
		s2= s1;
	}
2. put caret into second 's1'
3. Ctrl+1
4. invoke 'Inline local variable'
4. press 'Delete'
==> does not work
The Delete command is disabled after the quick fix.

This gets surfaced by the fix for bug 368354.
The problem happens because the change proposal calls StyledText.setEditable(false) during the change. As a result all actions that require write access get disabled when their state is evaluated during the selection change. That this is now surfaced by the fix for bug 368354 is correct and not a problem with said fix.

I already have fix at hand, but need to sleep over it and run all tests.
Created attachment 243332
Fix

The fix resends the previously sent selection changed event so that the actions can be correctly enabled (or disabled) after the text widget becomes editable again. This is done using a new text operation (code).

In 4.5 we will replace this with an official ITextEditorExtension6#setEditable(boolean) API.
Looks good.
We're not completely sure that ChangeCorrectionProposal is only used with an ITextOperationTarget that is the default TextViewer implementation. We should adhere to the Javadoc in ITextOperationTarget#doOperation(int) and call #canDoOperation(int) first.

Fixed that and released with
http://git.eclipse.org/c/platform/eclipse.platform.text.git/commit/?id=96ada654861aca147c33688a823d6f408d228d0e and
http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=cd8d58cc7579ac671d3ea598f18ca42b62c7f93a
(In reply to Markus Keller from comment #6)
> We're not completely sure...

"we" is Markus and me. So, +1 for the committed changes.
Verified in I20140522-2000.
This needs to get backported.
Backport for 4.3.2+:
http://git.eclipse.org/c/platform/eclipse.platform.text.git/commit/?id=4c704923ddf296eeb72fa20eff571cdd7048d491 and its parent

http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=6120f5e98d7a4b1d2599ac19b60e3210ba471195 and its parent


Backport for 4.2.2+ / 3.8.2+:
http://git.eclipse.org/c/platform/eclipse.platform.text.git/commit/?id=e5a094a6a10a070d2cd25a69f5132eccfeace372 and its parent

http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=bb698f95dfb81a9ab6abd0eff4f07c6ad18cf4e7


Backport for 3.7.2+:
http://git.eclipse.org/c/platform/eclipse.platform.text.git/commit/?id=b80c5ace9d7d72d759481e42604e5b8dc02be484

http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=0e4d750c8230ea76eb680bddaf6f67b8a2900ec9 and its parent


Backport for 3.6.2+:
http://git.eclipse.org/c/platform/eclipse.platform.text.git/commit/?id=859c239132e026f19cea2416f289335f8c3338fc

http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=070594a99c0563441446bee7bf1ff9abc8282cf9


Backport for 3.6.2+:
http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=7cee24ef46cfbeea7326095d4368f1a59237359d

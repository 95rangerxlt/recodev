I20061017-0800

Provide ability to clean up a compilation unit on save. 

Requires:
1. Save participant on compilation unit document provider
2. Refactoring to be able to execute with a file lock
3. Preference UI and implementation of a save participant

I20061017-0800

Provide ability to clean up a compilation unit on save. 

Requires:
1. Save participant on compilation unit document provider
2. Refactoring to be able to execute with a file lock
3. Preference UI and implementation of a save participant
Created attachment 52505
save participants

Adds save participants to CUDP
Created attachment 52506
refactoring patch

Allows to execute clean up refactoring with other then workspace lock. Small non breaking API change in PerformChangeOperation
Created attachment 52507
Preference UI and CleanUpSaveParticipant

The rest UI and implementation. Enable on Java>Code Style>Clean Up preference page.
Created attachment 52508
refactoring patch

Reviewed by Tobias. Added build notes and API change notes.
Created attachment 52530
fix

All in one patch. ICUSP renamed to IPostSaveListener. Registry merged into CUDP. Save As still not working:
- unit.open seams not to work if unit is not part of java project (Project does not exist exception)
- if unit.becomeWorkingCopy is executed the new cu does not appear in pkg explorer
needs more investigation...
Created attachment 52532
fix

This is the right one...
released refactoring part to HEAD > I20061024-1200
Created attachment 52675
fix

Did:
- Registry (not as inner class of CUDP) with descriptor
- Save participant preference page with contributed configuration blocks (IMHO the term post save listener is too technical for a preference page)

Todo:
- Cleanup code comments
- NLS and memonics
- Save As: I argue, that it is correct, that the listener is not informed when the new file is created because it is a create file operation and not a save operation. Also, when you have a dirty editor and execute Save As on that editor: The editor is saved, the listener is informed, then the new file is created. Why should the listener be informed again? What's your opinion Dani?

Can you review Dani?
>Also, when you have a dirty editor and execute Save As on that
>editor: The editor is saved, the listener is informed, then the new file is
>created.
Wrong unless your patch now does that. The changes in the original dirty file will be discarded.
(In reply to comment #9)
> Wrong unless your patch now does that. The changes in the original dirty file
> will be discarded.
Yes, this is correct. The dirty editor is not saved (but discarded) and the post save listener is not informed. My test case was inacurate.
Created attachment 52742
Revised patch after first review pass
Created attachment 52752
fix

Patch with changes to the registry plus more comments
Created attachment 52755
fix

Fix with:
- Id on listener
- NLSd
without CompilationUnitDocumentProvider
Created attachment 52756
Revised CompilationUnitDocumentProvider
Created attachment 52760
fix

combined patch
fixed > I20061024-1200

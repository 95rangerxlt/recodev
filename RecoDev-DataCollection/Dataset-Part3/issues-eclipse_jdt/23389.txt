I got the following NPE when editing and formatting java code.

java.lang.NullPointerException
	at
org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.update(JavaOutlinePage.java:468)
	at
org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.update(JavaOutlinePage.java:443)
	at
org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.reconcile(JavaOutlinePage.java:297)
	at
org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$1.run(JavaOutlinePage.java:134)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:94)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1599)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1372)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1256)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1239)
	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:775)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:432)
	at EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:24)

Looking at the source code, I found very suspicious that there is no null check
for the value returned by getSourceRange(e). It is quite clear that this method
can return null.

I don't remember exactly the contents of the compilation unit. But this can
happen. It might be a consequence of
http://bugs.eclipse.org/bugs/show_bug.cgi?id=23257, that we fixed on the JDT/UI
request.

I got the following NPE when editing and formatting java code.

java.lang.NullPointerException
	at
org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.update(JavaOutlinePage.java:468)
	at
org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.update(JavaOutlinePage.java:443)
	at
org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$JavaOutlineViewer.reconcile(JavaOutlinePage.java:297)
	at
org.eclipse.jdt.internal.ui.javaeditor.JavaOutlinePage$1.run(JavaOutlinePage.java:134)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:94)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1599)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1372)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1256)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1239)
	at org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:775)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:432)
	at EclipseRuntimeLauncher.main(EclipseRuntimeLauncher.java:24)

Looking at the source code, I found very suspicious that there is no null check
for the value returned by getSourceRange(e). It is quite clear that this method
can return null.

I don't remember exactly the contents of the compilation unit. But this can
happen. It might be a consequence of
http://bugs.eclipse.org/bugs/show_bug.cgi?id=23257, that we fixed on the JDT/UI
request.
initializers are exactly the problem
*** Bug 23460 has been marked as a duplicate of this bug. ***
You should not request a fix if your code is not ready. This bug could have 
been avoided.
Olivier - there's no way I could check if everybody's code is ready for this or 
any other fix.
I simply don't like to be responsible of a regression <g>.
Fixed in Head. Build > 20020911.

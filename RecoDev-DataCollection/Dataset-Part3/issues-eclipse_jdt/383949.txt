BETA_JAVA8:

The following program is illegal, but compiles as of now:

// ----------
interface I {
  int foo(X x);
}
public class X {
  public static void main(String[] args) {
    I i = (X this) -> 10;  
  }
}

In a lambda, 'this' has the same meaning as in surrounding context.
While bug 382727 would also fix this, there is value in special casing
this and issuing a more specific message:

"Explicit "this" parameter declaration is illegal on lambda expressions"

BETA_JAVA8:

The following program is illegal, but compiles as of now:

// ----------
interface I {
  int foo(X x);
}
public class X {
  public static void main(String[] args) {
    I i = (X this) -> 10;  
  }
}

In a lambda, 'this' has the same meaning as in surrounding context.
While bug 382727 would also fix this, there is value in special casing
this and issuing a more specific message:

"Explicit "this" parameter declaration is illegal on lambda expressions"
(In reply to comment #0)

> While bug 382727 would also fix this, there is value in special casing

Mispoke: In the code snippet from comment#0, there is no redeclaration/shadowing
involved.
Fix and tests released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=c5fca7ef6c294c6139aba614099e9d98b3db43cc
I was expecting a similar error message for
(this) -> 10;
and
this -> 10

but thats not the case. Perhaps they can also be included for this warning.
PS: the second syntax does not even recover as well as the first one does

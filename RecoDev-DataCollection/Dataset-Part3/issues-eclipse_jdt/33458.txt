20030227
I am attempting to run my PDE JUnit tests for Debug and Ant Core.
All produce similar stack traces to the following:

java.lang.StringIndexOutOfBoundsException: String index out of range: -57
	at java.lang.String.substring(String.java:1480)
	at org.eclipse.jdt.internal.junit.ui.HierarchyRunView.newTreeEntry
(HierarchyRunView.java:305)
	at org.eclipse.jdt.internal.junit.ui.TestRunnerViewPart$4.run
(TestRunnerViewPart.java:477)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:94)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1752)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1487)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1271)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1254)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)

20030227
I am attempting to run my PDE JUnit tests for Debug and Ant Core.
All produce similar stack traces to the following:

java.lang.StringIndexOutOfBoundsException: String index out of range: -57
	at java.lang.String.substring(String.java:1480)
	at org.eclipse.jdt.internal.junit.ui.HierarchyRunView.newTreeEntry
(HierarchyRunView.java:305)
	at org.eclipse.jdt.internal.junit.ui.TestRunnerViewPart$4.run
(TestRunnerViewPart.java:477)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:31)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages
(Synchronizer.java:94)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1752)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1487)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1271)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1254)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
	at org.eclipse.core.launcher.Main.run(Main.java:703)
	at org.eclipse.core.launcher.Main.main(Main.java:539)
*** Bug 33457 has been marked as a duplicate of this bug. ***
Erich, has this something to do with your unique ID changes ?
Closing and re-opening my JUnit view seems to have fixed up the problem.
*** Bug 33563 has been marked as a duplicate of this bug. ***
Olivier - I'm trying to reproduce the problem. To do so what was your workspace 
set-up when the problem occurred:

1) running 0227
2) in your workspace you had a jdt.junit from a previous build?
I had closed/reopened, exited/restarted Eclipse with no luck. The only working 
configuration for me is: "self-hosted workspace == hosting workbench".

This is quite annoying, and hampers multi-stream development since running 
tests has become quite automatic.

I suspect Olivier was using a 2.1 IDE to host a 2.0.2 self-hosting workspace 
(so as to backport fixes in 2.0.2 stream). This 2.0.2 workspace was created by 
importing 2.0.2 plugins through the 2.1 IDE (not migrated from a 2.0).
I used a 2.1 build to run a 2.0.2 self-hosting workspace as Philippe described.
I was using the 2.1.4 PDE JUnit plugin in my 2.1 build. All plugins in my 2.0.2
workspace were imported from a 2.0.2 build in binary mode except jdtcore from CVS.
I finally moved back to run this self-hosting workspace on a 2.0.2 build with
PDE JUnit 2.0.0.
Added backward compatibility support in the test runner protocol.
Fix released in 0304
Build 0227 isn't version aware and will still cause problems when you have 0227 
in the workspace and run the 0304 integration build. Once 0227 is out of 
picture backward compatibility should be OK.


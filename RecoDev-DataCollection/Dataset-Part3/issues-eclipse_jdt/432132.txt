http://download.eclipse.org/eclipse/downloads/drops4/N20140406-2000/testresults/html/org.eclipse.jdt.ui.tests_win32.win32.x86_7.0.html

There are 4 test failures in AddUnimplementedMethodsTest which can be reproduced by running the tests locally in workspace also. 
However, these are not reproducible while performing the Override methods action in runtime.

http://download.eclipse.org/eclipse/downloads/drops4/N20140406-2000/testresults/html/org.eclipse.jdt.ui.tests_win32.win32.x86_7.0.html

There are 4 test failures in AddUnimplementedMethodsTest which can be reproduced by running the tests locally in workspace also. 
However, these are not reproducible while performing the Override methods action in runtime.
The tests are green on reverting the following commit:
http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=a42a1e1d629f0534edd86fd2b249cbfbce432b77

The commit has moved the check: "if (!is50OrHigher)" to the top in StubUtility2#createParameters.

In JUnit tests, "JavaModelUtil.is50OrHigher(project)" returns false for the dummy project using rtstub15, which is causing the failure.
In AddUnimplementedMethodsTest#setUp, TestOptions.getDefaultOptions() is overwriting the 1.5 compiler options.

- replacing fJavaProject.setOptions(options) with JavaCore.setOptions(options) fixes the issue. 

- or, JavaProjectHelper.addRTJar(fJavaProject) should be moved after fJavaProject.setOptions(options).

Dani/Markus, please have a look and suggest the suitable fix.
The actual problem was bug 420116 comment 13, but the test didn't reveal this, since it doesn't actually check the action's output.

(In reply to Noopur Gupta from comment #2)
> In AddUnimplementedMethodsTest#setUp, TestOptions.getDefaultOptions() is
> overwriting the 1.5 compiler options.
> 
> - replacing fJavaProject.setOptions(options) with
> JavaCore.setOptions(options) fixes the issue. 

We should stop setting global options in tests. That was a bad practice.

> - or, JavaProjectHelper.addRTJar(fJavaProject) should be moved after
> fJavaProject.setOptions(options).

Yup, fixed with http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=26d8a30ea4cc83e085ff56e443809906d9202a20 and modified test1 so that it actually uses a 1.5 construct.

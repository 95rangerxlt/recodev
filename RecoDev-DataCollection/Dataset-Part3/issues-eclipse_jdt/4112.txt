MA (15.08.2001 11:55:06)
	For big files, the C parser used for reconciling takes longer that the configured reconciling timeout.
	A new reconciler was started anyway, what lead to constant flickering of the outliner, and strange
	behauviour in the editor (reselecting the same range over again).

	I would expect the reconciling framework not to start a new reconsile while the old parse has not been finished.
	The timeout time should maybe be calculated from the time the previous reconcile was finished, not started. 

NOTES:

KUM (9/3/2001 4:46:45 PM)
	The problem comes from the fact that the reconciler only works for partitioned code.
	JFace text does not support a single reconciling strategy for the whole document.
	In JDT, we introduced JavaReconciler to circumvent this problem.

	Changed JFace text to now offer Reconciler (the same as before) and MonoReconciler (has only one
	reconciling strategy for everything which is called per dirty region).

MA (15.08.2001 11:55:06)
	For big files, the C parser used for reconciling takes longer that the configured reconciling timeout.
	A new reconciler was started anyway, what lead to constant flickering of the outliner, and strange
	behauviour in the editor (reselecting the same range over again).

	I would expect the reconciling framework not to start a new reconsile while the old parse has not been finished.
	The timeout time should maybe be calculated from the time the previous reconcile was finished, not started. 

NOTES:

KUM (9/3/2001 4:46:45 PM)
	The problem comes from the fact that the reconciler only works for partitioned code.
	JFace text does not support a single reconciling strategy for the whole document.
	In JDT, we introduced JavaReconciler to circumvent this problem.

	Changed JFace text to now offer Reconciler (the same as before) and MonoReconciler (has only one
	reconciling strategy for everything which is called per dirty region).
moved to fixed
PRODUCT VERSION:
	vame 1.4



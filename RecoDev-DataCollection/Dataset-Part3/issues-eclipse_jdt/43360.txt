If you refactor the anonymous class below to a nested class the resulting code 
does not compile because the resulting nested class is not declared as static.
-------------------------------------------------------
public class A
{
   public static void main(String[] args)
   {
      final I i = new I() //<-- refactor anonymous to nested
      {
         public void method()
         {
            
         }
      };
   }
}
interface I
{
   void method();
}
--------------------------------------------------------------

If you refactor the anonymous class below to a nested class the resulting code 
does not compile because the resulting nested class is not declared as static.
-------------------------------------------------------
public class A
{
   public static void main(String[] args)
   {
      final I i = new I() //<-- refactor anonymous to nested
      {
         public void method()
         {
            
         }
      };
   }
}
interface I
{
   void method();
}
--------------------------------------------------------------
Refactoring is JDT/UI.
Move to JDT/UI.
surely this bug is easy to fix! Will it be in 3.0? Maybe even 3.0M6?
If you think that the bug is easy to fix how about providing a patch ;-).
I have no experience with the eclipse code so it may take a while but I will 
give it a go!
Created attachment 7026
junit test

I have created the junit test. Now comes the hard part. If somebody however can
use this to solve the problem that would be fine too!
Created attachment 7065
checks weather the enclosing method is static and creates the class appropriately now

as stated before the fix was quite simple. Even for somebody who has no
experience of eclipse (i.e. me). Please review this fix and let me know if I
have done it correctly! :-)
I have just realised that my solution is only partial. I will contribute a 
more complete solution as soon as I have some more free time.
Created attachment 7067
7 new tests
Created attachment 7068
fix for the general case

OK I have been made to eat my own words. This bug was far more complicated than
originally anticipated. It took 7 new unit tests and 2 hours work to do. Please
let me know if I have done it correctly!
Nice work.

Two minor things: it is not guaranteed that resolveBinding always returns 
returns a binding. Due to compile errors it might return null. It isn't 
guaranteed either that two resolved bindings pointing to the same type are the 
same instance. You therefore always have to use the helper method 
Bindings.equal(..) to compare them. I changed the code.

While testing around a litte bit more I found another situation that isn't 
handled correctly (not related to your fix). See bug 48282. Are you interested 
to look into this one as well, now that you know the code of convert anonymous 
to nested.
Forgot the most important thing: THANKS !
No problem
I wouldn't mind looking at it but again I have to point out that I have a full 
time job and I can only work on this at weekends. So this weekend if I find 
some time I will look at bug 48282. It seems though...that I have to aqauint 
myself with the ui side of eclipse as well..that may stump me.
working on this I started thinking and was wondering if the user should be 
presented with the option of declaring the newly created inner class as static? 
The user is asked if they want to create it as final so static could be an 
option as well. however the static option should only be available if the new 
method I added (shouldInnerClassBeStatic) retured false...
To present the user with an error message you don't have to learn the UI side. 
You can simply return a RefactoringStatus which is set to error from 
checkInput. The UI framework will then do the rest for you.
I came up with a refinement of my solution. I will submit a patch. I think 
however that the test framework doesn't support the test case I have written. 
However when I ran the test case manually on the runtime framework it 
performed as expected. Dirk can you tell me what is wrong with my test case 
once I have submitted the patches?
Created attachment 7088
one more test case (doesn't pass due to NPE)

this is the unit test that throws a NPE. However when ran manually on a runtime
workbench passes!
Created attachment 7089
enhanced fix

changed the 
isEnclosedInAnonymousDeclarationThatIsEqualToGlobalTypeDeclaration method to
isEnclosedInAnonymousDeclarationThatIsSubclassToGlobalTypeDeclaration

need I say more?
any chance my enhanced fix for this bug can go in for M6? and any chance 
somebody can tell me why the unit test fails?
Comment on attachment 7089
enhanced fix

Attachment 7135 in Bug 48282 fixes this
the attachment in Bug 48282 fixes this bug also but the extra test case 
attached here still throws an NPE!
I can reproduce the test failure (NPE) but have no idea why it happens. I have 
to investigate futher.

I released the fix and the new test cases, but commented it out. The problem 
with the test is that the binding for the constructor is null. 
Can I just point out that the atachment named enhanced fix still wasn't 
complete and that the atachment in Bug 48282 fixes both that and this bug and 
does a couple of other things! The reason I say that is that in comment #21 
you said you will release the fix. I wasn't sure about which patch of the two 
you were talking about!
I released the patch attached to this PR. Soo no code got released for Bug 
48282. WE are a little bit short on time so I am not sure if we find the time 
to review the other fix. But we will try...
I am not too familiar with patches but if you have applied the patch from here 
would that not break the other patch because they were both made against the 
same version of head?
Yes, thats correct. But we can deal with that.
The problem with the failing test cases is, that the file name is 
A_test28_in.java, but the public top level type is defined as A. This produces 
a compile error. Regarding language spec the public top level type must have 
the same name as the CU.
Fix got released, but couldn't update test cases due to CVS sync problems. 
Moving milestone to M7.
Relased fixed test28.

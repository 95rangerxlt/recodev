The plugin import tool should be able to handle many different versions of the
same plugin.  For example, if I have the following plugins:

foo
foo_2.0.0

Where the version number of foo is 1.0.0, the plugin import tool should
recognize that these are the same plugin, only different version numbers.

I propose two solutions to this problem.

Simple solution:
The plugin import tool should take the plugin with the highest version number.

Optimal solution:
The plugin import tool should check before doing the import and ask the user to
choose which plugin version to import.

The plugin import tool should be able to handle many different versions of the
same plugin.  For example, if I have the following plugins:

foo
foo_2.0.0

Where the version number of foo is 1.0.0, the plugin import tool should
recognize that these are the same plugin, only different version numbers.

I propose two solutions to this problem.

Simple solution:
The plugin import tool should take the plugin with the highest version number.

Optimal solution:
The plugin import tool should check before doing the import and ask the user to
choose which plugin version to import.
Another idea:
On the second page of the wizard, there is a list of plugins.  If you modified
this to include the version numbers, the user could realize that you were only
going to include one version of a given plugin.

Here's how I envision the look of the list.

[] == Check box
*  == selected radio button
o  == unselected radio button

[] org.eclipse.ui
   * Version 1.0.1
   o Version 1.0.0
[] org.eclipse.swt
   * Version 1.0.0
[] org.eclipse.vcm
   * Version 1.0.0

This way, the user gets used to the idea that the latest version is imported,
but they also know where to go to import a differnt version.
given that the eclipse tools is only "early PDE function" we should go with the 
first option and show the latest version only.
Plugin label now contain version number. The user can select the versions to 
import.
implemented in 1.7. 

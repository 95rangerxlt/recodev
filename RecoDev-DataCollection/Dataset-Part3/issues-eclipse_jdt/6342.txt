11122 with patch
For the anonymous inner class proposal:
Code assist on interfaces 'constructor' now works, but, as it seems, not 
everywhere.
- 'new java.util.List(' does not bring a proposal
- 'new junit.framework.Test(' works

'Test' is in source. Maybe thats the difference.

11122 with patch
For the anonymous inner class proposal:
Code assist on interfaces 'constructor' now works, but, as it seems, not 
everywhere.
- 'new java.util.List(' does not bring a proposal
- 'new junit.framework.Test(' works

'Test' is in source. Maybe thats the difference.
I think we should add another API for feeding these anonymous type bodies. 
Constructors for interface do not sound right, 1.0 customers would be seeing 
this behavior too, whereas with the new ICompletionRequestor, a new API would 
be ignored to 1.0 customers.
Do you agree with the API change ?
yes. can you give details?
would it be acceptAnonymousType(...)?
could it also be called in type names after 'new'? (not only after the opening 
bracket)
  new IActio
            ^code assist here 
i suggest :

public void acceptAnonymousType(
	char[] declaringTypePackageName,
	char[] declaringTypeName,
	char[][] parameterPackageNames,
	char[][] parameterTypeNames,
	char[][] parameterNames,
	char[] completionName,
	int modifiers,
	int completionStart,
	int completionEnd)
In the API, declaringTypeName will rather be superTypeName.
New API on ICompletionRequestor for suggest anonymous type declaration: 
      void acceptAnonymousType( 
          char[] superTypePackageName, 
          char[] superTypeName, 
          char[][] parameterPackageNames, 
          char[][] parameterNames, 
          char[][] parameterNames, 
          char[] completionName, 
          int modifiers, 
          int completionStart, 
          int completionEnd); 

Fixed.

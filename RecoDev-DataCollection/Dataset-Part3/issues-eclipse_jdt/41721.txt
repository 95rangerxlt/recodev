On following Test code :

import java.util.Map;
class Test {
  interface InnerClass extends Map.Entry {
  }
}

If you try to move the class : InnerClass to a New file, it generates following 
output (InnerClass.java) :
import java.util.Map.Entry;
interface InnerClass extends Map.Entry {		
}

Which generates a compilation error because you cannot import an inner class. 
You must import the enclosing class instead.

On following Test code :

import java.util.Map;
class Test {
  interface InnerClass extends Map.Entry {
  }
}

If you try to move the class : InnerClass to a New file, it generates following 
output (InnerClass.java) :
import java.util.Map.Entry;
interface InnerClass extends Map.Entry {		
}

Which generates a compilation error because you cannot import an inner class. 
You must import the enclosing class instead.
*** Bug 41722 has been marked as a duplicate of this bug. ***
ImportStructure correctly returns Entry as the type to use when importing 
java.util.Map.Entry. So we havt to adapt the code in 
MoveInnerToTopRefactoring.addImportsToNewCu

But not critical since this isn't a usual case.

BTW; you can import an inner class. In your case the compile error occurs 
since we didn't import Map.
Time permitted for 3.1.
Fixed > 20041026

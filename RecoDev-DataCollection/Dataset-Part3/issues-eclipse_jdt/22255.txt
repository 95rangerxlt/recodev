I would find the following feature very useful:

Currently one is able to place cursor over any class/method in the Java code and
press F3 to display contents of that particular class or method. 

For instance, if the following code is available:

Foo foo = new Foo(); //Foo class extends Object 
foo.toString();

clicking on doIt() and pressing F3 will take you to Foo's or Object's toString().

Now, assume that you have the following code:

SomeInterface si = new SomeClass(); //SomeClass implements SomeInterface
si.doIt(); 

clicking on doIt() and pressing F3 will take you to SomeInterface's doIt(). It
is more likely that a developer would be interested to see contents of
SomeClass.doIt() method. 

If there are multiple classes that implement SomeInterface, it's not always
possible to determine which one is being used if doIt() is called on the
interface itself (if a factory pattern is used to instantiate a class). So, the
feature that i would like to see is a functionality similar to F3 that would
display a scrollable list of all known Implementers of an Interface in question
so that a developer can choose which one to drill down further. I do realize
that one can do "Open Type Hierarchy" while working with an interface.

I would find the following feature very useful:

Currently one is able to place cursor over any class/method in the Java code and
press F3 to display contents of that particular class or method. 

For instance, if the following code is available:

Foo foo = new Foo(); //Foo class extends Object 
foo.toString();

clicking on doIt() and pressing F3 will take you to Foo's or Object's toString().

Now, assume that you have the following code:

SomeInterface si = new SomeClass(); //SomeClass implements SomeInterface
si.doIt(); 

clicking on doIt() and pressing F3 will take you to SomeInterface's doIt(). It
is more likely that a developer would be interested to see contents of
SomeClass.doIt() method. 

If there are multiple classes that implement SomeInterface, it's not always
possible to determine which one is being used if doIt() is called on the
interface itself (if a factory pattern is used to instantiate a class). So, the
feature that i would like to see is a functionality similar to F3 that would
display a scrollable list of all known Implementers of an Interface in question
so that a developer can choose which one to drill down further. I do realize
that one can do "Open Type Hierarchy" while working with an interface.
Currently F3 is fast since it only does a static analysis of the 
file/selection. Implementing your suggestion would require to build a subtype 
hierarchy which is quite expensive.

Are you aware of the fact that you can select the method and press F4. This 
will open the hierarchy on SomeInterface and will automatically select doIt(). 
You can then switch to look mode which gives you all implementors of the 
method. 

May be we should switch to look mode automatically when doing open type 
hierarchy on a method.
In M1 you can now press CTRL + T and will see all implementers of this method in
the hierarchy and can navigate to it.
You can now use Ctrl+T.

Trying Run As->Junit crashes with the exception below, when the package in 
question does not have any tests, but has tests nested one level (or more).

e.g.
+- com
+---- industriallogic
+--------- somepackage
+------------- NotTest.java
+------------- testPackage
+----------------- MyTest.java

When we try to run com.industriallogic.somepackage as a junit test, an 
exception (see below) is thrown.

!ENTRY org.eclipse.ui 4 4 Mar 21, 2003 18:35:50.933
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Mar 21, 2003 18:35:50.963
!MESSAGE 0
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: 0
	at 
org.eclipse.jdt.internal.junit.launcher.JUnitBaseLaunchConfiguration.launch
(JUnitBaseLaunchConfiguration.java:73)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at 
org.eclipse.jdt.internal.junit.launcher.JUnitLaunchShortcut.launchConfiguration
(JUnitLaunchShortcut.java:188)
	at 
org.eclipse.jdt.internal.junit.launcher.JUnitLaunchShortcut.launchContainer
(JUnitLaunchShortcut.java:136)
	at 
org.eclipse.jdt.internal.junit.launcher.JUnitLaunchShortcut.searchAndLaunch
(JUnitLaunchShortcut.java:81)
	at org.eclipse.jdt.internal.junit.launcher.JUnitLaunchShortcut.launch
(JUnitLaunchShortcut.java:68)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension.launc
h(LaunchShortcutExtension.java:198)
	at org.eclipse.debug.internal.ui.actions.LaunchShortcutAction.run
(LaunchShortcutAction.java:56)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1842)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1549)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)

Trying Run As->Junit crashes with the exception below, when the package in 
question does not have any tests, but has tests nested one level (or more).

e.g.
+- com
+---- industriallogic
+--------- somepackage
+------------- NotTest.java
+------------- testPackage
+----------------- MyTest.java

When we try to run com.industriallogic.somepackage as a junit test, an 
exception (see below) is thrown.

!ENTRY org.eclipse.ui 4 4 Mar 21, 2003 18:35:50.933
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 Mar 21, 2003 18:35:50.963
!MESSAGE 0
!STACK 0
java.lang.ArrayIndexOutOfBoundsException: 0
	at 
org.eclipse.jdt.internal.junit.launcher.JUnitBaseLaunchConfiguration.launch
(JUnitBaseLaunchConfiguration.java:73)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch
(LaunchConfiguration.java:156)
	at 
org.eclipse.jdt.internal.junit.launcher.JUnitLaunchShortcut.launchConfiguration
(JUnitLaunchShortcut.java:188)
	at 
org.eclipse.jdt.internal.junit.launcher.JUnitLaunchShortcut.launchContainer
(JUnitLaunchShortcut.java:136)
	at 
org.eclipse.jdt.internal.junit.launcher.JUnitLaunchShortcut.searchAndLaunch
(JUnitLaunchShortcut.java:81)
	at org.eclipse.jdt.internal.junit.launcher.JUnitLaunchShortcut.launch
(JUnitLaunchShortcut.java:68)
	at 
org.eclipse.debug.internal.ui.launchConfigurations.LaunchShortcutExtension.launc
h(LaunchShortcutExtension.java:198)
	at org.eclipse.debug.internal.ui.actions.LaunchShortcutAction.run
(LaunchShortcutAction.java:56)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:842)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection
(ActionContributionItem.java:456)
	at org.eclipse.jface.action.ActionContributionItem.handleWidgetEvent
(ActionContributionItem.java:403)
	at org.eclipse.jface.action.ActionContributionItem.access$0
(ActionContributionItem.java:397)
	at 
org.eclipse.jface.action.ActionContributionItem$ActionListener.handleEvent
(ActionContributionItem.java:72)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:81)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:840)
	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:1842)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1549)
	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1402)
	at org.eclipse.ui.internal.Workbench.run(Workbench.java:1385)
	at org.eclipse.core.internal.boot.InternalBootLoader.run
(InternalBootLoader.java:845)
	at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke
(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke
(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:324)
	at org.eclipse.core.launcher.Main.basicRun(Main.java:291)
	at org.eclipse.core.launcher.Main.run(Main.java:747)
	at org.eclipse.core.launcher.Main.main(Main.java:583)
The problem is that somepackage doesn't have any test cases. The launch method 
should check if getTestTypes returns an empty array.

I general execution all test from somepackage will never execute tests in 
testPackage since the Java language doesn't have the concept of subpackages.

Erich, can you please comment on a possible fix.
The class is UI free and all we can do is to check whether there are matches 
and then throw a CoreException. The Launch infrastructure will then show this 
as exception in an error dialog (and write it to the log). This means it will 
not be much more pleasant even if we add a guard and call the abort helper 
method.

Fix is trivial, but not critical enough. After 2.1 we should investigate in 
support for reporting warnings from a launch.
This bug is still an issue in 3.0.  Perhaps someone should update the version
number?
Erol, did you say the bug seems to have been fixed already? If so, you can close
the bug.
I don't think that a fix is still possible as it already has been resolved by 
somebody else.

Martin, could you please review class JUnitBaseLaunchConfiguration, about line 
71 to verify my statement.
marking as fixed

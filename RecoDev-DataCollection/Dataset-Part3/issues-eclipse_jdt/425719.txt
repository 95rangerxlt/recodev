BETA_JAVA8: 

This is probably a recent regression.

// --
interface I {
   default void foo(Object obj) {
	   System.out.println("interface method");
   }
}
class Base {
    public void foo(Object obj) {
        System.out.println("class method");
   }
}
public class X extends Base implements I {
	 public static void main(String argv[]) {
	    	new X().foo(null);
	    }
}

Patch will follow shortly.

BETA_JAVA8: 

This is probably a recent regression.

// --
interface I {
   default void foo(Object obj) {
	   System.out.println("interface method");
   }
}
class Base {
    public void foo(Object obj) {
        System.out.println("class method");
   }
}
public class X extends Base implements I {
	 public static void main(String argv[]) {
	    	new X().foo(null);
	    }
}

Patch will follow shortly.
Fix and tests available here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=58545256b19d6ccce458cb08a759eadafac6f6df
This program still can't be compiled:

interface I {
   default <T> void foo(List<T> list) {
	   System.out.println("interface method");
   }
}
class Base {
    public <T> void foo(List<T> list) {
        System.out.println("class method");
   }
}
public class X extends Base implements I {
	 public static void main(String argv[]) {
	    	new X().foo(new ArrayList<String>());
	    }
}
Thanks, will take a look.
Thanks, this allowed me to clean up some inefficient/ineffective code. 

Fix and tests are released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=039347d7e4ee8e1deb95513f2bd485f15185146e

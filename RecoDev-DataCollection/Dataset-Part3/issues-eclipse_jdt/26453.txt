When extracting a constant the constant should be qualified by the enclosing 
class name since its static.

e.g.

return "foo";

replaced by 

return Enclosing.FOO_CONSTANTS

When extracting a constant the constant should be qualified by the enclosing 
class name since its static.

e.g.

return "foo";

replaced by 

return Enclosing.FOO_CONSTANTS
how'bout putting a checkbox on the first wizard page?
Yup, but I think the default should be checked.

Channing
Why should the default be checked?
I have prepared the enhancement, and will release it shortly.
I believe the default should be checked because the new field is static, and
static fields should be referenced through the class not the instance.

Channing
An unqualified reference to a static field is not a reference "through the 
instance"
You should note that unqualified references to static fields can appear within 
static methods and initializers.
The enhancement has been released.

The checkbox is, by default, unchecked.
The other default may be considered in the future.
> An unqualified reference to a static field is not a reference "through the 
instance

you are right Rory, my language isn't good. It is my understanding, that when
using a static field, one should qualify the reference by the class name to
which the field belongs. eg:

class Foo {
   public static final int BAR = 0;
}

usage of 'bar' should be 'Foo.BAR' rather than 'BAR'.

If this is wrong I'd like to know :-)

Channing

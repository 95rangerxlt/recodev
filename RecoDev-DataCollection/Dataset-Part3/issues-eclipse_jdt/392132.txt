BETA_JAVA8:

MethodDeclaration declares THROWN_EXCEPTIONS_PROPERTY to be a list of names.
It should actually be Types so that annotations could be captured there.

For API breakage reasons, we cannot change this, we need to add a new
property THROWN_EXCEPTIONS_TYPES_PROPERTY for JLS8 and in
org.eclipse.jdt.core.dom.ASTConverter.convert(boolean, AbstractMethodDeclaration)
we should switch on JLS levels to decide whether to call convertType or
convert(TypeReference

BETA_JAVA8:

MethodDeclaration declares THROWN_EXCEPTIONS_PROPERTY to be a list of names.
It should actually be Types so that annotations could be captured there.

For API breakage reasons, we cannot change this, we need to add a new
property THROWN_EXCEPTIONS_TYPES_PROPERTY for JLS8 and in
org.eclipse.jdt.core.dom.ASTConverter.convert(boolean, AbstractMethodDeclaration)
we should switch on JLS levels to decide whether to call convertType or
convert(TypeReference
Manoj, please see https://bugs.eclipse.org/bugs/show_bug.cgi?id=391847#c18 and
https://bugs.eclipse.org/bugs/show_bug.cgi?id=391847#c8 on suggestions on
how to proceed.

Please wait until https://bugs.eclipse.org/bugs/show_bug.cgi?id=391890 gets
resolved and use that patch as a boiler plate.
Given the discussions in bug 391847, this may be heading to a NOP after all.
(In reply to comment #2)
> Given the discussions in bug 391847, this may be heading to a NOP after all.

Per https://bugs.eclipse.org/bugs/show_bug.cgi?id=391847#c47, we have
approached the EG with a spec change request. It could be a while.
Irrespective of which way it goes, we can proactively proceed on this
and even if status quo is retained, it would still be a correct solution.
Created attachment 224251
Proposed Fix [NON-ASTRewrite Part]

Only the non-ASTRewrite Implementation will be tracked further in patch[es] attached here since another bug 395658 has been created to track the ASTRewrite Implementation.
I had to delete the copyright disclaimer in ASTMatcher.java to be able to 
apply the patch.
Created attachment 225329
Proposed Patch

(In reply to comment #5)

Srikanth,

- Patch has been updated with the latest code.

[Alternatively Fuzz Factor 2 also works with the previous patch]
Here are some comments:

MethodDeclaration.java:

(1) The element type of thrownExceptionTypes is not Name !

(2) Please remove the bug reference (// https://bugs.eclipse.org/bugs/show_bug.cgi?id=392132) from this
patch. They are not useful IMO. In general, we want to cite the bug
number only when we expect someone in future to look up because of
the complexity of the algorithm, or due to the existence of some nuance
in the picture, Routine citations just clutter the code without adding
value.

(3) Push the comment // allow default implementation to flag the error to
next line. Why would it be pulled up ? 

(4) If a client invokes the new method thrownExceptionTypes() at the wrong
JLS level, we should thrown unsupported exception, presently we won't.
Likewise thrownExceptions().

(5) thrownExceptionTypes needs to be initialized with node list only
at JLS level >=8 and thrownExceptions needs to be initialized only at
< 8. These are better initialized in the constructor.

(6) Why is memSize not modified ?

(7) ASTVisitor.java - why is this file changed at all ? I see nothing but
copyright changes ? 

(8) ASTVisitorTest is missing JCP disclaimer.

(9) ASTTest: I didn't understand the block:
if (parented) {
    targetAst.newArrayType(result);
} 
It looks suspicious :)

(10) Restore blank like so that it shows up as 2 diffs and not 3.
Created attachment 225495
Proposed Patch with rework

Comments addressed. Following comments have specific notes as shown below:

(4) If a client invokes the new method thrownExceptionTypes() at the wrong
JLS level, we should thrown unsupported exception, presently we won't.
Likewise thrownExceptions().

 => Added supportedOnlyIn2_3_4() definition as well.

(8) ASTVisitorTest is missing JCP disclaimer.
=> last patch had the JCP disclaimer at the header. - rechecked.

(9) ASTTest: I didn't understand the block:
if (parented) {
    targetAst.newArrayType(result);
} 
It looks suspicious :)

=> sample(, true) called to run a test where an already parented node is called to add another parent followed by an assert which throws up an RuntimeException (Ref ASTTest). This is the sole purpose and hence keeping the code.

(10) Restore blank like so that it shows up as 2 diffs and not 3.
Comments:

(1) The javadoc for org.eclipse.jdt.core.dom.MethodDeclaration.thrownExceptions
and org.eclipse.jdt.core.dom.MethodDeclaration.thrownExceptionTypes claim 
that these default to empty lists. These in reality default to empty lists
only at supported JLS levels ?

(2) org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2_3_4() incorrectly
claims "Operation only supported in JLS2 AST"

(3) We need to mention in the javadoc of THROWN_EXCEPTIONS_PROPERTY and
THROWN_EXCEPTION_TYPES_PROPERTY the applicable JLS levels. See RETURN_TYPE_PROPERTY and RETURN_TYPE2_PROPERTY's javadoc.
Created attachment 225549
Proposed Patch

Addressed the comments (JavaDoc)
Released fix via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=7a73f29da5ea73cce41fc54b0fc3ad302149f476.

Thanks Manoj.
Resolved.

Build ID: M20080911-1700

Steps To Reproduce:
1. Enable save actions 'remove trailing whitespace' and 'correct indentation'.
2. Create a new class, add a first line of comment.
3. Hit return a few times to add blank lines of comment.
4. Save.
5. Note trailing whitespace...
6. Disable 'remove trailing whitespace'.
7. Make a further edit (more blank lines, whatever) and save.
8. Note no trailing whitespace.

More information:

Maybe bug 173081 is related?  Seems undesirable to ever leave trailing whitespace if the user chooses to remove it.

For example, we have a coding style check that our files don't contain trailing whitespace and naturally it doesn't make any exemptions for comments or anything else.

It seems like its trimming whitespace first then correcting indentation which involves adding trailing whitespace to blank lines of comment.  Perhaps this is down to some option in the formatter but I can't find it and I want my comments indented by a character, provided there is one.

===

May be unrelated, but I noted that if you hit return in a comment that doesn't have any trailing whitespace then the next line isn't indented either.  This seems undesirable but I think padding comments with whitespace isn't a good solution, if indeed that's what's how this came about.

Build ID: M20080911-1700

Steps To Reproduce:
1. Enable save actions 'remove trailing whitespace' and 'correct indentation'.
2. Create a new class, add a first line of comment.
3. Hit return a few times to add blank lines of comment.
4. Save.
5. Note trailing whitespace...
6. Disable 'remove trailing whitespace'.
7. Make a further edit (more blank lines, whatever) and save.
8. Note no trailing whitespace.

More information:

Maybe bug 173081 is related?  Seems undesirable to ever leave trailing whitespace if the user chooses to remove it.

For example, we have a coding style check that our files don't contain trailing whitespace and naturally it doesn't make any exemptions for comments or anything else.

It seems like its trimming whitespace first then correcting indentation which involves adding trailing whitespace to blank lines of comment.  Perhaps this is down to some option in the formatter but I can't find it and I want my comments indented by a character, provided there is one.

===

May be unrelated, but I noted that if you hit return in a comment that doesn't have any trailing whitespace then the next line isn't indented either.  This seems undesirable but I think padding comments with whitespace isn't a good solution, if indeed that's what's how this came about.
>6. Disable 'remove trailing whitespace'.
You probably meant "disable 'Correct indentation'

>Maybe bug 173081 is related? 
Nope.


Same issue when executing as clean ups. It's only an issue for the comment lines that have a * plus whitespace. It works if there's text.

(In reply to comment #1)
> >6. Disable 'remove trailing whitespace'.
> You probably meant "disable 'Correct indentation'
> 
Yes, sorry.
If one could select the order of all save actions then people could select whether to first remove trailing whitespace and then reindent or to first reindent and then remove trailing whitespace.
Disabling 'Correct indentation' doesn't work for me. However, now whitespace is added or removed almost randomly. Usually it adds whitespace at every second save and removes the same whitespace at every other save. 'Disabling Format source code (Format edited lines)' fixes this problem.
Please fix this bug.  It is very annoying in projects which use both Eclipse and IntelliJ and causes unnecessary noise in the versioning system.  Eclipse should not force reinsertion of unwanted trailing whitespace in javadoc
I hope this one (and its counterpart https://bugs.eclipse.org/bugs/show_bug.cgi?id=270745) are in for a fix in 4.3 - please
(In reply to comment #6)
> I hope this one (and its counterpart
> https://bugs.eclipse.org/bugs/show_bug.cgi?id=270745) are in for a fix in
> 4.3 - please

Sorry, there is no one working on this.
*** Bug 414421 has been marked as a duplicate of this bug. ***
*** Bug 379982 has been marked as a duplicate of this bug. ***
*** Bug 270745 has been marked as a duplicate of this bug. ***
Any hints from the JDT team which code needs to be modified to solve this issue?
(In reply to comment #11)
> Any hints from the JDT team which code needs to be modified to solve this
> issue?

We'd first have to identify where the problem is. I'd start by looking at
org.eclipse.jdt.internal.corext.fix.CodeFormatFix
(In reply to comment #11)
> Any hints from the JDT team which code needs to be modified to solve this
> issue?

Do you plan to work on a fix?
> Do you plan to work on a fix?

I plan to look at it. But as I'm not familiar with this part of the JDT code, I can't promise anything. 

If I would be a regular EGit committer I definitely would look into this (because it makes contributing to EGit / JGit annoying). I therefore assume EGit committer might also be interested in fixing that issue, so more hints how to fix might be helpful in general.
(In reply to comment #14)
> > Do you plan to work on a fix?
> 
> I plan to look at it.

Can you give a time frame? 


 
> If I would be a regular EGit committer I definitely would look into this
> (because it makes contributing to EGit / JGit annoying). I therefore assume
> EGit committer might also be interested in fixing that issue, so more hints
> how to fix might be helpful in general.

The hint I gave is where to start and where also "we" have to start to say more.
Possible dup : https://bugs.eclipse.org/bugs/show_bug.cgi?id=360523

This is really an everyday annoyance when working with git
*** Bug 360523 has been marked as a duplicate of this bug. ***
I debugged this starting from CodeFormatFix and landed at the place where the space is inserted: org.eclipse.jdt.internal.formatter.Scribe#printJavadocGapLines

There is a reference to bug 49619 there, which is about not actually inserting a space when formatting the comment in the first place. That sounds wonderful and would probably make this bug obsolete. The good news is that there's a patch, the bad news is that it's not yet reviewed.
Can this be marked as dup of Bug 49619?
(In reply to Lars Vogel from comment #19)
> Can this be marked as dup of Bug 49619?

If you verified and confirm here that said bug actually fixes this one, then "yes".
(In reply to Dani Megert from comment #20)
> (In reply to Lars Vogel from comment #19)
> > Can this be marked as dup of Bug 49619?
> 
> If you verified and confirm here that said bug actually fixes this one, then
> "yes".

OK, I've looked at this:
- Bug 49619 would fix the case where the clean up formats, but only if we 
  introduce a new preference that the user has to set first (not so good). 
- 'Correct indentation' is not dependent on the formatter and hence won't be 
  fixed by the formatter fix.
Fixed with http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=d3b41313326ad1f78b5b3f1ec14ca3702eda704c

This fixes the conflict with correct indentation and will also fix the formatter conflict once bug 49619 is been fixed.

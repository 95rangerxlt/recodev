Consider the below code:
	interface test{
		public void m1(){
	}
For m1(), currently user is provided with a single Quick Fix proposal which will remove the body of the method. Ideally from Java 1.8, the method can be either default or static, hence we need to provide 2 new proposals here.
The Quick Fix proposals will be:
1. Remove method body
2. Add 'default' modifier
3. Add 'static' modifier

Consider the below code:
	interface test{
		public void m1(){
	}
For m1(), currently user is provided with a single Quick Fix proposal which will remove the body of the method. Ideally from Java 1.8, the method can be either default or static, hence we need to provide 2 new proposals here.
The Quick Fix proposals will be:
1. Remove method body
2. Add 'default' modifier
3. Add 'static' modifier
Created attachment 234028
Patch with testcases.

As discussed, for abstract methods in interface new quick fix proposals are added. Testcases are also attached.

Markus, please review.
Created attachment 235220
Updated Patch with tests

Created fresh patch from the newly created remote branch after removing duplicates.
Created attachment 241760
Patch+Tests

Updated patch against master.
- When we have explicit 'abstract' modifier:
interface Test {
	public abstract void m1() {
	}
}
the proposals say: "Add 'default' modifier", "Add 'static' modifier".
They actually replace the 'abstract' modifier rather than adding one.
Shouldn't these be "Change modifier of {0} to 'static' / 'default'" (like bug 414100)?

- All calls to ASTNodes.findModifierNode in ModifierCorrectionSubProcessor where we remove the returned modifier can be replaced with the new ModifierCorrectionSubProcessor.removeModifier method.

- ModifierChangeCorrectionProposal can be used instead of LinkedCorrectionProposal like other places in ModifierCorrectionSubProcessor.
(In reply to Noopur Gupta from comment #4)
> - When we have explicit 'abstract' modifier:
> interface Test {
> 	public abstract void m1() {
> 	}
> }
> the proposals say: "Add 'default' modifier", "Add 'static' modifier".
> They actually replace the 'abstract' modifier rather than adding one.
> Shouldn't these be "Change modifier of {0} to 'static' / 'default'" (like
> bug 414100)?

We already have the following cases where the proposal text is not exactly same as what the proposal does:

interface I {
	 static int bar(); // [1] - Add 'abstract' modifier
}
class C {
	static int i= foo(); // [2] - Change modifier of 'foo()' to 'static'
	int foo() {
		return 0;
	}
}

Markus, is this OK or should all these be updated?
The problem that we are handling here is "IProblem.BodyForAbstractMethod". The confusion happens when the method is explicitly qualified with Abstract modifier and user is shown "Add 'static' / 'default' modifier" quick fix. Since this message does not literally fit all situation, how about "Convert to 'static' / 'default' method"?
Yes, please fix inexact messages and use e.g. ModifierCorrectionSubProcessor_changemodifiertostatic_description=
Change modifier of ''{0}'' to ''static''

In case we do more than changing a modifier, use:
Change method ''{0}'' to ''static''
... or:
Change to ''static''

Please don't use "Convert". We commonly use "Change" for small/localized changes and "Convert" for larger-scale conversions that apply more than 1 or 2 changes.
Created attachment 241993
Patch+Tests

Updated the patch after modifying the quick fix message from "Add modifier.." to "Change modifier...". When the quick fix is invoked on methods with implicit abstract modifier, the "Change modifier .." message might not be the exact message, but it is better than showing "Add modifier.." when there is explicit abstract modifier associated to a method.
Noopur, let me know if this change is fine.
(In reply to Manju Mathew from comment #8)
> Created attachment 241993 [details] [diff]
> Patch+Tests

Is this the updated patch? 
It does not contain the changes requested in comment #4. Also, the early draft declaration is still present in the files.
You can release the patch once those changes and correct messages are updated.

> Updated the patch after modifying the quick fix message from "Add
> modifier.." to "Change modifier...". When the quick fix is invoked on
> methods with implicit abstract modifier, the "Change modifier .." message
> might not be the exact message, but it is better than showing "Add
> modifier.." when there is explicit abstract modifier associated to a method.
> Noopur, let me know if this change is fine.

Markus, please have a look at the above message and share your thoughts.
Created attachment 242076
Updated patch

Accidentally uploaded the wrong patch earlier.
Released the patch to master with : http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=ca371620e0f1b5ed39c5d47afe00e11db3f3eaea

Markus, have a look at the quick fix messages.
interface I {
    default void bar();
    void foo() { }
}

Fixed first quick fix to avoid adding a redundant 'abstract' modifier. Removed the word "modifier" from the messages to include the cases where modifiers are added/deleted, not changed (comment 7): http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=ed8bda6dc0617d173cd3b5b770fdc3e6432ed402

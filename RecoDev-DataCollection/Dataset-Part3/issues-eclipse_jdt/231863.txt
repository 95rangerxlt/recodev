Created attachment 99987
let test fail if not enough annotations in editor

I20080510-2000

The ScrollVerticalRuler5000Test should show a speed up of around 3 after fix for bug 113247 has been released for I20080320-0800. I can reproduce that on my machine and on our build machine. But the ottawa test machine shows no effect at all:
http://download.eclipse.org/eclipse/downloads/drops/I20080508-2000/performance/eclipseperflnx2/org.eclipse.jdt.text.tests.performance.ScrollVerticalRuler5000Test.testScrollTextEditorPageWise().html

The only explanation I can offer is that the test is bogus. I assume, that the editor is scrolled on the test machine without any annotations at all. This maybe due to a missing spelling dictionary or another bug in the spelling engine. 

I want to release the attached patch which asserts that there are enough annotations in the editor to prove my theory.

Dani? Any better ideas?

Created attachment 99987
let test fail if not enough annotations in editor

I20080510-2000

The ScrollVerticalRuler5000Test should show a speed up of around 3 after fix for bug 113247 has been released for I20080320-0800. I can reproduce that on my machine and on our build machine. But the ottawa test machine shows no effect at all:
http://download.eclipse.org/eclipse/downloads/drops/I20080508-2000/performance/eclipseperflnx2/org.eclipse.jdt.text.tests.performance.ScrollVerticalRuler5000Test.testScrollTextEditorPageWise().html

The only explanation I can offer is that the test is bogus. I assume, that the editor is scrolled on the test machine without any annotations at all. This maybe due to a missing spelling dictionary or another bug in the spelling engine. 

I want to release the attached patch which asserts that there are enough annotations in the editor to prove my theory.

Dani? Any better ideas?
Please commit the change and mark your calender to check the outcome.
first patch released > I20080513-2000
OK, got it: your test relies on spelling being enabled, however, this is off by default when running the tests on the build machine.

1. remove assertion again
2. enable (and then disable) spelling for all your tests where you rely on it
3. backport to 3.3.x perf branch

Created attachment 100377
fix HEAD

I see, there's code in AbstractDecoratedTextEditorPreferenceConstants which turns off the spelling engine if the db location system property is set, great:-)

I'll keep the assertion, just to make sure. I've even added another one which checks that a spelling engine is installed.
Created attachment 100378
fix perf_33x

Dani, if I release both patches now then the tests will go dark red until a new baseline is created (which may take weeks...) If I don't release the HEAD fix then the assertion will fail. I would like to release both now...
Please go ahead but make sure to *put* the value and not just set the default and make sure to call setToDefault in tearDown.
fixed > I20080513-2000 and also in perf_33x stream



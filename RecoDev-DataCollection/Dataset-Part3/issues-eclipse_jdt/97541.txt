RC1

- open a smaller sized file
- enable annotations for search results (highlight, vertical and overview ruler)
- open the search dialog, file search, regex for '.', only on the open file
(specify file pattern), search
- This will add a match for each character
- you can follow the updating of highlighting character by character, depending
on the file size this blocks your machine completly

Search reports added annotations one by one from a worker thread. The annotation
painter posts a repaint in async exec even if the previous request has not been
processed. A second async exec is posted inside the runnbale to update the
annotation ruler.

RC1

- open a smaller sized file
- enable annotations for search results (highlight, vertical and overview ruler)
- open the search dialog, file search, regex for '.', only on the open file
(specify file pattern), search
- This will add a match for each character
- you can follow the updating of highlighting character by character, depending
on the file size this blocks your machine completly

Search reports added annotations one by one from a worker thread. The annotation
painter posts a repaint in async exec even if the previous request has not been
processed. A second async exec is posted inside the runnbale to update the
annotation ruler.
For some extra fun try to use the scollbar while updating.
Same problem when markers are added one by one. This is considered bad and a
blooper.

Martin, did you file a bug report against Search as well?

the corresponding search bug is bug 66685.

However, I think the main problem is in text. I seems to me that the most
promising fix is to to create a new async exec when the previous is not yet
processed.
Platform Text offers a method to add/remove a bunch of markers at once. There
are currently no plans to bundle/batch single calls to add/remove.
Get rid of deprecated state.
This has been fixed a while ago.

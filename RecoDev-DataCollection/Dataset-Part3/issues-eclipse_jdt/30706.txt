I am trying to use the refactoring support in an environment where the project 
source tree is accessed via links and some parts of the raw tree are filtered 
out.

Specifically I am trying to rename a class and when the refactoring dialog 
comes up I select all the options which forces a preview. When I select the 
"preview" button, the system works for a moment, flashes up another dialog or 
message box which disappears before it can be seen and finally presents a 
dialog that states that an internal processing error has occurred and that 
details will be found in the log.

When I look at the log below

!SESSION Jan 31, 2003 07:56:09.772 --------------------------------------------
-
java.version=1.4.1_01
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -data 
E:\CRYPTOAdminWorkspace-6.0 -showlocation -install file:E:/Eclipse-
I20030129/eclipse/
!ENTRY org.eclipse.jdt.ui 4 10001 Jan 31, 2003 07:56:09.772
!MESSAGE Internal Error
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run
(CheckConditionsOperation.java:61)
	at org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run
(CreateChangeOperation.java:94)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:95)
Caused by: Java Model Exception: Core Exception [code 969] 
Release/com/cryptocard/HalfPint [in CRYPTOAdmin-6.0] does not exist.
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeRefactoring.checkI
nput(RenameTypeRefactoring.java:389)
	at org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run
(CheckConditionsOperation.java:59)
	... 2 more

we see that the system is complaining about Release/com/cryptocard/HalfPint. 
This is one of the directories that has been filtered out of the project.

I am attaching the .project and .classpath files for the project as supporting 
material.

Regards

Jonathan Gossage

I am trying to use the refactoring support in an environment where the project 
source tree is accessed via links and some parts of the raw tree are filtered 
out.

Specifically I am trying to rename a class and when the refactoring dialog 
comes up I select all the options which forces a preview. When I select the 
"preview" button, the system works for a moment, flashes up another dialog or 
message box which disappears before it can be seen and finally presents a 
dialog that states that an internal processing error has occurred and that 
details will be found in the log.

When I look at the log below

!SESSION Jan 31, 2003 07:56:09.772 --------------------------------------------
-
java.version=1.4.1_01
java.vendor=Sun Microsystems Inc.
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Command-line arguments: -os win32 -ws win32 -arch x86 -data 
E:\CRYPTOAdminWorkspace-6.0 -showlocation -install file:E:/Eclipse-
I20030129/eclipse/
!ENTRY org.eclipse.jdt.ui 4 10001 Jan 31, 2003 07:56:09.772
!MESSAGE Internal Error
!STACK 0
java.lang.reflect.InvocationTargetException
	at org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run
(CheckConditionsOperation.java:61)
	at org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run
(CreateChangeOperation.java:94)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:95)
Caused by: Java Model Exception: Core Exception [code 969] 
Release/com/cryptocard/HalfPint [in CRYPTOAdmin-6.0] does not exist.
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeRefactoring.checkI
nput(RenameTypeRefactoring.java:389)
	at org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run
(CheckConditionsOperation.java:59)
	... 2 more

we see that the system is complaining about Release/com/cryptocard/HalfPint. 
This is one of the directories that has been filtered out of the project.

I am attaching the .project and .classpath files for the project as supporting 
material.

Regards

Jonathan Gossage
Created attachment 3248
The .project file for the problem project.
Created attachment 3249
The .classpath file for the problem project.
The JavaModel exception seems legite if the file is excluded. Moving to 
refactoring for further analysis (feels like they should never have got a hold 
onto it). Where did it came from ?
Adam, the first bug regarding linked resources and exculsion filters. 
Jonathan, what do you mean with filtered out. Excluded from the class path or 
filtered in the package explorer (UI) ?
silly me - i guess i know the answer to Dirk's question
i forgot to look at the classpath file
it contains excluded folders

It is filtered out from the source tree using the Java project wizard.

Regards

Jonathan Gossage
i cannot reproduce the exception
but we noticed that search engine reports results in excluded files

1. create a jproject with a source folder (lined) src
2. create 2 package in it
 a.b.c with A.java
 d.e.f with B.java - with class B that references class A

3. search for refs to A - you find some in B.java
4. exclude d/ from the classpath
5. search again for refs to A - you still find some in B.java (which is now 
incorrect as it's not a real java file anymore (compiler ignores it))

asking jcore for comment
Sounds like a bug
Adam's problem happens only if an editor on B.java is open. In this case, the 
corresponding IWorkingCopy is passed to the SearchEngine and the SearchEngine 
looks for matches in this IWorkingCopy.

Should the SearchEngine exclude IWorkingCopies whose original element is 
excluded? Or should the UI do the filtering beforehand? 

If we choose the former solution, it will never be possible to search in 
IWorkingCopies open on non-java resources. If we choose the latter solution, it 
is more flexible and the decision can be taken at the UI level.

Moving to JDT/UI for comment.
No we have two different issue in one PR. I split it. For the search engine 
problem I opened bug 31473.

Adam, can you please try to reproduce the original problem. 
reproduced
the folders being linked did not matter
the key points were the exclusions and the fact that Jonathan checked all 
options (which i missed before)
the exception happened in TextMatchFinder (this was a bit obscured before)
fix is easy

Caused by: Java Model Exception: Java Model Status 
[Release/com/cryptocard/HalfPint [in CRYPTOAdmin-6.0] does not exist.]
	at org.eclipse.jdt.internal.core.JavaElement.newNotPresentException
(JavaElement.java:482)
	at org.eclipse.jdt.internal.core.PackageFragmentRoot.openWhenClosed
(PackageFragmentRoot.java:780)
	at org.eclipse.jdt.internal.core.Openable.openParent(Openable.java:369)
	at org.eclipse.jdt.internal.core.Openable.openWhenClosed
(Openable.java:385)
	at org.eclipse.jdt.internal.core.PackageFragment.openWhenClosed
(PackageFragment.java:314)
	at org.eclipse.jdt.internal.core.Openable.openParent(Openable.java:369)
	at org.eclipse.jdt.internal.core.CompilationUnit.openParent
(CompilationUnit.java:751)
	at org.eclipse.jdt.internal.core.Openable.openWhenClosed
(Openable.java:385)
	at org.eclipse.jdt.internal.core.JavaElement.openHierarchy
(JavaElement.java:503)
	at org.eclipse.jdt.internal.core.JavaElement.getElementInfo
(JavaElement.java:296)
	at org.eclipse.jdt.internal.core.Openable.getBuffer(Openable.java:187)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.RefactoringScanner.scan
(RefactoringScanner.java:43)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.TextMatchFinder.addTextMatche
s(TextMatchFinder.java:165)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.TextMatchFinder.addTextMatche
s(TextMatchFinder.java:141)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.TextMatchFinder.addTextMatche
s(TextMatchFinder.java:152)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.TextMatchFinder.addTextMatche
s(TextMatchFinder.java:152)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.TextMatchFinder.addTextMatche
s(TextMatchFinder.java:152)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.TextMatchFinder.addTextMatche
s(TextMatchFinder.java:152)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.TextMatchFinder.addTextMatche
s(TextMatchFinder.java:152)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.TextMatchFinder.findTextMatch
es(TextMatchFinder.java:116)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.TextMatchFinder.findTextMatch
es(TextMatchFinder.java:89)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.TextMatchFinder.findTextMatch
es(TextMatchFinder.java:61)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeRefactoring.addText
Matches(RenameTypeRefactoring.java:742)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeRefactoring.createC
hangeManager(RenameTypeRefactoring.java:762)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameTypeRefactoring.checkIn
put(RenameTypeRefactoring.java:384)

to verify do this:
1. create a jproject j
2. create a source folder src in in it
3. create a package a.b in scr
4. create a file A.java in package a.b
5. creat a file B.java in package a (with class B in it)
6. exclude a.b from classpath
7. select class B
8. rename (check option 'update references in javadoc comments')
9. press preview
fixed

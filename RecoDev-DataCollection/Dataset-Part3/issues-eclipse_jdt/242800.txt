Created attachment 108910
New import wizard

The current JUnit test result import requires you to use an OS based file picker to find the results you want importing.  It would be nice if there was a workspace browser that could be used to pick the files too.

I have attached a patch that adds a new import JUnit test result import wizard and hooks into this wizard from the JUnit view.  This is a prototype only and could do with a bit of cleanup.  In particular, i was wondering if it would make sense to change it into more of a preview based wizard.  Instead of having options to select a file or workspace resource, have one combo with two browse buttons and use the area underneath to show test summary data.  This way we can verify that the file is indeed a test result file and verify it is the correct one.

Created attachment 108910
New import wizard

The current JUnit test result import requires you to use an OS based file picker to find the results you want importing.  It would be nice if there was a workspace browser that could be used to pick the files too.

I have attached a patch that adds a new import JUnit test result import wizard and hooks into this wizard from the JUnit view.  This is a prototype only and could do with a bit of cleanup.  In particular, i was wondering if it would make sense to change it into more of a preview based wizard.  Instead of having options to select a file or workspace resource, have one combo with two browse buttons and use the area underneath to show test summary data.  This way we can verify that the file is indeed a test result file and verify it is the correct one.
What is the scenario for having the file inside the workspace? Is it to get the results from an Ant build? If so, a special Ant task that imports the results would be a better solution.

Another solution to ease the workflow could be to use the last used directory when importing JUnit test results.

>  In particular, i was wondering if it would
>make sense to change it into more of a preview based wizard. 
Having a preview is overkill and all other JDT importers (import order, templates, formatter profiles, etc.) don't do this. If we decide to offer importing from workspace and file system, the question arises whether all other importers should do the same (reuse same component).

> This is a prototype only and could do with a bit of cleanup.  
I assume you would do the clean up, right?

(In reply to comment #1)
> What is the scenario for having the file inside the workspace? Is it to get the
> results from an Ant build? If so, a special Ant task that imports the results
> would be a better solution.

The results are generated via the Maven2 surefire plugin.  It might be possible to have it integrate directly to eclipse if it detects it is running, but it would only work if it was executed in process (which i would personally avoid doing).  It will probably fork a VM to run the tests anyway...

> 
> Another solution to ease the workflow could be to use the last used directory
> when importing JUnit test results.

yes, that is another option, but I would suggest that it would work better if you also had a history of previous values.  We tend to have lots of smaller projects.

> 
> > This is a prototype only and could do with a bit of cleanup.  
> I assume you would do the clean up, right?
> 

yes, but only once you have decided if this is the right way to go, or would prefer another solution.


The problem is that I am not convinced that many people would need this i.e. import JUnit from inside workspace AND using different locations often. With your patch people always get a second dialog in the face which I don't like. Another option that Markus suggested was to add two menu entries (one for OS and one for workspace import) but I even dislike that more.

Note that if the previous location would be restored it shouldn't be easy to switch to another project, should it?
I think we should:
1.) Make the import dialog remember the last chose location (also after restart).
2.) Allow to open test results via Open With > JUnit View, see bug 213786 comment 5.
3.) Implement drag and drop to open result files by dropping them onto the JUnit view.

This would keep the Import and Export actions file-system-based (but users who want can also navigate to the workspace once and then open files from there).


(In reply to comment #1)
> What is the scenario for having the file inside the workspace? Is it to get the
> results from an Ant build? If so, a special Ant task that imports the results
> would be a better solution.

See bug 206879 for this.
(In reply to comment #4)
I've released 1. (remember last location) and 2. (bug 213786) to HEAD.

Please open another bug if you need more than what will show up in the next I-build.

Here is a simple code:

class X {
	public void foo(@Marker int p) {}
}

Now, for parameter 'p', Argument#type#resolvedType (which is a BaseTypeBinding)doesn't contain the type use annotations. Interestingly, Argument#binding#type (which is also a BaseTypeBinding) contains the annotations correctly. Ideally, they should be referencing the same object.

Here is a simple code:

class X {
	public void foo(@Marker int p) {}
}

Now, for parameter 'p', Argument#type#resolvedType (which is a BaseTypeBinding)doesn't contain the type use annotations. Interestingly, Argument#binding#type (which is also a BaseTypeBinding) contains the annotations correctly. Ideally, they should be referencing the same object.
Looks like we have this problem in other places as well where TypeReference have a different type binding (without the type use annotations).
Srikanth, can you take a look at this? I am discovering that many of the new tests I am adding as part of bug 409586 are failing because of this.
Could you attach these tests,I'll take a look at it today. TIA.
Created attachment 235602
Test case

Test cases with failing tests. There are about 5 tests that are failing. 

The tests need this code as a prerequisite:
https://bugs.eclipse.org/bugs/attachment.cgi?id=235525&action=diff
let me guess:

When copySE8AnnotationsToType() writes to
  local.type
it should write the same also to
  typeRef.resolvedType
(if valid binding ...)

I haven't tried this, it's pure theory :)

Now that we have mergeAnnotationsIntoType() it could even be done inside there.
Fix released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=b66bc0ca466232b8b3006ed38a5137923b03416c.

Jay, I didn't add a test since you have tests. If they show any problems,
please reopen.
Most fixes seem to be addressed, but for the following one:
try {
} catch (@Marker NullPointerException | @Marker ArrayIndexOutOfBoundsException e) {
}

Here, the first annotation seem to be added to the UnionType rather than the TypeReference of the 'NullPointerException'. This eventually annotates the binding of the RuntimeException. Is this what is expected?
(In reply to Jayaprakash Arthanareeswaran from comment #7)
> Most fixes seem to be addressed, but for the following one:
> try {
> } catch (@Marker NullPointerException | @Marker
> ArrayIndexOutOfBoundsException e) {
> }

I have fixed this along with fix for bug 409586.

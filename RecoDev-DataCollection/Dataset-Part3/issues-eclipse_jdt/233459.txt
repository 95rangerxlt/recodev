Build ID: I20080517

Steps To Reproduce:
From the file eclipse\plugins\org.eclipse.jdt.doc.isv\reference\extension-points\org_eclipse_jdt_apt_coreannotationProcessorFactory.htm (preview mode)

annotationProcessorFactory :

<extension
point="org.eclipse.jdt.apt.core.annotationProcessorFactory">
<factories enableDefault="true">
<factory
class="org.xyz.HelloWorldAnnotationProcessorFactory">
</factory>
<factory
class="org.xyz.GoodNightMoonAnnotationProcessorFactory">
</factory>
</factories>
</extension>

This element declaration example contains concatenated strings, which appear to be class names, hence normally not to be translated. However, these class names could also be regarded as exemplary placeholders meant to be translated for easier understanding by the reader. So, are we suppose to translate them or leave them as is?

In order to ensure translation consistency, we did not change any code/examples strings we might have regarded as translatable, and will take necessary action if need be, depending on your explanations. 


More information:

Build ID: I20080517

Steps To Reproduce:
From the file eclipse\plugins\org.eclipse.jdt.doc.isv\reference\extension-points\org_eclipse_jdt_apt_coreannotationProcessorFactory.htm (preview mode)

annotationProcessorFactory :

<extension
point="org.eclipse.jdt.apt.core.annotationProcessorFactory">
<factories enableDefault="true">
<factory
class="org.xyz.HelloWorldAnnotationProcessorFactory">
</factory>
<factory
class="org.xyz.GoodNightMoonAnnotationProcessorFactory">
</factory>
</factories>
</extension>

This element declaration example contains concatenated strings, which appear to be class names, hence normally not to be translated. However, these class names could also be regarded as exemplary placeholders meant to be translated for easier understanding by the reader. So, are we suppose to translate them or leave them as is?

In order to ensure translation consistency, we did not change any code/examples strings we might have regarded as translatable, and will take necessary action if need be, depending on your explanations. 


More information:
Either option is acceptable; probably we should do whatever we do with class names in other code examples, if such a policy exists.

It would certainly be appropriate to localize the class names.  They are completely arbitrary; any two classnames would do equally well, so feel free to use whatever is culturally appropriate in a given language.  (E.g., perhaps in Italy one might say it.com.xyz.CiaoBella.)
thanks!

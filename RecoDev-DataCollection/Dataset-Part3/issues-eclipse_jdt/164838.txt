One of the most common filters used in user assistance content (help topics, welcome pages, etc) is to filter based on whether or not a plugin is installed. This allows adding/modifying instructions based on which functionality is available, and provides links for product consumers to purchase tools or extensions to a product. Since we will be using expressions, we need a property tester for this.

I am not certain exactly where this should go, but the patch I am about to submit has it in org.eclipse.core.expressions. I don't think it should go in at the OSGI level since it's an eclipse invention, and not in org.eclipse.core.runtime since it is below expressions, and there is nothing above expressions that screams "runtime stuff above expressions", i.e. it's not specific to resources, or UI. So by process of elimination I get to the expressions plugin itself. Feel free to move or edit.

One of the most common filters used in user assistance content (help topics, welcome pages, etc) is to filter based on whether or not a plugin is installed. This allows adding/modifying instructions based on which functionality is available, and provides links for product consumers to purchase tools or extensions to a product. Since we will be using expressions, we need a property tester for this.

I am not certain exactly where this should go, but the patch I am about to submit has it in org.eclipse.core.expressions. I don't think it should go in at the OSGI level since it's an eclipse invention, and not in org.eclipse.core.runtime since it is below expressions, and there is nothing above expressions that screams "runtime stuff above expressions", i.e. it's not specific to resources, or UI. So by process of elimination I get to the expressions plugin itself. Feel free to move or edit.
Created attachment 53994
patch

Could you review and apply? thanks
Curtis,

thanks for the patch. Two comments:

- core expression supports calling "static" methods. So we can define the tester
  for Platform.class or Bundle.class and pass in the Java class object as the
  receiver instead of using Object as the type.

- What's about a small test case.

Do you want to do the above change ?
Thanks Dirk, I'll supply a new patch with the suggested changes shortly.
Created attachment 54649
updated patch

Here's the updated patch, with the following changes:

- Switched type to org.eclipse.core.runtime.Platform, to denote that this tester tests properties of the platform. I prefer Platform over Bundle because we are indeed asking the platform whether it has a bundle installed or not, rather than asking a bundle whether it is itself installed (which is actually not possible because you can't get a reference to it if it doesn't exist).
- Renamed tester to PlatformPropertyTester to more accurately describe the tester.
- Added a test.

Now that this no longer uses java.lang.Object, if the evaluator does not have the platform as the defualt variable, you must use a with expression and supply a variable resolver.
Fixed for ibuild 2006/12/05

I20030722

1. create class A, then paste the following body, don't save until step 5
public class A {
	int x= 1;
	//TODO xxxx
}
2. note that the right editor bar shows a blue marker for the todo
   -> Todo was detected by the reconciler
3. change 'int x= 1;' to 'int x= 1xxx;'
   -> Red underline for '1xxx'
4. change back to 'int x= 1;'
   -> Red underline goes away, blue marker comes back
5. Save
6. change 'int x= 1;' to 'int x= 1xxx;'
   -> no red underline for '1xxx' anymore

All further changes are ignored. Reconciler does not update anymore

I20030722

1. create class A, then paste the following body, don't save until step 5
public class A {
	int x= 1;
	//TODO xxxx
}
2. note that the right editor bar shows a blue marker for the todo
   -> Todo was detected by the reconciler
3. change 'int x= 1;' to 'int x= 1xxx;'
   -> Red underline for '1xxx'
4. change back to 'int x= 1;'
   -> Red underline goes away, blue marker comes back
5. Save
6. change 'int x= 1;' to 'int x= 1xxx;'
   -> no red underline for '1xxx' anymore

All further changes are ignored. Reconciler does not update anymore
Anything in the console or the log ?
Nothing in the log.

I debugged into it: The ReconcileWorkingCopyOperation is entered,
workingCopy.isConsistent() always returns false

but IProblemRequestor.isActive returns false as it is asked before
'beginReporting' is called.
It seems that the jdt.ui implementation of the IProblemRequestor is active only
after beginReporting is called.

bug probably in jdt.text
CompilationUnitAnnotationModel.update(IMarkerDelta[] markerDeltas)
added
} finally {
  // ensure problem requestor gets deactivated
  fCollectedProblems= null;
}

commenting the fCollectedProblems= null; solves the problem
Build > I20030814.

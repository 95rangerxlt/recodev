R3.8.

The Open Input action in the info views should be disabled if the input is empty/null. Currently, it is not, and clicking it, gives an error dialog saying:

Problem opening editor for '': 'Could not get an editor input for the given element'

R3.8.

The Open Input action in the info views should be disabled if the input is empty/null. Currently, it is not, and clicking it, gives an error dialog saying:

Problem opening editor for '': 'Could not get an editor input for the given element'
Created attachment 229670
Patch.

Disabled "Open Input" when the view input is null.
Comment on attachment 229670
Patch.

Checking getInput() instead of 'input' is preferred.

While fixing this, we should also fix the Javadoc's view 'Open Attached Javadoc in a Browser'.
Dani, I came across few scenario where input and #getInput() are not in sync. For instance when user selects a package in Package Explorer and then selects the 'src' folder, then the input is null but #getInput() would be an instance of PackageFragmentRoot. Hence using #getInput() is not giving the desired result.

Also the requirement for Javadoc view's 'Open Attached Javadoc in a Browser', is that the button should be disabled if the url does not exist/invalid right?
(In reply to comment #3)
> Dani, I came across few scenario where input and #getInput() are not in
> sync. For instance when user selects a package in Package Explorer and then
> selects the 'src' folder, then the input is null but #getInput() would be an
> instance of PackageFragmentRoot. Hence using #getInput() is not giving the
> desired result.

I don't think we update the action in that case, and, we already use getInput() to compute the tool tip. Your steps don't seem to break something when using getInput().


> Also the requirement for Javadoc view's 'Open Attached Javadoc in a
> Browser', is that the button should be disabled if the url does not
> exist/invalid right?

No. Just when the input is empty/null.
(In reply to comment #4)
> I don't think we update the action in that case, and, we already use
> getInput() to compute the tool tip. Your steps don't seem to break something
> when using getInput().

Steps to reproduce the issue while using #getInput() to enable 'Open Input' action:
1. Select a "Java file" in package explorer. 'Open Input' action is enabled.
2. Select the "Java project" in package explorer. 'Link with Selection' action shows out of sync and 'Open Input' action is enabled.
3. Click twice on the 'Link with Selection' action. The Javadoc view is cleared, 'Link with Selection' action is enabled and 'Open Input' is also enabled.
4. Now click on the 'Open Input' action, we get the error dialog specified in this bug report.

In this scenario input is null, but #getInput() returns the currently selected Java project which results in enabling the 'Open Input' action.
(In reply to comment #5)
> (In reply to comment #4)
> > I don't think we update the action in that case, and, we already use
> > getInput() to compute the tool tip. Your steps don't seem to break something
> > when using getInput().
> 
> Steps to reproduce the issue while using #getInput() to enable 'Open Input'
> action:
> 1. Select a "Java file" in package explorer. 'Open Input' action is enabled.
> 2. Select the "Java project" in package explorer. 'Link with Selection'
> action shows out of sync and 'Open Input' action is enabled.
> 3. Click twice on the 'Link with Selection' action. The Javadoc view is
> cleared, 'Link with Selection' action is enabled and 'Open Input' is also
> enabled.
> 4. Now click on the 'Open Input' action, we get the error dialog specified
> in this bug report.
> 
> In this scenario input is null, but #getInput() returns the currently
> selected Java project which results in enabling the 'Open Input' action.

You're right. And in that case, the tool tip is also wrong, like I suspected.

I've committed your patch with http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=b8405fa05387cdb7daf0916f78cdceadd61a6d53

and then renamed getInput() to getOrignalInput() and fixed the tool tip with:
http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=7de40e2480d04f5baf1c504c4261daea04f08447

Open Attached Javadoc button enablement can be handled when fixing bug 333461.

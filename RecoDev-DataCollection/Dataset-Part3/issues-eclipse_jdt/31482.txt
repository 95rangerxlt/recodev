The organize imports source code tool (now available per package and project in
M5 of 2.1) ignores imports that support JavaDoc "links".  For example:

import java.util.*;

/** Foo is sorta like {@link Collection}
class Foo {
  public ArrayList fooList a = new ArrayList();

  ...
}

This is really bad no that organize imports can be used at the package or
project level!

The organize imports source code tool (now available per package and project in
M5 of 2.1) ignores imports that support JavaDoc "links".  For example:

import java.util.*;

/** Foo is sorta like {@link Collection}
class Foo {
  public ArrayList fooList a = new ArrayList();

  ...
}

This is really bad no that organize imports can be used at the package or
project level!
OK this was a bad description...if you run organize imports the code above
changes from "import java.util.*" to "import java.util.ArrayList" which causes
the JavaDoc link to break (next time you run JavaDoc)

Also I noted this is a duplicate of a "WONT FIX" bug 3654...HOWEVER with the new
package and project ability the WONT FIX is a bad idea.

At least a "This could mess up JavaDoc, are you sure YES/NO" dialog (with a
"Don't show me this again" check box would make the new features much less
annoying.  As a case study, I checked in changes to 3,000 files (160K of Java)
before I noticed this "WONT FIX" problem -- a simple dialog would really make
sense here even if the real problem is too difficult to address ;-)

Thanks!
We are aware of this and there are several other bugs regarding Javadoc and 
refactoring/code manipulation. 
 
The deeper reason is that currently the model doesn't contain sufficient information 
about Javadoc. But there are plans to improve this for 2.2. 
 
Will consider your suggestion about the dialog. 
I hope somebody reads this, but is this getting better with Eclipse 3.0?
The bug-report still applies to Eclipse 3.0 M5 which is abled to check and
analyse JavaDoc-comments now.
This will improve in 3.0. 
Having similiar problem with M7 build.  Compiler reports that import is never
used.  However, the Organized Imports action will not remove the import if the
class is referenced in a Javadoc via @see or @link.

Can someone explain why this is?
This got fixed for M8. Organize import is now Javadoc aware as refactorings 
are (move, rename, change signature)

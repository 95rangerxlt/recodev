3.1
for value type classes like
class A{
	private final int length;
	private final int width;
	private final String name;	
}

it would be useful to have a quick fix to create a constructor to init all those
fields.
Ie.
 	public A(int length, String name, int width) {
		this.length = length;
		this.name = name;
		this.width = width;
	}	

there's a separate source action for that but it's a little heavyweight for this. 

At least, a quick fix to *open* the 'Create Constructor using fields' could be
offered (pre-select the field checkboxes then, please)

3.1
for value type classes like
class A{
	private final int length;
	private final int width;
	private final String name;	
}

it would be useful to have a quick fix to create a constructor to init all those
fields.
Ie.
 	public A(int length, String name, int width) {
		this.length = length;
		this.name = name;
		this.width = width;
	}	

there's a separate source action for that but it's a little heavyweight for this. 

At least, a quick fix to *open* the 'Create Constructor using fields' could be
offered (pre-select the field checkboxes then, please)
I don't think we should add a quick fix for this specific task, since there are
too many unknowns to guess. The source action is IMO better suited since it asks
the relevant questions and gives more flexibility. And you can always assign a
keybinding to it ;-).

Moving to Martin to close or fix.
ok, 'open Constrctor Using Fields dialog' then? 
> ok, 'open Constrctor Using Fields dialog' then? 
Yes, that would be fine with me.

> (pre-select the field checkboxes then, please)
Yes, that should be the default anyway.
I do not think we should offer quick fixes which open dialogs. Keybindings 
already do this job.

The fields however should definitely be checked by default.
Fixed > 20050815

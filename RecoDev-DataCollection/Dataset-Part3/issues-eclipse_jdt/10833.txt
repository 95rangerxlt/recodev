1) import a plugin as binary ( e.g. org.eclipse.jdt.core)
2) do ctrl+shift+T
3) type 'completione'
a proposal is CompletionEngine

4) checkout jdtcore as source from repository
5) do ctrl+shift+T and 'completione'
CompletionEngine is not in proposals

all the classes of jdtcore are not proposed.

another test case:
1) checkout jdtcore as source from repository
2) do ctrl+shift+T and 'completione'
CompletionEngine is in proposals

1) import a plugin as binary ( e.g. org.eclipse.jdt.core)
2) do ctrl+shift+T
3) type 'completione'
a proposal is CompletionEngine

4) checkout jdtcore as source from repository
5) do ctrl+shift+T and 'completione'
CompletionEngine is not in proposals

all the classes of jdtcore are not proposed.

another test case:
1) checkout jdtcore as source from repository
2) do ctrl+shift+T and 'completione'
CompletionEngine is in proposals
Suspecting an incompatibility between 1.0 plugins and 2.0 plugins. 1.0 plugins 
used to not export their jars in the classpath, thus dependent 1.0 plugins 
needed to reference the jars. 2.0 plugins don't have to do so.
The exact test case is :
1) import all plugins 1.0 as source
2) import resource 2.0 as source
3) checkout jdtcore from repository
4) rebuild all
4) do ctrl+shift+T
All jdtcore classes are not available.

There were 2 problems:
1. The indexes were not updated on a classpath change (from src_sources to ant, 
compiler, etc...) when adding jdtcore from the repository.
2. The indexes were not updated when a package fragment root was added or 
removed.

Fixed both cases.
*** Bug 11176 has been marked as a duplicate of this bug. ***
*** Bug 8819 has been marked as a duplicate of this bug. ***
*** Bug 10307 has been marked as a duplicate of this bug. ***

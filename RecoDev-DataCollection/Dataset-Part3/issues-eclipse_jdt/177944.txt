Build ID: I20070222-0951

Steps To Reproduce:
Perform "Convert Member Type to Top Level" refactoring on B in the following code.  Be sure to include an enclosing instance field name.

class A {
	int f;
	class B extends A {
		void m() {
			super.f = 0;
		}
	}
}

Results in the following code for B (generated comments removed for simplicity):

class B extends A {
	private final A a;

	B(A a) {
		this.a = a;
	}

	void m() {
		super.this.a.f = 0;
	}
}

Note that "super.this.a.f" does not compile.


More information:

Build ID: I20070222-0951

Steps To Reproduce:
Perform "Convert Member Type to Top Level" refactoring on B in the following code.  Be sure to include an enclosing instance field name.

class A {
	int f;
	class B extends A {
		void m() {
			super.f = 0;
		}
	}
}

Results in the following code for B (generated comments removed for simplicity):

class B extends A {
	private final A a;

	B(A a) {
		this.a = a;
	}

	void m() {
		super.this.a.f = 0;
	}
}

Note that "super.this.a.f" does not compile.


More information:
It seems that this bug has been fixed (if I performed the steps correctly).

Eclipse Java EE IDE for Web Developers.
Version: Juno Service Release 1
Build id: 20120920-0800

The resulting file:

class B extends A {
    /**
     * 
     */
    private final A a;

    /**
     * @param a
     */
    B(A a) {
        this.a = a;
    }

    void m() {
        super.f = 0;
    }
}
Looks like this got fixed some time ago.

build 20020228

I got the attached walkback when I selected Workbench->Open Type.
I can provide the workspace if needed.

build 20020228

I got the attached walkback when I selected Workbench->Open Type.
I can provide the workspace if needed.
Created attachment 415
Stack trace
Knut,
I'd be interested in the workspace. Can you send it to me? There was a problem 
before with Java Mail 1.2 API classes where Anonymous classes were 'visible' in 
the Java model. We're probably seeing a similar problem here.
I've uploaded the workspace as walleye:/va2000/INCOMING/forKnut/10616.zip
I tried to launch your workspace using 20020228 w/o success. It gets stuck at 
some point... Is it possible that you use plugins I don't have?
I'm using the new Team 2.0 plugins, other than that it's all standard.
Does the log say anything?
The same problem occured using build 0305 on another machine/workspace.
Both workspaces have the same projects loaded:
org.eclipse.swt (dev.eclipse.org)
org.eclipse.swt.examples (dev.eclipse.org)
org.eclipse.swt.internal (ottcvs1.ott.oti.com, /home/cvs/swtwork)
Playground_Knut (ottcvs1.ott.oti.com, /home/cvs/swtwork)

You could try reproducing by loading the above projects although I'm not sure 
if you would experience the problem right away. Also, you may not have access 
to the swtwork repo.
On second thought, the workspace may reference the J9 launcher plugin, availabe 
on the jdt debug homepage.
ok, I managed to launch the workspace. It's just that it takes an awful long 
time to launch it. The bug is reproducible, at least with 20020228.
Problem still occurs with build 20020307.
This bug is related to 6839. A compilation error ('bew' instead of 'new') 
yields the java model to return a type ref (of the anonymous class) with empty 
name.

To reproduce, do the following:

  1) Copy the compilation unit below into a package called 'bugs'.
  2) Do a 'OpenType' and wait for the StringIndexOutOfBoundException.

---8<---
package bugs;

import org.eclipse.swt.*;
import org.eclipse.swt.graphics.*;
import org.eclipse.swt.widgets.*;

/**
 */
public class Bug_7345 {
	static boolean bold = false;
	
public static void main(String arguments[]) {
	Shell shell = new Shell(SWT.MENU | SWT.RESIZE | SWT.TITLE | 
SWT.H_SCROLL);
	StyledText text = new StyledText(shell, SWT.WRAP); 

	shell.addListener(SWT.Resize, new Listener() {
		public void handleEvent(Event e) {
			text.setBounds(shell.getClientArea());			
		}
	});	
	shell.addListener(SWT.KeyDown, bew Listener () {
		public void handleEvent(Event e) {
			bold = !bold;
		}
	});
	text.addLineStyleListener(new LineStyleListener() {
		public void lineGetStyle(LineStyleEvent event) {
			event.styles = new StyleRange[] {new StyleRange(0, 20, 
null, null)};
			if (bold) {
				event.styles[0].fontStyle = SWT.BOLD;
			}
			text.redrawRange(0, 20, false);
		}
	});
	text.setText("This is the first line");
	shell.open();

	Display display = shell.getDisplay ();
	while (!shell.isDisposed ())
		if (!display.readAndDispatch ()) display.sleep ();
}
}

Knut,

If you get rid of that file in your workspace (or fix the syntax error), you'll 
be able to use open type again.
This was a bug in the syntax recovery, which failed to rebuild properly the 
unit picture for subsequent anonymous local types.

Fixed
*** Bug 11191 has been marked as a duplicate of this bug. ***

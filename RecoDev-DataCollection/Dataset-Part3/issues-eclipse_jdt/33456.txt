When in the .java file editor, it would be helpful to have an option to flag 
modified sections.  Here's the use case:

1. Open a java file
2. Right click on the code to bring up the context menu
3. Expand the Team menu and select "Flag Changes"
4. Eclipse would then do a "Compare with latest from repository" but rather 
than bring up the compare editor, flags are added to the java editor indicating 
all of the diffs.  Clicking on the flag would open the regular compare editor.

This would be extremely helpful when all you want to do is get a quick picture 
of what parts of a file have been changed.

When in the .java file editor, it would be helpful to have an option to flag 
modified sections.  Here's the use case:

1. Open a java file
2. Right click on the code to bring up the context menu
3. Expand the Team menu and select "Flag Changes"
4. Eclipse would then do a "Compare with latest from repository" but rather 
than bring up the compare editor, flags are added to the java editor indicating 
all of the diffs.  Clicking on the flag would open the regular compare editor.

This would be extremely helpful when all you want to do is get a quick picture 
of what parts of a file have been changed.
Tom can you please describe the state of your work in that area.


Work is in progress for something called "Quick Diff". 

UI / What you see:
- The line number ruler's background color indicates whether a line has been 
changed, added, or if there are deleted lines
- When hovering over the line number ruler, the content of the reference 
document are shown in a hover.
- Quick Diff is turned on using the context menu or a shortcut (Ctrl+Shift+Q).
- There is a menu item that allows you to set the reference document.

What it does:
- A document gets an associated model that tracks the differences against a 
reference document.
- For now, the only implemented reference is a document's version saved on disk 
(i.e., you have no differences if the editor is not dirty).

Roadmap:
- There will be an extension point where different reference providers can be 
contributed (e.g. by the team plug-in for a HEAD reference).
- Other UI variants could use the model to display the quick diff information, 
e.g. the overview ruler.
- Possibly: link to the full blown compare/diff viewer on double click or 
similar?
A first version is supposed to be released in next week's integration build.
> There will be an extension point where different reference providers can be 
> contributed (e.g. by the team plug-in for a HEAD reference).
Team will probably not want to depend on JDT UI (and vice-versa).
The extension point will not be in JDT UI. It will either be in text (the 
problem is that text does not depend on compare) or (perhaps?) compare. Not 
sure whether there will be a plugin split for compare. We'll see.
released quick diff bar in M2
see bug 39812 for progress on the CVS reference provider.

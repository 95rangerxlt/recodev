If I have two types:
org.acme.goodstuff.MyType 
and 
org.acme.coolstuff.MyType

and I use Code Completion (or something that invokes the smart import logic). 
The smart import stuff generates imports for both references to these types, 
ignoring the fact that one of them has to remain qualified in the code in 
order not to conflict with the other.  You cannot have two import statements 
which resolve the same non-qualified type identifier. 

The standard library has some instances of this (for instance the 
Interface 'Certificate' and the abstract Class 'Certificate').

If I have two types:
org.acme.goodstuff.MyType 
and 
org.acme.coolstuff.MyType

and I use Code Completion (or something that invokes the smart import logic). 
The smart import stuff generates imports for both references to these types, 
ignoring the fact that one of them has to remain qualified in the code in 
order not to conflict with the other.  You cannot have two import statements 
which resolve the same non-qualified type identifier. 

The standard library has some instances of this (for instance the 
Interface 'Certificate' and the abstract Class 'Certificate').
Bug is in UI side, the codeassist engine did indicate qualification was 
necessary given an import was already there for the other type.

Before adding an import for a qualified type, it should first double-check if 
another single type import is targeting the same type simple name. If so, then 
it should not insert an import, and go for a qualified type name insertion 
(don't think you need to interact with user there).


*** Bug 9474 has been marked as a duplicate of this bug. ***
I would like some way to indicate at code assist time that I want to insert the 
fully qualified type name versus adding the import statement.  Often I already 
am familiar with the collision types.  Perhaps a shift+enter or something like 
that could mean "code assist without import assist".
fixed for 20020430
(If there is already a import statement for a different type with the same 
simple name, code assist (add all stub generators) adds the fully qualified 
name instead)

The feature Randy suggested is also on my wishlist. Time is a problem.

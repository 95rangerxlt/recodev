3.1 RC3

- Enable argument guessing
- Consider following snippet:

public class Foo {
	public class Bar {
		public Bar() {
			setInt<Ctrl+Space>
		}
		public void setString(String string) {}
		public void setInt(int integer) {}
	}
}

-> Argument guess is Foo.this.hashCode()
-> Unqualified calls to toString() and hashCode() are not proposed. Suggest to 
remove them in this context as well.

In case there are no reasonable guesses, we might insert the default value of 
the expression type, like '0' for ints and "<linked mode here>" for strings.

3.1 RC3

- Enable argument guessing
- Consider following snippet:

public class Foo {
	public class Bar {
		public Bar() {
			setInt<Ctrl+Space>
		}
		public void setString(String string) {}
		public void setInt(int integer) {}
	}
}

-> Argument guess is Foo.this.hashCode()
-> Unqualified calls to toString() and hashCode() are not proposed. Suggest to 
remove them in this context as well.

In case there are no reasonable guesses, we might insert the default value of 
the expression type, like '0' for ints and "<linked mode here>" for strings.
We already remove 'hashCode' and 'toString' using a textual match - should even
more remove enclosing type's equivalent methods.
Not for 3.2.
+1. Remove all *.this.<specialMethod>() as well.
Fixed in HEAD.
Available in build >= I20070926-0010.

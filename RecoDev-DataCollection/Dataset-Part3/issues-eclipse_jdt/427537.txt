// --
import java.io.Serializable;
interface I {
	void foo();
}
public class X {
	public static void main(String[] args) {
		I i = (I & Serializable) () -> {};
	
	}
}

Search for I using Java search + type references + cast locations.

java.lang.ClassCastException: org.eclipse.jdt.internal.compiler.ast.IntersectionCastTypeReference incompatible with org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
	at org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.match(TypeReferenceLocator.java:99)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeCastExpressionLL1WithBounds(MatchLocatorParser.java:227)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7015)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:10965)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:11314)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.parseBodies(MatchLocatorParser.java:834)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.parseBodies(MatchLocatorParser.java:808)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.getMethodBodies(MatchLocator.java:889)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.parseAndBuildBindings(MatchLocator.java:1671)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1091)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1196)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1328)
	at org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:96)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:232)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:516)
	at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:584)
	at org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run(JavaSearchQuery.java:144)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

// --
import java.io.Serializable;
interface I {
	void foo();
}
public class X {
	public static void main(String[] args) {
		I i = (I & Serializable) () -> {};
	
	}
}

Search for I using Java search + type references + cast locations.

java.lang.ClassCastException: org.eclipse.jdt.internal.compiler.ast.IntersectionCastTypeReference incompatible with org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
	at org.eclipse.jdt.internal.core.search.matching.TypeReferenceLocator.match(TypeReferenceLocator.java:99)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.consumeCastExpressionLL1WithBounds(MatchLocatorParser.java:227)
	at org.eclipse.jdt.internal.compiler.parser.Parser.consumeRule(Parser.java:7015)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:10965)
	at org.eclipse.jdt.internal.compiler.parser.Parser.parse(Parser.java:11314)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.parseBodies(MatchLocatorParser.java:834)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocatorParser.parseBodies(MatchLocatorParser.java:808)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.getMethodBodies(MatchLocator.java:889)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.parseAndBuildBindings(MatchLocator.java:1671)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1091)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1196)
	at org.eclipse.jdt.internal.core.search.matching.MatchLocator.locateMatches(MatchLocator.java:1328)
	at org.eclipse.jdt.internal.core.search.JavaSearchParticipant.locateMatches(JavaSearchParticipant.java:96)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.findMatches(BasicSearchEngine.java:232)
	at org.eclipse.jdt.internal.core.search.BasicSearchEngine.search(BasicSearchEngine.java:516)
	at org.eclipse.jdt.core.search.SearchEngine.search(SearchEngine.java:584)
	at org.eclipse.jdt.internal.ui.search.JavaSearchQuery.run(JavaSearchQuery.java:144)
	at org.eclipse.search2.internal.ui.InternalSearchUI$InternalSearchJob.run(InternalSearchUI.java:91)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)
Created attachment 239690
Proposed Patch
Created attachment 239703
Proposed Patch

Updated Patch
I made the following changes and released the patch: 

    - The check if (node instanceof IntersectionCastTypeReference) {
      is unnecessary.
    - Eliminated the short circuiting of the loop. The right thing
to at this level is to expose the type references and let the down
stream pieces decide what they want to do with it.

Commit id: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=63969f0e42bcdfc0a055ac0f3d2f47fa48cf3e29

Thanks Manoj.
The test case crashes (mentioned in Comment 0) crashes with a older build and
successfully succeeds with Kepler SR2.
Verified for Eclipse + Java 8 RC1 using Kepler SR2(RC4) +  
Eclipse Java Development Tools Patch for Java 8 Support (BETA)   
1.0.0.v20140220-2054.

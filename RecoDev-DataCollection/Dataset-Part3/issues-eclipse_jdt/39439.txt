When I hit Control-space to display the assist window, it should continue 
filtering the list of items as I type until only one item is left.

For example, I enter the following

java.util.A
           ^
and hit Ctrl-Space immediately after typing the final 'A'. A code assist window 
with seven choices is displayed. At this point, I can hit the Up or Down cursor 
keys to scroll to a choice, then hit Enter to select that choice and have it 
inserted. However, if I hit any other key, say 'r', the code assist window 
closes and the 'r' is inserted into the editor.

What I would prefer to see is when I hit 'r' is to have the 'r' inserted in the 
editor and have the list of displayed choices narrowed to only those that begin

java.util.Ar

which in this case would be just two items. In effect, then, this list should 
be the same as if I had typed the whole string including the 'r' and then hit 
Ctrl-Space.

This seems much easier and more intuitive use of code assist versus: one 
continues typing and let the window figure it out rather than having to stop, 
move to the cursor keys, arrow up or down, etc.

Note that I don't think that when the list gets down to only one item that it 
should be automatically inserted; this becomes problematic due to typos, etc. 
Instead, the user must still hit Enter to select the item and have it inserted.

Of course, should the user hit the backspace key to delete a typed letter, the 
list must grow as necessary.

This is exactly how IntelliJ's IDEA's code completion works. Even JBuilder does 
a similar thing; although JBuilder doesn't filter the list, it does take you to 
the right item in the list as you type.

When I hit Control-space to display the assist window, it should continue 
filtering the list of items as I type until only one item is left.

For example, I enter the following

java.util.A
           ^
and hit Ctrl-Space immediately after typing the final 'A'. A code assist window 
with seven choices is displayed. At this point, I can hit the Up or Down cursor 
keys to scroll to a choice, then hit Enter to select that choice and have it 
inserted. However, if I hit any other key, say 'r', the code assist window 
closes and the 'r' is inserted into the editor.

What I would prefer to see is when I hit 'r' is to have the 'r' inserted in the 
editor and have the list of displayed choices narrowed to only those that begin

java.util.Ar

which in this case would be just two items. In effect, then, this list should 
be the same as if I had typed the whole string including the 'r' and then hit 
Ctrl-Space.

This seems much easier and more intuitive use of code assist versus: one 
continues typing and let the window figure it out rather than having to stop, 
move to the cursor keys, arrow up or down, etc.

Note that I don't think that when the list gets down to only one item that it 
should be automatically inserted; this becomes problematic due to typos, etc. 
Instead, the user must still hit Enter to select the item and have it inserted.

Of course, should the user hit the backspace key to delete a typed letter, the 
list must grow as necessary.

This is exactly how IntelliJ's IDEA's code completion works. Even JBuilder does 
a similar thing; although JBuilder doesn't filter the list, it does take you to 
the right item in the list as you type.
200306240800

This only happens when using fully qualified class names as described in the 
report. On simple class names, methods etc. content assist will work as 
expected.
Created attachment 5319
fix

related to bug 17667

the fix will soon be in the current development stream.
Created attachment 5320
fix for 39439

undoes the alteration in JavaCompletionProposal.
This bug has beeb fixed some time ago.

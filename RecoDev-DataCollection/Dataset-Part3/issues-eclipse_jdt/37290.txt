When a search for callees "hits" an anonymous inner class instance creation, it
sometimes fails with an ArrayInstanceOutOfBounds.

This is due to the way anonymous inner classes are handled in CalleeAnalyzerVisitor.

This is actually the bug that caused the error in Bug #36980, Comment 6.

When a search for callees "hits" an anonymous inner class instance creation, it
sometimes fails with an ArrayInstanceOutOfBounds.

This is due to the way anonymous inner classes are handled in CalleeAnalyzerVisitor.

This is actually the bug that caused the error in Bug #36980, Comment 6.
Created attachment 4800
Fix for anonymous inner class bug

Patch against JDT UI.

This patch fixes the anonymous class issue. The problem was caused by an
anonymous inner class not implementing an interface but extending a class.

I have also fixed another but related to the AST traversal continuing into an
anonymous inner class body.


I'd like your comments on the semantics of the callee graph when encountering
an anonymous inner class instance creation? Below, I've described what I
currently do.

----------------------
An example:

button.addActionListener(
    new ActionListener() {
	public void actionPerformed(ActionEvent e) {
	    dispose();
	}
    }
);

In this case, the call to addActionListener should be shown. In addition, I
think I should show a call to the ActionListener interface.

----------------------------------
Another example:

addWindowListener(
    new WindowAdapter() {
	public void windowClosing(WindowEvent e) {
	    dispose();
	}
    }
);

Again, I'd show a call to addWindowListener. In addition, I'd show a call to
WindowAdapter.

My strategy could be summarized to (for the anonymous inner class instance
creations): Show a "call" to superclass if it has one, otherwise show call to
interface.

Suggestions/comments are welcome.
can we have a regression test for it too?
I'll make tests as soon as possible.
Created attachment 4815
Recreated fix and added regression tests

- Recreated the JDT UI patch to the current contents of HEAD (including
progress monitors).
- Added regression tests.
darn, now that i released code for bug 36980, this patch is not good anymore
can you make another one? (we should promote you to a comitter - that'd saolve 
it :-) )
Created attachment 4826
Recreated patch 4815

Patches against JDT UI and JDT UI Tests.

Yup, making me a committer would enable me to mess things up in real-time :-)
LOL

released
cheers

as said in the summery: renaming a read-only package resets the read-only flag

as said in the summery: renaming a read-only package resets the read-only flag
moving to jcore
i think this flag should be preserved when calling ISourceManipulation::rename

otherwise, it should be doc'ed that some flags are not reset after renaming
Shouldn't it rather refuse to rename a read-only resource ? I would expect this 
to be the case.
this is not the behavior of eclipse navigator or windows explorer
they ask you but do rename the resource.
Well, but shouldn't there be a UI action so as to remove the read-only flag, 
then perform the rename, and reset the read-only flag ?

Need to check the behavior of the navigator.
Inside the navigator, you are prompted to know if you want to rename a read-only resource. If you 
answer yes, the rename is done and the resulting resource is read-only. The JDT/UI should have the 
same behavior. It never promts the user to know if the user wants to rename a read-only package.
Move to JDT/UI for comment.
prompting the user makes sense to me. Adam is there a deeper reason to not do 
so?
there is a warning
the original problem was not the ui asking or not asking
it was that the read only flag is zero'ed after the user does proceed. and it 
not the ui job to keep that flag, i think 

(there can be more than one such flag, how do we know which ones should be 
restored after renaming?)
Well, if all you do it warn/set the read-only flag, I don't see this being a 
problem. You just keep the remaining flags alltogether.
I somehow agree with Adam that the read-only flag should be preserved by 
JDT/Core since we are calling ISourceManipulation::rename and therefore don't 
really know that this maps to a folder (which can be read-only) for packages.

On the other hand we are presenting the dialog asking the user if he wants to 
proceed with renaming a read-only resource. This is the typical "I use an 
abstract interface but have to be aware of the implementation problem".

In the workbench core resources "maintains" the read-only flag. This is not 
done by the actions.
Under I20030129 rename org.eclipse to org.eclips2 with eclipse being read-only 
keeps the read-only flag. But rename org.eclipse to org2.eclipse 2 with org and 
eclipse being read-only only keeps the read-only flag for eclipse.

In both cases we use IPackageFragment#rename(..., false, null);

Moving to JDT/Core for comments.
I suspect all our source manipulation operations would need to be checked 
(including package fragment root ones).
With the fix for 31303, we do keep the read-only flag after a rename. I don't
get any prompt from the UI about the fact that I am renaming a read-only
resource. I didn't see any warning either.
So this is fixed from the JDT/Core perspective, but needs action from JDT/UI to
prompt the user. As a user, I should not be able to rename a read-only resource
without needing to confirm it (or at least I should do it the first time). If I
do the rename from the navigator, I get a prompt. This should be consistent.
Adam, can you please comment on this. 
was fixed on our side as bug 31291

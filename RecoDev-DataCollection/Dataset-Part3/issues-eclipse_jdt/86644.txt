3.1M5a
public class Cell{
  public <T> T f1(T l){
	  Vector v= new Vector();
	  v.add(l);
	  return (T)v.get(0);
  }
}

it infers:
public class Cell{
  public <T> T f1(T l){
	  Vector<Cell> v= new Vector<Cell>();
	  v.add(l);
	  return v.get(0);
  }
}

(fyi: i'm working on 'our' side of this problem)

3.1M5a
public class Cell{
  public <T> T f1(T l){
	  Vector v= new Vector();
	  v.add(l);
	  return (T)v.get(0);
  }
}

it infers:
public class Cell{
  public <T> T f1(T l){
	  Vector<Cell> v= new Vector<Cell>();
	  v.add(l);
	  return v.get(0);
  }
}

(fyi: i'm working on 'our' side of this problem)
sorry - reassignment happened by mistake
This is due to bug 87050. The refactoring correctly calculates <T> as type
argument for Vector, but JDT/Core doesn't correctly resolve the binding from the
key.
Was indeed bug 87050. Fixed in HEAD.

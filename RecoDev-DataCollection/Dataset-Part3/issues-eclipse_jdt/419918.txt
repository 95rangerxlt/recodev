BETA_JAVA8:

BinaryTypeBinding:655 reads:

// Note(stephan): currently the compiler is not interested in retrieving receiver annotations, here is how we would do it:
// IBinaryAnnotation[] receiverAnnotations = walker.toReceiver().getAnnotationsAtCursor();

Apart from this action, we also need to create an annotated type instance
for the declaring class and store it in org.eclipse.jdt.internal.compiler.lookup.MethodBinding.receiver.

javax.lang.model.element.ExecutableElement.getReceiverType() and
javax.lang.model.type.ExecutableType.getReceiverType() should answer the
annotated type.

BETA_JAVA8:

BinaryTypeBinding:655 reads:

// Note(stephan): currently the compiler is not interested in retrieving receiver annotations, here is how we would do it:
// IBinaryAnnotation[] receiverAnnotations = walker.toReceiver().getAnnotationsAtCursor();

Apart from this action, we also need to create an annotated type instance
for the declaring class and store it in org.eclipse.jdt.internal.compiler.lookup.MethodBinding.receiver.

javax.lang.model.element.ExecutableElement.getReceiverType() and
javax.lang.model.type.ExecutableType.getReceiverType() should answer the
annotated type.
I'll work on this. I also noticed that annotations are not restored for
super class, super interface and throws specification if generic signature
is absent.
Here are the places annotations are not restored:

    - Receiver
    - In the absence of generic signature:
        - extends clause
        - implements clause
        - throws clause.
Fix and tests released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=01c814e6bd45b7fbd49eec3a490338a17c21d9fb

I noticed that in TAW, matches is a long while the mask that is used
to light the bits in matches is an int. Changed it. Don't expect it to
actually fix anything :)

One part of the fix may not actually be correct: I am arranging so that
the constructor result type annotations are attributed to the constructor.
This may require rework.

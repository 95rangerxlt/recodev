Version: 3.2.0
Build id: I20051214-2000

create project Test1
create class Test1/p/F.java
class F{}
create class Test1/p/E.java
public class E {public void setF(F f){}}

Export project to lib.jar

create project Test2
move lib.jar to Test2
add lib.jar to class path of Test2
create class Test2/q/Test.java
public class Test {
	public void foo() {
		E e= new E();
		F f= new F();
		e.setF(f);
	}
}

Rename E to E1
Rename F to F1
Export to lib.jar with refactoring history
import new lib.jar in Test2 and update lib.jar of Test2

E is renamed to E1 which is correct but F is not renamed to F1 instead:
Found problems: Found potential matches. Please review changes on the preview page.
But there is no preview page, the only enabled button is Cancel. Cancel the dialog does rename E anyway resulting in a compile error.

Version: 3.2.0
Build id: I20051214-2000

create project Test1
create class Test1/p/F.java
class F{}
create class Test1/p/E.java
public class E {public void setF(F f){}}

Export project to lib.jar

create project Test2
move lib.jar to Test2
add lib.jar to class path of Test2
create class Test2/q/Test.java
public class Test {
	public void foo() {
		E e= new E();
		F f= new F();
		e.setF(f);
	}
}

Rename E to E1
Rename F to F1
Export to lib.jar with refactoring history
import new lib.jar in Test2 and update lib.jar of Test2

E is renamed to E1 which is correct but F is not renamed to F1 instead:
Found problems: Found potential matches. Please review changes on the preview page.
But there is no preview page, the only enabled button is Cancel. Cancel the dialog does rename E anyway resulting in a compile error.
The actual problem is that the error message regarding the potential matches is misinterpreted. JAR import should not interpret this message as fatal error.

Pressing cancel closes the wizard and leaves the already executed refactorings applied to the workspace, hence the compile errors.

Filed bug 121034 for undo on cancel to avoid compile errors
Fixed in HEAD > 20051221

If I inline a boolean or expression into an and expression, the operator precedence is ignored.
  boolean doitOr(boolean a, boolean b, boolean c) {
    boolean or = a || b;
    return or && c;
  }

Inline local variable 'or' yields the wrong result:
  boolean doitOr(boolean a, boolean b, boolean c) {
    return a || b && c;
  }

while plus workd
  int doitPlus(int a, int b, int c) {
    int plus = a  +  b;
    return plus * c;
  }
resolves correct to:
  int doitPlus(int a, int b, int c) {
    return (a  +  b) * c;
  }

If I inline a boolean or expression into an and expression, the operator precedence is ignored.
  boolean doitOr(boolean a, boolean b, boolean c) {
    boolean or = a || b;
    return or && c;
  }

Inline local variable 'or' yields the wrong result:
  boolean doitOr(boolean a, boolean b, boolean c) {
    return a || b && c;
  }

while plus workd
  int doitPlus(int a, int b, int c) {
    int plus = a  +  b;
    return plus * c;
  }
resolves correct to:
  int doitPlus(int a, int b, int c) {
    return (a  +  b) * c;
  }
Fixed with http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=27b5ebd2e37b05f07b3deebdd0d6754cc08792c8

Thanks for the bug report!

BETA_JAVA8:

Amends to JLS7 read:

"It is a compile-time error if the name of a local class C is used to declare a new local class within the scope of C, unless the new local class is declared in the body of C or within another class whose declaration is within the scope of C."

So the following program should be rejected, but is not.

// --------
interface I {
	void foo();
}

public class X {
	void foo() {
		class Y {};
		I i = ()  -> {
			class Y {};
		};
	}	
}
 
// ---

javac complains: 

X.java:9: error: class Y is already defined in method foo()
                        class Y {};
                        ^
1 error

BETA_JAVA8:

Amends to JLS7 read:

"It is a compile-time error if the name of a local class C is used to declare a new local class within the scope of C, unless the new local class is declared in the body of C or within another class whose declaration is within the scope of C."

So the following program should be rejected, but is not.

// --------
interface I {
	void foo();
}

public class X {
	void foo() {
		class Y {};
		I i = ()  -> {
			class Y {};
		};
	}	
}
 
// ---

javac complains: 

X.java:9: error: class Y is already defined in method foo()
                        class Y {};
                        ^
1 error
Manoj, thanks for looking into this.
Created attachment 227056
Proposed Patch
Released fix and tests here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=a1761e4448ca9b0394806aae37f349b5bdd250df

after adding one more test, mentioning bug number & title in test
(always required, the earlier discussion about avoiding bug links
is for code and not tests), fixing bug comment post copy + paste.

Thanks Manoj.

While testing I found a pre-existing issue and raised:
https://bugs.eclipse.org/bugs/show_bug.cgi?id=400763

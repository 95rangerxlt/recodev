I20090127-2000

The ANT file generated by the Jar-in-Jar option of the Runnable JAR file exporter does not work, since the path of the jar-rsrc-loader.zip is not absolute:

            <zipfileset src="jar-rsrc-loader.zip"/>

I20090127-2000

The ANT file generated by the Jar-in-Jar option of the Runnable JAR file exporter does not work, since the path of the jar-rsrc-loader.zip is not absolute:

            <zipfileset src="jar-rsrc-loader.zip"/>
Ferenc, I'm passing this on to you. Please push back to the inbox if you don't plan to work on it.
> The ANT file generated by the Jar-in-Jar option of the Runnable JAR file
> exporter does not work, since the path of the jar-rsrc-loader.zip is not
> absolute

Why does this not work?
I have tested the generated build.xml files and never had any problems.
The jar-rsrc-loader.zip file is copied next to the build.xml file, so the relative path should be correct (as long as no different basedir is defined).

If the build.xml file is moved to another folder, the path of the ZIP has to be adjusted or the ZIP file has to be moved into the same folder as the build.xml.

I see that all other paths in the build.xml are absolute, so it would be consistent to make this path also absolute. I will take a look at it.
I am a little bit confused?
I have tested the ANT export with Eclipse build I20090129-1200 and in fact no jar-rsrc-loader.zip file is created next to the build.xml file.

In my last patch for bug 219530 the Class FatJarRsrcUrlAntExporter (which creates an ANT build file for jar-in-jar) contained a method "copyJarInJarLoader". 
This Method copied the "jar-rsrc-loader.zip" file next to the ANT build file.
So the relaitve path was correct.

The last "patch against HEAD" does not contain this method any more.

@Benno: Did you change this behaviour?

(In reply to comment #3)
> @Benno: Did you change this behaviour?

Oops, sorry I did, my fault. I've removed one of the buildANTScript methods and then the copy method was marked as unused. Why was the jar rsrc loader only copied when calling the one buildAntScript method but not the other? Also on a side note: copying a file is quite a side effect for a method called buildAntScript...


Assign this to me if you want me to fix this...
(In reply to comment #4)
> Why was the jar rsrc loader only copied when calling the one 
> buildAntScript method but not the other? 

Only if the Export-Methode "Package JARs" is selected the ANT scripts needs the jar-in-jar loader. The ANT build file unzips the class files from the jar-rsrc.loader.zip and adds them to the runnable JAR.

> Also on a side note: copying a file is quite a side effect for a 
> method called buildAntScript...

ThatÂ´s the pitty with interfaces...
 ...when writing the interface I never thought that copying a file would be necessary to create a ANT build file.  :)

As far as I understand, all content of the jdt-ui plug-in are jarred together. 
So it is not possible to reference the jar-rsrc-loader.zip as file in the ANT script.
If there are any ideas how to circumvent the need to create the ZIP file next to the ANT script I would be happy. 

> Assign this to me if you want me to fix this...
I can do the fix, just waiting if there are some ideas how to put the ZIP file into the distribution, so that it can be referenced with an absolute path from the ANT script.

Created attachment 125057
patch for creation of jar-rsrc-loader.zip

The patch fixes the problem, that the ZIP file containing the jar-in-jar loader was not created in the same folder as the ANT build file.
Added a TestCase to check for the existence of the ZIP file.

Technical:
The interface of the methode buildANTScript in the abstract class FatJarAntExporter was changed, not to take an OutputStream, but an IPath of the build file to create instead. This allows to determine the folder where to put the ZIP file into.
The patch has to be synchronized with the patch for bug 262746 (create builder for jar-rsrc-loader.zip).

In the patch for bug 262746 the ZIP resource was moved to the root of the plugin and renamed into jar-in-jar-loader.zip.

We should commit this bug and then create a new patch for bug 262746.

Thanks for the patch, released together with bug 262746.

In a method, I refer to a non-existent method of an inner class. When I do a 
Quick-Fix, the method gets created for the outer class instead of the inner 
class.

Steps to Reproduce
------------------
1. Create a class "OuterClass" and ener the following code

	public class OuterClass 
	{
		void OuterClassMethod()
		{
			InnerClass theInnerClass = new InnerClass() ;
			theInnerClass.InnerClassMethod();
		}
		class InnerClass
		{
		}
	}

2. Place the cursor at "InnerClassMethod" and Press Ctrl+1 for the Quick-Fix. 
Only one option is shown. Selecting this option results in the method being 
created for the OuterClass instead of the InnerClass

In a method, I refer to a non-existent method of an inner class. When I do a 
Quick-Fix, the method gets created for the outer class instead of the inner 
class.

Steps to Reproduce
------------------
1. Create a class "OuterClass" and ener the following code

	public class OuterClass 
	{
		void OuterClassMethod()
		{
			InnerClass theInnerClass = new InnerClass() ;
			theInnerClass.InnerClassMethod();
		}
		class InnerClass
		{
		}
	}

2. Place the cursor at "InnerClassMethod" and Press Ctrl+1 for the Quick-Fix. 
Only one option is shown. Selecting this option results in the method being 
created for the OuterClass instead of the InnerClass
This is the result of the QuickFix
	public class OuterClass 
	{
		void OuterClassMethod()
		{
			InnerClass theInnerClass = new InnerClass() ;
			theInnerClass.InnerClassMethod();
		}

		/**
		 * Method InnerClassMethod.
		 */
		private void InnerClassMethod() {
		}

		class InnerClass
		{
		}
	}

I assume you are using 2.0 or 2.0.1:
This is fixed in the latest (20021001), tested your example.


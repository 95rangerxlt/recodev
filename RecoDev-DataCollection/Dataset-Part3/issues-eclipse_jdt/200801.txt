I20070821-0800

The template variable 'var' does only allow to have one parameter. 'var' resolves to all fields and variables of type specified in parameter. The request is to allow to specify a set of types as parameters. 'var' then resolves to all fields and variables of any type specified in parameters.

Reason:
TreeItem has overloaded constructors:
public TreeItem(Tree, int);
public TreeItem(TreeItem, int);

Tree and TreeItem share only Object and Widget as common ancestor (what a shame). I want to write a 'New TreeItem' pattern as:

new TreeItem(${parent:var(Tree, TreeItem)}, SWT.NONE);

At the moment I have to write either:
new TreeItem(${parent:var(Widget)}, SWT.NONE);
or
new TreeItem(${parent}, SWT.NONE);
or provide two patterns

I20070821-0800

The template variable 'var' does only allow to have one parameter. 'var' resolves to all fields and variables of type specified in parameter. The request is to allow to specify a set of types as parameters. 'var' then resolves to all fields and variables of any type specified in parameters.

Reason:
TreeItem has overloaded constructors:
public TreeItem(Tree, int);
public TreeItem(TreeItem, int);

Tree and TreeItem share only Object and Widget as common ancestor (what a shame). I want to write a 'New TreeItem' pattern as:

new TreeItem(${parent:var(Tree, TreeItem)}, SWT.NONE);

At the moment I have to write either:
new TreeItem(${parent:var(Widget)}, SWT.NONE);
or
new TreeItem(${parent}, SWT.NONE);
or provide two patterns
Created attachment 76669
proposed fix
fixed > I20070821-0800
Code review still pending.

F1 help update is missing. Please fix.
OK, doc has been updated but not as part of the attached patch. Also, the commit comment doesn't reflect this.

Code is good, especially the introduction of the abstract super class.

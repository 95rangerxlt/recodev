I20040519_0100

- create a test class A with one string
- externalize the string (you get a key A.0)
- now change the key used in A.java without updating the properties file
  (for example use A.00)
- add a second string
- externalize the string

  observe: the properties file now contains an entry A.00= which is bogus.

I20040519_0100

- create a test class A with one string
- externalize the string (you get a key A.0)
- now change the key used in A.java without updating the properties file
  (for example use A.00)
- add a second string
- externalize the string

  observe: the properties file now contains an entry A.00= which is bogus.
This is not bogus. The key 'A.00' is missing so it was aded by the wizard. The 
problem is that the 'new' checkbox filter was hiding this.
Point taken. But if we add this smartness shouldn't we then

- disable the filter in this case
- somehow highlight (red color) these values so that they get attention 
  from the user.

Alternatively we could simply leave the entries as the are.

What do you think ?
I would fix the filter so that these missing entries are treated like new 
entries. They are already bold. It's similar to the new entries where you also 
have to review the changes we automatically made, so I wouldn't introduce a 
new color. Ok?
fixed > 2040519

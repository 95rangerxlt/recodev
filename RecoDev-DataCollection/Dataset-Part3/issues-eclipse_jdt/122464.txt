This is in the APT_32 branch.

The filed _problems is declared as private in ReconcileProcessorEnv which hides _problems in the superclass CompilationProcessorEnv.

Steps to reproduce.

Load up the APT/JDT source from branch APT_32
take the APTDemo.jar and load it as a plugin project too.
Start a debug workbench.
Create project and class Foo as per instructions here:
http://www.eclipse.org/jdt/apt/introToAPT.html

NPE hilarity ensures.

I will attach a patch that fixes the problem.

G

This is in the APT_32 branch.

The filed _problems is declared as private in ReconcileProcessorEnv which hides _problems in the superclass CompilationProcessorEnv.

Steps to reproduce.

Load up the APT/JDT source from branch APT_32
take the APTDemo.jar and load it as a plugin project too.
Start a debug workbench.
Create project and class Foo as per instructions here:
http://www.eclipse.org/jdt/apt/introToAPT.html

NPE hilarity ensures.

I will attach a patch that fixes the problem.

G
Created attachment 32391
fix for hidden _problems field
Those files seem to be in the Attic, meaning they're deleted files, not present in the head revision.  Did you access the files by checking out the project in CVS?
APT_32 branch not HEAD

Cheers.


Geoff
Could you include the stack trace from one of the NPEs you saw? Thanks!
Stick with the HEAD, for the APT plugins, and the APT branch for the JDT plugins.  That is, the CVS instructions on the web page are correct.

The APT_32 branch is not yet working code - some incompatibilities between JDT and APT code, etc.  We're in the middle of integration, on that branch.  It'll soon be the right thing (and will be integrated back into HEAD at that point) but it's not ready yet.
(In reply to comment #4)
> Could you include the stack trace from one of the NPEs you saw? Thanks!

Don't have a trace but calls to CompilationProcessorEnv.getProblems() were fail ing with an NPE with out the fix.

BTW everything works fine with the patch ;-)
(In reply to comment #5)
> Stick with the HEAD, for the APT plugins, and the APT branch for the JDT
> plugins.  That is, the CVS instructions on the web page are correct.
> The APT_32 branch is not yet working code - some incompatibilities between JDT
> and APT code, etc.  We're in the middle of integration, on that branch.  It'll
> soon be the right thing (and will be integrated back into HEAD at that point)
> but it's not ready yet.

I didn't expect it to be working code - although it's pretty darn close.

Call me a adrenaline junky - more fun to check out the bleeding edge stuff.

I'm concerned though that you are essentially asking me to go away.

No, we're always glad to have help.  But the APT_32 branch is not really ready for bug reports yet.
This is now fixed in HEAD. Thanks!

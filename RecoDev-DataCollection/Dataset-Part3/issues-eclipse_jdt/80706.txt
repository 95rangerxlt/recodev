Open the package explorer.

Open the properties page for a Java project.

Have a properties page call the following:

getElement().getAdapter(IProject.class)

Observer null will be returned.

This is in

Version: 3.1.0
Build id: 200412081200

Open the package explorer.

Open the properties page for a Java project.

Have a properties page call the following:

getElement().getAdapter(IProject.class)

Observer null will be returned.

This is in

Version: 3.1.0
Build id: 200412081200
Created attachment 16521
test plugin

If you select a java project from the package explorer and open the properties
page "test" you'll see "null".

If you select the same java project from the navigator and open the properties
page "test" you'll see the projects toString() value.
Sebastian,

can you point me to the preference page which contains the call. Thanks.


Sorry, didn't see comment #1 (you get two different mails for two edits ;-).
The problem lies in

JavaElementAdapterFactory#getAdapter(Object element, Class key)

it is called with a "Project" as element and
"org.eclipse.core.resources.IProject" as the key
Instead of:

IResource.class.equals(key)

you should use:

key.isInstance(IResource.class)
I was mistaken :)

Must be:

IResource.class.isAssignableFrom(key)
Created attachment 16524
fix
Several problems at work...

* IJavaElement should not adapt to IProject anymore
* The registration of the IProject adapter for IJavaProject swaped the adaptable
type and the adapter...
These combined bugs were to misleading to come up with the correct patch.

Released a fix that addresses both problems.

Sebastian - instead of registering the property page for two type you can
register it for IProject and set the adapatble attribute to true:

<extension point="org.eclipse.ui.propertyPages">
	<page objectClass="org.eclipse.core.resources.IProject" name="Test" 
>>>>              adaptable="true"
class="test.SamplePropertyPage" id="test.samplePropertyPage">
Actually I stumbled about this problem by installing:

http://findbugs.sourceforge.net/

and

http://www.mvmsoft.de/content/plugins/checkclipse/checkclipse.htm

@@@@

I just copied the plugin.xml stuff from there.

Was aware of the "adaptable" but forgot about it <smiles> thanks for reminding!
Hmm, I'm not sure, but could it be that your machine has the wrong date?

Or isn't this the fix you mentioned?

http://dev.eclipse.org/viewcvs/index.cgi/org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/JavaElementAdapterFactory.java.diff?r1=text&tr1=1.26&r2=text&tr2=1.27&diff_format=h

Says December 1.
The fix is in the plugin.xml of the jdt.ui plug-in.
AdapterFactories are now contributed in the plugin.xml. So the fix is in the
plugin.xml of the jdt.ui plug-in.

I get an odd error popup with the new Eclipse (3.0.0 - Build id: 200406251208):
------------------------------------------------------------
An internal error occurred during: "Java AST creation".
java.lang.UnsupportedOperationException: Operation only supported in JLS2 AST
org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2(ASTNode.java:1775)
org.eclipse.jdt.core.dom.ClassInstanceCreation.getName
(ClassInstanceCreation.java:402)
org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowAnalyzer.endVisit
(FlowAnalyzer.java:460)
org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0
(ClassInstanceCreation.java:334)
org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2454)
org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2501)
org.eclipse.jdt.core.dom.ReturnStatement.accept0(ReturnStatement.java:133)
org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2454)
org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2524)
org.eclipse.jdt.core.dom.Block.accept0(Block.java:133)
org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2454)
org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowAnalyzer.visit
(FlowAnalyzer.java:295)
org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:189)
org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2454)
org.eclipse.jdt.internal.corext.refactoring.code.flow.InOutFlowAnalyzer.perform
(InOutFlowAnalyzer.java:39)
org.eclipse.jdt.internal.ui.search.MethodExitsFinder.markReferences
(MethodExitsFinder.java:100)
org.eclipse.jdt.internal.ui.search.MethodExitsFinder.perform
(MethodExitsFinder.java:80)
org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.updateOccurrenceAnnotations
(JavaEditor.java:3605)
org.eclipse.jdt.internal.ui.javaeditor.JavaEditor$7.selectionChanged
(JavaEditor.java:3661)
org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartLis
tenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:164)
org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$3.run
(SelectionListenerWithASTManager.java:136)
org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
------------------------------------------------------------

I investigated and it seems that it's a "Mark Occurences"-related bug. It 
occurs only if one of the "Mark types" or "Mark method exits" is activated, 
the others seems fine yet. Here is the Java code from the Java editor that 
triggers the error, so you can reproduce it:
------------------------------------------------------------
public class DbService extends Db {

	/**
	 * @throws Exception
	 */
	private DbService() throws Exception {
		super();
	}
	
	// If I put the cursor on "DbService" in the method definition line --
> 
	// An internal error occurred during: "Java AST creation".
	public static final DbService getInstance() throws Exception {
		
		return new DbService();
	}

	// If I put the cursor on "DbService" in the method definition line --
> 
	// An internal error occurred during: "Java AST creation".
	public static final DbService getAnotherDamnObject() {
		try {
			return new DbService();
		} catch (Exception e) {
			return null;
		}
	}

	// This is all OK, no problem
	public static final DbService getDaDamnObject() throws Exception {
		return null;
	}
}

------------------------------------------------------------

If I put the text cursor on the return type (DbService) of the getInstance() 
or getAnotherDamnObject() methods, the error is triggered. It won't happen if 
I do the same with the last method, getDaDamnObject(), or any other places in 
the code.

I get an odd error popup with the new Eclipse (3.0.0 - Build id: 200406251208):
------------------------------------------------------------
An internal error occurred during: "Java AST creation".
java.lang.UnsupportedOperationException: Operation only supported in JLS2 AST
org.eclipse.jdt.core.dom.ASTNode.supportedOnlyIn2(ASTNode.java:1775)
org.eclipse.jdt.core.dom.ClassInstanceCreation.getName
(ClassInstanceCreation.java:402)
org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowAnalyzer.endVisit
(FlowAnalyzer.java:460)
org.eclipse.jdt.core.dom.ClassInstanceCreation.accept0
(ClassInstanceCreation.java:334)
org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2454)
org.eclipse.jdt.core.dom.ASTNode.acceptChild(ASTNode.java:2501)
org.eclipse.jdt.core.dom.ReturnStatement.accept0(ReturnStatement.java:133)
org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2454)
org.eclipse.jdt.core.dom.ASTNode.acceptChildren(ASTNode.java:2524)
org.eclipse.jdt.core.dom.Block.accept0(Block.java:133)
org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2454)
org.eclipse.jdt.internal.corext.refactoring.code.flow.FlowAnalyzer.visit
(FlowAnalyzer.java:295)
org.eclipse.jdt.core.dom.TryStatement.accept0(TryStatement.java:189)
org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2454)
org.eclipse.jdt.internal.corext.refactoring.code.flow.InOutFlowAnalyzer.perform
(InOutFlowAnalyzer.java:39)
org.eclipse.jdt.internal.ui.search.MethodExitsFinder.markReferences
(MethodExitsFinder.java:100)
org.eclipse.jdt.internal.ui.search.MethodExitsFinder.perform
(MethodExitsFinder.java:80)
org.eclipse.jdt.internal.ui.javaeditor.JavaEditor.updateOccurrenceAnnotations
(JavaEditor.java:3605)
org.eclipse.jdt.internal.ui.javaeditor.JavaEditor$7.selectionChanged
(JavaEditor.java:3661)
org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartLis
tenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:164)
org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$3.run
(SelectionListenerWithASTManager.java:136)
org.eclipse.core.internal.jobs.Worker.run(Worker.java:66)
------------------------------------------------------------

I investigated and it seems that it's a "Mark Occurences"-related bug. It 
occurs only if one of the "Mark types" or "Mark method exits" is activated, 
the others seems fine yet. Here is the Java code from the Java editor that 
triggers the error, so you can reproduce it:
------------------------------------------------------------
public class DbService extends Db {

	/**
	 * @throws Exception
	 */
	private DbService() throws Exception {
		super();
	}
	
	// If I put the cursor on "DbService" in the method definition line --
> 
	// An internal error occurred during: "Java AST creation".
	public static final DbService getInstance() throws Exception {
		
		return new DbService();
	}

	// If I put the cursor on "DbService" in the method definition line --
> 
	// An internal error occurred during: "Java AST creation".
	public static final DbService getAnotherDamnObject() {
		try {
			return new DbService();
		} catch (Exception e) {
			return null;
		}
	}

	// This is all OK, no problem
	public static final DbService getDaDamnObject() throws Exception {
		return null;
	}
}

------------------------------------------------------------

If I put the text cursor on the return type (DbService) of the getInstance() 
or getAnotherDamnObject() methods, the error is triggered. It won't happen if 
I do the same with the last method, getDaDamnObject(), or any other places in 
the code.
Move to JDT/UI for investigation.
How is it possible to have a JLS3 DOM tree?
*** Bug 69282 has been marked as a duplicate of this bug. ***
I don't have a clue what "JLS3 DOM" is... :) I'm running J2SE SDK v. 1.4.2_01-
b06 on WinXP Pro SP1, and as I recall I have Java 3D installed, I don't know 
the version. I don't think I have anything else in the JVM's classpath, and 
the Eclipse is a clean installation, with Webdav/FTP, Examples and Automated 
test included.
If it helps, I can attach lists with all the files from Eclipse and the J2SDK.
SelectionListenerWithASTManager accesses the AST via

JavaPlugin.getDefault().getASTProvider().getAST(input, true, monitor)

I tested it using a fresh 3.0 install and couldn't reproduce the problem.

Szabi, do you have cheetah (JDK 1.5 support for Eclipse) installed
H*ll, you're right ... I think I have cheetah... it was an automatic update a 
few days ago and I got it. Any idea how can I remove it? ... It's enough to 
delete it from the features, plugin and configuration directories?
Thx a lot!
*** Bug 69361 has been marked as a duplicate of this bug. ***
OK, I got it! That cheetah thing was jokin' around. I removed it and now it 
works fine! Spread the news! :))
Removing cheetag is not a fix. Using an AST3, the call is getType() and not
getName(). The visitor of a DOM/AST tree should use the right methods according
to the AST level.
Well, this issue is over my head at this point. I beleive this is a real bug 
that should be fixed in the upcoming releases or in that cheetah plugin. I'm 
just a humble user of Eclipse, I just need it to work properly :) Happy (de)
bugging! 
Of course if I can help in any way, I will.
Cheetah is still very young so you can't expect product quality. We just 
started to convert all our code to use the correct JSL3 API. 
*** Bug 69483 has been marked as a duplicate of this bug. ***
I have Cheetah installed also. So it seems this is the cause of the bug. As this
plugin is not yet critical for me, i will uninstall it and try it later. Thanks!
*** Bug 69483 has been marked as a duplicate of this bug. ***
Got addressed in HEAD and will be in next I-Build.

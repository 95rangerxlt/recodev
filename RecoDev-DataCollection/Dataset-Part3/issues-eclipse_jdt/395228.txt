Steps to reproduce:
1. Invoke "Introduce Indirection" on 'f' method in code below
2. The resulting file does not compile ("The type IntroduceIndirectionBug1.C is not visible")

class IntroduceIndirectionBug1 {
    // Invoke "Introduce Indirection" on 'f'
    void f(C c) {
    }

    private class C {
    }
}

The cause of this bug is probably the same as for bug 394725. 

(Thanks to Yilong Li for helping with the bug report.)

Steps to reproduce:
1. Invoke "Introduce Indirection" on 'f' method in code below
2. The resulting file does not compile ("The type IntroduceIndirectionBug1.C is not visible")

class IntroduceIndirectionBug1 {
    // Invoke "Introduce Indirection" on 'f'
    void f(C c) {
    }

    private class C {
    }
}

The cause of this bug is probably the same as for bug 394725. 

(Thanks to Yilong Li for helping with the bug report.)
Issue is reproducible using Build id: I20130115-1300. The refactoring results in compiler error.

In bug 394725 also an unnecessary import statement introduced during refactoring causes the compile error.
Created attachment 236100
proposed patch

This contribution complies with http://www.eclipse.org/legal/CoO.php

This also fixes bug 394725
(In reply to Nikolay Metchev from comment #2)
> Created attachment 236100 [details] [diff]
> proposed patch
> 
> This contribution complies with http://www.eclipse.org/legal/CoO.php
Thanks Nikolay. Fix looks good. Verified that ImportRewriteContext is required in all the cases in patch, except when #addImport is invoked for a type parameter.

> This also fixes bug 394725
This patch doesn't fix bug 394725 (which is inline refactoring) but fixes the issue in that bug's example for introduce indirection.

Released your patch with:
http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=4ebf811d5078c502f56d98be78c70e5a79671a76

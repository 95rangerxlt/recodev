M3 test candidate

public class A {
	public void foo(B b) {
	}
}

- create a class D that references A#foo but put it onto the class path as binary
- move A#foo

Observe: no complains about the fact that foo is referenced from binary. Since
we offer the possibility to generate a delegate we should do so when referenced
from binary.

I think that other refactorings are affected by this as well. Markus, can you
remmeber what the current story is with reference is binaries.

M3 test candidate

public class A {
	public void foo(B b) {
	}
}

- create a class D that references A#foo but put it onto the class path as binary
- move A#foo

Observe: no complains about the fact that foo is referenced from binary. Since
we offer the possibility to generate a delegate we should do so when referenced
from binary.

I think that other refactorings are affected by this as well. Markus, can you
remmeber what the current story is with reference is binaries.
I had o.e.jface.text in binary and o.e.text in source and:
- added a public field of the empty type Foo to Position
- moved Position#delete() to Foo without generating a delegate
-> no warning about references from jface.text

The RefactoringSearchEngine used in the refactorings does only search in the 
elements declaring project and its referenced projects, and only returns 
matches in source elements (although a general warning status is returned). 
Evidently, no matches are returned in the setup above.

While doing a pass over RefactoringSearchEngine to make it more configurable, 
better setup of the search scope should be implemented.
Fixed > 20041109

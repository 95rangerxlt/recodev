Consider the following snippet:

interface F2 {
    void doit(String s1, String s2);
}
public void test1() {
    ActionListener al = (public e) -> System.out.println(e); 
    F2 f2 = (abstract final s, @Nullable t) -> System.out.println(s+".."+t);
}

We correctly get three errors from the parser, but I'd suggest to improve
the messages:
- currently the position always includes the argument, shouldn't it only
  highlight the modifier(s)?
- I think the message (currently "Modifiers are not allowed here") should
  read more like other syntax errors.
- users won't typically consider annotations as modifiers so we should 
  probably use two different messages here.

Consider the following snippet:

interface F2 {
    void doit(String s1, String s2);
}
public void test1() {
    ActionListener al = (public e) -> System.out.println(e); 
    F2 f2 = (abstract final s, @Nullable t) -> System.out.println(s+".."+t);
}

We correctly get three errors from the parser, but I'd suggest to improve
the messages:
- currently the position always includes the argument, shouldn't it only
  highlight the modifier(s)?
- I think the message (currently "Modifiers are not allowed here") should
  read more like other syntax errors.
- users won't typically consider annotations as modifiers so we should 
  probably use two different messages here.
Fix and tests released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=bd80f54d2bce372d0cb569282d8bd3ac7581ecf9

(In reply to comment #0)

> - currently the position always includes the argument, shouldn't it only
>   highlight the modifier(s)?

I have changed it so that it only shows the parameter, this is how
error is reported for 

    void foo(public int x) {}


> - I think the message (currently "Modifiers are not allowed here") should
>   read more like other syntax errors.

We now complain 

 Syntax error, modifiers and annotations are not allowed for the lambda parameter {0} as its type is elided

> - users won't typically consider annotations as modifiers so we should 
>   probably use two different messages here.

We issue a neutral message now that spells out both modifiers and
annotations.


[1.8][compiler] Improve error reporting for illegal modifier in TypeElidedFormalParameter



Fixed bug 383015: [1.8][compiler] Improve error reporting for illegal modifier in TypeElidedFormalParameter 
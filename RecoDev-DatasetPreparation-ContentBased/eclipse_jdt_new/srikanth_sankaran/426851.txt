package test.pack1;

import java.lang.annotation.ElementType;
import java.lang.annotation.Target;

@Target(ElementType.TYPE_USE)
@interface TypeUse {
}

@T|
interface I {
	default @T| void foo() { }
}
-----------------------------------------------

In the above example, replace '|' with the caret at both the locations and press Ctrl+space.

At 1st location (before interface), @TypeUse is not suggested, though it is valid there.
At 2nd location (before 'void'), @TypeUse is suggested, and selecting that results in compilation error.

package test.pack1;

import java.lang.annotation.ElementType;
import java.lang.annotation.Target;

@Target(ElementType.TYPE_USE)
@interface TypeUse {
}

@T|
interface I {
	default @T| void foo() { }
}
-----------------------------------------------

In the above example, replace '|' with the caret at both the locations and press Ctrl+space.

At 1st location (before interface), @TypeUse is not suggested, though it is valid there.
At 2nd location (before 'void'), @TypeUse is suggested, and selecting that results in compilation error.
(In reply to Noopur Gupta from comment #0)

> At 1st location (before interface), @TypeUse is not suggested, though it is
> valid there.

Thanks, will take a look.

> At 2nd location (before 'void'), @TypeUse is suggested, and selecting that
> results in compilation error.

There are many places, code assist offers proposals that will lead to errors.
This is useful in many but not all scenarios where a follow up quick fix will
achieve what the programmer intended. That logic is not totally applicable here
arguably. (A follow up quick fix could be change method return type for
example.
(In reply to Srikanth Sankaran from comment #1)

> > At 2nd location (before 'void'), @TypeUse is suggested, and selecting that
> > results in compilation error.

There is also a further problem that would inhibit a full solution here:
There are places where the completion engine operates with raw type names,
with no type information. It would not be possible to always know that
an annotation type is a TYPE_USE annotation.

See https://bugs.eclipse.org/bugs/show_bug.cgi?id=174312#c0
Thanks Noopur. Fix and tests available here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=8c64bffbde25c824dd307f6fe5deea636346d85b


[1.8][content assist] content assist for a type use annotation



Fixed Bug 426851 - [1.8][content assist] content assist for a type use annotation 
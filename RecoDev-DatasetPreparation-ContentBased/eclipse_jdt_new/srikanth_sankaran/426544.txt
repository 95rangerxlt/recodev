// --
package p;

public class X {
   static public int f;
}

// --
package q;
public class X {
   static public int f = 6;
}


// ---
import static p.X.f;
import static q.X.f;

public class X {

    public static void main(String argv[]) {
    }
}


elicits: "The import q.X.f collides with another import statement"

JLS7 7.5.3 says nothing about collision of single static imports.

JDK8 has started accepting this code and for compatibility's sakes we should
too.

Related javac bugs:

https://bugs.openjdk.java.net/browse/JDK-4980495
https://bugs.openjdk.java.net/browse/JDK-8019461

The dates don't quite tally up, but these have some discussion FWIW.

// --
package p;

public class X {
   static public int f;
}

// --
package q;
public class X {
   static public int f = 6;
}


// ---
import static p.X.f;
import static q.X.f;

public class X {

    public static void main(String argv[]) {
    }
}


elicits: "The import q.X.f collides with another import statement"

JLS7 7.5.3 says nothing about collision of single static imports.

JDK8 has started accepting this code and for compatibility's sakes we should
too.

Related javac bugs:

https://bugs.openjdk.java.net/browse/JDK-4980495
https://bugs.openjdk.java.net/browse/JDK-8019461

The dates don't quite tally up, but these have some discussion FWIW.
Fix and tests released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=c37ad47cfe3a592e86ce37a47b02bf6402d7f1de
Out of curiosity: which "f" will be used in X?
(In reply to Stephan Herrmann from comment #2)
> Out of curiosity: which "f" will be used in X?

use of simple name f will trigger an error of ambiguous reference. This is
simply shifting the error reporting from import site to use site. I expect
no material difference - this is just an expercise in conforming to JLS & RI.


[1.8][compiler] Compiler over-eagerly detects collision of single static imports



Fixed Bug 426544 - [1.8][compiler] Compiler over-eagerly detects collision of single static imports 
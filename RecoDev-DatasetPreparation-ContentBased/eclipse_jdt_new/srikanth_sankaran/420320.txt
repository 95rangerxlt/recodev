BETA_JAVA8

Bad AST recovery with a type annotation in a ParameterizedType and an unrelated syntax error in a secondary type.

The method En#bar() is missing a ; or a {}. This syntax error in the secondary class apparently turns the @NonNull annotation into a modifier of the FieldDeclaration for MyExamples#list2.


!ENTRY org.eclipse.jdt.core 4 4 2013-10-24 21:18:29.919
!MESSAGE Bad AST node structure:
- parent [52, 80] org.eclipse.jdt.core.dom.FieldDeclaration
   previous [57, 65] org.eclipse.jdt.core.dom.MarkerAnnotation
   type [52, 73] org.eclipse.jdt.core.dom.ParameterizedType

----------------------------------- SOURCE BEGIN -------------------------------------
package jsr308.myex;

public class MyExamples {
	List<@NonNull String> list2;
}
class En {
    void bar()
    void foo() { }
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalStateException: Bad AST node structure
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)

BETA_JAVA8

Bad AST recovery with a type annotation in a ParameterizedType and an unrelated syntax error in a secondary type.

The method En#bar() is missing a ; or a {}. This syntax error in the secondary class apparently turns the @NonNull annotation into a modifier of the FieldDeclaration for MyExamples#list2.


!ENTRY org.eclipse.jdt.core 4 4 2013-10-24 21:18:29.919
!MESSAGE Bad AST node structure:
- parent [52, 80] org.eclipse.jdt.core.dom.FieldDeclaration
   previous [57, 65] org.eclipse.jdt.core.dom.MarkerAnnotation
   type [52, 73] org.eclipse.jdt.core.dom.ParameterizedType

----------------------------------- SOURCE BEGIN -------------------------------------
package jsr308.myex;

public class MyExamples {
	List<@NonNull String> list2;
}
class En {
    void bar()
    void foo() { }
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalStateException: Bad AST node structure
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1419)
Could perhaps be caused by (the root cause of) bug 414038, where we found recovery to create illegal sharing of (compiler) AST nodes.
Cumulative fix for bug 414038 and bug 420320 delivered via: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=1821b3dbff03a19f0410029f03844aad56801cc1.

Fix was to simply make sure type annotations are NOT mixed up with the
recovery machinery.

If type annotation recovery is necessary, it will have to dealt with
as a separate problem. I don't think it is as important as SE5 annotations
discovery.
Resolving.


[1.8] Bad AST recovery with type annotation and a syntax error in secondary type



[1.8] Cumulative fix for 414038 + 420320 
BETA_JAVA8:

The following program should trigger an error at the throw site as it illegal
to throw a checked exception from a lambda body that is not specified in the
function descriptor computed for the single abstract method of the functional
interface.

// -- 
import java.io.IOException;

interface I { void run(int x); }

class X {
	void foo() {
	    I r = (int y) -> {
	    	throw new IOException();
	    };
        }
}

BETA_JAVA8:

The following program should trigger an error at the throw site as it illegal
to throw a checked exception from a lambda body that is not specified in the
function descriptor computed for the single abstract method of the functional
interface.

// -- 
import java.io.IOException;

interface I { void run(int x); }

class X {
	void foo() {
	    I r = (int y) -> {
	    	throw new IOException();
	    };
        }
}
Created attachment 226463
Work in progress.
Partial implementation released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=a08e8dc8e9230a115f0cfdb4f78a05f8533a21b8
Tests released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=e4130120ae791b6450af86266caf3711f6b81fa5


[1.8][compiler] Exceptions thrown from lambda body must match specification per function descriptor



Polish work & more tests for Bug 399537 - [1.8][compiler] Exceptions thrown from lambda body must match specification per function descriptor 

Fixed Bug 399537 - [1.8][compiler] Exceptions thrown from lambda body must match specification per function descriptor 

Test for bug 399537 

Partial fix for Bug 399537 - [1.8][compiler] Exceptions thrown from lambda body must match specification per function descriptor 
BETA_JAVA8

Commit http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=831d96bc5763622ed503192c35bfd6688abedd96 includes
an ad-hoc (but correct) fix to workaround what appears to be a bug
either in DiagnoseParser or in jikespg parser generator or in the
grammar file.

Given the malformed program

    Object o = new new Object() {};

for some reason, with the new grammar rules to support type annotations in
place, DiagnoseParser comes up (using scope trial) with a repair strategy
that calls for the insertion of a semicolon after the first new. That looks
totally bogus. 
	
This issue is presently fixed with a temporary point-fix. We need to understand
the root cause.

[Not adding this as a dependency since the current fix is not incorrect]

BETA_JAVA8

Commit http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=831d96bc5763622ed503192c35bfd6688abedd96 includes
an ad-hoc (but correct) fix to workaround what appears to be a bug
either in DiagnoseParser or in jikespg parser generator or in the
grammar file.

Given the malformed program

    Object o = new new Object() {};

for some reason, with the new grammar rules to support type annotations in
place, DiagnoseParser comes up (using scope trial) with a repair strategy
that calls for the insertion of a semicolon after the first new. That looks
totally bogus. 
	
This issue is presently fixed with a temporary point-fix. We need to understand
the root cause.

[Not adding this as a dependency since the current fix is not incorrect]
This is best worked on after bug 383596 and bug 381121 thereby stabilizing
the grammar (modulo bugs)
(In reply to comment #1)
> This is best worked on after bug 383596 and bug 381121 thereby stabilizing
> the grammar (modulo bugs)

Also after bug 383600
Happily, this ad-hoc fix has been rendered irrelevant by the redesign
of the 308 grammar work in bug 390784 and so has been withdrawn via

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=67af3f8a85df293ff8ca16e3b23c249a593b75c2


[1.8][compiler] Investigate a cleaner to fix to replace the ad-hoc point fix in DiagnoseParser



Fixed 383598: Investigate a cleaner to fix to replace the ad-hoc point fix in DiagnoseParser 
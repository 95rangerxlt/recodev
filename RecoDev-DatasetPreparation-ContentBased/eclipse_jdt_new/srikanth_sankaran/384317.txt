BETA_JAVA8:

(1) As it stands now, Scanner.jumpOver can wastefully look ahead until EOF on 
some ill formed programs (parenthesis imbalance early on). We need to build
some ways to fail early. A black list is one possible way already exploited
while looking ahead at '<'.  

(2) In the same method, we are reusing the counter `found` for various
token classes. It needs to be understood whether this is kosher to do.

BETA_JAVA8:

(1) As it stands now, Scanner.jumpOver can wastefully look ahead until EOF on 
some ill formed programs (parenthesis imbalance early on). We need to build
some ways to fail early. A black list is one possible way already exploited
while looking ahead at '<'.  

(2) In the same method, we are reusing the counter `found` for various
token classes. It needs to be understood whether this is kosher to do.
It is now arranged that the look ahead will never proceed past the next
semicolon, which is a token that cannot feature either in type arguments
or in lambda parameter list.

Released in BETA_JAVA8 via
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=3255db62a2a31c2b7911a20dbb001663d6aa8d6e

(issue (2) from comment#0 turned out not to be a problem)


[1.8][compiler] More smarts needed in Scanner.jumpOver()



Fixed bug 384317: [1.8][compiler] More smarts needed in Scanner.jumpOver() 
@FunctionalInterface
interface FI1 {
	int foo(int x) throws Exception;
}
class Test {
	FI1 fi1= (int x) -> {
		throw new Ex|
	};
	private void test() throws Exception {
		throw new Ex|
	}
}
------------------------------------------------------------------

In the above example, replace '|' with the caret in lambda expr and in #test method. Press Ctrl+space.

Completions are available in the method but not in the lambda expression body.

@FunctionalInterface
interface FI1 {
	int foo(int x) throws Exception;
}
class Test {
	FI1 fi1= (int x) -> {
		throw new Ex|
	};
	private void test() throws Exception {
		throw new Ex|
	}
}
------------------------------------------------------------------

In the above example, replace '|' with the caret in lambda expr and in #test method. Press Ctrl+space.

Completions are available in the method but not in the lambda expression body.
Thanks Noopur, certain "optimizations" I had put in place to avoid extended 
recovery are interfering with parse tree construction in this specific case. 
Fix is simply to forego the short circuiting.

Here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=8986600df161cd7584749fb6a28497a308fa862c
Auto completion inside Lambda Expression does not work with older builds.

Auto completion is successful with Java 8 RC1 Eclipse Kepler 4.3.2(RC4.
Verified as working for Eclipse + Java 8 RC1 Eclipse Kepler 4.3.2(RC4) Build id: M20140212-0800 +  
Eclipse Java Development Tools Patch for Java 8 Support (BETA)	
1.0.0.v20140220-2054.


[1.8][content assist] No completions available in throw statement within lambda body



Fixed Bug 427463 - [1.8][content assist] No completions available in throw statement within lambda body 
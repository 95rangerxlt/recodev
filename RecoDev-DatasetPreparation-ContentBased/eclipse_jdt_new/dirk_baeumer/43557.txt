To see the problem, take a look at the following example:

public void test1() {
 String x = "x";
 String y = "a" + x;
 System.out.println(x);
}

Select the last 2 code lines of the method and apply the refactoring extract 
method. In the dialog, give it a method name and rename parameter x to 
message. You'll get this:


public void test1() {
 String x = "x";
 extractedMethod(x);
}

private void extractedMethod(String message) {
 String y = "a" + x;
 System.out.println(x);
}

As you can see, x in the extracted method isn't renamed to message.

To see the problem, take a look at the following example:

public void test1() {
 String x = "x";
 String y = "a" + x;
 System.out.println(x);
}

Select the last 2 code lines of the method and apply the refactoring extract 
method. In the dialog, give it a method name and rename parameter x to 
message. You'll get this:


public void test1() {
 String x = "x";
 extractedMethod(x);
}

private void extractedMethod(String message) {
 String y = "a" + x;
 System.out.println(x);
}

As you can see, x in the extracted method isn't renamed to message.
Fixed for M4.


Refactoring Extract method: Renaming of parameters doesn't work properly [refactoring]



Bug 435570 - [1.8][null] @NonNullByDefault illegally tries to affect "throws E" 

Bug 435571: ImportReferencesCollector needs to support old AST levels 

[43557] 
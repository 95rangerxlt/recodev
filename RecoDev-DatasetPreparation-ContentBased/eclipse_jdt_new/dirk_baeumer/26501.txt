20021114

1. In the Java perspective, package explorer visible.
2. Open FilterDescriptor (jdt.ui) select ID_PLUGIN (line 76).
3. From the context menu choose Refactoring -> Inline Constant
4. On the first page press next
5. Before the progress monitor is finished, the package view suddenly starts to 
flicker for about 1/2 sec. Why?

20021114

1. In the Java perspective, package explorer visible.
2. Open FilterDescriptor (jdt.ui) select ID_PLUGIN (line 76).
3. From the context menu choose Refactoring -> Inline Constant
4. On the first page press next
5. Before the progress monitor is finished, the package view suddenly starts to 
flicker for about 1/2 sec. Why?
I suspect that working copies are created for many elements (JavaUI.PLUGIN_ID 
is very common).
However, in this scenario (showing the preview page) it does not make sense to 
open working copies.
Step 6 is to close the wizard with 'Cancel'

BUT: all files containing JavaUI.PLUGIN_ID are now marked as touched! (by cvs)
>Step 6 is to close the wizard with 'Cancel'
>BUT: all files containing JavaUI.PLUGIN_ID are now marked as touched! (by cvs)

cannot reproduce that - you sure you pressed 'cancel'?
It was not with cancel, was something else:
Opened new bug 26504
this is called by calling a constructor on ImportsStructure
it effectively creates a new working copy
which sends out a delta.

2 possible solutions - you fix it or we write a workaround :)
refactoring should be able to create ImportsStructure without being worried 
about flickering in the UI, i think

org.eclipse.jdt.internal.core.CompilationUnit.getSharedWorkingCopy
(org.eclipse.core.runtime.IProgressMonitor, 
org.eclipse.jdt.core.IBufferFactory, org.eclipse.jdt.core.IProblemRequestor) 
line: 557
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider.createEle
mentInfo(java.lang.Object) line: 847
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitDocumentProvider
(org.eclipse.ui.texteditor.AbstractDocumentProvider).connect(java.lang.Object) 
line: 297
org.eclipse.jdt.internal.corext.textmanipulation.TextBufferFactory.acquire
(org.eclipse.core.resources.IFile) line: 82
org.eclipse.jdt.internal.corext.textmanipulation.TextBuffer.acquire
(org.eclipse.core.resources.IFile) line: 346
org.eclipse.jdt.internal.corext.codemanipulation.ImportsStructure.aquireTextBuff
er() line: 438
org.eclipse.jdt.internal.corext.codemanipulation.ImportsStructure.<init>
(org.eclipse.jdt.core.ICompilationUnit, java.lang.String[], int, boolean) line: 
72
org.eclipse.jdt.internal.corext.codemanipulation.ImportEdit.<init>
(org.eclipse.jdt.core.ICompilationUnit, 
org.eclipse.jdt.internal.corext.codemanipulation.CodeGenerationSettings) line: 
32
org.eclipse.jdt.internal.corext.refactoring.code.InlineConstantRefactoring$Inlin
eTargetCompilationUnit.getEdits
(org.eclipse.jdt.internal.corext.refactoring.base.RefactoringStatus) line: 660


not critical after clarification
discussed with dirk: refactoring wizard should use JavaCore.run to batch all 
create-workingcopy events.
Fixed for build > I20021218


Refactoring wizard brings the package explorer to flicker [refactoring]



[26501] 
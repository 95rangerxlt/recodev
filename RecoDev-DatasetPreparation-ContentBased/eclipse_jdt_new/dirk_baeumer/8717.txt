In the hierarchy (lower pane) I asked to rename a method and the refactoring 
wizard offered to help (this is goodnesss).

Issues:
* The top area is fully collapsed

* The bottom areas (two panes & the title area above) do not make it easy to 
see what package/class is being modified. I would have to scroll to the top of 
the file to see which is not friendly.

* The top area has
  [ ] update method references
  [ ] update method references
  [ ] update method references
  [ ] update method references
As a user this is quite perplexing because either I would expect a view like
  [ ] update method references
       .... below here are *all* the affected references
  [ ] update class ...
       .... below here are changes of this type

Or I would have expected an object centric view that has the objects as the 
root. The current approach of duplicating something is puzzling.

* The tree representation is less ideal to work with because one 
easily loses tracks of the changes happening because you have to expand things. 
Would two panes (left/right) be more appropriate with type of changes in the 
left and the details in the right?  

Bottom line: Not sure of the above non tree suggestion but the current approach 
is awkward to work with.

[aside: I like the fact refactoring kicked in an helped me....so please take 
this in the positive way its intended]

In the hierarchy (lower pane) I asked to rename a method and the refactoring 
wizard offered to help (this is goodnesss).

Issues:
* The top area is fully collapsed

* The bottom areas (two panes & the title area above) do not make it easy to 
see what package/class is being modified. I would have to scroll to the top of 
the file to see which is not friendly.

* The top area has
  [ ] update method references
  [ ] update method references
  [ ] update method references
  [ ] update method references
As a user this is quite perplexing because either I would expect a view like
  [ ] update method references
       .... below here are *all* the affected references
  [ ] update class ...
       .... below here are changes of this type

Or I would have expected an object centric view that has the objects as the 
root. The current approach of duplicating something is puzzling.

* The tree representation is less ideal to work with because one 
easily loses tracks of the changes happening because you have to expand things. 
Would two panes (left/right) be more appropriate with type of changes in the 
left and the details in the right?  

Bottom line: Not sure of the above non tree suggestion but the current approach 
is awkward to work with.

[aside: I like the fact refactoring kicked in an helped me....so please take 
this in the positive way its intended]
Created attachment 282
Attachment contains snapshot showing wizard page discussed here
The main akwardness "update method references" shows up everywhere was a bug 
and is fixed by now. However, there is room for improvement.

Here is what we intend to do.
1) expand first node in tree
2) add a title to the change tree and provide step buttons as in the compare 
views. This enables to step through the changes
3) more context: 
   - show the path of the resource in the Java Source Compare 
     pane title (rename title to Source Compare)
   - show the parent of a change in the tree label
Here is what I did for build 20020112:

1.) fully expand first node if only one node is present. This is the case for
    all method level refactorings.
2.) Step buttons are available and the name in the tree is qualified for the
    topmost parents
3.) the compare viewer's pane title now show the element selected in the tree.
    The element is fully qulified.


20020321 Trying to verify: It doesn't seem to expand the first node of the tree 
anymore.



Refactor wizard awkward to use



Clarify specs of findDeclaringNode (bug 87171) 

HEAD - More regression tests for 87173 and 88548 

HEAD - Regression tests for 87173 and 88548 

HEAD - Fix for 87173 

Add new API methods for detecting bxoing and unboxing conversions (bug 87173) 

HEAD - Fix for 87171 

HEAD - Fix for 87171 

Bugs 218209 and 218717 Bug 218209 - JRE Definition dialog should use -Dee.name as default JRE name Bug 218717 - Remove quote requirement from ee files 

87174 Hover doesn't show fully resolved information [render] 

87174 Hover doesn't show fully resolved information [render] 

[8717] 

[8717] 
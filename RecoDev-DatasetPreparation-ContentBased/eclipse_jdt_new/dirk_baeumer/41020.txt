Test case:
	void foo() {
		for (int i= 0; i < 1; i++) {
			System.out.println(i++); //1//
		}
		
		int k= 0;
		for (int i= 0; i < 1; i++) {
			k++; //2//
		}
	}

- select "k++" at //2// and then apply Extract Method ...
-> Dialog says: Replace 3 duplicate code fragments (leave checked)
-> Loop reentrance flow analysis is only performed for variable "k",
but all "i"s are also replaced by a method call (since the expressions
syntactically match). This is wrong.

- select "i++" at //1// and then apply Extract Method ...
-> Message: Ambiguous return value...
(BTW: This message needs to be more verbose. I don't think that
many users understand what that means)

Test case:
	void foo() {
		for (int i= 0; i < 1; i++) {
			System.out.println(i++); //1//
		}
		
		int k= 0;
		for (int i= 0; i < 1; i++) {
			k++; //2//
		}
	}

- select "k++" at //2// and then apply Extract Method ...
-> Dialog says: Replace 3 duplicate code fragments (leave checked)
-> Loop reentrance flow analysis is only performed for variable "k",
but all "i"s are also replaced by a method call (since the expressions
syntactically match). This is wrong.

- select "i++" at //1// and then apply Extract Method ...
-> Message: Ambiguous return value...
(BTW: This message needs to be more verbose. I don't think that
many users understand what that means)
This is an easier example without a 'for':

	public void f() {
		int i= 17;
		int k= 1;

		i++;
		k++;

		System.out.println(i);
		System.out.println(k);
	}

Extracting a method 'inc' from 'i++;' with replacing duplicate code fragments
yields:
		i= inc(i);
		i= inc(k);

Note that the second assignment goes to the wrong local.

Fixed for M9.


Extract Method Refactoring: needs separate FlowAnalysis for each matching fragment [refactoring]



Bug 410207 - Compiler incorrectly reports error message "X cannot be resolved. It is indirectly referenced from required .class files" 

Bug 410207 - Compiler incorrectly reports error message "X cannot be resolved. It is indirectly referenced from required .class files" 

Revert "Bug 441726 - JDT performance regression due to bug 410207" 

Bug 441726 - JDT performance regression due to bug 410207 

Bug 410207 - Compiler incorrectly reports error message "X cannot be resolved. It is indirectly referenced from required .class files" 

Bug 410207 - Compiler incorrectly reports error message "X cannot be resolved. It is indirectly referenced from required .class files" 

Bug 410207 - Compiler incorrectly reports error message "X cannot be resolved. It is indirectly referenced from required .class files" 

Bug 410207 - Compiler incorrectly reports error message "X cannot be resolved. It is indirectly referenced from required .class files" 

Bug 410207 - Compiler incorrectly reports error message "X cannot be resolved. It is indirectly referenced from required .class files" 

[58637] & [44060] & [41786] & [41020] 
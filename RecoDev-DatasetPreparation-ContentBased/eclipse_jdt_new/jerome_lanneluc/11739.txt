Build 20020214

If you select a package or project and select Open Type Hierarchy', a hierarchy 
view will open showing all of the classes in the package/project.  I just 
discovered this today, and it's a very cool feature.

However, the hierarchy seems to include 'dead' branches - that is, there are 
leaf nodes in the tree which are not members of the package or project.

I think that I've figured out why this happens:

Create two classes:

 package baz;

 public class Quux {
 	public static class FooBar {
	}
 }

and

 package foo;

 import baz.Quux;

 public class Bar extends Quux {

 } 

Now open a hierarchy view on package foo.

You'll get something like:

Object
  FooBar
  Quux
    Bar

FooBar is not in foo, nor is it a subclass of anything in foo, so it shouldn't 
be included in the hierarchy.

Build 20020214

If you select a package or project and select Open Type Hierarchy', a hierarchy 
view will open showing all of the classes in the package/project.  I just 
discovered this today, and it's a very cool feature.

However, the hierarchy seems to include 'dead' branches - that is, there are 
leaf nodes in the tree which are not members of the package or project.

I think that I've figured out why this happens:

Create two classes:

 package baz;

 public class Quux {
 	public static class FooBar {
	}
 }

and

 package foo;

 import baz.Quux;

 public class Bar extends Quux {

 } 

Now open a hierarchy view on package foo.

You'll get something like:

Object
  FooBar
  Quux
    Bar

FooBar is not in foo, nor is it a subclass of anything in foo, so it shouldn't 
be included in the hierarchy.
moving to JCore
Now pruning dead branches when computing hierarchy on a region.


Dead branches in package/project Hierarchy View


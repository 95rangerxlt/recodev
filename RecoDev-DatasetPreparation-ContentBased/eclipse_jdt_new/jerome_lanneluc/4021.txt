MA (7/2/01 9:45:08 AM)
	The documentation and the example source code states that
		JavaCore.create(myProject)
	would return null if the project is not yet configured as a Java project.

	This is not the case. All 'create' routines return you handles, that do not have to
	be created nor in java projects or on any class path. The Java nature could only be
	attached to a created project. 
	
	I can see that the Javadoc on create is very fuzzy about when null can be returned, and
	I don't know what is current idea of the design.

		private void createJavaElementsFrom(IProject myProject, 
  			  IFolder myFolder, IFile myFile) {

   			  IJavaProject myJavaProject = JavaCore.create(myProject);
				// the project is not configured for Java (has no Java nature)  <<
       				 return;

NOTES:

GDA (8/6/01 9:48:53 PM)
	Moving to JDT inbox for any replacement words from EG.
	Defer to 2.0

MA (7/2/01 9:45:08 AM)
	The documentation and the example source code states that
		JavaCore.create(myProject)
	would return null if the project is not yet configured as a Java project.

	This is not the case. All 'create' routines return you handles, that do not have to
	be created nor in java projects or on any class path. The Java nature could only be
	attached to a created project. 
	
	I can see that the Javadoc on create is very fuzzy about when null can be returned, and
	I don't know what is current idea of the design.

		private void createJavaElementsFrom(IProject myProject, 
  			  IFolder myFolder, IFile myFile) {

   			  IJavaProject myJavaProject = JavaCore.create(myProject);
				// the project is not configured for Java (has no Java nature)  <<
       				 return;

NOTES:

GDA (8/6/01 9:48:53 PM)
	Moving to JDT inbox for any replacement words from EG.
	Defer to 2.0
moved to 'active'
PRODUCT VERSION:
	0.125


moving to CORE for comment
Usually handles can be created even if they do not exist, along the same line, 
I would vote for this project handle to be created but not existing (if asked).


Updated spec for JavaCore.create(IProject) to state that the handle is always 
return and that no check is done on the existence or the java nature of the 
project.


jdt: Java elements and resources: error in source code (1GG87S9)



Additional test for Bug 402173 - [1.8][formatter] Code formatter should understand lambda expressions 

Fix for issue raised during code review for Bug 402173 - [1.8][formatter] Code formatter should understand lambda expressions. 

Fixed Bug 402174 - [1.8][formatter] Code formatter should understand method and constructor references. 

Fix and tests for Bug 402173 - [1.8][formatter] Code formatter should understand lambda expressions. 

Enabling changes for Bug 402173 - [1.8][formatter] Code formatter should understand lambda expressions. 

Fixed Bug 402198 - [1.8][compiler][infrastructure] Enhance IErrorHandlingPolicy to support a new policy: ignore all errors. 

HEAD - Regression test for 240214 

3.2 maintenance - Fix for 240214 

3.4 maintenance - Fix for 240214 

HEAD - Fix for 240214 

104021 [quick fix] Introduce new local with casted type applied more than once 

140214 [clean up] PotentialProgrammingProblemFix must be cleaned up 

[84021] StackOverflow in TypeVariable#getPrettySignature(..) for recursive type variable definition 

This commit was manufactured by cvs2svn to create tag 'v20040217'. 

Build notes for I20040217 

This commit was manufactured by cvs2svn to create tag 'v200402121600'. 

This commit was manufactured by cvs2svn to create tag 'v200402121200'. 

This commit was manufactured by cvs2svn to create tag 'v200402120800'. 

Build notes for I20040210 

This commit was manufactured by cvs2svn to create tag 'v200402100010'. 

[24021] 

Fixed bug 24021: Unresolved Compiler warnings in JDT 

24021 Unresolved Compiler warnings in JDT 

24021 Unresolved Compiler warnings in JDT 
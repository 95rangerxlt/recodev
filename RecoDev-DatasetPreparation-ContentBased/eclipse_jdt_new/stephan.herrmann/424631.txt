This example still causes an NPE in ReferenceExpression.generateCode(line 172) (modified version of example from bug 424415) :

package bug424415;

import java.util.ArrayList;
import java.util.Collection;

interface Functional<T> {
   T apply();
}

class X {
    void foo(Collection<String> o) { }

	<Q extends Collection<?>> Q goo(Functional<Q> s) {
		return null;
	} 

    void test() { 
        foo(goo(ArrayList<String>::new));
    }
}

This example still causes an NPE in ReferenceExpression.generateCode(line 172) (modified version of example from bug 424415) :

package bug424415;

import java.util.ArrayList;
import java.util.Collection;

interface Functional<T> {
   T apply();
}

class X {
    void foo(Collection<String> o) { }

	<Q extends Collection<?>> Q goo(Functional<Q> s) {
		return null;
	} 

    void test() { 
        foo(goo(ArrayList<String>::new));
    }
}
Resolved via https://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=e4873234bb7d47f3f866e994a2466da3b0ee585f

(We were missing the epilog of rebindInnerPolies() etc. after invocation type inference on one path).


[1.8][inference] Another NPE in ReferenceExpression.generateCode



Bug 424631 - [1.8][inference] Another NPE in ReferenceExpression.generateCode 
With type annotations we can now express nullness of array elements.
Evaluation of annotations and null analysis should be extended for this.

With type annotations we can now express nullness of array elements.
Evaluation of annotations and null analysis should be extended for this.
I've file bug 394539 and bug 394540 as follow-ups. Also bug 383595 is closely related.

A TODO in TypeReference marks the consideration, whether storing specific ArrayBindings in LookupEnvironment is efficient (vs. keeping those inside the leaf component type binding).

Other than those I released the main tranche of the implementation via commit 2caa59d033a9b6c8ec71aab586472ad7fe749893, leaving follow-up work to the mentioned bugs.
What's included:
- include array references in null analysis (both as expressions and as lhs in assignments)
- apply all checks at all dimensions of multi dimensional arrays
- reporting of nullity mismatches against arbitrary expressions based on type annotations
- when assigning an array, check null annotations at all dimensions (no variance allowed - only unchecked conversions can be tolerated)
- pretty printing of null-annotated array types in error messages


[1.8][compiler][null] Evaluate null annotations on array types



Bug 392862 - [1.8][compiler][null] Evaluate null annotations on array types 
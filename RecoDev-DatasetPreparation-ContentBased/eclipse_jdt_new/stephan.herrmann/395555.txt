Bug 388281 introduces two new IProblems, which should be supported by the existing quick fixes, too.

I'll propose a patch.

Bug 388281 introduces two new IProblems, which should be supported by the existing quick fixes, too.

I'll propose a patch.
I guess this moves to M7.
(In reply to comment #1)
> I guess this moves to M7.

Indeed so. Sorry, I should have updated the target milestone.
I think there will be more related updates to quick fixes than just this
one, which I plan to address in one go during M7.
Created attachment 229407
proposed fix

This patch builds on the patches in bug 400668 and bug 405086.

It handles both new IProblems
+ ConflictingNullAnnotations
+ ConflictingInheritedNullAnnotations

In both positions:
+ parameter
+ return type

We propose to insert either annotation for disambiguation:
+ @NonNull
+ @Nullable

All is based on the existing implementation from bug 337977 et al.
Thanks for the patch.

Committed with http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=17c7783177bc359beb03a7575237fd347cc3ba49 together with other fixes.


[quickfix] Update null annotation quick fixes for bug 388281



Cumulative fix for the following problems: - bug 400668: [quick fix] The fix change parameter type to @Nonnull generated a null change - bug 405086: [quick fix] don't propose null annotations when those are disabled - bug 395555: [quick fix] Update null annotation quick fixes for bug 388281 - bug 378724: Null annotations are extremely hard to use in an existing project 
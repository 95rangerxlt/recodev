Hello,
I have an NPE while compiling this code :

public class C {
	
	public C(Class clazz)
	{
		 
	}
	
	public void error()
	{
		boolean test = false;
		int i = 1;
		
		new C(
		test
		? (i == 2
		   ? D.class
	       : E.class)
	    : null);
	}
	
	
	public class D{}
	public class E{}
	
}



I am using :

  Eclipse Java Development Tools Patch for Java 8 Support (BETA)		1.0.0.v20140205-0104_BETA_JAVA8
  Eclipse Plugin-in Development Environment Patch for Java 8 Support (BETA)	1.0.0.v20140205-0104_BETA_JAVA8
  Eclipse RCP Patch for Java 8 Support (BETA)					1.0.0.v20140205-0104_BETA_JAVA8



This is the stack :

java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.generateCode(ConditionalExpression.java:280)
	at org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.generateCode(ConditionalExpression.java:272)
	at org.eclipse.jdt.internal.compiler.ast.Statement.generateArguments(Statement.java:265)
	at org.eclipse.jdt.internal.compiler.ast.AllocationExpression.generateCode(AllocationExpression.java:210)
	at org.eclipse.jdt.internal.compiler.ast.Expression.generateCode(Expression.java:698)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:328)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:273)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:570)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:639)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:370)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1214)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:693)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1187)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:548)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:541)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:484)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:132)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

Hello,
I have an NPE while compiling this code :

public class C {
	
	public C(Class clazz)
	{
		 
	}
	
	public void error()
	{
		boolean test = false;
		int i = 1;
		
		new C(
		test
		? (i == 2
		   ? D.class
	       : E.class)
	    : null);
	}
	
	
	public class D{}
	public class E{}
	
}



I am using :

  Eclipse Java Development Tools Patch for Java 8 Support (BETA)		1.0.0.v20140205-0104_BETA_JAVA8
  Eclipse Plugin-in Development Environment Patch for Java 8 Support (BETA)	1.0.0.v20140205-0104_BETA_JAVA8
  Eclipse RCP Patch for Java 8 Support (BETA)					1.0.0.v20140205-0104_BETA_JAVA8



This is the stack :

java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.generateCode(ConditionalExpression.java:280)
	at org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.generateCode(ConditionalExpression.java:272)
	at org.eclipse.jdt.internal.compiler.ast.Statement.generateArguments(Statement.java:265)
	at org.eclipse.jdt.internal.compiler.ast.AllocationExpression.generateCode(AllocationExpression.java:210)
	at org.eclipse.jdt.internal.compiler.ast.Expression.generateCode(Expression.java:698)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:328)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:273)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:570)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:639)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:370)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1214)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:693)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1187)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:548)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:541)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:484)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:132)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)
Thanks, I have a fix - there was a gap in CE.isPolyExpression() that was covered
for by code elsewhere. In a recent cleanup and reorganization of that code, the
original gap has come re-exposed. Fix should be trivial and will follow.
Fix and tests released here: http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=0c70d1e0debf14f8c28e75a1e2f40d2fbafab00f
Hello,
I still have an NPE at the same line (but the stack is different). Should I post a new bug or continue this one ?
I am using now : 
  Eclipse Java Development Tools Patch for Java 8 Support (BETA)            1.0.0.v20140206-0106_BETA_JAVA8
  Eclipse Plugin-in Development Environment Patch for Java 8 Support (BETA) 1.0.0.v20140206-0106_BETA_JAVA8
  Eclipse RCP Patch for Java 8 Support (BETA)                               1.0.0.v20140206-0106_BETA_JAVA8




java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.generateCode(ConditionalExpression.java:280)
	at org.eclipse.jdt.internal.compiler.ast.Statement.generateArguments(Statement.java:265)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.generateCode(MessageSend.java:421)
	at org.eclipse.jdt.internal.compiler.ast.CastExpression.generateCode(CastExpression.java:454)
	at org.eclipse.jdt.internal.compiler.ast.ReturnStatement.generateCode(ReturnStatement.java:213)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:328)
	at org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration.generateCode(AbstractMethodDeclaration.java:273)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:570)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.generateCode(TypeDeclaration.java:639)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.generateCode(CompilationUnitDeclaration.java:370)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:1214)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:693)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1187)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:813)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:548)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:541)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:484)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:474)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:132)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)




with that piece of code :
import java.io.Serializable;
import java.util.List;


public class F {

	boolean b;
    public List<A> getLignes()
    {
    	return (List<A>) data(b ? (Serializable) get() : null);
    }
	
    
    public List<A> get()
    {
    	return null;
    }
    
    public <T extends Serializable> T data(T data)
    {
		return data;
    }
	
	
	public class A implements Serializable
	{
		
	}
}
(In reply to Mathieu Croizard from comment #3)
> Hello,
> I still have an NPE at the same line (but the stack is different). Should I
> post a new bug or continue this one ?

Thanks, This one is fine for the moment, if after analysis it is felt a
different one is required, I'll do so.

I get NPEs from two different stacks: (a) the one you reported and if
null annotation analysis is on from:

java.lang.NullPointerException
	at org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.analyse(NullAnnotationMatching.java:123)
	at org.eclipse.jdt.internal.compiler.ast.Statement.analyseOneArgument18(Statement.java:153)
	at org.eclipse.jdt.internal.compiler.ast.Statement.analyseArguments(Statement.java:122)
	at org.eclipse.jdt.internal.compiler.ast.MessageSend.analyseCode(MessageSend.java:177)
	at org.eclipse.jdt.internal.compiler.ast.CastExpression.analyseCode(CastExpression.java:71)
	at org.eclipse.jdt.internal.compiler.ast.ReturnStatement.analyseCode(ReturnStatement.java:83)
	at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.analyseCode(MethodDeclaration.java:128)
	at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.internalAnalyseCode(TypeDeclaration.java:741)


I'll investigate.
(In reply to Srikanth Sankaran from comment #4)

> Thanks, This one is fine for the moment, if after analysis it is felt a
> different one is required, I'll do so.

This is a different problem, but we will let it slide.

Stephan, eventual evaluation of conditional is bypassed due to:

InferenceContext18 infCtx = null;
			if (candidateMethod instanceof ParameterizedMethodBinding) {
				infCtx = invocation.getInferenceContext((ParameterizedMethodBinding) candidateMethod);
				if (infCtx != null) {
					if (infCtx.stepCompleted != InferenceContext18.TYPE_INFERRED) {
						// only work in the exact state of TYPE_INFERRED
						// - below we're not yet ready
						// - above we're already done-done
						return;
					}
Regression test here: 

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=97479fa13695f697962836d4fefd338d91a156e3

(Just a reminder that there are two problems one with null analysis enabled
and one without. Both could really be due to the same underlying reason)
Thanks, this test was highly valuable in that it revealed a hidden but wrong assumption in the inference: I used checks "expressionContext == VANILLA_CONTEXT" to test for contexts not providing a target type. This missed the case of cast contexts, which, too, don't strictly provide a target type.
As a result the inference in this example was never finished, because it fell in neither bucket: neither having a target type, nor being a vanilla context.

The bulk of my change is a refactoring of interface ExpressionContext into an enum (plus corresponding "import static" instead of "implements") - hurray, long live Java 5! :)

The payload is the introduction and usage of a new function ExpressionContext.definesTargetType().

One test now shows two more errors (javac only shows one of them but I hold that both are valid indeed).

Released via http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=1d1b85ba11568f78a124441d6eb86af75fb135ca


[1.8][compiler] NPE at org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.generateCode(ConditionalExpression.java:280)



Bug 427438 - [1.8][compiler] NPE at org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.generateCode(ConditionalExpression.java:280) - part two (comment 3 ff.) 

Junit for https://bugs.eclipse.org/bugs/show_bug.cgi?id=427438#c3 

Fixed Bug 427438 - [1.8][compiler] NPE at org.eclipse.jdt.internal.compiler.ast.ConditionalExpression.generateCode 
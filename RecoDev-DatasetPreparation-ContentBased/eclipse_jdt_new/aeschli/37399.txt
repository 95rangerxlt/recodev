import com.epiphany.shr.sf.ClusterSingletonStepped.SingletonStep;

After organize imports, this import is turned into:
import com.epiphany.shr.sf.ClusterSingletonStepped;

If it is not legal to have inner interfaces I appologize and I will flog the 
coder.  Otherwise, it appears that organize imports can potentially cause 
compiler errors that are hard to track down.  I run it, and things look ok, but 
part of my import is gone.

Interface definition:
public abstract class ClusterSingletonStepped extends ClusterSingleton
{
.....
public interface SingletonStep
.....
}

Thanks for looking at this.  Please let me know if I can add any additional 
information or answer any questions.

import com.epiphany.shr.sf.ClusterSingletonStepped.SingletonStep;

After organize imports, this import is turned into:
import com.epiphany.shr.sf.ClusterSingletonStepped;

If it is not legal to have inner interfaces I appologize and I will flog the 
coder.  Otherwise, it appears that organize imports can potentially cause 
compiler errors that are hard to track down.  I run it, and things look ok, but 
part of my import is gone.

Interface definition:
public abstract class ClusterSingletonStepped extends ClusterSingleton
{
.....
public interface SingletonStep
.....
}

Thanks for looking at this.  Please let me know if I can add any additional 
information or answer any questions.
Martin, please comment.
I thinks its perfectly legal to have inner intrefaces, and organize import
usually handles them correctly. Can you attach a code example that contains a
reference to the inner interface where organize import fails?
Created attachment 4838
Sample code that shows the failure

This is the simplest code that I can produce that exhibits the problem.  When I
hit ctrl-shift-o to organize imports, it removes the "...SingletonStep" import
line and three compiler errors are reported (class, and the first two methods).
fixed > 20030512

Thanks Jacob for the code example, that was a big help. It's a tricky case: If
you reference the inner interface in the class signature ('..implements
ClusterSingleton') an import is needed. If it is only referenced inside the
type, no import in required as it is an inner interface of the super type.

Added tests: ImportOrganizeTest.testVisibility_bug37299a, testVisibility_bug37299b



Organize Imports can remove required inner interfaces [code manipulation]



37399 Organize Imports can remove required inner interfaces [code manipulation] 
20050413

When you open a java editor on org.eclipse.swt.internal.win32.OS 9% of the time
to open (934ms in my profile) was taken in ProblemsLabelDecorator.getErrorTicks.
This is 20% of the time to open the outline.

STEPS
1) Reset the java perspective
2) Open  org.eclipse.swt.internal.win32.OS

Trace to follow

20050413

When you open a java editor on org.eclipse.swt.internal.win32.OS 9% of the time
to open (934ms in my profile) was taken in ProblemsLabelDecorator.getErrorTicks.
This is 20% of the time to open the outline.

STEPS
1) Reset the java perspective
2) Open  org.eclipse.swt.internal.win32.OS

Trace to follow
Created attachment 20009
Profile output
Martin, can you please investigate.

Tod, why does this block bug 89406. We haven't change anything here recentlt so
we didn't make it worth.
My performance tests are failing for the open/close editor (since 3.0) which is
Bug 89406 so I added all of the bugs to do with open/close as prereqs for the tests.

If there was a way for me to mark something as related rather than blocking  I
would have done that - I just want to keep the connection well defined.
the profile trace ends at the most interesting spot: What are the children of 
org.eclipse.jdt.ui.ProblemsLabelDecorator.getErrorTicksFromWorkingCopy()?

I tried to reproduce but coudn't. Do you have errors on the file or any other
markers? 
No - no errors. I'll see if nay can go any further.

Note this is with last builds build and you guys may have already fixed this.
This is not a problem in the current profiles I am taking. Feel free to close
this as FIXED.
in fact I made some improvements on error ticks. I wanted to annotate that in
this bug but I forgot


ProblemsLabelDecorator.getErrorTicks takes 9% of time to open a large editor

performance
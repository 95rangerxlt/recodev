Using build I200409140800.

Looking at bug 73922, I saw something strange in Search view.
Let's have following classes:
A.java:
  public class A {
    void foo() {}
  }
B.java:
  public class B {
	/**
	 * @see X#foo()
	 */
	void bar() {
		(new A()).foo();
	}
  }
Search at A.foo() references in project: Search view displays 2 potential
matches in B.bar() method! Expected: 1 potential match and 1 accurate match...

Check "Ignore potential matches" Search preferences and then I get one accurate
match in Search view, which is the expected result.

Replace X#foo() with A#foo() and search again: Search view now display correctly
 2 accurate matches...

Using build I200409140800.

Looking at bug 73922, I saw something strange in Search view.
Let's have following classes:
A.java:
  public class A {
    void foo() {}
  }
B.java:
  public class B {
	/**
	 * @see X#foo()
	 */
	void bar() {
		(new A()).foo();
	}
  }
Search at A.foo() references in project: Search view displays 2 potential
matches in B.bar() method! Expected: 1 potential match and 1 accurate match...

Check "Ignore potential matches" Search preferences and then I get one accurate
match in Search view, which is the expected result.

Replace X#foo() with A#foo() and search again: Search view now display correctly
 2 accurate matches...
fixed > 20050121


Search View displays potential match instead of accurate one [search]



73975 Search View displays potential match instead of accurate one [search] 
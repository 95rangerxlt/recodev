Build 20020123

I know it's a work in progress, but I was a bit confused by the "overrides" 
indicator in the content outline.  It seems to also include cases where a method 
is satisfying an interface requirement.  I wouldn't refer to this as a form of 
"overriding", but rather "implementing".  

To me, this indicator is saying "You're overriding superclass behaviour, so you 
better make sure to invoke the super method if applicable."  This doesn't hold 
for the "implementing a superinterface case".  Anyway, just wondering if this 
issue had been considered and what the reasoning was.

For an example, open class Thread, and note the override indicator on the run() 
method.

Build 20020123

I know it's a work in progress, but I was a bit confused by the "overrides" 
indicator in the content outline.  It seems to also include cases where a method 
is satisfying an interface requirement.  I wouldn't refer to this as a form of 
"overriding", but rather "implementing".  

To me, this indicator is saying "You're overriding superclass behaviour, so you 
better make sure to invoke the super method if applicable."  This doesn't hold 
for the "implementing a superinterface case".  Anyway, just wondering if this 
issue had been considered and what the reasoning was.

For an example, open class Thread, and note the override indicator on the run() 
method.
we were discussing showing a different indicator for direct interface 
implements.
the indicators for 'override' and 'implement' are now different.
in case of 'override' and 'implement' at the same time, 'override' is taken

>20020205


override indicator also includes interface "overrides"



Fixed bug 384320: [1.8][compiler] Syntax error while mixing type annotations & reference expressions. 

HEAD - bgu 138432 

added 18432 

bug 18432 

8432 override indicator also includes interface "overrides" 

8432 No JavaDoc Content Assist in default package 
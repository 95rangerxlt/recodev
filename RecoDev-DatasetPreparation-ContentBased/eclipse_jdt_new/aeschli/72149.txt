This is what I do:
-----------------------8<--------------------------------
DataOutputStream dos = new DataOutputStream(new ByteArrayOutputStream());
String param = "ksksk";
dos.write(param.length());
dos.writeBytes(param);
-----------------------8<--------------------------------

I select the 2 last statements.
CTRL+1
I select "Surround with 'try'(try catch block)"
I get a catch for Exception, and not IOException.

If I use the Source->Surround with try/catch Block, then I get it right...

This is what I do:
-----------------------8<--------------------------------
DataOutputStream dos = new DataOutputStream(new ByteArrayOutputStream());
String param = "ksksk";
dos.write(param.length());
dos.writeBytes(param);
-----------------------8<--------------------------------

I select the 2 last statements.
CTRL+1
I select "Surround with 'try'(try catch block)"
I get a catch for Exception, and not IOException.

If I use the Source->Surround with try/catch Block, then I get it right...
Quick Fix currently looks at problems in isolation. Fixing the first error 
only create a try/catch for the first line, fixing the second for the second 
line of the selection. In contrast Surround With is selection not error based.

Martin, one idea would be to have a quick fix that tries to fix all exception 
problems in one block. 
If quick fix does not work for multiple lines then maybe it should be disabled 
when more than a single line is selected.
Fixed > 20041008

Now we will take the full selection into accont when you invoke a surround with
quick fix.
Note that the starting point of the selection always has to be inside a
'uncaugth exception' error (otherwise you wouldn't get the quick fix). The end
of the selection has to be at a valid location (at the end of an other statement)


try-catch fix too wide [quick fix]



72149 try-catch fix too wide [quick fix] 

72149 try-catch fix too wide [quick fix] 

72149 try-catch fix too wide [quick fix] 
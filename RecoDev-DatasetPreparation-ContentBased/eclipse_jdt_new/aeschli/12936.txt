It is often the case that the knowledge that some constant string is non-localisable exists at the time the string is created.  In such cases it is convenient to mark the string with the special //$NON-NLS-x$ comment in order to have it passed over as a candidate for indirection to a resource bundle.  However, there is no easy way to do this, other than typing this comment by hand, copy and pasting it (updating the ordinal) or perhaps using a template which trivially expands to the NON-NLS comment.

It would be nice to have a way to hint at the status of a string during editing.  Perhaps strings could be syntax highlighted (e.g. coloured) in different ways depending on whether NON-NLS comments existed for them, and it would be great if their state could be toggled with a context menu option.

Another aspect of convenience, would be to have the editor keep track of the string ordinals and which strings are marked as not externalisable.  If I insert, remove or reorder strings on the line, it would be great to have the comments update to reflect the new ordinals of the non-externaliable strings.

Finally, it is not possible to use templates at present to allow new NON-NLS comments to be quickly added at the end of a line.  This works for the first case, but the template expansion mechanism is sensitive to the cursor being within a line comment, so attempting to add 2nd and subsequent comments to the right of the 1st will not work.

It is often the case that the knowledge that some constant string is non-localisable exists at the time the string is created.  In such cases it is convenient to mark the string with the special //$NON-NLS-x$ comment in order to have it passed over as a candidate for indirection to a resource bundle.  However, there is no easy way to do this, other than typing this comment by hand, copy and pasting it (updating the ordinal) or perhaps using a template which trivially expands to the NON-NLS comment.

It would be nice to have a way to hint at the status of a string during editing.  Perhaps strings could be syntax highlighted (e.g. coloured) in different ways depending on whether NON-NLS comments existed for them, and it would be great if their state could be toggled with a context menu option.

Another aspect of convenience, would be to have the editor keep track of the string ordinals and which strings are marked as not externalisable.  If I insert, remove or reorder strings on the line, it would be great to have the comments update to reflect the new ordinals of the non-externaliable strings.

Finally, it is not possible to use templates at present to allow new NON-NLS comments to be quickly added at the end of a line.  This works for the first case, but the template expansion mechanism is sensitive to the cursor being within a line comment, so attempting to add 2nd and subsequent comments to the right of the 1st will not work.
just having gone through a string externalization pass I fully agree that the 
tagging on Non-NLS strings could be improved. Templates can help me with 
inserting the string but we should do more. We could also provide special code 
assist support.

The compiler supports an option to mark non-externalized strings with a 
warning. Quick fix could provide support to fix this warnings by adding the NON-
NLS tag.

The syntax coloring proposal is also an excellent one, but we might not be able 
to do it for 2.0.

Moving to Martin for consideration as another quick fix opportunity
added a quick fix correction that opens the nls wizard
> 20020418


UI to easily create or manage //$NON-NLS-x$ markers



HEAD - Fix for 129361 

HEAD - Fix for 129361 

129366 Update the JDT wizard images to use the PNG format 
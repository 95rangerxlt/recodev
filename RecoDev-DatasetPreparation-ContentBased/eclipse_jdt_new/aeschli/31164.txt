Build: I20030206

Start with the following CU:

public class A {
	public void foo() {
		Comparable comparable = new Comparable(
	}
}

Invoking code assist after the open bracket yields:

public class A {
	public void foo() {
		Comparable comparable = new Comparable() {
			public int compareTo(Object arg0);
		}
	}
}

Which is invalid, because the new method has a ; instead of a method body.

Build: I20030206

Start with the following CU:

public class A {
	public void foo() {
		Comparable comparable = new Comparable(
	}
}

Invoking code assist after the open bracket yields:

public class A {
	public void foo() {
		Comparable comparable = new Comparable() {
			public int compareTo(Object arg0);
		}
	}
}

Which is invalid, because the new method has a ; instead of a method body.
Using the latest integration build I get

public class A {
	public void foo() {
		Comparable comparable = new Comparable() {
			public int compareTo(Object o) {
				// TODO Auto-generated method stub

			}
		};
	}
}

which is a little bit better, but still wrong since the return statement is 
missing.

Martin, can you please have a look.
fixed > 20030207
Not fixed in build I20030214.

Start with:

public void foo() {
	Runnable r = new Runnable(
}

Code assist after open bracket yields:

public void foo() {
	Runnable r = new Runnable() {
		public void run();
	}
}

It seems to work for methods with a return type, but not on methods with void
return type.

thanks for reporting. The problem shows up when the new method stub template 
does only contain the ${body_statement} variable

fixed > 20030217


code assist on anonymous inner class gives abstract method declarations



31164 code assist on anonymous inner class gives abstract method declarations 

31164 
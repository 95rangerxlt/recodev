It would be nice to be able to store location of javadoc for your
sources/project (.classpath/.project) and libraries inside the .classpath file.
Therefore, it should be possible to store relative locations, like with source
locations.

We're using an ant script to generate all javadoc somewhere in a folder under
the project root, so the javadoc location can be shared between all users.

It would be nice to be able to store location of javadoc for your
sources/project (.classpath/.project) and libraries inside the .classpath file.
Therefore, it should be possible to store relative locations, like with source
locations.

We're using an ant script to generate all javadoc somewhere in a folder under
the project root, so the javadoc location can be shared between all users.
JDT/Core is currently unaware of javadocs. Maybe post 2.1
Reconsidering for 3.1
*** Bug 25868 has been marked as a duplicate of this bug. ***
*** Bug 53033 has been marked as a duplicate of this bug. ***
*** Bug 67024 has been marked as a duplicate of this bug. ***
Just release classpath attributes support. See JDT Core build notes.
Moving to JDT UI to use this support.
Martin, we should discuss this with Darin at EclipseCon how we can leverage this
for storing Javadoc locations.
I don't believe the classpath is the right place to store javadoc entries for 
system libraries. A JRE can exist without a Java project (new empty 
workspace), and the information should be stored with the JRE.
See bug 86386 in JDT Debug that is to address this issue.
System libraries should still store their Javadoc locations themselves.

But we will give up our store of Javadoc locations and use an classpath attribute.
 
Will do it as soon as the JavaCore.newXXX APIs are finalized. 



Javadoc locations are now stored in the classpath attributes > 20040323

See bug 88859 for a request for a constant in jdt.core for the attribute name.
Filed bug 88864 against jdt.launching to update the JRE container to return
classpath entries with the javadoc attribute set.


relative javadoc locations stored in .classpath


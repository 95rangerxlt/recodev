Given this simple class:

package whatever;
public class ShowBroken extends Thread {
    ShowBroken() {
        name = getName();
    }
}

Placing the cursor on the variable 'name'.  Notice that quick assist only offers
'Local Rename' as an option.  Changing the variable to 'foo' will convince quick
assist to offer: 

Create local variable 'foo'
Create field 'foo'
Create parameter 'foo'
Remove assignment
Local Rename

The variable 'name' is defined as a private member of Thread and should not be
visible to class ShowBroken.

Given this simple class:

package whatever;
public class ShowBroken extends Thread {
    ShowBroken() {
        name = getName();
    }
}

Placing the cursor on the variable 'name'.  Notice that quick assist only offers
'Local Rename' as an option.  Changing the variable to 'foo' will convince quick
assist to offer: 

Create local variable 'foo'
Create field 'foo'
Create parameter 'foo'
Remove assignment
Local Rename

The variable 'name' is defined as a private member of Thread and should not be
visible to class ShowBroken.
A bit more info:

Given these two classes:

public class BaseClass {
    private String name = "base";
    public String getName() {
        return name;
    }
}

public class Extended extends BaseClass {
    private void aMethod() {
        name = getName();
    }
}

An error will be highlighted in Extended.aMethod() on the variable name.  If you
quick assist you will not be given any 'create' fixes, but instead are offed to:

  Change visibility of 'name' to 'protected'
  Local Rename

I guess I would expect some more option like Create local variable, Create
parameter, and create field in addition to those offered.
fixed > 20040417


Quick Assist failure



51566 Quick Assist failure 
20030211

All uix fix/assist proposals have a descriptive label
'Remove xx', 'Change to..'

The surround template proposals should follow this rule as well.
e.g.
'Surround with {0} template'

20030211

All uix fix/assist proposals have a descriptive label
'Remove xx', 'Change to..'

The surround template proposals should follow this rule as well.
e.g.
'Surround with {0} template'
We discussed this already.
Those are quick templates. Never use two different names/icons for the same
thing  - that's a UI rule.

Either remove the surround feature from the quick fix key, or change the name 
to be compatible with quick assists.

Push the bug report to me if you don't have time for it.
Moving to MA - still consider it a bug to use different labels for same thing

fixed > 20030214


Quick assist surround proposals need different label



Combined fix for Bug 331649 - [compiler][null] consider null annotations for fields Bug 382789 - [compiler][null] warn when syntactically-nonnull   expression is compared against null Bug 380896 - [compiler][null] Enum constants not recognised as being   NonNull. Bug 383368 - [compiler][null] syntactic null analysis for field   references Bug 388630 - @NonNull diagnostics at line 0 

Combined fix for Bug 331649 - [compiler][null] consider null annotations for fields Bug 382789 - [compiler][null] warn when syntactically-nonnull   expression is compared against null Bug 380896 - [compiler][null] Enum constants not recognised as being   NonNull. Bug 383368 - [compiler][null] syntactic null analysis for field   references Bug 388630 - @NonNull diagnostics at line 0 

Bug 331649 - [compiler][null] consider null annotations for fields Document effect of @NonNullByDefault on fields. 

Bug 331649 - [compiler][null] consider null annotations for fields Fixed NPE reported in comment 61 by fixing bug 380896 

Bug 331649 - [compiler][null] consider null annotations for fields - treat "== nonnull" like "!= null" (test & fix) 

Bug 331649 - [compiler][null] consider null annotations for fields - apply nullness default to binary fields (test & fix) 

Bug 331649 - [compiler][null] consider null annotations for fields - improve message for a case reported in commen 47 

Bug 331649 - [compiler][null] consider null annotations for fields - align error location, see comment 55 

Test & fix for Bug 331649 - [compiler][null] consider null annotations for fields Mark initialized final field as effectively non-null. 

Bug 331649 - [compiler][null] consider null annotations for fields Fix detection of initialization via this.f reference. 

Fixed Bug 331649 - [compiler][null] consider null annotations for fields + @NonNull fields: check initialization and assignment   - upon read access take non-nullness for granted + @Nullable fields: pessimistically warn on *every* dereference - Do not perform any flow analysis for fields 

Bug 331649 - [compiler][null] consider null annotations for fields Fixed NPE reported in comment 61 by fixing bug 380896 

Bug 331649 - [compiler][null] consider null annotations for fields - treat "== nonnull" like "!= null" (test & fix) 

Bug 331649 - [compiler][null] consider null annotations for fields - apply nullness default to binary fields (test & fix) 

Bug 331649 - [compiler][null] consider null annotations for fields - improve message for a case reported in commen 47 

Bug 331649 - [compiler][null] consider null annotations for fields - align error location, see comment 55 

Test & fix for Bug 331649 - [compiler][null] consider null annotations for fields Mark initialized final field as effectively non-null. 

Bug 331649 - [compiler][null] consider null annotations for fields Fix detection of initialization via this.f reference. 

Fixed Bug 331649 - [compiler][null] consider null annotations for fields + @NonNull fields: check initialization and assignment   - upon read access take non-nullness for granted + @Nullable fields: pessimistically warn on *every* dereference - Do not perform any flow analysis for fields 

Revert source-range part of commit 0b82fa47eb78f9f59638ad9671b3e2a9d9c28ff6 on behalf of https://bugs.eclipse.org/bugs/show_bug.cgi?id=331649#c11 

https://bugs.eclipse.org/bugs/show_bug.cgi?id=331649#c8 nonnull ConditionalExpression 

fix for https://bugs.eclipse.org/bugs/show_bug.cgi?id=331649#c9 - item (8) 

Test & fix for https://bugs.eclipse.org/bugs/show_bug.cgi?id=331649#c3 item (7) 

Initial implementation for Bug 331649: [compiler][null] consider null annotations for fields 

31649 Quick assist surround proposals need different label 
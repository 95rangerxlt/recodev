Preference pages to convert:
Java > Build Path > User Libraries
Java > Code Style > *
Java > Editor > Templates


Please convert your import and export options to the new support available off
the File > Import/Export > Preferences  wizard.

For an example see the Preference Transfer ext. pt. (no code necessary)
org.eclipse.ui\schema\preferenceTransfer.exsd

and also if you need to do preference migration or modifications on import see:
org.eclipse.core.runtime\schema\preferences.exsd  (modifier element)

Preference pages to convert:
Java > Build Path > User Libraries
Java > Code Style > *
Java > Editor > Templates


Please convert your import and export options to the new support available off
the File > Import/Export > Preferences  wizard.

For an example see the Preference Transfer ext. pt. (no code necessary)
org.eclipse.ui\schema\preferenceTransfer.exsd

and also if you need to do preference migration or modifications on import see:
org.eclipse.core.runtime\schema\preferences.exsd  (modifier element)
Martin, we already have this on the list for M7. Right ?
yes, that's on my item list
I added the first transfers for JDT. There are still some more I would like to
add; I'm waiting for resolution of bug 91298.

I guess you wrote this bug to have the import/export buttons removed.

- I currently can't define a transfer for 'User Libraries': The keys are not
static as they contain the name of the library
    'org.eclipse.jdt.core.userLibrary.Apache=<?xml version....'
A solution would be to allow wildcards in keys:
 <mapping scope="instance">
  <entry node="org.eclipse.jdt.core" keys="org.eclipse.jdt.core.userLibrary.*"/>
 </mapping>

- code templates, editor templates and code formatter import/export all support
exporting single entries or a selection of entries. Code and editor templates
also have the problem that what we store in the key is only the delta to the
default settings.
- another aspect is that all these settings also can be configured project
specificly. Our import/export buttons allow you to store settings from either
project or instance and import them whereever you want (different project or
instance). The preference transfer page only would limit us to export/import on
instance settings.

I would prefer to keep the specific import/export buttons to not loose
functionality. Dirk, what is your opinion?
It is OK with me to keep the page specific import/export functionality since it
is especially useful to transfer settings from workspace to project specific
settings. This scenario isn't supported with new import/export and removing it
so late might cause user confusion.
After discussions in the team we decided to currently offer only one transfer
'Java Development Preferences'

> 20050414


[preferences] Convert preferences import/export to File > import/export



91149 [preferences] Convert preferences import/export to File > import/export 
Version: 3.1.0
Build id: I20050509-2010

Steps to reproduce:
1.) Create a new Class Test
2.) Open Quick Fix on the class Name: Only Rename in File is shown
3.) add "implements MouseListener" to the class
4.) Open Quick Fix on the class Name: Now you got "Add JUnit Libraries"
    as an entry of the Quick Fix list

Actual Results:
"Add JUnit Libraries" is not listed on the Quick Fix List at first.

Expected Results:
"Add JUnit Libraries" is listed on the Quick Fix List at first.

Another issue I noticed is that once you have selected "Add JUnit Libraries" the
editor gets dirty although nothing has changed. This is ok to support an "Undo"
Operation. But performing "Undo" after "Add JUnit Libraries" does not remove
junit from the build path.

Regards,
Ben

Version: 3.1.0
Build id: I20050509-2010

Steps to reproduce:
1.) Create a new Class Test
2.) Open Quick Fix on the class Name: Only Rename in File is shown
3.) add "implements MouseListener" to the class
4.) Open Quick Fix on the class Name: Now you got "Add JUnit Libraries"
    as an entry of the Quick Fix list

Actual Results:
"Add JUnit Libraries" is not listed on the Quick Fix List at first.

Expected Results:
"Add JUnit Libraries" is listed on the Quick Fix List at first.

Another issue I noticed is that once you have selected "Add JUnit Libraries" the
editor gets dirty although nothing has changed. This is ok to support an "Undo"
Operation. But performing "Undo" after "Add JUnit Libraries" does not remove
junit from the build path.

Regards,
Ben
the 'Add JUnit Libraries' quick fix is contributed by the junit plugin
My take is that:

1) The user doesn't actually _want_ quick fix enabled at first: they just
created a class named Test, that's all.  It's not until they want to reference
an undefined class named test that the quick fix should kick in.

2) Just because the compiler has flagged _some_ error about a class named Test
should _not_ trigger the quick fix.

Based on these, I'll submit a patch that is more restrictive based on the
problem id.

I'll open new bugs for the other two mentioned issues:

1) Why does "Add JUnit Libraries" intentionally dirty the current editor?
2) "Add JUnit Libraries" should be undoable.
Created attachment 21819
Patch

This patch prevents "Add JUnit Libraries" from being proposed unless the
problem is an undefined type or unfound import.  The current code makes it
clear that was the original intent.
This only happens when the name of the class is Test. 

Therefore I opt to postpone this to 3.2. Objections ?
None here.
Reviewed and released patch by David

Fixed > 20050628


[JUnit] Some issues with "Add JUnit Libraries"



94287 [JUnit] Some issues with "Add JUnit Libraries" 
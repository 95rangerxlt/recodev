3.1-RC1 test pass

- have two CUs, SuperType and SubType
- configure errors such that a missing @Override annotation is an error
- pull up a method from SubType to SuperType
  - choose not to delete the original method in SubType

-> no warnings issued
-> refactoring results in an error in SubType, as the method overrides the
pulled up copy

expected one of those two:
- a non-fatal error is issued before completing the refactoring
- the refactoring offers to adjust the code by adding the annotation

3.1-RC1 test pass

- have two CUs, SuperType and SubType
- configure errors such that a missing @Override annotation is an error
- pull up a method from SubType to SuperType
  - choose not to delete the original method in SubType

-> no warnings issued
-> refactoring results in an error in SubType, as the method overrides the
pulled up copy

expected one of those two:
- a non-fatal error is issued before completing the refactoring
- the refactoring offers to adjust the code by adding the annotation
Also annoying, but not critical.
This is the reverse of bug 112603.
See also bug 114551: The @Override annotation should only be generated in 5.0
projects and only if the preference on the Code Style page is enabled.
Fixed in HEAD > 20060111


[refactoring] Pull Up creates error when not deleting method and enable @Override errors



97215 [refactoring] Pull Up creates error when not deleting method and enable @Override errors 
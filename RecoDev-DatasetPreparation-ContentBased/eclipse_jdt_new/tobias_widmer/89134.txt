Build 20050323

1. I have an interface with two methods.
2. I created an abstract implementation that implements one of the interface
methods (leaving one unimplemented) and also defines a new abstract method.
3. I created a subclass of the abstract implementation with "Inhereted abstract
methods" enabled.

The first problem - the new class was created with only the unimplemented method
from the interface. Naturally, I got a complilation error telling me I had to
implement the abstract method from the superclass. But the quick fix to "Add
Unimplemented Methods" still didn't add the method (it did nothing).

The second problem - I then tried to add the method by right clicking on my new
class and choosing Source > Override/Implement Methods. The dialog didn't appear
on the screen, but the following exception was dumped to the log:

java.lang.ClassCastException: org.eclipse.ui.dialogs.ContainerCheckedTreeViewer
at
org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog$OverrideMethodContentProvider.inputChanged(OverrideMethodDialog.java:186)
at org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:244)
at org.eclipse.jface.viewers.StructuredViewer.setInput(StructuredViewer.java:1324)
at
org.eclipse.ui.dialogs.CheckedTreeSelectionDialog.createTreeViewer(CheckedTreeSelectionDialog.java:316)
at
org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog.createTreeViewer(OverrideMethodDialog.java:356)
at
org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog.createDialogArea(SourceActionDialog.java:358)
at org.eclipse.jface.dialogs.Dialog.createContents(Dialog.java:685)
at org.eclipse.jface.window.Window.create(Window.java:416)
at org.eclipse.jface.dialogs.Dialog.create(Dialog.java:994)
at
org.eclipse.ui.dialogs.SelectionStatusDialog.create(SelectionStatusDialog.java:149)
at
org.eclipse.ui.dialogs.CheckedTreeSelectionDialog.access$superCreate(CheckedTreeSelectionDialog.java:232)
at
org.eclipse.ui.dialogs.CheckedTreeSelectionDialog.access$0(CheckedTreeSelectionDialog.java:231)
at
org.eclipse.ui.dialogs.CheckedTreeSelectionDialog$1.run(CheckedTreeSelectionDialog.java:257)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
at
org.eclipse.ui.dialogs.CheckedTreeSelectionDialog.create(CheckedTreeSelectionDialog.java:255)
at
org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog.create(SourceActionDialog.java:501)
at org.eclipse.jface.window.Window.open(Window.java:768)
at
org.eclipse.ui.dialogs.CheckedTreeSelectionDialog.open(CheckedTreeSelectionDialog.java:227)
at
org.eclipse.jdt.ui.actions.OverrideMethodsAction.run(OverrideMethodsAction.java:199)
at
org.eclipse.jdt.ui.actions.OverrideMethodsAction.run(OverrideMethodsAction.java:157)
at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:212)
at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:188)
at org.eclipse.jface.action.Action.runWithEvent(Action.java:1003)
at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:557)
at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:507)
at
org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:421)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1012)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2778)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2472)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1571)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1535)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:312)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)
at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:228)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:338)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:151)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:585)
at org.eclipse.core.launcher.Main.invokeFramework(Main.java:268)
at org.eclipse.core.launcher.Main.basicRun(Main.java:260)
at org.eclipse.core.launcher.Main.run(Main.java:887)
at org.eclipse.core.launcher.Main.main(Main.java:871)

Build 20050323

1. I have an interface with two methods.
2. I created an abstract implementation that implements one of the interface
methods (leaving one unimplemented) and also defines a new abstract method.
3. I created a subclass of the abstract implementation with "Inhereted abstract
methods" enabled.

The first problem - the new class was created with only the unimplemented method
from the interface. Naturally, I got a complilation error telling me I had to
implement the abstract method from the superclass. But the quick fix to "Add
Unimplemented Methods" still didn't add the method (it did nothing).

The second problem - I then tried to add the method by right clicking on my new
class and choosing Source > Override/Implement Methods. The dialog didn't appear
on the screen, but the following exception was dumped to the log:

java.lang.ClassCastException: org.eclipse.ui.dialogs.ContainerCheckedTreeViewer
at
org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog$OverrideMethodContentProvider.inputChanged(OverrideMethodDialog.java:186)
at org.eclipse.jface.viewers.ContentViewer.setInput(ContentViewer.java:244)
at org.eclipse.jface.viewers.StructuredViewer.setInput(StructuredViewer.java:1324)
at
org.eclipse.ui.dialogs.CheckedTreeSelectionDialog.createTreeViewer(CheckedTreeSelectionDialog.java:316)
at
org.eclipse.jdt.internal.ui.dialogs.OverrideMethodDialog.createTreeViewer(OverrideMethodDialog.java:356)
at
org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog.createDialogArea(SourceActionDialog.java:358)
at org.eclipse.jface.dialogs.Dialog.createContents(Dialog.java:685)
at org.eclipse.jface.window.Window.create(Window.java:416)
at org.eclipse.jface.dialogs.Dialog.create(Dialog.java:994)
at
org.eclipse.ui.dialogs.SelectionStatusDialog.create(SelectionStatusDialog.java:149)
at
org.eclipse.ui.dialogs.CheckedTreeSelectionDialog.access$superCreate(CheckedTreeSelectionDialog.java:232)
at
org.eclipse.ui.dialogs.CheckedTreeSelectionDialog.access$0(CheckedTreeSelectionDialog.java:231)
at
org.eclipse.ui.dialogs.CheckedTreeSelectionDialog$1.run(CheckedTreeSelectionDialog.java:257)
at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:69)
at
org.eclipse.ui.dialogs.CheckedTreeSelectionDialog.create(CheckedTreeSelectionDialog.java:255)
at
org.eclipse.jdt.internal.ui.dialogs.SourceActionDialog.create(SourceActionDialog.java:501)
at org.eclipse.jface.window.Window.open(Window.java:768)
at
org.eclipse.ui.dialogs.CheckedTreeSelectionDialog.open(CheckedTreeSelectionDialog.java:227)
at
org.eclipse.jdt.ui.actions.OverrideMethodsAction.run(OverrideMethodsAction.java:199)
at
org.eclipse.jdt.ui.actions.OverrideMethodsAction.run(OverrideMethodsAction.java:157)
at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:212)
at
org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:188)
at org.eclipse.jface.action.Action.runWithEvent(Action.java:1003)
at
org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:557)
at
org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:507)
at
org.eclipse.jface.action.ActionContributionItem$6.handleEvent(ActionContributionItem.java:421)
at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:82)
at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1012)
at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:2778)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2472)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1571)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1535)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:312)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:143)
at org.eclipse.ui.internal.ide.IDEApplication.run(IDEApplication.java:103)
at
org.eclipse.core.internal.runtime.PlatformActivator$1.run(PlatformActivator.java:228)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:338)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:151)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:585)
at org.eclipse.core.launcher.Main.invokeFramework(Main.java:268)
at org.eclipse.core.launcher.Main.basicRun(Main.java:260)
at org.eclipse.core.launcher.Main.run(Main.java:887)
at org.eclipse.core.launcher.Main.main(Main.java:871)
After manually adding the unimplemented method, I have another clue:

The abstract method from the superclass has an SWT Composite as a parameter and
a return value. The plug-in I was creating the new class in references the
plugin which defines the abstract implementation, but it didn't yet reference
the UI plugin.

So the failure here could be related to the fact that the import it needed to
add couldn't be found?
After adding the required plug-in dependency, I was able to add unimplemented
methods.
The clas cast exception got fixed (see bug 88941).

Tobias, can you pleaae investigate the problem in the wizard and move to PR to
Martin for the quick fix if they are unrelated.
Verified that both problems are fixed in the M6 candidate. The equivalent 
QuickFix also works, since both features share the same code (StubUtility2)


Can't add unimplemented method from abstract superclass


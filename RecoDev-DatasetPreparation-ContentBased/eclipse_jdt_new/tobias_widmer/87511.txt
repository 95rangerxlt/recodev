The generation of the serial ID runs a VM. This process appears in the debug 
view, however the process is complete the entry is not removed from the debug 
view nor can it be removed manually.

Side questions:
- why do we need to run a VM?
- why can't that be done in a background job?

The generation of the serial ID runs a VM. This process appears in the debug 
view, however the process is complete the entry is not removed from the debug 
view nor can it be removed manually.

Side questions:
- why do we need to run a VM?
- why can't that be done in a background job?
Pascal, I'm confused - who's launching a VM to create a serial ID? Is this 
really a debug issue?
I entered against Debug because the visible part of the pb was that I was stuck
with an undeletable entry in the debug view. However it seems that the process
is created by JDT UI as part of the quickfix to generate serial IDs for classes.

I was using build I20050308-0835.
I locked up in an infinite loop when attempting to generate a serial ID, which 
is noted by bug 87569.

2XMFULLTHDDUMP Full thread dump J9SE VM (J2RE 1.4.2 IBM J9 2.2 Windows XP x86-
32 build 20040916_0908_lHdSMR, native threads):
3XMTHREADINFO      "main" (TID:0x0009C600, sys_thread_t:0x000359FC, state:CW, 
native ID:0x00000CA0) prio=6
4XESTACKTRACE          at java/lang/Throwable.printStackTrace
(Throwable.java:248)
4XESTACKTRACE          at 
org/eclipse/core/runtime/CoreException.printStackTrace(CoreException.java:94)
4XESTACKTRACE          at 
org/eclipse/core/runtime/adaptor/EclipseLog.getStackTrace(EclipseLog.java:316)
4XESTACKTRACE          at 
org/eclipse/core/runtime/adaptor/EclipseLog.writeStack(EclipseLog.java:372)
4XESTACKTRACE          at org/eclipse/core/runtime/adaptor/EclipseLog.writeLog
(EclipseLog.java:337)
4XESTACKTRACE          at org/eclipse/core/runtime/adaptor/EclipseLog.log
(EclipseLog.java:208)
4XESTACKTRACE          at 
org/eclipse/core/internal/runtime/PlatformLogWriter.logging
(PlatformLogWriter.java:35)
4XESTACKTRACE          at 
org/eclipse/core/internal/runtime/InternalPlatform$1.run
(InternalPlatform.java:831)
4XESTACKTRACE          at 
org/eclipse/core/internal/runtime/InternalPlatform.run
(InternalPlatform.java:1015)
4XESTACKTRACE          at 
org/eclipse/core/internal/runtime/InternalPlatform.log
(InternalPlatform.java:834)
4XESTACKTRACE          at org/eclipse/core/internal/runtime/Log.log
(Log.java:56)
4XESTACKTRACE          at org/eclipse/debug/internal/ui/DebugUIPlugin.log
(DebugUIPlugin.java:497)
4XESTACKTRACE          at org/eclipse/debug/internal/ui/DebugUIPlugin.log
(DebugUIPlugin.java:506)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImageKey
(DefaultLabelProvider.java:133)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:57)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage
(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage
(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescripto
r(DebugElementHelper.java:55)
4XESTACKTRACE          at 
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor
(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:61)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage
(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage
(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescripto
r(DebugElementHelper.java:55)
4XESTACKTRACE          at 
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor
(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:61)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage
(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage
(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescripto
r(DebugElementHelper.java:55)
4XESTACKTRACE          at 
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor
(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:61)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage
(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage
(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescripto
r(DebugElementHelper.java:55)
4XESTACKTRACE          at 
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor
(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:61)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage
(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage
(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescripto
r(DebugElementHelper.java:55)
4XESTACKTRACE          at 
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor
(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:61)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getDefaultImage
(DelegatingModelPresentation.java:198)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DelegatingModelPresentation.getImage
(DelegatingModelPresentation.java:150)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/views/launch/DebugElementHelper.getImageDescripto
r(DebugElementHelper.java:55)
4XESTACKTRACE          at 
org/eclipse/debug/ui/DebugElementWorkbenchAdapter.getImageDescriptor
(DebugElementWorkbenchAdapter.java:37)
4XESTACKTRACE          at 
org/eclipse/debug/internal/ui/DefaultLabelProvider.getImage
(DefaultLabelProvider.java:61)
With the fix to 87569, this is still a problem. The launch does not add 
targets/processes and thus does not register as terminated, and cannot be 
removed. 

Ideally, the launch would not appear at all (it is intended to be private).
Tobias, there are two possible solutions to this bug:

(1) The "serial launcher" could register an IProcess with the launch which 
would allow it to show as "terminated" and be removed by the user. In this 
case, you should read from the IProcess's IStreamsProxy rather than the 
java.lang.Process directly. Note, in this case, the user would also see the 
console output.

(2) We would need to new add suppot the debug platform to allow a launch to be 
unregistered/hidden from the debug view.

Which is the better solution for you?
(2) is definitely the better solution. Showing output on the console during a 
quickfix is not an option. It would be good to introduce a "private" attribute 
for launches similar to the already existing one for launch configurations.
Ah. We already have support for this :-) See bug 67439.

The SerialVersionHashProposal should use the alternate 
ILaunchConfiguration.launch(...) method to specify that the launch should not 
be registered.
(NOTE, you need the latest debug code from HEAD to avoid the infinite loop 
problem in bug 87569).
Fixed > 20050316


Java serialization execution can not be removed from the debug view



87511 Java serialization execution can not be removed from the debug view 
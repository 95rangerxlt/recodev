I use Sun JDK 1.4.2 to run Eclipse 3.1 200409140800 and Sun JDK 1.5.0 RC to run
my application. Eclipse is configured to compile for JDK 1.5. I get error
message "Unsupported major.minor version 49.0" when I try to use "Add generated
serial version ID" quickfix for the following class

------------
package test.cheetah;
public class Test implements java.io.Serializable {
}
------------

I use Sun JDK 1.4.2 to run Eclipse 3.1 200409140800 and Sun JDK 1.5.0 RC to run
my application. Eclipse is configured to compile for JDK 1.5. I get error
message "Unsupported major.minor version 49.0" when I try to use "Add generated
serial version ID" quickfix for the following class

------------
package test.cheetah;
public class Test implements java.io.Serializable {
}
------------
Tobias, a clear indication that we have to start a second VM. The problem is 
that the class file we try to load is compiled for 1.5. These class files 
can't be loaded into a 1.4 VM.

Would be nice to get this fixed for M2. But if to tight push it to M3.
Just realized that this problem can lead to much more severe results. For
example, guess what happens if you compile the following class for JDK 1.4 and
try to add generated serial ID to it?

------------
package test.cheetah;
public class Test implements java.io.Serializable {
   static { System.exit(-1); }
}
------------

I'm sure you guessed it right -- Eclipse just quits! See bug 60860 for other
less obvious but equally disastrous ways to crash Eclipse using custom code. 

I think it also worth checking whether there are other places where JDT loads
custom code into Eclipse VM.


Serial version calculation now launches a separate VM
Fixed > 20041020


Unsupported major.minor version 49.0 during quick fix.



Serial version calculation launches a separate VM Fixes: 74022 Unsupported major.minor version 49.0 during quick fix 75391 quickfix generation of serialUID failes 75660 generated serialVersionUID is always 1L 73296 Add a preference to specify comment for generated serialVersionUID fields 
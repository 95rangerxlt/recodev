M4 test pass (I20041214-2000-gtk)

1. have the type below
2. move type 'Inner' to its own CU.

-> There are two identical warning messages (should only be one!)
-> The warning says that fObject is made package visible, which is not necessary

---------- snip ----------

package com.example.m4testing;


public class Test {
	
	static class Inner {
		private Object fObject;

		public boolean check() {
			return true;
		}

		public Object get() {
			return fObject;
		}

		public void set(Object object) {
			fObject= object;
		}
		
	}
	
	static class Other {
		
	}
	
	void method(Inner inner, Other other) {
		if (localCheck()) {
			if (inner.check()) {
				inner.set(inner.get());
			}
		}
	}
	
	private boolean localCheck() {
		return true;
	}

	public void caller() {
		Inner inner= new Inner();
		
		method(inner, new Other());
	}
}

M4 test pass (I20041214-2000-gtk)

1. have the type below
2. move type 'Inner' to its own CU.

-> There are two identical warning messages (should only be one!)
-> The warning says that fObject is made package visible, which is not necessary

---------- snip ----------

package com.example.m4testing;


public class Test {
	
	static class Inner {
		private Object fObject;

		public boolean check() {
			return true;
		}

		public Object get() {
			return fObject;
		}

		public void set(Object object) {
			fObject= object;
		}
		
	}
	
	static class Other {
		
	}
	
	void method(Inner inner, Other other) {
		if (localCheck()) {
			if (inner.check()) {
				inner.set(inner.get());
			}
		}
	}
	
	private boolean localCheck() {
		return true;
	}

	public void caller() {
		Inner inner= new Inner();
		
		method(inner, new Other());
	}
}
Tobias, 

can you please comment.
- The two warning messages result from a superfluos visibility rewrite
- The visibility adjustment is a bug in the heuristics to compute the 
visibility threshold (probably due to the fact that both classes are in the 
same CU)
Fixed > 20050201


move inner type: unnecessarily changes visibility of private field


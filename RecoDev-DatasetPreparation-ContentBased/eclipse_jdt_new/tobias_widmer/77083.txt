Create a class like this:

package foo;
public class OuterClass {
	static class InnerClass{
		InnerInnerClass myInnerInner;
		class InnerInnerClass{
		}
	}
}

Apply "move member type to new file" on InnerClass. The new InnerClass top level
class will get look like this:

package foo;
import foo.OuterClass.InnerClass.InnerInnerClass;
class InnerClass{
	InnerInnerClass myInnerInner;
	class InnerInnerClass{	
	}
}

3.1M2, W2K

Create a class like this:

package foo;
public class OuterClass {
	static class InnerClass{
		InnerInnerClass myInnerInner;
		class InnerInnerClass{
		}
	}
}

Apply "move member type to new file" on InnerClass. The new InnerClass top level
class will get look like this:

package foo;
import foo.OuterClass.InnerClass.InnerInnerClass;
class InnerClass{
	InnerInnerClass myInnerInner;
	class InnerInnerClass{	
	}
}

3.1M2, W2K
Child types of the type to move are not considered as imports anymore
Added test_nonstatic_40
Fixed > 20041028


"Move member type to new file" produces extraneous import of even more inner classes [refactoring]



77083 "Move member type to new file" produces extraneous import of even more inner classes [refactoring] 
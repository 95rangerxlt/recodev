Just checked out the new Source > Generate equals and hashcode feature. I wonder why in the method, the classes of the two Objects are not compared.

I can see a check for super.equals and a cast afterwards. I had expected something like

if (!getClass().equals(obj.getClass())
return false;

Ben

Just checked out the new Source > Generate equals and hashcode feature. I wonder why in the method, the classes of the two Objects are not compared.

I can see a check for super.equals and a cast afterwards. I had expected something like

if (!getClass().equals(obj.getClass())
return false;

Ben
Can you give a concrete example? The code normally contains such a comparison.
Sure, an automated equals looked like this:

public boolean equals(Object obj) {
    if (this == obj)
      return true;
    if (!super.equals(obj))
      return false;
    final Attachment other = (Attachment) obj;
    
    ... field comparisions follow ...
}

as you can see, Attachment is casted w/o checking wether obj is of the type "Attachment".

Ben
Fixed in HEAD > 20060117
Close as fixed


Generate equals() should check wether cast is possible



124088 Generate equals() should check wether cast is possible 
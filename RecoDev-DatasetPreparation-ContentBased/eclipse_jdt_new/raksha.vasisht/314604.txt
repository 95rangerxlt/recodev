Here are the N&N entries and where the new documentation should go for most of them - for some of them I did not know (yet) where the documentation should go, hence I have not specified anything for those items. I have tried to categorize the items based on the area and also indicated the milestone (Mx) in which they were introduced for easy cross referencing.  

I will start off with QuickFix and Problem reporting, NLS Tooling, Call Hierarchy and Type Hierarchy, Refactoring.  

JDUG - Java Development User Guide

JUnit
- org.eclipse.jdt.junit split (M2) -> this just goes in API documentation and maybe in migration guide?
- JUnit 4.8.1 and 2 versions of JUnit plugin (M4) - This goes in migration guide. and API documentation?
- JUnit imports test results with <skipped> nodes (M2) - JUnit import itself is not documented, so skip this. or add both?
- JUnit view opens test result URL (M3) - JUnit import itself is not documented, so skip this. or add both?
- Edit test method in JUnit launch configuration (M4) : JDUG -> Getting Started -> Basic Tutorial -> Writing and Running Junit Tests 

QuickFix and Problem reporting - Deepak
- Report missing @Override for method implementations in 1.6 mode (M2)
- Fix multiple problems via problem hover (M4): JDUG -> Reference -> Availabe Quick Fixes
- Compiler detects unused object allocation (M4) - JDUG -> Reference -> Preferences-> Java -> Compiler -> Errors and warnings AND in JDUG -> Reference -> Availabe Quick Fixes

Content Assist
- Improved content assist for getter and setter proposals (M4)

NLS Tooling - Deepak
- 'Find Broken Externalized Strings' handles constants (M4) - JDUG -> Tasks -> Externalizing Strings -> Finding unused and incorrectly used  keys in properties files.
- Find broken externalized strings improvements (M6) : JDUG -> Tasks -> Externalizing Strings -> Finding unused and incorrectly used  keys in properties files.
The document can describe what all cases are supported

Call Hierarchy and Type Hierarchy - Deepak
- JDUG -> Concepts ->Java Views : Hierarchy View <Rename to> Type Hierarchy View
- Type Hierarchy computed in background (M4)- Not required to document
- Refresh (Context Menu) (M3) & Remove from View (M1) : JDUG -> Reference- -> Views -> Call Hierarchy View : 

Refactoring - Deepak
- Extract method refactoring - 'continue' statment  (M1) :  JDUG-> Reference-> Refactoring -> Refactor Actions and Extract Method errors
- Move type to new file refactoring (M5) : JDUG-> Reference-> Refactoring -> Refactor Actions

Formatter options
- New code formatter options (M6)
- New comment formatter options (M6)
 JDUG -> Reference- -> Preferences -> Java -> Code Style -> Formatter : Individual preferences are not documented. So I guess we skip this

Export Preferences
- Export All button (M1)  - JDUG -> Reference- -> Preferences -> Java -> Code Style -> Formatter & Clean up
- New categories when importing or exporting preferences (M2): Currently help from workbench user guide is shown. We should add similar document in JDUG.

Javadoc
- Opening attached Javadoc now uses preferred web browser (M4) - Do we need to document this?
- Javadoc hovers include annotations(M7) 
- Javadoc hovers render {@value} (M7)
- Source attachments for referenced JARs (M6)
I dont know where these 3 entries go.

Misc
- Open Implementation command (M1) : JDUG -> Reference- -> Menus and Actions -> Navigate Menu Actions  
- Package name abbreviations (M7) - To tips and tricks
- New build path error decorator (M7)
- New "rawtypes" token for @SuppressWarnings annotation (M3)
- @SuppressWarnings for optional errors (M6)

Here are the N&N entries and where the new documentation should go for most of them - for some of them I did not know (yet) where the documentation should go, hence I have not specified anything for those items. I have tried to categorize the items based on the area and also indicated the milestone (Mx) in which they were introduced for easy cross referencing.  

I will start off with QuickFix and Problem reporting, NLS Tooling, Call Hierarchy and Type Hierarchy, Refactoring.  

JDUG - Java Development User Guide

JUnit
- org.eclipse.jdt.junit split (M2) -> this just goes in API documentation and maybe in migration guide?
- JUnit 4.8.1 and 2 versions of JUnit plugin (M4) - This goes in migration guide. and API documentation?
- JUnit imports test results with <skipped> nodes (M2) - JUnit import itself is not documented, so skip this. or add both?
- JUnit view opens test result URL (M3) - JUnit import itself is not documented, so skip this. or add both?
- Edit test method in JUnit launch configuration (M4) : JDUG -> Getting Started -> Basic Tutorial -> Writing and Running Junit Tests 

QuickFix and Problem reporting - Deepak
- Report missing @Override for method implementations in 1.6 mode (M2)
- Fix multiple problems via problem hover (M4): JDUG -> Reference -> Availabe Quick Fixes
- Compiler detects unused object allocation (M4) - JDUG -> Reference -> Preferences-> Java -> Compiler -> Errors and warnings AND in JDUG -> Reference -> Availabe Quick Fixes

Content Assist
- Improved content assist for getter and setter proposals (M4)

NLS Tooling - Deepak
- 'Find Broken Externalized Strings' handles constants (M4) - JDUG -> Tasks -> Externalizing Strings -> Finding unused and incorrectly used  keys in properties files.
- Find broken externalized strings improvements (M6) : JDUG -> Tasks -> Externalizing Strings -> Finding unused and incorrectly used  keys in properties files.
The document can describe what all cases are supported

Call Hierarchy and Type Hierarchy - Deepak
- JDUG -> Concepts ->Java Views : Hierarchy View <Rename to> Type Hierarchy View
- Type Hierarchy computed in background (M4)- Not required to document
- Refresh (Context Menu) (M3) & Remove from View (M1) : JDUG -> Reference- -> Views -> Call Hierarchy View : 

Refactoring - Deepak
- Extract method refactoring - 'continue' statment  (M1) :  JDUG-> Reference-> Refactoring -> Refactor Actions and Extract Method errors
- Move type to new file refactoring (M5) : JDUG-> Reference-> Refactoring -> Refactor Actions

Formatter options
- New code formatter options (M6)
- New comment formatter options (M6)
 JDUG -> Reference- -> Preferences -> Java -> Code Style -> Formatter : Individual preferences are not documented. So I guess we skip this

Export Preferences
- Export All button (M1)  - JDUG -> Reference- -> Preferences -> Java -> Code Style -> Formatter & Clean up
- New categories when importing or exporting preferences (M2): Currently help from workbench user guide is shown. We should add similar document in JDUG.

Javadoc
- Opening attached Javadoc now uses preferred web browser (M4) - Do we need to document this?
- Javadoc hovers include annotations(M7) 
- Javadoc hovers render {@value} (M7)
- Source attachments for referenced JARs (M6)
I dont know where these 3 entries go.

Misc
- Open Implementation command (M1) : JDUG -> Reference- -> Menus and Actions -> Navigate Menu Actions  
- Package name abbreviations (M7) - To tips and tricks
- New build path error decorator (M7)
- New "rawtypes" token for @SuppressWarnings annotation (M3)
- @SuppressWarnings for optional errors (M6)
Ill start from the last and take up the last 4 items Formatter Options, Export Preferences, misc and Javadoc if nobody else has started to work on them yet.
Dont know how target got changed! Changed it back to RC4.
I missed this Platform feature from M7 - " The Open Resource dialog supports 3 new features: Path patterns, Relative paths, Closer items on top. "
This should go in 'Workbench User Guide > Reference > User interface information > Search > Open Resource'
(In reply to comment #3)
> I missed this Platform feature from M7 - " The Open Resource dialog supports 3
> new features: Path patterns, Relative paths, Closer items on top. "
> This should go in 'Workbench User Guide > Reference > User interface
> information > Search > Open Resource'
Bug 310198 is already open for this.
I am done with doc updates for 5 categories : QuickFix and Problem reporting, NLS Tooling, Call Hierarchy and Type Hierarchy, Refactoring, Content Assist.

Note that for NLS tooling and Content Assist no doc changes were required as these items were more of bug fixes than new features and it did not make sense to add anything to doc.
I've finished the actual JDT What's New document and verified the editor items in Platform What's New.
(In reply to comment #0)

> Formatter options
> - New code formatter options (M6)
> - New comment formatter options (M6)
>  JDUG -> Reference- -> Preferences -> Java -> Code Style -> Formatter :
> Individual preferences are not documented. So I guess we skip this

Yes, individual preferences are not documented.

> Export Preferences
> - Export All button (M1)  - JDUG -> Reference- -> Preferences -> Java -> Code
> Style -> Formatter & Clean up
> - New categories when importing or exporting preferences (M2): Currently help
> from workbench user guide is shown. We should add similar document in JDUG.
>
Added the first one, the second item already has documentation for the Import Export Preferences in the workbench guide, dont think we need to document the individual categories separately. 

> Misc
> - Open Implementation command (M1) : JDUG -> Reference- -> Menus and Actions ->
> Navigate Menu Actions
> - Package name abbreviations (M7) - To tips and tricks
Done.

> - New build path error decorator (M7)
Added to the JDT Icons. Need to copy only the image there. Dani, is this the right place for this?

> - @SuppressWarnings for optional errors (M6)
Added to the annotation preferences page.

> - New "rawtypes" token for @SuppressWarnings annotation (M3)
> Javadoc
> - Opening attached Javadoc now uses preferred web browser (M4) - Do we need to
> document this?
> - Javadoc hovers include annotations(M7) 
> - Javadoc hovers render {@value} (M7)
> - Source attachments for referenced JARs (M6)
> I dont know where these 3 entries go.

Shouldnt they only go into the 'What's new in 3.6' doc? 

> - Source attachments for referenced JARs (M6)
I found a document for source attachments in 
Java development user guide > Reference > Wizards and Dialogs > Create New Elements > New Java Project Wizard  -> Source Attachment Property Page

but dint find a place to document this.
>Content Assist
>- Improved content assist for getter and setter proposals (M4)
Quickly checked. The item can be considered done.
Raksha, almost all changes have some issues. Please correct them asap:


>> - New build path error decorator (M7)
>Added to the JDT Icons. Need to copy only the image there.
Not good:
1. The image you committed seems to be corrupt (doesn't work here).
2. The image belongs to the 'Object adornments' section - just before the error
   icon.


>> - @SuppressWarnings for optional errors (M6)
>Added to the annotation preferences page.
This is not OK: please note that the doc should list the preferences in the order as they appear in the dialog. Also, options that depend on another one need to be indented.


>> Export Preferences
>> - Export All button (M1)  - JDUG -> Reference- -> Preferences -> Java -> Code
>> Style -> Formatter & Clean up
>> - New categories when importing or exporting preferences (M2): Currently help
>> from workbench user guide is shown. We should add similar document in JDUG.
>>
>Added the first one
Not done: the Clean Up preference doc has not yet been updated.


>> Misc
>> - Open Implementation command (M1) : JDUG -> Reference- -> Menus and Actions >->
>> Navigate Menu Actions
>> - Package name abbreviations (M7) - To tips and tricks
>Done.
Not done! First, the images are again not working, second, it looks like you didn't use the latest version from 'JDT What's New'. The wording is also not good. Please simply reuse the entry from the 'JDT What's New'.


>> Misc
>> - Open Implementation command (M1) : JDUG -> Reference- -> Menus and Actions >->
>> Navigate Menu Actions
>> - Package name abbreviations (M7) - To tips and tricks
>Done.
Not good: your change results in broken table borders.
(In reply to comment #9)
> Raksha, almost all changes have some issues. Please correct them asap:
> 
> 
> >> - New build path error decorator (M7)
> >Added to the JDT Icons. Need to copy only the image there.
> Not good:
> 1. The image you committed seems to be corrupt (doesn't work here).
> 2. The image belongs to the 'Object adornments' section - just before the error
>    icon.
> 
The image got corrupted on my system and was not getting committed although it showed up in the commit dialog and I was not able to remove from workspace either. Had to delete from the filesystem and copy again. After a few attempts, was able to commit to HEAD.
> 
> >> - @SuppressWarnings for optional errors (M6)
> >Added to the annotation preferences page.
> This is not OK: please note that the doc should list the preferences in the
> order as they appear in the dialog. Also, options that depend on another one
> need to be indented.
> 
I just went by the existing order of the parent option which was wrong. However, the other options follow the indentations and order so I have corrected the other existing option's indentation and order as well along with @SuppressWarnings for optional errors. 

> 
> >> Misc
> >> - Open Implementation command (M1) : JDUG -> Reference- -> Menus and Actions >->
> >> Navigate Menu Actions
> >> - Package name abbreviations (M7) - To tips and tricks
> >Done.
> Not done! First, the images are again not working, second, it looks like you
> didn't use the latest version from 'JDT What's New'. The wording is also not
> good. Please simply reuse the entry from the 'JDT What's New'.
> 
The images got corrupted when I tried to create and apply the patch. They should work now, as I recopied them. I tried to use the same wordings and format as the package compression entry in Tips and Tricks, hence the first image was of the Appearance preference page and then the package explorer showing the abbreviated packages. Now I have changed it to reuse the same entry as 'What's new..' document. 

Fixed the remaining issues as well. Could you pls check the changes and let me know if they look okay now?
Yes, now it's all fine. I only had to
- reduce the space between the two Package Explorer picture in the T&T
- delete the two broken images that are no longer used
>> - Open Implementation command (M1) : JDUG -> Reference -> Menus and Actions >->
>> Navigate Menu Actions

The description was wrong, fixed in HEAD.


Bug to track documentation work for N&N items in 3.6


Initial source:

package test1;
public class Test1 {
        public void methodToMove() {}
        private TestTarget target;
        public TestTarget getTestTarget() { return target; }
}

package test1;
public class TestTarget {}

package test2;
import test1.Test1;
public class Test2 {
        public Test2() {
                new Test1().methodToMove();
}}

After moving method:

package test1;
public class Test1 {
        TestTarget target;
        public TestTarget getTestTarget() { return target; }
}

package test1;
public class TestTarget {
        public void methodToMove() {}
}

package test2;
import test1.Test1;
public class Test2 {
        public Test2() {
                new Test1().target.methodToMove();
}}


Test.target field should be public instead of friendly.

Initial source:

package test1;
public class Test1 {
        public void methodToMove() {}
        private TestTarget target;
        public TestTarget getTestTarget() { return target; }
}

package test1;
public class TestTarget {}

package test2;
import test1.Test1;
public class Test2 {
        public Test2() {
                new Test1().methodToMove();
}}

After moving method:

package test1;
public class Test1 {
        TestTarget target;
        public TestTarget getTestTarget() { return target; }
}

package test1;
public class TestTarget {
        public void methodToMove() {}
}

package test2;
import test1.Test1;
public class Test2 {
        public Test2() {
                new Test1().target.methodToMove();
}}


Test.target field should be public instead of friendly.
Similar problem:

public class Foo {
	public enum FooEnum {
		FOO_ENUM(null);
		private FooEnum(String bar) {}
}}

after moving FooEnum to separate file it's

public enum FooEnum {
	FOO_ENUM(null);
	FooEnum(String bar) {}
}

while constructor should be left private.
The bug in comment #1 is a duplicate of bug 97411 comment #4.

Investigating issue in initial comment...
Created attachment 31811
Fix

Fixes field visibility bug.
Fixed in HEAD > 20060110


[refactoring] [move] Moving method to another class incorrectly sets field visibility



117465 [refactoring] [move] Moving method to another class incorrectly sets field visibility 
On the one hand, we have separate options to format the space around commas in
parameter lists and 'throws' clauses for each methods and constructors. E.g: 

FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_METHOD_ARGUMENTS
versus
FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_CONSTRUCTOR_ARGUMENTS

But on the other hand, to control the spaces around the parens/braces,
constructors and methods have common options. E.g:

FORMATTER_INSERT_SPACE_BEFORE_METHOD_DECLARATION_OPEN_PAREN


What is the reason for this? 

If there's no obvious reason, I think it would be better to also separate the
following set of options, so that both methods and constructors can be formatted
separately. E.g.:

FORMATTER_INSERT_SPACE_BEFORE_METHOD_DECLARATION_OPEN_PAREN
 would be splitted into 
FORMATTER_INSERT_SPACE_BEFORE_METHOD_DECLARATION_OPEN_PAREN
and 
FORMATTER_INSERT_SPACE_BEFORE_CONSTRUCTOR_DECLARATION_OPEN_PAREN

The other possibility would be to merge all settings and not to make a
difference between constructors and methods at all. But I'm sure there's 0.1% of
all users who would want exactly this feature... :-)

What do you think?

On the one hand, we have separate options to format the space around commas in
parameter lists and 'throws' clauses for each methods and constructors. E.g: 

FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_METHOD_ARGUMENTS
versus
FORMATTER_INSERT_SPACE_BEFORE_COMMA_IN_CONSTRUCTOR_ARGUMENTS

But on the other hand, to control the spaces around the parens/braces,
constructors and methods have common options. E.g:

FORMATTER_INSERT_SPACE_BEFORE_METHOD_DECLARATION_OPEN_PAREN


What is the reason for this? 

If there's no obvious reason, I think it would be better to also separate the
following set of options, so that both methods and constructors can be formatted
separately. E.g.:

FORMATTER_INSERT_SPACE_BEFORE_METHOD_DECLARATION_OPEN_PAREN
 would be splitted into 
FORMATTER_INSERT_SPACE_BEFORE_METHOD_DECLARATION_OPEN_PAREN
and 
FORMATTER_INSERT_SPACE_BEFORE_CONSTRUCTOR_DECLARATION_OPEN_PAREN

The other possibility would be to merge all settings and not to make a
difference between constructors and methods at all. But I'm sure there's 0.1% of
all users who would want exactly this feature... :-)

What do you think?
No problem. The change is trivial and you are right it would be more 
consistent. Let me know when you are ready. I can do it today.
Ok, good, thanks.

If this is only about adding new options, go ahead. If you want to change 
existing ones (maybe to name them more consistently), wait until tomorrow when 
my committer will be back :-)
Fixed and released in HEAD.
Regression test added.
Need to update the code formatter preference page.
Silvio, please close them as soon as the code formatter preference page is updated.
These options are yet to add for constructors.

FORMATTER_INSERT_SPACE_BEFORE_FIRST_ARGUMENT
FORMATTER_INSERT_SPACE_BEFORE_CLOSING_PAREN
FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_ARGUMENTS
FORMATTER_INSERT_SPACE_BEFORE_METHOD_OPEN_BRACE

Naming (for example):
FORMATTER_INSERT_SPACE_BEFORE_CONSTRUCTOR_DECLARATION_FIRST_ARGUMENT
FORMATTER_INSERT_SPACE_BEFORE_CONSTRUCTOR_DECLARATION_CLOSING_PAREN
FORMATTER_INSERT_SPACE_BETWEEN_CONSTRUCTOR_DECLARATION_EMPTY_ARGUMENTS
FORMATTER_INSERT_SPACE_BEFORE_CONSTRUCTOR_DECLARATION_OPEN_BRACE



I will add the new options asap.
Should I also add options for space before/after comma in constructor arguments?
Fixed and released in HEAD.
Regression tests added.


White space options for method and constructor declarations



Fix for 49571 
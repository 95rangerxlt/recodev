Between versions 2.0.1 and 2.0.2, JDTCompilerAdapter has changed the warnings 
produced by the compiler from:

-warn:constructorName,packageDefaultMethod,maskedCatchBlocks,deprecation

to

-
warn:constructorName,packageDefaultMethod,maskedCatchBlocks,unusedLocals,unusedA
rguments,unusedImports,syntheticAccess,assertIdentifier

The addition of the extra options means that running Ant now generates a huge 
number of warnings on our source tree. The warnings are collected in the Log 
Console, which seems to get slower and slower, and our Ant build has become 
impossibly slow (it was less than 1 minute and is now over 20 minutes - at 
which point I killed the process).

We can work around the problem by using the Ant "nowarn" option to disable the 
warnings, but we would ideally like to have some of the warnings turned on.

I'd be happy if the warnings were changed back to those used by v2.0.1. 
However, perhaps it would be possible to use an Ant property to define the list 
of warnings? Ant's jikes wrapper does this for extra options (see the bottom of 
this page: http://jakarta.apache.org/ant/manual/CoreTasks/javac.html ).

Between versions 2.0.1 and 2.0.2, JDTCompilerAdapter has changed the warnings 
produced by the compiler from:

-warn:constructorName,packageDefaultMethod,maskedCatchBlocks,deprecation

to

-
warn:constructorName,packageDefaultMethod,maskedCatchBlocks,unusedLocals,unusedA
rguments,unusedImports,syntheticAccess,assertIdentifier

The addition of the extra options means that running Ant now generates a huge 
number of warnings on our source tree. The warnings are collected in the Log 
Console, which seems to get slower and slower, and our Ant build has become 
impossibly slow (it was less than 1 minute and is now over 20 minutes - at 
which point I killed the process).

We can work around the problem by using the Ant "nowarn" option to disable the 
warnings, but we would ideally like to have some of the warnings turned on.

I'd be happy if the warnings were changed back to those used by v2.0.1. 
However, perhaps it would be possible to use an Ant property to define the list 
of warnings? Ant's jikes wrapper does this for extra options (see the bottom of 
this page: http://jakarta.apache.org/ant/manual/CoreTasks/javac.html ).
This is fixed in 2.1 stream. Another solution is to recompile the ant adapter
using the source provided with the 2.0.2 build.

If you specify nowarn="on" and deprecation="on", you will preserve deprecation
warnings. That might be an acceptable workaround.
Olivier, please post a patch on the JDT/Core page (2.0.2 update).
This is indeed quite painfull.
I will post a patch today.
Patch submitted on the JDT/Core development page.
Fixed and released in 2.0.x stream.
It might help to give the direct link:
http://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/jdt-core-home/r2.0/main.html#updates

Milestone is not correct. Change 2.1 M5 to 2.0.2.


Huge number of warnings now generated by JDTCompilerAdapter


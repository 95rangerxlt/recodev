Build ID: 3.4.2

I tried upgrading my RCP application from 3.4.1 to 3.4.2.  When I run the product export, I get the ClassCastException below.  The build succeeds on 3.4.1.

# 3/5/09 2:37:58 PM PST
# Eclipse Java Compiler 0.894_R34x, 3.4.2 release, Copyright IBM Corp 2000, 2008. All rights reserved.
----------
1. ERROR in C:\trunk\public\source\core\src\main\java\quickfix\spring\SocketInitiator.java (at line 0)
	package quickfix.spring;
	^
Internal compiler error
java.lang.ClassCastException: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration cannot be cast to org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
	at org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor.visit(AnnotationDiscoveryVisitor.java:60)
	at org.eclipse.jdt.internal.compiler.ast.Argument.traverse(Argument.java:154)
	at org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.traverse(JavadocArgumentExpression.java:99)
	at org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.traverse(JavadocMessageSend.java:219)
	at org.eclipse.jdt.internal.compiler.ast.Javadoc.traverse(Javadoc.java:834)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:666)
	at org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl.<init>(RoundEnvImpl.java:56)
	at org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager.processAnnotations(BaseAnnotationProcessorManager.java:148)
	at org.eclipse.jdt.internal.compiler.Compiler.processAnnotations(Compiler.java:794)
	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:423)
	at org.eclipse.jdt.internal.compiler.batch.Main.performCompilation(Main.java:3543)
	at org.eclipse.jdt.internal.compiler.batch.Main.compile(Main.java:1645)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.jdt.core.JDTCompilerAdapter.execute(JDTCompilerAdapter.java:79)
	at org.apache.tools.ant.taskdefs.Javac.compile(Javac.java:997)
	at org.apache.tools.ant.taskdefs.Javac.execute(Javac.java:820)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.eclipse.ant.internal.core.ant.EclipseSingleCheckExecutor.executeTargets(EclipseSingleCheckExecutor.java:30)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.eclipse.ant.internal.core.ant.EclipseSingleCheckExecutor.executeTargets(EclipseSingleCheckExecutor.java:30)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.eclipse.ant.internal.core.ant.EclipseSingleCheckExecutor.executeTargets(EclipseSingleCheckExecutor.java:30)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.eclipse.ant.internal.core.ant.EclipseSingleCheckExecutor.executeTargets(EclipseSingleCheckExecutor.java:30)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.eclipse.ant.internal.core.ant.EclipseSingleCheckExecutor.executeTargets(EclipseSingleCheckExecutor.java:30)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.eclipse.ant.internal.core.ant.EclipseDefaultExecutor.executeTargets(EclipseDefaultExecutor.java:32)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.eclipse.ant.internal.core.ant.InternalAntRunner.run(InternalAntRunner.java:623)
	at org.eclipse.ant.internal.core.ant.InternalAntRunner.run(InternalAntRunner.java:456)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.ant.core.AntRunner.run(AntRunner.java:378)
	at org.eclipse.pde.internal.core.exports.FeatureExportOperation.runScript(FeatureExportOperation.java:355)
	at org.eclipse.pde.internal.core.exports.FeatureExportOperation.doExport(FeatureExportOperation.java:236)
	at org.eclipse.pde.internal.core.exports.ProductExportOperation.run(ProductExportOperation.java:64)
	at org.eclipse.pde.internal.ui.build.FeatureExportJob.run(FeatureExportJob.java:55)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

----------
org.eclipse.jdt.internal.compiler.ast.TypeDeclaration cannot be cast to org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration

Build ID: 3.4.2

I tried upgrading my RCP application from 3.4.1 to 3.4.2.  When I run the product export, I get the ClassCastException below.  The build succeeds on 3.4.1.

# 3/5/09 2:37:58 PM PST
# Eclipse Java Compiler 0.894_R34x, 3.4.2 release, Copyright IBM Corp 2000, 2008. All rights reserved.
----------
1. ERROR in C:\trunk\public\source\core\src\main\java\quickfix\spring\SocketInitiator.java (at line 0)
	package quickfix.spring;
	^
Internal compiler error
java.lang.ClassCastException: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration cannot be cast to org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
	at org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor.visit(AnnotationDiscoveryVisitor.java:60)
	at org.eclipse.jdt.internal.compiler.ast.Argument.traverse(Argument.java:154)
	at org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression.traverse(JavadocArgumentExpression.java:99)
	at org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend.traverse(JavadocMessageSend.java:219)
	at org.eclipse.jdt.internal.compiler.ast.Javadoc.traverse(Javadoc.java:834)
	at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.traverse(CompilationUnitDeclaration.java:666)
	at org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl.<init>(RoundEnvImpl.java:56)
	at org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager.processAnnotations(BaseAnnotationProcessorManager.java:148)
	at org.eclipse.jdt.internal.compiler.Compiler.processAnnotations(Compiler.java:794)
	at org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:423)
	at org.eclipse.jdt.internal.compiler.batch.Main.performCompilation(Main.java:3543)
	at org.eclipse.jdt.internal.compiler.batch.Main.compile(Main.java:1645)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.jdt.core.JDTCompilerAdapter.execute(JDTCompilerAdapter.java:79)
	at org.apache.tools.ant.taskdefs.Javac.compile(Javac.java:997)
	at org.apache.tools.ant.taskdefs.Javac.execute(Javac.java:820)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.eclipse.ant.internal.core.ant.EclipseSingleCheckExecutor.executeTargets(EclipseSingleCheckExecutor.java:30)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.eclipse.ant.internal.core.ant.EclipseSingleCheckExecutor.executeTargets(EclipseSingleCheckExecutor.java:30)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.eclipse.ant.internal.core.ant.EclipseSingleCheckExecutor.executeTargets(EclipseSingleCheckExecutor.java:30)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.eclipse.ant.internal.core.ant.EclipseSingleCheckExecutor.executeTargets(EclipseSingleCheckExecutor.java:30)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.helper.SingleCheckExecutor.executeTargets(SingleCheckExecutor.java:38)
	at org.eclipse.ant.internal.core.ant.EclipseSingleCheckExecutor.executeTargets(EclipseSingleCheckExecutor.java:30)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.apache.tools.ant.taskdefs.Ant.execute(Ant.java:416)
	at org.apache.tools.ant.taskdefs.CallTarget.execute(CallTarget.java:105)
	at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)
	at org.apache.tools.ant.Task.perform(Task.java:348)
	at org.apache.tools.ant.Target.execute(Target.java:357)
	at org.apache.tools.ant.Target.performTasks(Target.java:385)
	at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)
	at org.apache.tools.ant.Project.executeTarget(Project.java:1298)
	at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)
	at org.eclipse.ant.internal.core.ant.EclipseDefaultExecutor.executeTargets(EclipseDefaultExecutor.java:32)
	at org.apache.tools.ant.Project.executeTargets(Project.java:1181)
	at org.eclipse.ant.internal.core.ant.InternalAntRunner.run(InternalAntRunner.java:623)
	at org.eclipse.ant.internal.core.ant.InternalAntRunner.run(InternalAntRunner.java:456)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.eclipse.ant.core.AntRunner.run(AntRunner.java:378)
	at org.eclipse.pde.internal.core.exports.FeatureExportOperation.runScript(FeatureExportOperation.java:355)
	at org.eclipse.pde.internal.core.exports.FeatureExportOperation.doExport(FeatureExportOperation.java:236)
	at org.eclipse.pde.internal.core.exports.ProductExportOperation.run(ProductExportOperation.java:64)
	at org.eclipse.pde.internal.ui.build.FeatureExportJob.run(FeatureExportJob.java:55)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

----------
org.eclipse.jdt.internal.compiler.ast.TypeDeclaration cannot be cast to org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
Would you have a test case to reproduce? I'll investigate.
The source code of the type quickfix.spring.SocketInitiator should be good enough.

The best we can do will be to provide a patch to fix the 3.4.2 version of compiler apt.

Walter, I'll investigate this one as I introduced this regression.
HEAD also must the same issue.
Targetting 3.5M6 if I can get a reproducable test case in time (3.5M6 is next week).
The code is here:

http://code.marketcetera.org/root/trunk/source/core/src/main/java/quickfix/spring/SocketInitiator.java
Walter, I think we only need to add a check with instance of on the reference context. we don't care about the javadoc element. We only want to process arguments of actual methods.
Created attachment 127738
Proposed fix
Created attachment 127763
Proposed fix + regression test

The problem comes from javadoc argument located in the package-info javadoc.
I believe adding an instanceof check is the right solution.
Walter, please review.
This patch is for HEAD. I'll create the same patch for 3.4.x once this one is ok.
Created attachment 127765
Proposed fix for 3.4.x + regression test
Walter, I'd like to release this fix (if it is correct of course) for 3.5M6.
(In reply to comment #9)
> Walter, I'd like to release this fix (if it is correct of course) for 3.5M6.

I will review tomorrow (Friday) AM.
Thanks for looking into this so quickly.  Could you explain the source of the error?  Is there a way for me to change my code so it doesn't trigger it?  The particular package in the log (quickfix.spring) does not have package-info.java.
(In reply to comment #11)
> Thanks for looking into this so quickly.  Could you explain the source of the
> error?  Is there a way for me to change my code so it doesn't trigger it?  The
> particular package in the log (quickfix.spring) does not have
> package-info.java.
No but I suspect that package-info gets pulled in at some point during the compilation. The stack trace is clear. The problem occurs while compiling a package-info type.

You don't really have a way to prevent the problem from happening except removing @see or @link elements from the package javadoc.

I suggest you update the compiler.apt fragment once the fix is released.
I can send you a jar file that would make it except that it won't be signed.

Patch looks good, in both 3.4 and HEAD.  I have checked that the test fails without the fix, and that with the fix, all APT tests pass.  The code change makes sense to me.

The moral here is probably "when making bug fixes close to the x.y.2 release date, be hyper-conservative about including defensive null checks even if they seem unnecessary." :-)
(In reply to comment #12)
> The stack trace is clear. The problem occurs while compiling a
> package-info type.
Yeah, the error message is misleading because the root of the problem is not the quickfix.spring package.  I debugged it and found the actual package-info.java that it was choking on.
> 
> You don't really have a way to prevent the problem from happening except
> removing @see or @link elements from the package javadoc.
Yeah, there are too many of these to remove. 
> 
> I suggest you update the compiler.apt fragment once the fix is released.
> I can send you a jar file that would make it except that it won't be signed.
What do you mean by once the fix is released?  Will it be possible update the fragment from Help->Software Updates?  My product is an open source platform that lots of users download and export from source.  I'm assuming people will start using 3.4.2 soon so I will need to document the process for them.


(In reply to comment #14)
> > I suggest you update the compiler.apt fragment once the fix is released.
> > I can send you a jar file that would make it except that it won't be signed.
> What do you mean by once the fix is released?  Will it be possible update the
> fragment from Help->Software Updates?  My product is an open source platform
> that lots of users download and export from source.  I'm assuming people will
> start using 3.4.2 soon so I will need to document the process for them.

The very unfortunate situation here is that the x.y.2 patch release of any Eclipse version is the last officially released build of x.y.  So, since this bug was discovered post 3.4.2 release, although we can fix it in the code tree it won't show up on the eclipse.org update site.

We really try hard to avoid introducing regressions in x.y.2 releases, for exactly this reason, but this one slipped through.

It is possible to create an update site for users to get these post-final-release bug fixes.  I've not done it myself so I am speaking from hearsay and I don't know the details of how to do it.  But users would have to discover the problem and be pointed to that update site.  Olivier, do you know anything about how JDT Core has handled this in the past, e.g., where the update site has been hosted?
(In reply to comment #15)
> It is possible to create an update site for users to get these
> post-final-release bug fixes.  I've not done it myself so I am speaking from
> hearsay and I don't know the details of how to do it.  But users would have to
> discover the problem and be pointed to that update site.  Olivier, do you know
> anything about how JDT Core has handled this in the past, e.g., where the
> update site has been hosted?
I guess it remains to be seen how widespread the impact is, i.e. how many people use package-info.java with @see and @link.  I'd prefer to have the documentation at an Eclipse level (as opposed to just handling it on my web site) and am willing to help with that if I can.  Similarly, it would be great to have an Eclipse hosted update site.

And just looking for other options, is there a reason why the incremental compiler does not seem to have this problem?  Any way to tweak the batch compiler to avoid it?


Released for 3.5M6.
Regression test is added.
Released in 3.4 maintenance stream (post 3.4.2).
(In reply to comment #16)
> I'd prefer to have the
> documentation at an Eclipse level (as opposed to just handling it on my web
> site) and am willing to help with that if I can.  Similarly, it would be great
> to have an Eclipse hosted update site.

Personally I agree.  FWIW, there is a discussion currently underway in the Eclipse planning council as to the possibility of doing periodic post-3.4.2 builds and hosting them as an update site.  There are arguments against as well as for, so it is not clear what will happen with this.  If that does not happen, probably the right thing is for us to host an update site for just the affected JDT APT plug-ins on the JDT APT web site on eclipse.org.  I'll need to figure out how to sign those plugins, but I'm sure it's possible.


> And just looking for other options, is there a reason why the incremental
> compiler does not seem to have this problem?  Any way to tweak the batch
> compiler to avoid it?

Just guessing but I'll bet that it's a crap shoot as to whether the incremental compiler hits it or not, depending on things like compilation order.  You could probably provoke it into the same bug if you have the "right" project contents and touch things in the right order.


ClassCastException in AnnotationDiscoveryVisitor



3.4 maintenance - Fix for 267279 

HEAD - Fix for 267279 
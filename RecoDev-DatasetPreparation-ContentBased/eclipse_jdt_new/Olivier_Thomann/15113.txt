20020501
hard to give a test case

	at org.eclipse.jdt.internal.corext.Assert.isTrue(Assert.java:132)
	at org.eclipse.jdt.internal.corext.util.Strings.trimIndent
(Strings.java:172)
	at 
org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring.create
Call(ExtractMethodRefactoring.java:457)
	at 
org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring.create
Change(ExtractMethodRefactoring.java:289)
	at org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run
(CreateChangeOperation.java:97)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:98)

20020501
hard to give a test case

	at org.eclipse.jdt.internal.corext.Assert.isTrue(Assert.java:132)
	at org.eclipse.jdt.internal.corext.util.Strings.trimIndent
(Strings.java:172)
	at 
org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring.create
Call(ExtractMethodRefactoring.java:457)
	at 
org.eclipse.jdt.internal.corext.refactoring.code.ExtractMethodRefactoring.create
Change(ExtractMethodRefactoring.java:289)
	at org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run
(CreateChangeOperation.java:97)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(ModalContext.java:98)
The problem is that the formatter ignores initialIdent in the case that the 
formatting option "Maximum line length" is set to 0.

Here are the result from the debugger:

Maximum line length 999

formatter.format("ee()", 2, null, delimiter) produces: "\t\tee()"

Maximum line length 0

formatter.format("ee()", 2, null, delimiter) produces: "ee()"

Moving to JCore...
Fixed and released in HEAD.


extract method: assertion failure



Update for 15113 

Fix for 15113 

151134 [refactoring scripts] Traceback when examining properties for a closed project 

151134 [refactoring scripts] Traceback when examining properties for a closed project 

151134 [refactoring scripts] Traceback when examining properties for a closed project 
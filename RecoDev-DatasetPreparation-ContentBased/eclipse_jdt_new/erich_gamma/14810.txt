1 - Create the following compilation  :

public class CodeAssistPbTest {
  class Vector {
  }
  void foo() {
    Vector l= new Vector();
  }
}

2 - Save it.
3 - Do 'Organize Imports'
The 'Organize Import' dialog box is displayed and proposes two choices :
'CodeAssistPbTest.Vector' and 'java.util.Vector'

In the context where 'Vector' is used, a type 'Vector' is visible, so the
dialogue box shoudn't be displayed.

Furthermore, if I select 'CodeAssistPbTest.Vector', the dialog box go away and
no import statment is added, what it is OK. But every times I do 'Organize
Import', the same dialog box is displayed with same question.

1 - Create the following compilation  :

public class CodeAssistPbTest {
  class Vector {
  }
  void foo() {
    Vector l= new Vector();
  }
}

2 - Save it.
3 - Do 'Organize Imports'
The 'Organize Import' dialog box is displayed and proposes two choices :
'CodeAssistPbTest.Vector' and 'java.util.Vector'

In the context where 'Vector' is used, a type 'Vector' is visible, so the
dialogue box shoudn't be displayed.

Furthermore, if I select 'CodeAssistPbTest.Vector', the dialog box go away and
no import statment is added, what it is OK. But every times I do 'Organize
Import', the same dialog box is displayed with same question.
When trying it, a bogus import java.util.Vector was automatically added.
Is now fixed with the rework of Organize Import (>20020425).
Using the AST to resolve references.
*** Bug 14809 has been marked as a duplicate of this bug. ***


Organize Imports asks for resolve ambiguities when there are no ambiguty


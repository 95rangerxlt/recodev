When I call getAnnotationType on a ResolvedAnnotation, whose type is not
actually available, I get the following NPE (from inside ResolvedAnnotation):

[java] java.lang.NullPointerException
     [java]     at org.eclipse.jdt.core.dom.ResolvedAnnotation.getAnnotationType
(ResolvedAnnotation.java:45)
     [java]     at com.bea.wlw.common.core.ast.ReaderUtil.getResolvedAnnotationT
ype(ReaderUtil.java:140)
...

This does not happen if the annotation's definition type is available on the
classpath. I think the expected behavior would be that the ResolvedAnnotation is
not available if it cannot be resolved, i.e. Annotation.resolveAnnotation()
would return null in the same way that TypeDeclaration.resolveBinding() returns
null if it cannot be resolved.

When I call getAnnotationType on a ResolvedAnnotation, whose type is not
actually available, I get the following NPE (from inside ResolvedAnnotation):

[java] java.lang.NullPointerException
     [java]     at org.eclipse.jdt.core.dom.ResolvedAnnotation.getAnnotationType
(ResolvedAnnotation.java:45)
     [java]     at com.bea.wlw.common.core.ast.ReaderUtil.getResolvedAnnotationT
ype(ReaderUtil.java:140)
...

This does not happen if the annotation's definition type is available on the
classpath. I think the expected behavior would be that the ResolvedAnnotation is
not available if it cannot be resolved, i.e. Annotation.resolveAnnotation()
would return null in the same way that TypeDeclaration.resolveBinding() returns
null if it cannot be resolved.
Fixed checked into P4 jdt.core sandbox with changelist 601270. Still need to 
push change into CVS in the APT branch. 
Patch submitted to CVS. 


NPE in ResolvedAnnotation.getAnnotationType


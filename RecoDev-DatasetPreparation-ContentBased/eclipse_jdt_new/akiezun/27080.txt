steps:

1)create an empty class (not methods and not fields).
2)make some class with many methods and fields extend it.
3)select a field and and choose from context menu Refactor->pull up

Notice that the field is pulled up but many new imports are added that are not 
necessary.

>20021119.
JRT.

steps:

1)create an empty class (not methods and not fields).
2)make some class with many methods and fields extend it.
3)select a field and and choose from context menu Refactor->pull up

Notice that the field is pulled up but many new imports are added that are not 
necessary.

>20021119.
JRT.
to be investigated for M4 - suspecting SearchEngine problem
yes, 
searchDeclarationsOfReferencedTypes returns too many types
Jerome, can you verify that it was fixed by
bug 24934 ?

test case (pull up 'A.l'):
-----------------------
package fdsf.fffg;
public class A {}

-----------------------
package fdsf.fffg;
import java.awt.Button;
import java.awt.Checkbox;
import java.util.ArrayList;
import java.util.List;

/** typecomment template*/
public class B extends A{
    Button b;
    Checkbox c;
    List l= new ArrayList();
}


searchDeclarationsOfReferencedTypes (in field l) now returns correctly List and 
ArrayList. But refactor doesn't remove the corresponding imports.

Also in this process searchDeclarationsOfReferencedTypes is called 3 times. 
Maybe this could be improved.

Moving to JDT/UI
will have a look - thanks Jerome
fixed


Unecessary imports added with Refactor->Pull up on field.


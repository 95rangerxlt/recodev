Using 2.1, the preference page to set the template comments for method, type and
constructor should check that a single line comment ends with a line break.
Because this comment is prepended to the method source in different actions (add
deleguate methods, add getters/setters,...), a single line comment needs to end
with a line break.
This led to bug 37331 and bug 37200.

Using 2.1, the preference page to set the template comments for method, type and
constructor should check that a single line comment ends with a line break.
Because this comment is prepended to the method source in different actions (add
deleguate methods, add getters/setters,...), a single line comment needs to end
with a line break.
This led to bug 37331 and bug 37200.
Another bug caused by this is 35746.
fixed in the 'add delegate methods', seems to be fixed already in the getter
setter and override methods

Still bugs in refactoring:
The returned template does not need to end with a line delimiter.

createNewConstructorComment() -
org.eclipse.jdt.internal.corext.refactoring.nls.NLSRefactoring
getNewConstructorComment() -
org.eclipse.jdt.internal.corext.refactoring.code.PromoteTempToFieldRefactoring
getNewConstructorComment() -
org.eclipse.jdt.internal.corext.refactoring.structure.MoveInnerToTopRefactoring

fixed


Comment templates should check that single line comments end with a line break [code manipulation]



Bug 437398: [ccp] Don't select extension when asking for new file name on paste 

fix for 37398 

fix for 37398 

37398 
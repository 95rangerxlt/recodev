i20030606 - J9SC20030604

Refactor->Rename... on static methods does not update clients in other projects
and on static fields causes spurious "another name shadows access to the renamed
element" warnings in clients in other projects. 

Test case (for both problems): 

1 - New workspace, create two Java projects Foo and Bar (Bar references Foo)
2 - Create an interface in Foo:
public interface SimpleInterface {
	public int CONSTANT = 10;
}
3 - Create a class in Foo:
public class SimpleClass {
	public static void method() {}
}
3 - Create a class in Bar:
public class ClientClass {
	void m1() {
		int i = SimpleInterface.CONSTANT;
		SimpleClass.method(); 
	}
}

Bug 1: problem renaming static field

4 - Select CONSTANT in SimpleInterface and "Refactor->Rename..."
5 - Choose the name you want (e.g. CONSTANT_)
6 - Press ok. Bug: "another name shadows access to the renamed element" warning
in ClientClass.
7 - Continuing, no errors will be reported, and the operation finishes properly.

Bug 2: problem renaming static method

8 - Select "method" in SimpleClass and rename to "methodXXX". Bug: the operation
finishes ok, but there is a compile error in ClientClass, because it was not
updated.

i20030606 - J9SC20030604

Refactor->Rename... on static methods does not update clients in other projects
and on static fields causes spurious "another name shadows access to the renamed
element" warnings in clients in other projects. 

Test case (for both problems): 

1 - New workspace, create two Java projects Foo and Bar (Bar references Foo)
2 - Create an interface in Foo:
public interface SimpleInterface {
	public int CONSTANT = 10;
}
3 - Create a class in Foo:
public class SimpleClass {
	public static void method() {}
}
3 - Create a class in Bar:
public class ClientClass {
	void m1() {
		int i = SimpleInterface.CONSTANT;
		SimpleClass.method(); 
	}
}

Bug 1: problem renaming static field

4 - Select CONSTANT in SimpleInterface and "Refactor->Rename..."
5 - Choose the name you want (e.g. CONSTANT_)
6 - Press ok. Bug: "another name shadows access to the renamed element" warning
in ClientClass.
7 - Continuing, no errors will be reported, and the operation finishes properly.

Bug 2: problem renaming static method

8 - Select "method" in SimpleClass and rename to "methodXXX". Bug: the operation
finishes ok, but there is a compile error in ClientClass, because it was not
updated.
Initially I thought it could be a duplicate of bug 15083, but since nobody else
reported it since then, I thought it could rather be a regression.
reproduced
stacktrace for the the second scenario:
Caused by: java.lang.NullPointerException
	at java.lang.Throwable.<init>(Throwable.java)
	at java.lang.Throwable.<init>(Throwable.java)
	at java.lang.NullPointerException.<init>(NullPointerException.java:59)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.UpdateMethodReferenceEdit.con
nect(UpdateMethodReferenceEdit.java:52)
	at 
org.eclipse.jdt.internal.corext.textmanipulation.TextEdit.executeConnect
(TextEdit.java:497)
	at 
org.eclipse.jdt.internal.corext.textmanipulation.AutoOrganizingTextEdit.executeC
onnect(AutoOrganizingTextEdit.java:118)
	at org.eclipse.jdt.internal.corext.textmanipulation.TextBufferEditor.add
(TextBufferEditor.java:78)
	at 
org.eclipse.jdt.internal.corext.refactoring.changes.TextChange.addTextEdits
(TextChange.java:465)
	at 
org.eclipse.jdt.internal.corext.refactoring.changes.TextChange.getPreviewTextBuf
fer(TextChange.java:285)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameAnalyzeUtil.getNewWorki
ngCopies(RenameAnalyzeUtil.java:74)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor.getNewO
ccurrences(RenameMethodProcessor.java:345)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor.analyze
RenameChanges(RenameMethodProcessor.java:322)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameMethodProcessor.checkIn
put(RenameMethodProcessor.java:208)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameNonVirtualMethodProcess
or.checkInput(RenameNonVirtualMethodProcessor.java:46)
	at 
org.eclipse.jdt.internal.corext.refactoring.rename.RenameRefactoring.checkInput
(RenameRefactoring.java:160)
	at org.eclipse.jdt.internal.ui.refactoring.CheckConditionsOperation.run
(CheckConditionsOperation.java:65)
	at org.eclipse.jdt.internal.ui.refactoring.CreateChangeOperation.run
(CreateChangeOperation.java:100)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run
(Unknown Source)

*** Bug 40628 has been marked as a duplicate of this bug. ***
see bug 40628 for another test case
test added
the exception was P1 - the other thing is P2
*** Bug 41407 has been marked as a duplicate of this bug. ***
i will close this one as fixed. i opened bug 41533 for the incorrect shadowing 
problem.

in the future, please try to create 1 report per bug - otherwise it gets 
confusing what is fixed, what's not. thanks.


problems refactoring static members [refactoring]


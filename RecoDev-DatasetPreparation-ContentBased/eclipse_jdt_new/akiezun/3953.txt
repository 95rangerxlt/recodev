The current implementation of a the global type cache isn't integrated into the AllTypesSearchEngine. Instead the
	engine is passed as a parameter to the type cache. 

	Why don't we always use the AllTypesSearchEngine and the engine is responsible for maintaining a cache.


NOTES:

The current implementation of a the global type cache isn't integrated into the AllTypesSearchEngine. Instead the
	engine is passed as a parameter to the type cache. 

	Why don't we always use the AllTypesSearchEngine and the engine is responsible for maintaining a cache.


NOTES:
moved to 'active'
PRODUCT VERSION:
	122


we did the code review the TypeCache is still separate so I assume the 
conclusion was to not move the TypeCache.
it's because of a vcm bug
note that 2 TypeCaches exist and only one is used
i have deleted the other one at least twice now.
well, what else can i do - will try to delete it again <g>
deleted


Review: why is the TypeCache not part of the AllTypesSearchEngine (1GF937R)



Fix for Bug 395348 [search] NPE while searching for declarations of a generic function inside an anonymous class (was originally: Rename method does not detect renaming of binary method in anonymous class) 

Fix for Bug 395348 [search] NPE while searching for declarations of a generic function inside an anonymous class (was originally: Rename method does not detect renaming of binary method in anonymous class) 

Fix for Bug 395348 [rename] NPE while renaming (was: Rename method does not detect renaming of binary method in anonymous class) 

Fix for Bug 395348 [search] NPE while searching for declarations of a generic function inside an anonymous class (was originally: Rename method does not detect renaming of binary method in anonymous class) 

Fix for Bug 395348 [rename] NPE while renaming (was: Rename method does not detect renaming of binary method in anonymous class) 

Fix for Bug 395348 [rename] NPE while renaming (was: Rename method does not detect renaming of binary method in anonymous class) 

Fix for bug 395395 - Use default timestamp provider when building o.e.jdt.core.tests.model 

Fix for bug 395395 - Use default timestamp provider when building o.e.jdt.core.tests.model 

Fix for bug 395395 - Use default timestamp provider when building o.e.jdt.core.tests.model 

Fixed bug 373953: FUP of bug 127575: java.eclipse.core.runtime.Assert is being recognized as org.eclipse.core.runtime.Assert 

Bug 395366 - JDT Building Resource Copy Filter reseted on startup 

Fixed bug 233953: [implementation] Activating an editor can trigger two AST creations 

fix for 23953 - part II 

tests for 23953 

partial fix for 23953 
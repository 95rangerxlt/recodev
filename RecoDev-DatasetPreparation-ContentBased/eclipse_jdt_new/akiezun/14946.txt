If I have a class:
Foo extends Bar {
private void a(){}
protected void b(){a();}
}

And I pull-up a&b together, a() gets promoted to protected visibility even 
though this isn't necessary.  I'm guessing this is broken for variables and 
other "grouped" pull-ups as well.

If I have a class:
Foo extends Bar {
private void a(){}
protected void b(){a();}
}

And I pull-up a&b together, a() gets promoted to protected visibility even 
though this isn't necessary.  I'm guessing this is broken for variables and 
other "grouped" pull-ups as well.
deferred
reopen
*** Bug 28019 has been marked as a duplicate of this bug. ***
would like to fix, but not for 2.1
deferred
*** Bug 36566 has been marked as a duplicate of this bug. ***
reop
fixed


Refactor Pull-up promotes visibility when not needed [refactoring]



149467: [JUnit] Junit 3.8.x support is not up to date 

149462: [refactoring] all refactorings should work without saving dirty editors 

149462: [refactoring] all refactorings should work without saving dirty editors 

149467: [JUnit] Junit 3.8.x support is not up to date 

149468 [generate delegate] is missing final methods 

[114946] Fold two JDT initialize Job back into one 

14946 Refactor Pull-up promotes visibility when not needed [refactoring] 

14946 Refactor Pull-up promotes visibility when not needed [refactoring] 
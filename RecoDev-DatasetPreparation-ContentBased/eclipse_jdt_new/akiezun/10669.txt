I discover that when I do Refactoring/rename method in a method declared
in an interface without qualifier (that is public because it is an interface),
then the methods to be renamed in other classes are only searched in the
package of the interface.

If I add an explicit public visibility to the method, then the refactoring
is done in all the project. (which is the expected behavior).

I am running eclipse 2002-02-14.

I discover that when I do Refactoring/rename method in a method declared
in an interface without qualifier (that is public because it is an interface),
then the methods to be renamed in other classes are only searched in the
package of the interface.

If I add an explicit public visibility to the method, then the refactoring
is done in all the project. (which is the expected behavior).

I am running eclipse 2002-02-14.
agreed this is a bug, interface methods are implicitly public and the search 
optimization cannot be used in this case.
resolution depends on the answer to: bug#10954
the answer was: "All modifiers in the JavaModel reflect the source modifiers 
(same as on the 
ASTs). Remember that the Model is a structured source model, nothing resolved, 
no modifier inference or fix-up.

Bindings have the right information."

this means - we do it
leaving M6 as target
will aim for M5
fixed
should be in M4


Refactoring: renaming interface methods without visibility qualifier



Fixed bug 106691: [templates] Code Assist ignores prefered name of exception variable 
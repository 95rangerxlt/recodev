2.1

The following refactorings (change method signature, pull up and push down) 
create lots of ASTs during the precondition and change execution phase and 
hang on to them. The causes an unnecessary big heap. We should recode the 
refactorings in a way that they don't hang on to ASTs.

The fix should be done in a way that we are able to put it into 2.1.1

2.1

The following refactorings (change method signature, pull up and push down) 
create lots of ASTs during the precondition and change execution phase and 
hang on to them. The causes an unnecessary big heap. We should recode the 
refactorings in a way that they don't hang on to ASTs.

The fix should be done in a way that we are able to put it into 2.1.1
See also bug 35523
*** Bug 36126 has been marked as a duplicate of this bug. ***
fixed for all 3

to make this happen i needed to rewrite at least 4 classes (1 totally 
rewritten - MoveNestedToTopLevel) - it might be too scary to put for 2.1.1

memory consumprion is still huge for extract interface - maybe it can be 
improved later


Refactorings and memory consumption[refactoring]



Bug 135634 - Cannot Exclude Exception Location for class<T>.getDeclaredMethod 
we should decide whether the answer should be true or false and remove the 
preference settings - no user will ever understand what the setting means

we should decide whether the answer should be true or false and remove the 
preference settings - no user will ever understand what the setting means
I agree with the usability of the current caption. However, don't you think that
it should be an option? In know I may be biased (after all, I made it for
myself), but I think both uses are interesting.

If we have to decide on one of the modes, I guess I'd prefer the one that uses
the implementor search.
I meant lack of usability, of course.
i'm fine to leave it as an option as long as:
- we move the setting of it to the view
- we come up with some wording that people can understand
Created attachment 4633
Fix for the implementors setting

Patch for JDT UI.

This patch removes the Call Hierarchy preference page.

I've changed the implementation into a toggle action which can go into the view
menu. However, I'm currently unable to come up with a decent text which can
somehow describe what the action does. Therefore, I'm not showing the action on
the view menu.

In addition, I've found that the Implementors code is unnecessary when
searching for callers since the SearchEngine already does what I attempt to do:
find calls going to the interface when searching for a method on the
implementation class.

When searching for callees, I still think the functionality is useful. However,
I'm simply not able to describe the function easily.

Anyhow, at least now the preference page is gone...

This patch also includes a small fix to FocusOnSelectionAction which broke
after the change to getAdapter on MethodWrapper.
fix released


call hierarchy: should remove 'search ... using ..' preferences



Backport fix for bug 336514: The performance test JavaReplaceAllTest fails on Linux machine 

Fixed bug 336514: The performance test JavaReplaceAllTest fails on Linux machine 

36514 call hierarchy: should remove 'search ... using ..' preferences 
Test case:

public class StringTest {
	public void foo() {
		new String();
	}
}

create a factory method for new String(). You get

public class StringTest {
	public static String createString() {
		return new String();
	}

	public static String createString() {
		return new String();
	}

	public void foo() {
		StringTest.createString();
	}
}

Test case:

public class StringTest {
	public void foo() {
		new String();
	}
}

create a factory method for new String(). You get

public class StringTest {
	public static String createString() {
		return new String();
	}

	public static String createString() {
		return new String();
	}

	public void foo() {
		StringTest.createString();
	}
}
Happens when using I20031029 as a base build
Didn't properly handle case where constructor was implicit. Fixed in latest 
build.


Introduce Factory creates two factory methods


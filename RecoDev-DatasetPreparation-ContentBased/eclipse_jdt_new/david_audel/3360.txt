Code assist does not work when editing an inner class in a more complex case....

STEPS:
1. Import the NLS Plugin
2. Convert to PDE (in order to get the requisite libraries)
3. Open the class: ExternalizeWizardPage
4. go to the method: createTableViewer
5. try to use code assist when the cursor is on "super." shown on the last line of this snippet.
	private void createTableViewer(Composite composite){
		createTableComposite(composite);
		
		/*
		 * XXX
		 * Feature of CellEditors - double click is ignored.
		 * The workaround is to register my own listener and force the desired 
		 * behavior.
		 */
		fViewer= new TableViewer(fTable){
				protected void hookControl(Control control) {
					super.hookControl(control);

Note: anything after this point does not work either.

Note2: I have tried on a demo class but it does not reproduce this problem see the following:
------------------------cut here------------------------------------------------------------------------->
import org.eclipse.jface.viewers.TableViewer;
import org.eclipse.swt.events.KeyAdapter;
import org.eclipse.swt.events.KeyEvent;
import org.eclipse.swt.widgets.Control;
import org.eclipse.swt.widgets.Table;


public class Foo {

	public static void main(String[] args) {
		System.out.println("DebugTest1, eh");
	}

	public void foo(Table t) {
		Table fTable = t;
		TableViewer fViewer= new TableViewer(fTable) {
				protected void hookControl(Control control) {
					super.hookControl(control);

					((Table) control).addKeyListener(new KeyAdapter() {
						public void keyPressed(KeyEvent e) {
							if(e.
						}
					});
				}
		};
	}
}
------------------------cut here------------------------------------------------------------------------->

NOTES:

KH (9/10/2001 12:00:17 PM)
	Moving to JUI.

Code assist does not work when editing an inner class in a more complex case....

STEPS:
1. Import the NLS Plugin
2. Convert to PDE (in order to get the requisite libraries)
3. Open the class: ExternalizeWizardPage
4. go to the method: createTableViewer
5. try to use code assist when the cursor is on "super." shown on the last line of this snippet.
	private void createTableViewer(Composite composite){
		createTableComposite(composite);
		
		/*
		 * XXX
		 * Feature of CellEditors - double click is ignored.
		 * The workaround is to register my own listener and force the desired 
		 * behavior.
		 */
		fViewer= new TableViewer(fTable){
				protected void hookControl(Control control) {
					super.hookControl(control);

Note: anything after this point does not work either.

Note2: I have tried on a demo class but it does not reproduce this problem see the following:
------------------------cut here------------------------------------------------------------------------->
import org.eclipse.jface.viewers.TableViewer;
import org.eclipse.swt.events.KeyAdapter;
import org.eclipse.swt.events.KeyEvent;
import org.eclipse.swt.widgets.Control;
import org.eclipse.swt.widgets.Table;


public class Foo {

	public static void main(String[] args) {
		System.out.println("DebugTest1, eh");
	}

	public void foo(Table t) {
		Table fTable = t;
		TableViewer fViewer= new TableViewer(fTable) {
				protected void hookControl(Control control) {
					super.hookControl(control);

					((Table) control).addKeyListener(new KeyAdapter() {
						public void keyPressed(KeyEvent e) {
							if(e.
						}
					});
				}
		};
	}
}
------------------------cut here------------------------------------------------------------------------->

NOTES:

KH (9/10/2001 12:00:17 PM)
	Moving to JUI.
PRODUCT VERSION:
Eclipse R0.9


Even a simpler test case (based on stable 06Dec2001 build):

in the following example the code assist does not work 
inside the try block.

import java.io.IOException;

public class test1 {

    static Thread thr = new Thread() {
	public void run() {
	     System.out.println("test");
		try {
		    int c = System.in.read();
		    System.out.println(c);
		} catch (IOException e) {
		}
	}
    };
}


Fixed


Code assist does not work in inner classes (1GJOVT6)



Bug 336092 - Update license feature with latest SUA changes 

BETA_JAVA7 - Fixed bug 336046: Source attachment not recovered when importing Projects 

HEAD - Fixed bug 336046: Source attachment not recovered when importing Projects 

HEAD - Fix for 333360 

HEAD - 223360 

Bug 463360 - [override method][null] generating method override should not create redundant null annotations 

Bug 433605: [CSS] [dark theme] Provide reasonable JDT defaults for syntax color in the dark theme 

Fixed bug 433605: [CSS] [dark theme] Provide reasonable JDT defaults for syntax color in the dark theme 

Bug 433605 - [CSS] [dark theme] Provide reasonable JDT defaults for syntax color in the dark theme 

Bug 336037: [build path] Give better hints when a class path container does not allow modifications 

133609 Java Model Exception: A.java does not exist when Extract Supertype 135057 [refactoring] Extract superclass wizard does not display cus correctly 

133603 'Extract Supertype' dialog size 

43360: convert anonymous to nested should sometimes declare class as static 48282: Convert anonymous to nested: should show error if field form outer anonymous type is references -: protection from errors in source file 

[43360] 

[43360] 
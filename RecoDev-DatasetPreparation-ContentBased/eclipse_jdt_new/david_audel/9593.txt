1) create a class Y
package p1;
public class Y {}
2) create another class Y in another package
package p2;
public class Y{}
3) create a class X
import p2.Y;
public class X{
   /* return Y */
   Y foo(){
      return null;
   }
}

4) select return type of foo and do F3
p2.Y is selected.

5) select Y in the comment and do F3
p1.Y and p2.Y are suggested.

1) create a class Y
package p1;
public class Y {}
2) create another class Y in another package
package p2;
public class Y{}
3) create a class X
import p2.Y;
public class X{
   /* return Y */
   Y foo(){
      return null;
   }
}

4) select return type of foo and do F3
p2.Y is selected.

5) select Y in the comment and do F3
p1.Y and p2.Y are suggested.
Propose the unqualified type.
If there is no unqualified type then propose all qualified types

Fixed


SelectionEngine give more results than expected



Fixed bug 395934: Update branding plugin qualifiers 

HEAD - Fix for 329593 

94897 + 95933 

95933 

Bug 249593 - Cannot set default compiler level for product 

*revert changes for* Bug 249593 - Cannot set default compiler level for product 

Bug 249593 - Cannot set default compiler level for product 

Fixed bug 249593: Cannot set default compiler level for product 

[95937] Leverage new initializeAferLoad method from JDT/Core [95643] [open type] New open type dialog (M7) suggestion 
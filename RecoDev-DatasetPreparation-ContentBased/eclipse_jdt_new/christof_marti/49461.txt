I will attach the offending file and the code formatter prefernces...the error 
is as follows;

Error Jan 02, 2004 14:34:37.937 formatter failed to format (no edit returned). 
Will use unformatted text instead. kind: 8, string: //
// Created on 02-Jan-2004 11:57:29
// Author NIKOLAY
// Description
// Project: Belot (http://belot.sourceforge.net)
//
package org.ninm.games.cardgames.ui.belot;

import java.awt.GridLayout;

import javax.swing.JLabel;
import javax.swing.JPanel;

import org.apache.commons.lang.ArrayUtils;
import org.ninm.games.cardgames.Player;
import org.ninm.games.cardgames.PlayerListener;
import org.ninm.games.cardgames.PlayerPosition;
import org.ninm.games.cardgames.common.Card;
import org.ninm.games.cardgames.common.CardPlayedListener;
import org.ninm.games.cardgames.server.CardGame;
import org.ninm.games.cardgames.server.RemoteEngine;

/**
 * @author NIKOLAY
 */
public class OtherPlayersPanel extends JPanel implements CardPlayedListener, 
PlayerListener
{
   private final CardPanel m_myCardHolder = new CardPanel();
   private final CardPanel m_partnerCardHolder = new CardPanel();
   private final CardPanel m_leftCardHolder = new CardPanel();
   private final CardPanel m_rightCardHolder = new CardPanel();
   private final int m_myIndex;
   private final int m_partnerIndex;
   private final int m_leftIndex;
   private final int m_rightIndex;
   private final JLabel m_partnerLabel = new JLabel();
   private final JLabel m_leftLabel = new JLabel();
   private final JLabel m_rightLabel = new JLabel();
   
   /**
    * @param game
    * @param engine
    */
   public OtherPlayersPanel(final CardGame game, final RemoteEngine engine)
   {
      final Player[] players = game.getPlayers();
      final Player myPlayer = engine.getMyPlayer();
      m_myIndex = ArrayUtils.indexOf(players, myPlayer);
      m_partnerIndex = m_myIndex + 2 % 4;
      m_leftIndex = m_myIndex + 1 % 4;
      m_rightIndex = m_myIndex + 3 % 4;
      setLayout(new GridLayout(2, 5));
      add(new JPanel());
      m_partnerLabel.setText(players[m_partnerIndex].getName());
      add(m_partnerLabel);
      add(m_partnerCardHolder);
      add(new JPanel());
      add(new JPanel());
      add(new JLabel(players[m_leftIndex].getName()));
      add(m_leftCardHolder);
      add(m_myCardHolder);
      add(m_rightCardHolder);
      add(new JLabel(players[m_rightIndex].getName()));
      engine.addCardPlayedListener(this);
      engine.addPlayerListener(this);
   }
   
   private CardPanel getCardPanel(final PlayerPosition position)
   {
      final int value = position.getValue();
      assert value >= 0 && value <= 4;
      if(value == m_leftIndex)
      {
         return m_leftCardHolder;
      }
      else if(value == m_rightIndex)
      {
         return m_rightCardHolder;
      }
      else if(value == m_partnerIndex)
      {
         return m_partnerCardHolder;
      }
      else if(value == m_myIndex)
      {
         return m_myCardHolder;
      }
      else
      {
         return null;
      }
   }
   
   private JLabel getNameLabel(final PlayerPosition position)
   {
      final int value = position.getValue();
      assert value >= 0 && value <= 4;
      if(value == m_leftIndex)
      {
         return m_leftLabel;
      }
      else if(value == m_rightIndex)
      {
         return m_rightLabel;
      }
      else if(value == m_partnerIndex)
      {
         return m_partnerLabel;
      }
      else
      {
         return null;
      }
   }
   
   /**
    * @{inheritDoc}
    */
   public void cardPlayed(final PlayerPosition position, final Card card)
   {
      final CardPanel cardPanel = getCardPanel(position);
      cardPanel.setCard(new org.ninm.games.cardgames.ui.Card(card));
   }

   /**
    * @{inheritDoc}
    */
   public void playerJoined(final PlayerPosition position, final Player player)
   {
      getNameLabel(position).setText(player.getName());
   }

   /**
    * @{inheritDoc}
    */
   public void playerLeft(PlayerPosition position)
   {
      getNameLabel(position).setText("Empty");
   }

}

I will attach the offending file and the code formatter prefernces...the error 
is as follows;

Error Jan 02, 2004 14:34:37.937 formatter failed to format (no edit returned). 
Will use unformatted text instead. kind: 8, string: //
// Created on 02-Jan-2004 11:57:29
// Author NIKOLAY
// Description
// Project: Belot (http://belot.sourceforge.net)
//
package org.ninm.games.cardgames.ui.belot;

import java.awt.GridLayout;

import javax.swing.JLabel;
import javax.swing.JPanel;

import org.apache.commons.lang.ArrayUtils;
import org.ninm.games.cardgames.Player;
import org.ninm.games.cardgames.PlayerListener;
import org.ninm.games.cardgames.PlayerPosition;
import org.ninm.games.cardgames.common.Card;
import org.ninm.games.cardgames.common.CardPlayedListener;
import org.ninm.games.cardgames.server.CardGame;
import org.ninm.games.cardgames.server.RemoteEngine;

/**
 * @author NIKOLAY
 */
public class OtherPlayersPanel extends JPanel implements CardPlayedListener, 
PlayerListener
{
   private final CardPanel m_myCardHolder = new CardPanel();
   private final CardPanel m_partnerCardHolder = new CardPanel();
   private final CardPanel m_leftCardHolder = new CardPanel();
   private final CardPanel m_rightCardHolder = new CardPanel();
   private final int m_myIndex;
   private final int m_partnerIndex;
   private final int m_leftIndex;
   private final int m_rightIndex;
   private final JLabel m_partnerLabel = new JLabel();
   private final JLabel m_leftLabel = new JLabel();
   private final JLabel m_rightLabel = new JLabel();
   
   /**
    * @param game
    * @param engine
    */
   public OtherPlayersPanel(final CardGame game, final RemoteEngine engine)
   {
      final Player[] players = game.getPlayers();
      final Player myPlayer = engine.getMyPlayer();
      m_myIndex = ArrayUtils.indexOf(players, myPlayer);
      m_partnerIndex = m_myIndex + 2 % 4;
      m_leftIndex = m_myIndex + 1 % 4;
      m_rightIndex = m_myIndex + 3 % 4;
      setLayout(new GridLayout(2, 5));
      add(new JPanel());
      m_partnerLabel.setText(players[m_partnerIndex].getName());
      add(m_partnerLabel);
      add(m_partnerCardHolder);
      add(new JPanel());
      add(new JPanel());
      add(new JLabel(players[m_leftIndex].getName()));
      add(m_leftCardHolder);
      add(m_myCardHolder);
      add(m_rightCardHolder);
      add(new JLabel(players[m_rightIndex].getName()));
      engine.addCardPlayedListener(this);
      engine.addPlayerListener(this);
   }
   
   private CardPanel getCardPanel(final PlayerPosition position)
   {
      final int value = position.getValue();
      assert value >= 0 && value <= 4;
      if(value == m_leftIndex)
      {
         return m_leftCardHolder;
      }
      else if(value == m_rightIndex)
      {
         return m_rightCardHolder;
      }
      else if(value == m_partnerIndex)
      {
         return m_partnerCardHolder;
      }
      else if(value == m_myIndex)
      {
         return m_myCardHolder;
      }
      else
      {
         return null;
      }
   }
   
   private JLabel getNameLabel(final PlayerPosition position)
   {
      final int value = position.getValue();
      assert value >= 0 && value <= 4;
      if(value == m_leftIndex)
      {
         return m_leftLabel;
      }
      else if(value == m_rightIndex)
      {
         return m_rightLabel;
      }
      else if(value == m_partnerIndex)
      {
         return m_partnerLabel;
      }
      else
      {
         return null;
      }
   }
   
   /**
    * @{inheritDoc}
    */
   public void cardPlayed(final PlayerPosition position, final Card card)
   {
      final CardPanel cardPanel = getCardPanel(position);
      cardPanel.setCard(new org.ninm.games.cardgames.ui.Card(card));
   }

   /**
    * @{inheritDoc}
    */
   public void playerJoined(final PlayerPosition position, final Player player)
   {
      getNameLabel(position).setText(player.getName());
   }

   /**
    * @{inheritDoc}
    */
   public void playerLeft(PlayerPosition position)
   {
      getNameLabel(position).setText("Empty");
   }

}
Created attachment 7303
offending file
Created attachment 7304
offending preferences
Martin, please investigate.
This may be caused by the assert-statement? 

I have code that fails to reformat too (with the same error message), unless I
temporary uncomment the assert-statements.

Unfortunately the attchement is too complex to verify if this is the same
problem here. I will attach a File which causes the same problem for me.

Created attachment 7312
Simple example which also causes reformat to fail
The problem shows up when you have project specific compiler settings

The options map that is passed to the formatter should be taken from the 
project, but is currently take from the workspace (JavaSourceViewer line 100)
The formatter needs the correct information if the source file is 1.4 (uses 
assert) or not.

Moving to text.
Adapted summary.

Please consider in your work respecting the task tags project prefs. Your
chained preference store should be reusable in this scenario.

We could then change JavaSourceViewerConfiguration.getPreferenceStore() to
return such a chained preference store. The JavaSourceViewer would then have to
use that store to configure the formatter. Of course we also need to tweak the
CommentFormattingContext - probably by adding a new class into the hierarchy.

Setting up the formatting context (JavaSourceViewer#createFormattingContext())
requires a Map with all preferences. Starting from an IPreferenceStore (like the
ChainedPreferenceStore) we would need a list of the relevant preference keys
(like we have for comment formatting in CommentFormattingContext) in order to
create that store.

At least in 3.0M7 this is unrelated to project-specific preferences.

If I create a new project with no preferences, the following still won't
format until I comment out the assert statement, even though my 
workspace preferences are straight 1.4 for compiler compliance.
(And adding project-specific java preferences doesn't help.)

public class UPDialog {
	    int a; int b;int c;
		public void setInitializationData(
			Object data) {
			assert data != null;
		}

}

Ahh, I just tried the assert example in the jdt.core HEAD and
it worked fine; please disregard the comment.

*** Bug 56142 has been marked as a duplicate of this bug. ***
Released Christof's patch.
Available in builds > 20040330



[preferences] code formatter not configured with Java project options



Released Christof's patch for bug 49461: [preferences] code formatter not configured with Java project options 
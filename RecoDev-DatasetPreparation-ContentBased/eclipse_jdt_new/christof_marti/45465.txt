For example, given a javadoc with tags that are not recognized, (i.e., xdoclet 
tags for instance):

	/**
	 * @hibernate.set 
	 *  lazy="true" 
	 *  table="GUJArticleCategorization"
	 *  cascade="save-update" 
	 * @hibernate.collection-key 
	 *  column="articleId"
	 * @hibernate.collection-many-to-many 
	 *  class="br.com.guj.model.Category"
	 *  column="categoryId"
	 * 
	 * @return categorias deste artigo
	 */
	public Category getCategory() {
		return this.category;
	}

After reformatting:

	/**
	 * @hibernate.set lazy="true" table="GUJArticleCategorization"
	 * cascade="save-update" @hibernate.collection-key column="articleId"
	 * @hibernate.collection-many-to-many class="br.com.guj.model.Category"
	 * column="categoryId"
	 * 
	 * @return categorias deste artigo
	 */
	public Category getCategory() {
		return this.category;
	}

Everything in a single line until it reachs the line size limit

And there is NO option that can prevent this reformat. XDoclet will not 
recognize tags like this, if there is some text before them! 

Tested in M4. linux motif and winXP

For example, given a javadoc with tags that are not recognized, (i.e., xdoclet 
tags for instance):

	/**
	 * @hibernate.set 
	 *  lazy="true" 
	 *  table="GUJArticleCategorization"
	 *  cascade="save-update" 
	 * @hibernate.collection-key 
	 *  column="articleId"
	 * @hibernate.collection-many-to-many 
	 *  class="br.com.guj.model.Category"
	 *  column="categoryId"
	 * 
	 * @return categorias deste artigo
	 */
	public Category getCategory() {
		return this.category;
	}

After reformatting:

	/**
	 * @hibernate.set lazy="true" table="GUJArticleCategorization"
	 * cascade="save-update" @hibernate.collection-key column="articleId"
	 * @hibernate.collection-many-to-many class="br.com.guj.model.Category"
	 * column="categoryId"
	 * 
	 * @return categorias deste artigo
	 */
	public Category getCategory() {
		return this.category;
	}

Everything in a single line until it reachs the line size limit

And there is NO option that can prevent this reformat. XDoclet will not 
recognize tags like this, if there is some text before them! 

Tested in M4. linux motif and winXP
Do you have the Format comment option selected in Preferences>Java>Code
Formatter>Comments?
Move to JDT/UI.
I can only get this wrong formatting by selecting the option "Format comments"
in the code formatter preference page. This is using a different formatter.
Olivier, yes, the doc formatter is turned on. but ALL the options are turned
off, and I tried every single combination.

If I disable the formatter, than it works, but if I want my tags
formatted/indented and so on, I dont have a way to do this without messing with
my xdoclet tags
Moving back to inbox for reassignment.
*** Bug 49087 has been marked as a duplicate of this bug. ***
*** Bug 49941 has been marked as a duplicate of this bug. ***
*** Bug 50005 has been marked as a duplicate of this bug. ***
*** Bug 48236 has been marked as a duplicate of this bug. ***
*** Bug 50105 has been marked as a duplicate of this bug. ***
*** Bug 54438 has been marked as a duplicate of this bug. ***
If a non-standard tag is detected, no formatting is performed in the considered
comment (since I20040309).

A more interesting alternative could be to keep non-standard tags and their
content up to the next tag without modification. The other parts of the comment
could still be formatted.


Please assign the PR to me.
*** Bug 58341 has been marked as a duplicate of this bug. ***
We decided to fix this by using the same formatting style for custom tags as for
the @param tags.

Sounds OK for us.
Fixed in builds >=I200406101200
*** Bug 67487 has been marked as a duplicate of this bug. ***
This bug is still present in:
Version: 3.0.0
Build id: 200406251208
Cannot reproduce. Custom tags are now formatted like, e.g., @return (@param as
proposed didn't make sense). Please provide the comment with which you observe
the problem. Thanks.

Before formatting (ctrl-shift-F)
/** 
 * @ejb.bean name="TestServer" 
 *           type="Stateless" 
 *           view-type="remote"
 *           jndi-name="ejb/TestServerHome"
 * @ejb.remote-facade 
 * @ejb.util generate="physical"
 */

After formatting (ctrl-shift-F)
/**
 * @ejb.bean name="TestServer" type="Stateless" view-type="remote"
 *           jndi-name="ejb/TestServerHome"
 * @ejb.remote-facade @ejb.util generate="physical"
 */

I can live with the rearrangement of the @ejb.bean tag. But, placing
@ejb.remote-facade and @ejb.util on the same line breaks XDoclet.


Update (workaround): 
If the positions of the @ejb.util and @ejb.remote-facade are swaped formatting
turns out ok. The bug seems to appear when the @tag has no value associated with it.

Before formatting:
/** 
 * @ejb.bean name="TestServer" 
 *           type="Stateless" 
 *           view-type="remote"
 *           jndi-name="ejb/TestServerHome"
 * @ejb.util generate="physical"
 * @ejb.remote-facade 
 */

After formatting:
/**
 * @ejb.bean name="TestServer" type="Stateless" view-type="remote"
 *           jndi-name="ejb/TestServerHome"
 * @ejb.util generate="physical"
 * @ejb.remote-facade
 */
I opened bug 69277 to track this issue. Thanks!



[formatting] New Formatter does not respect non javadoc @tags lines



Fix Bug 45465: [formatting] New Formatter does not respect non javadoc @tags lines 
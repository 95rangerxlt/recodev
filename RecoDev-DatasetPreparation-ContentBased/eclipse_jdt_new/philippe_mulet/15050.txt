We need to clean up the @exception tags in the javadocs of DOM/AST APIs.
Here are the 
replacements.

$precondition-violation:null-child$ IllegalArgumentException if the 
child is null
$precondition-violation:different-ast$  IllegalArgumentException if the node 
belongs to a different AST
$precondition-violation:incorrect-child-type$  
IllegalArgumentException if the child has the incorrect node type
$precondition-
violation:not-unparented$  IllegalArgumentException if the node already has a 
parent
$postcondition-violation:ast-cycle$  IllegalArgumentException if a cycle in would be 
created

$precondition-violation:empty-identifier-list$  IllegalArgumentException if 
the list of identifiers is empty
$precondition-violation:duplicate-element$  
IllegalArgumentException if the list of contains duplicate elements
$precondition-
violation:null-element$  IllegalArgumentException if the list of contains a null 
element

$precondition-violation:invalid-java-identifier$  IllegalArgumentException if 
the identifier is invalid
$precondition-violation:invalid-comment$  
IllegalArgumentException if the comment string is invalid
$precondition-
violation:invalid-javadoc-comment$  IllegalArgumentException if the Java comment string is 
invalid
$precondition-violation:invalid-primitive-type-code$  IllegalArgumentException 
if the primitive type code is invalid
$precondition-violation:invalid-literal$  
IllegalArgumentException if the literal is invalid
$postcondition-violation:invalid-
literal$ IllegalArgumentException if the literal value cannot be converted
$precondition-
violation:illegal-argument$ IllegalArgumentException if the argument is 
incorrect
$precondition-violation:illegal-modifiers$ IllegalArgumentException if the 
modifiers are illegal
$precondition-violation:negaitve-dimensions$ 
IllegalArgumentException if the number of dimensions is negative

We need to clean up the @exception tags in the javadocs of DOM/AST APIs.
Here are the 
replacements.

$precondition-violation:null-child$ IllegalArgumentException if the 
child is null
$precondition-violation:different-ast$  IllegalArgumentException if the node 
belongs to a different AST
$precondition-violation:incorrect-child-type$  
IllegalArgumentException if the child has the incorrect node type
$precondition-
violation:not-unparented$  IllegalArgumentException if the node already has a 
parent
$postcondition-violation:ast-cycle$  IllegalArgumentException if a cycle in would be 
created

$precondition-violation:empty-identifier-list$  IllegalArgumentException if 
the list of identifiers is empty
$precondition-violation:duplicate-element$  
IllegalArgumentException if the list of contains duplicate elements
$precondition-
violation:null-element$  IllegalArgumentException if the list of contains a null 
element

$precondition-violation:invalid-java-identifier$  IllegalArgumentException if 
the identifier is invalid
$precondition-violation:invalid-comment$  
IllegalArgumentException if the comment string is invalid
$precondition-
violation:invalid-javadoc-comment$  IllegalArgumentException if the Java comment string is 
invalid
$precondition-violation:invalid-primitive-type-code$  IllegalArgumentException 
if the primitive type code is invalid
$precondition-violation:invalid-literal$  
IllegalArgumentException if the literal is invalid
$postcondition-violation:invalid-
literal$ IllegalArgumentException if the literal value cannot be converted
$precondition-
violation:illegal-argument$ IllegalArgumentException if the argument is 
incorrect
$precondition-violation:illegal-modifiers$ IllegalArgumentException if the 
modifiers are illegal
$precondition-violation:negaitve-dimensions$ 
IllegalArgumentException if the number of dimensions is negative
Fixed and released in HEAD.


Cleanup Javadoc @exception tags in DOM/AST



Bug 466675: A number of "class file" comparator errors in I20150506-2000 

Update for 15050 

Fix for 15050 
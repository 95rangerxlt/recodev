1. Auto-build on
2. Create J project A with junit.jar on build path
3. Create J project B with new class C
4. Try to add a JUnit class to C with code assist ==> does not work (OK)
5. Change A to export junit.jar
4. Try to add a JUnit class to C with code assist ==> does not work
This is wrong, it should work.

I now have to force a build of project B to be able to continue work.

1. Auto-build on
2. Create J project A with junit.jar on build path
3. Create J project B with new class C
4. Try to add a JUnit class to C with code assist ==> does not work (OK)
5. Change A to export junit.jar
4. Try to add a JUnit class to C with code assist ==> does not work
This is wrong, it should work.

I now have to force a build of project B to be able to continue work.
Two additional remarks (which made me change the severity to critical)

1. It was not the build that fixed the problem. Actually not even a full build
fixes the problem! You have to open B's properties and save them again

2. The problem is with code assist. I can add classes via code assist and then
the compiler complains correctly. Even after showing me error ticks I can use
code assist to add classes out of scope unless I touch the project build path.


Which build was this in ?
You need to put A on the classpath of project B.
Sorry:
- Build I20020129
- and of course: add project A on the classpath of project B when creating B


Bug was that if the only change was on the export flag, we did not force to 
refresh dependent projects.
Good find.
Fixed.


Changing export state not propagated



Fixed bug 477891 - [1.8] regression caused by the fix for bug 438812: order dependencies in analysis of default method inheritance 

Fixed Bug 438812 - Missing bridge methods in indirect child classes with ECJ 3.10.0 

Fixed Bug 438812 - Missing bridge methods in indirect child classes with ECJ 3.10.0 

HEAD - bug 188127 

88126 [ast rewrite] Inconsistent results in modifying TagElements 

88124 

Fixed bug 288121: [perfs] Comments applied for performance tests are obsolete 

Bug 198812 [Extract Class] no message if parameterName is already in use 
I've found that Eclipse's memory footprint tends to grow larger and larger the 
longer I keep it running.

When I start up Eclipse using Hursley's 1.3.0 VM, it has about an 86MB 
footprint.  Today, after it had been running for about 3 days, I had to kill 
the Eclipse process because it had brought my 512MB machine to its knees.  
Eclipse was using over 360MB of RAM, and its virtual memory usage was even 
higher.

I don't really know which component to report this against, as it's not clear 
to me what actions cause the memory bloat.

I've found that Eclipse's memory footprint tends to grow larger and larger the 
longer I keep it running.

When I start up Eclipse using Hursley's 1.3.0 VM, it has about an 86MB 
footprint.  Today, after it had been running for about 3 days, I had to kill 
the Eclipse process because it had brought my 512MB machine to its knees.  
Eclipse was using over 360MB of RAM, and its virtual memory usage was even 
higher.

I don't really know which component to report this against, as it's not clear 
to me what actions cause the memory bloat.
I have noticed a bigger memory footprint since 20020214, after having switched 
to team2.0. However, I have no evidence of this causing trouble so far.

I had been running the same jdtcore for a week before, and hadn't noticed any 
such increase of the footprint, so I don't think this would be jdtcore but 
rather some new component.
After restarting my session my memory footprint was 86MB.  After about an hour 
of playing around (not much real work got done, mostly searching) the image had 
grown to 152MB.

I'm suspicious that searching might be at least partially responsible for the 
bloat.

I will leave it running overnight now to see if it grows while idle (hopefully 
not!)

I'm really starting to think that Search is to blame.  I did a search for 
references to setText().  This caused to VM's footprint to increase by about 
30MB!

Even if I select 'Remve All Searches' after each search, searching for setText
() causes about 30MB of growth each time I do it.

I need to exit and restart Eclipse to reclaim that memory.
This is because the Search is populating the JavaModel cache, and consumes some 
memory, which isn't freed until the cache is emptied. We are releasing 
significant changes in this area (search no longer populates the model) in next 
integration build 20020312.

Marking this defect as fixed, please reopen if symptoms occur again with 
20020312 or better.


Possible memory leak?



-fixed Bugzilla 105388 -initialize primitive type in processor environment with recommended API. 
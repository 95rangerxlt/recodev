In case this should work, the following code produces a compile error:
   java.util.Arrays.asList(new Object[] {"1"})

"The method asList(T[]) in the type Arrays is not applicable for the arguments
(Object[])".

I apologize if this is a known issue (I didn't see it listed when I looked for
bugs with "[1.5]" in the summary).

I20040407 w/ the just released kitten... I mean Cheetah :-) (I don't know how to
find version number).

In case this should work, the following code produces a compile error:
   java.util.Arrays.asList(new Object[] {"1"})

"The method asList(T[]) in the type Arrays is not applicable for the arguments
(Object[])".

I apologize if this is a known issue (I didn't see it listed when I looked for
bugs with "[1.5]" in the summary).

I20040407 w/ the just released kitten... I mean Cheetah :-) (I don't know how to
find version number).
This isn't a known problem. Thanks for telling us.

BTW, you can see the cheetah version under:
Help>About Eclipse Platform>Feature details>org.eclipse.jdt.cheetah01 

This means you have the first issue of cheetah.

Thanks. :-) Just to have it down, this is with Cheetah 0.0.1.
This problem comes from the fact we do not yet support generic methods (i.e. 
methods which do declare type parameters).

public static <T> List<T> asList(T[] a) { ... }

Good test once we support them.
Support for generic method got released. This scenario now works.
Fixed.
I just started using Eclipse 3.1m5a and ran into what appears to be this same
problem.  If I have 
List l = Arrays.asList(intarray);
Eclipse complains that "The method asList(T...) in the type Arrays is not
applicable for the arguments (int[])"
It works fine if I pass asList a list of items, but it doesn't work if I pass
it an array.	

Entered separate defect (bug#87318) for remaining issue.
Suspecting this has to do with being an array of primitive type.


[1.5] Errors using Arrays.asList(T [])



157784: [rename] Linked mode should be left immediately on external updates 
I20031211

The method collectAffectedUnits contains shouldn't contain code like 

if (selectedMethod == null){
    throw new Error(RefactoringCoreMessages.getString
("ChangeTypeAction.exception")); //$NON-NLS-1$
}

Bindins.finsMethod can return null and the code should handle the case and not 
throw an error which isn't very helpful for the user. So please check this in 
checkActivation/checkInput and generate a corresponding refactoring status.

I20031211

The method collectAffectedUnits contains shouldn't contain code like 

if (selectedMethod == null){
    throw new Error(RefactoringCoreMessages.getString
("ChangeTypeAction.exception")); //$NON-NLS-1$
}

Bindins.finsMethod can return null and the code should handle the case and not 
throw an error which isn't very helpful for the user. So please check this in 
checkActivation/checkInput and generate a corresponding refactoring status.
Same for checking the field.
Created attachment 9664
patch for bugs 48732, 55528, 58295, and 54247

patch for bugs 48732, 55528, 58295, and 54247
Created attachment 9665
additional JUnit test

One additional test.
Hi Dirk,

I just attached two patch files to this bug. This will take care of bugs
48732, 55528, 58295, and 54247. I could not reproduce bug 48979 (it seemed
to work fine). 

Note: I had trouble working with HEAD, and created these patches against
the 04/13 integration build version. The changes are small, so you shouldn't
have a big problem reconciling these with HEAD.

  -Frank
Frank, 

some comments to the patch:

48732: instead of putting an assert we could add a check in checkSelection
  after the call detemineSelection. This would result in a better error 
  message than an assert. Same is true for the code in setSelectedType.

55528: we should log the exception using JavaPlugin.log. Otherwise it will
  be hard to find problem if we really get the exception. I added the code.

54247: the catch of the NPE seems strange. I think I already fixed this one
  by putting the returnType == null check in a while ago. Looking at the code
  in Signature.toString a NPE can only happen if the argument (e.g the 
  returnType is null). I removed the try/catch block.

Frank, can you please comment regarding the asserts.
More comments regarding 58295: it seems that we know build a type hierarchy on 
Object in the UI thread without showing any progress to the user. Since this 
can take a while we can't put that fix in since the use gets the impression 
that the whole UI frooze.
Created attachment 9721
revised patch for bugs 48732, 55528, 58295, and 54247
Created attachment 9724
revised patch for tests
Hi Dirk,

Some comments on your remarks:

>48732: instead of putting an assert we could add a check in checkSelection
>  after the call detemineSelection. This would result in a better error 
>  message than an assert. Same is true for the code in setSelectedType.

I replaced the first assert by a check in checkSelection, as you suggested.
The second assert was concerned with a method that is only invoked from within
the test harness (i.e., not from the GUI). I eliminated the need for a
check by having the test harness provide an IType instead of a String.

>55528: we should log the exception using JavaPlugin.log. Otherwise it will
>  be hard to find problem if we really get the exception. I added the code.

Done.

>54247: the catch of the NPE seems strange. I think I already fixed this one
>  by putting the returnType == null check in a while ago. Looking at the code
>  in Signature.toString a NPE can only happen if the argument (e.g the 
>  returnType is null). I removed the try/catch block.

I removed this, as you suggested.

>More comments regarding 58295: it seems that we know build a type hierarchy on 
>Object in the UI thread without showing any progress to the user. Since this 
>can take a while we can't put that fix in since the use gets the impression 
>that the whole UI frooze.

I couldn't find an easy way to delay the creation of the type hierarchy because
the wizard depends on it. I will try to come up with an improved version next
week.

Can you please incorporate these patches and close the related bugs?

Thanks,

  -Frank

Some more comments:

- in method collectAffectedUnits there is a comment saying that

// To compute the scope we have to use the selected method. Otherwise we
// might start from the wrong project.

The code got changed to use the root now instead of the selected method which
is exactly what the commented wanted to avoid.

- for the logging: you should use JavaPluging.log(e);. Always log the full
  exception.

Frank can you please look at my first comment before I release the patch.

Created attachment 9849
revised patch for bugs 48732, 55528, 58295, and 54247

Hi Dirk,

This should address your concerns. Please let me know before 3pm today if
you need anything else.

regards,

  -Frank
Released patch and closed PR except 58295. Frank can you please comment on 
this bug.


ChangeTypeRefactoring: shouldn't create Error exception



[48732] 
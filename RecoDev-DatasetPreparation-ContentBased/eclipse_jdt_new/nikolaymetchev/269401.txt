Build ID: I20090313-0100   (3.5M6)

Please try to inline the method foo() and see the result is illegal.

class Bug {
	{
		int y=4;
		foo(y);
	}
	void foo(final int x){
		new Runnable(){
			public void run(){
				System.out.println(x);
			}};
	}
}

Build ID: I20090313-0100   (3.5M6)

Please try to inline the method foo() and see the result is illegal.

class Bug {
	{
		int y=4;
		foo(y);
	}
	void foo(final int x){
		new Runnable(){
			public void run(){
				System.out.println(x);
			}};
	}
}
I have a very similar example. I am not sure if it is the same bug:
class Bug
{
  void m(String m)
  {
    inlineMe(m.substring(3));
  }
  
  void inlineMe(final String n)
  {
    new Runnable()
    {
      @Override
      public void run()
      {
        System.out.println(n.trim());
      }
    };
    
    n.trim();
  }
}
Created attachment 234009
patch for this bug

10 Years ago I contributed a patch to a bug. I thought it about time I try it again. This patch fixes the problem without breaking any of the tests, however there may be room for improvement.
Please let me know what you think.
Noopur, please do an initial review.
Comment on attachment 234009
patch for this bug

Patch fixes the issues mentioned in the bug report.

Some comments:
- Patch contains extra .gitignore file.
- ParameterData.isFinal() should use Modifier.isFinal(int flags).
- Instead of modifying the signature of CallInliner#createLocalDeclaration(..), the 'final' modifier can be added to its returned value in #computeRealArguments().
- InlineEvaluator#visit(SimpleName node) only checks if the formal argument is final or not. It should also consider the variable being visited.
Only if the formal arg is final and the variable being visited is not final, it should set the result to false.
For example, in comment #1 if 'int y=4' was 'final int y=4', then it should not create another local variable declaration while inlining, as 'y' itself can be used.
- Please add a test for the above 'final int y=4' case and rename the test files as TestFinalParameter1/2/3.
Also, rename the test methods accordingly and specify the bug number in comment.

Please take care of these general guidelines:
- Add your credentials to the copyright headers
- Make sure the copyright date is updated to 2013
- Post this in the bug report as a comment: "This contribution complies with http://www.eclipse.org/legal/CoO.php"
Created attachment 234373
Code review changes, bug fix + unit test

This contribution complies with http://www.eclipse.org/legal/CoO.php
Thanks Noopur for your comments.
I have attached a new patch.
Thanks Nikolay. Released with:
http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=158c786fed25c1146fc5d390724079908d091994


[inline] Anonymous class using final parameter breaks method inlining.



Fixed bug 269401: [inline] Anonymous class using final parameter breaks method inlining. 
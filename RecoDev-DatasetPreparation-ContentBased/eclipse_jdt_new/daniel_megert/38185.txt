public class X {

        /**<hit Enter>
	public static Object foo(int bar, Object baz) {
		return null;
	}
}

Will produce:

public class X {

	/**
	 * 
	 * @param bar
	 * @param baz
	 * @return
	 */
	public static Object foo(int bar, Object baz) {
		return null;
	}
}
@@@@

public class X {
        
        //comment

        /**<hit Enter>
	public static Object foo(int bar, Object baz) {
		return null;
	}
}

Will produce:

public class X {

	//comment
	
	/**
	 * 
	 */
	public static Object foo(int bar, Object baz) {
		return null;
	}
}

public class X {

        /**<hit Enter>
	public static Object foo(int bar, Object baz) {
		return null;
	}
}

Will produce:

public class X {

	/**
	 * 
	 * @param bar
	 * @param baz
	 * @return
	 */
	public static Object foo(int bar, Object baz) {
		return null;
	}
}
@@@@

public class X {
        
        //comment

        /**<hit Enter>
	public static Object foo(int bar, Object baz) {
		return null;
	}
}

Will produce:

public class X {

	//comment
	
	/**
	 * 
	 */
	public static Object foo(int bar, Object baz) {
		return null;
	}
}
works for me using I20030930
Can reproduce with I20030930 -- clean install.

Perhaps I should clarify what I want:

public class X {
        
        //comment

        /**<hit Enter>
	public static Object foo(int bar, Object baz) {
		return null;
	}
}

should produce:

public class X {

	/**
	 * 
	 * @param bar
	 * @param baz
	 * @return
	 */
	public static Object foo(int bar, Object baz) {
		return null;
	}
}
oops cut'n'paste error:

public class X {

        //comment

	/**
	 * 
	 * @param bar
	 * @param baz
	 * @return
	 */
	public static Object foo(int bar, Object baz) {
		return null;
	}
}
OK. When I tested it I simply used Add Javadoc command which does the job
correctly. /** + Enter seems to run through different code.

The "Add Javadoc" command does not work "properly" in my opinion also:

public class X {

    public void test() {}
    
    //todo should we add another method test(int) here?
    
    public static Object foo(int bar, Object baz) {
        return null;
    }
}

Will produce:

public class X {

    public void test() {}
    
    /**
     * @param bar
     * @param baz
     * @return
     */
    //todo should we add another method test(int) here?
    
    public static Object foo(int bar, Object baz) {
        return null;
    }
}

I would prefer if it inserts the javadoc _directly_ in front of the method
declaration:

public class X {

    public void test() {}

    //todo should we add another method test(int) here?
    
    /**
     * @param bar
     * @param baz
     * @return
     */
    public static Object foo(int bar, Object baz) {
        return null;
    }
}

The comment in front of the method might not belong to the method but might
rather be a comment for the class or a general "Todo".
The general problem is that we don't call "Add Javadoc" when /** + Enter is
typed. Since this is the original PR I adapted the summary. Can you please file
a separate bug for the placemnet of the single line commnent since these are two
separate issues.

Regarding the place of the single line comment, the "might" in your sentence is
key: we can only guess whether it belongs to the  method above or below.

Are the following examples identical? I guess not from looking at example 2 and
3 since the programmer probably tried to assign the comment to one of the two
methods using line separation. However, programmer in 4 mentions directly the
method. He does not care about spacing since he will use the code formatter at a
later point.

1)
m1()
// singleLineComment
m2()

2)
m1()

// singleLineComment
m2()

3)
m1()
// singleLineComment

m2()

4)
m1()

// singleLine comment referring to m1
m2()
*** Bug 69556 has been marked as a duplicate of this bug. ***
*** Bug 69992 has been marked as a duplicate of this bug. ***
This appears to have been corrected in the 3.1 build as early as the 8-10-2004 
build.  Yet there has been any updates to this bug/issue since Nov 2003 other 
than duplicate issues.

Shouldn't this bug reflect the work done in 3.1?  Just wondering :)
No it is not fixed.
*** Bug 95699 has been marked as a duplicate of this bug. ***
*** Bug 107303 has been marked as a duplicate of this bug. ***
*** Bug 121188 has been marked as a duplicate of this bug. ***
*** Bug 123898 has been marked as a duplicate of this bug. ***
*** Bug 130126 has been marked as a duplicate of this bug. ***
If a method overrids a parent method or implements a method of an interface, /**+Enter should automatically copy the parent javadoc. Or /**+Enter should generate the following:
/**
 *@see .......
 */
Sorry but that comment is unrealted to this bug.
*** Bug 168534 has been marked as a duplicate of this bug. ***
*** Bug 253960 has been marked as a duplicate of this bug. ***
*** Bug 277432 has been marked as a duplicate of this bug. ***
*** Bug 331656 has been marked as a duplicate of this bug. ***
Fixed in HEAD.
Available in builds >= N20101203-2000.


[typing] /** + Enter should do the same as "Add Javadoc"



Fixed bug 38185: [typing] /** + Enter should do the same as "Add Javadoc" 
When doing Source->Externalize Strings, and after performing the 
externalization process, pressing Ctrl-Click finds the file but not the string,
if the externalization key used contains non-ASCII characters.

Steps to re-create problem:

1) Create a Java Project called project1.
2) Create a package called package1 inside project1.
3) Create a non-ASCII Java class inside package1 (for example, one that uses 
Finnish characters).
4) Add two or more System.out.println statements with strings (can be either 
ASCII or non-ASCII).
5) Do Source->Externalize Strings, and use all default settings.
6) Press Externalize and complete the externalization process.
7) After the process is complete, there should be several statements such as 
this:

System.out.println(Messages.getString("<externalization key>.1"));

8) Press Ctrl and click the "1" portion, which should be underlined.


Error:
After clicking the "1", the JDT correctly jumps to the .properties file, but 
does not correctly find the externalized string.  In addition, a red-colored 
message appears in the lower left corner of Eclipse saying:

"The key <externalization key>.1 is not defined in this properties file."


After testing this again, but using an ASCII externalization key, the JDT 
successfully finds each string with no problem.  The problem only happens when 
a non-ASCII (such as Finnish) externalization key is chosen.

By default, the JDT automatically chooses the Java Class name to be used as the 
externalization key.  Using a non-ASCII, Finnish, Java Class name poses no 
problems by itself, because such strings are supported by Java.
However, once this non-ASCII string is used as the externalization key, which 
JDT does by default, the Ctrl-Click functionality to find an externalized 
string does not work correctly.

I suggest that changes be taken to prevent a non-ASCII externalization key from 
being chosen.  For instance, the JDT can automatically substitute non-ASCII 
characters with certain ASCII characters, so that the Ctrl-Click will work 
correctly.  Or maybe suggest the user to change the key name to one that only 
uses ASCII characters.

When doing Source->Externalize Strings, and after performing the 
externalization process, pressing Ctrl-Click finds the file but not the string,
if the externalization key used contains non-ASCII characters.

Steps to re-create problem:

1) Create a Java Project called project1.
2) Create a package called package1 inside project1.
3) Create a non-ASCII Java class inside package1 (for example, one that uses 
Finnish characters).
4) Add two or more System.out.println statements with strings (can be either 
ASCII or non-ASCII).
5) Do Source->Externalize Strings, and use all default settings.
6) Press Externalize and complete the externalization process.
7) After the process is complete, there should be several statements such as 
this:

System.out.println(Messages.getString("<externalization key>.1"));

8) Press Ctrl and click the "1" portion, which should be underlined.


Error:
After clicking the "1", the JDT correctly jumps to the .properties file, but 
does not correctly find the externalized string.  In addition, a red-colored 
message appears in the lower left corner of Eclipse saying:

"The key <externalization key>.1 is not defined in this properties file."


After testing this again, but using an ASCII externalization key, the JDT 
successfully finds each string with no problem.  The problem only happens when 
a non-ASCII (such as Finnish) externalization key is chosen.

By default, the JDT automatically chooses the Java Class name to be used as the 
externalization key.  Using a non-ASCII, Finnish, Java Class name poses no 
problems by itself, because such strings are supported by Java.
However, once this non-ASCII string is used as the externalization key, which 
JDT does by default, the Ctrl-Click functionality to find an externalized 
string does not work correctly.

I suggest that changes be taken to prevent a non-ASCII externalization key from 
being chosen.  For instance, the JDT can automatically substitute non-ASCII 
characters with certain ASCII characters, so that the Ctrl-Click will work 
correctly.  Or maybe suggest the user to change the key name to one that only 
uses ASCII characters.
probably a word boundary problem?
This was seen while testing Finnish, in Windows XP.

Finnish uses a mix of ascii and non-ascii characters.  The Java class name also 
uses a mix of ascii and non-ascii characters.  All project, package, file, and 
editor settings were changed to use UTF-8 as the encoding type.

The UTF-8 values for the Finnish string used for one of externalization keys 
are:

P\u00F6m\u00E4

This is actually a string of 4 characters, with the 1st and 3rd being the ascii 
characters "P" and "m".  The 2nd and 4th characters are non-ascii Finnish 
characters.

The non-ascii string displays correctly in the red error message that says the 
externalization key was not found in the properties file.




OS:	<windows XP, SUSE 9> 
Language:	<Finnish>
Build level: 	<M20050914>
JDK version:  IBM JDK 1.4.2 SR2
Test case #: 2.13 Working with Externalized Strings



Added NL keyword.
Test key/value pair: C3.\u12345=\u3333

Internal note: NLS hover correctly resolves the value.
Added [G2X] in summary for searching.


fixed > I20060307-1315

Also fixed the PropertyKeyHyperlinkDetector
The fix was not complete: navigation from properties file to source did not yet work (the detector detected it but search did not find results).

Fixed in HEAD.


[nls tooling][G2X] string externalization key produces problems

nl

Improved fix for 110558 [nls tooling][G2X] string externalization key produces problems 

110558 [nls tooling][G2X] string externalization key produces problems 
3.2 and 3.3 M3

JDT Text calls JDT Core code assist twice on each invocation. This happens because the final proposal list is computed by several different completion processors. Two of them (the "no type" and the "other proposals" processor) call ICodeAssist.codeComplete(...).

Note that this is not a bug but works as designed since we eat our own dog food by contributing the processor via extension point. We could however try to improve the performance by providing an internal processor that only combines the two and only calls JDT Core once.

3.2 and 3.3 M3

JDT Text calls JDT Core code assist twice on each invocation. This happens because the final proposal list is computed by several different completion processors. Two of them (the "no type" and the "other proposals" processor) call ICodeAssist.codeComplete(...).

Note that this is not a bug but works as designed since we eat our own dog food by contributing the processor via extension point. We could however try to improve the performance by providing an internal processor that only combines the two and only calls JDT Core once.
Time permitting for 3.3.
I knew there was a bug for that but thought this was captured in the constructor proposal bug.

*** This bug has been marked as a duplicate of 162923 ***
Reopening to see whether we can at least solve the concrete issue.
*** Bug 247809 has been marked as a duplicate of this bug. ***
I have something in mind that would fix this issue unless a user goes and changes the preference in a way that two calls happen again.
Fixed in HEAD.
Available in builds >= I20080923-0800.


[content assist] Only call ICodeAssist.codeComplete(...) once

performance

Fixed bug 164449: [content assist] Only call ICodeAssist.codeComplete(...) once 
Unsure if this is JDT or Platform, but JDT seemed like a good place to start...  So I found this in my .log file after restarting my Eclipse 3.3 workspace.  The workspace had an open editor that contained a speeling mistake in a field, but I have no idea if this is related.  Pesky NPE...

!ENTRY org.eclipse.ui.workbench.texteditor 4 2 2007-09-20 23:04:39.322
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench.texteditor".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.spelling.SpellingReconcileStrategy$SpellingProblemCollector.accept(SpellingReconcileStrategy.java:79)
	at org.eclipse.jdt.internal.ui.text.spelling.SpellingEngine$SpellEventListener.handle(SpellingEngine.java:65)
	at org.eclipse.jdt.internal.ui.text.spelling.engine.DefaultSpellChecker.fireEvent(DefaultSpellChecker.java:295)
	at org.eclipse.jdt.internal.ui.text.spelling.engine.DefaultSpellChecker.execute(DefaultSpellChecker.java:270)
	at org.eclipse.jdt.internal.ui.text.spelling.TextSpellingEngine.check(TextSpellingEngine.java:41)
	at org.eclipse.jdt.internal.ui.text.spelling.SpellingEngine.check(SpellingEngine.java:77)
	at org.eclipse.jdt.internal.ui.text.spelling.DefaultSpellingEngine.check(DefaultSpellingEngine.java:75)
	at org.eclipse.ui.texteditor.spelling.SpellingService$1.run(SpellingService.java:103)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)
	at org.eclipse.ui.texteditor.spelling.SpellingService.check(SpellingService.java:108)
	at org.eclipse.ui.texteditor.spelling.SpellingService.check(SpellingService.java:80)
	at org.eclipse.ui.texteditor.spelling.SpellingReconcileStrategy.reconcile(SpellingReconcileStrategy.java:176)
	at org.eclipse.ui.texteditor.spelling.SpellingReconcileStrategy.initialReconcile(SpellingReconcileStrategy.java:159)
	at org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess(MonoReconciler.java:103)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:170)

Unsure if this is JDT or Platform, but JDT seemed like a good place to start...  So I found this in my .log file after restarting my Eclipse 3.3 workspace.  The workspace had an open editor that contained a speeling mistake in a field, but I have no idea if this is related.  Pesky NPE...

!ENTRY org.eclipse.ui.workbench.texteditor 4 2 2007-09-20 23:04:39.322
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench.texteditor".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.ui.texteditor.spelling.SpellingReconcileStrategy$SpellingProblemCollector.accept(SpellingReconcileStrategy.java:79)
	at org.eclipse.jdt.internal.ui.text.spelling.SpellingEngine$SpellEventListener.handle(SpellingEngine.java:65)
	at org.eclipse.jdt.internal.ui.text.spelling.engine.DefaultSpellChecker.fireEvent(DefaultSpellChecker.java:295)
	at org.eclipse.jdt.internal.ui.text.spelling.engine.DefaultSpellChecker.execute(DefaultSpellChecker.java:270)
	at org.eclipse.jdt.internal.ui.text.spelling.TextSpellingEngine.check(TextSpellingEngine.java:41)
	at org.eclipse.jdt.internal.ui.text.spelling.SpellingEngine.check(SpellingEngine.java:77)
	at org.eclipse.jdt.internal.ui.text.spelling.DefaultSpellingEngine.check(DefaultSpellingEngine.java:75)
	at org.eclipse.ui.texteditor.spelling.SpellingService$1.run(SpellingService.java:103)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:37)
	at org.eclipse.ui.texteditor.spelling.SpellingService.check(SpellingService.java:108)
	at org.eclipse.ui.texteditor.spelling.SpellingService.check(SpellingService.java:80)
	at org.eclipse.ui.texteditor.spelling.SpellingReconcileStrategy.reconcile(SpellingReconcileStrategy.java:176)
	at org.eclipse.ui.texteditor.spelling.SpellingReconcileStrategy.initialReconcile(SpellingReconcileStrategy.java:159)
	at org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess(MonoReconciler.java:103)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:170)
>Eclipse 3.3 workspace. 
With which build (id) did you start it?

>The workspace had an open editor
I assume the Java editor?

>So I found this in my .log file
Anything else in the .log file that could be related? Did you notice anything in the UI?


Sorry, can't reproduce using I20070920-0936. Please reopen if you can reproduce or see this again.
>With which build (id) did you start it?
eclipse.buildId=I20070914-0006

>I assume the Java editor?
No, this was a third party editor developed by IBM.

>Anything else in the .log file that could be related?
Nothing

>Did you notice anythingin the UI?
No

This could be a timing problem.  I'll re-open this bug if I see it again.  Thanks.
*** Bug 216270 has been marked as a duplicate of this bug. ***
Simon what VM are you using?
java version "1.5.0"
Java(TM) 2 Runtime Environment, Standard Edition (build pwi32dev-20070511 (SR5))
IBM J9 VM (build 2.3, J2RE 1.5.0 IBM J9 2.3 Windows XP x86-32 j9vmwi3223-20070426 (JIT enabled)
J9VM - 20070420_12448_lHdSMR
JIT  - 20070419_1806_r8
GC   - 200704_19)
JCL  - 20070511

Howdy :)
How is this one closed as WFM when we have a NPE ?
If this issue is not in the JDT, then obviously someone did not respect the javadoc contract no ? :)
As you can read in comment 2 this happened by a non-SDK and can't be reproduced in the SDK. Hence most likely that editor is not respecting the API. Bug needs to filed and tracked there.
We are seeing this more frequently right now.
We are seeing this more frequently in recent Jazz builds.
>We are seeing this more frequently in recent Jazz builds.
As said before this is not happening in an SDK editor and without getting more data from the owner of the affected editor we won't be able to do anything here.
Daniel, that makes sense (at least to me :)... what should the editor look at ?
Which value is null and where from the editor are we getting it from ? (which API do we call ) ?
Or do you know how we would debug that ?

Thanks for helping :)
We will provide additional information as soon as possible.
NPE happens in this line:
fAddAnnotations.put(new SpellingAnnotation(problem), new Position(problem.getOffset(), problem.getLength()));

Two reasons:
1) 'problem' is 'null'
   ==> check whether you call this method with an illegal 'null' value - the SDK
       does not do this. If this is not the case it could be a JIT but ==>
       try whether it stops when you use a different VM

2) 'fAddAnnotations' is 'null' which should not happen. Check your code whether
   you use that class in a non-UI thread.


>Or do you know how we would debug that ?
Run in debug mode with a breakpoint on that line or with a breakpoint on NPE.
As said before: we need more info from the editor owner. Moving to Christof for investigation.
I have a reproducible case in Jazz if you'd like to take a look:
- Many SourceViewers
- Many spelling errors (latin text)

In addition to the NPE mentioned above ('fAddAnnotations' is null), I also see a CME:

Exception in thread "org.eclipse.jface.text.reconciler.MonoReconciler" java.util.ConcurrentModificationException
	at java.util.HashMap$HashIterator.nextEntry(HashMap.java:787)
	at java.util.HashMap$EntryIterator.next(HashMap.java:829)
	at java.util.HashMap$EntryIterator.next(HashMap.java:827)
	at org.eclipse.jface.text.source.AnnotationModel.replaceAnnotations(AnnotationModel.java:254)
	at org.eclipse.jface.text.source.AnnotationModel.replaceAnnotations(AnnotationModel.java:227)
	at org.eclipse.ui.texteditor.spelling.SpellingReconcileStrategy$SpellingProblemCollector.endCollecting(SpellingReconcileStrategy.java:106)
	at org.eclipse.ui.texteditor.spelling.SpellingService.check(SpellingService.java:114)
	at org.eclipse.ui.texteditor.spelling.SpellingService.check(SpellingService.java:80)
	at org.eclipse.ui.texteditor.spelling.SpellingReconcileStrategy.reconcile(SpellingReconcileStrategy.java:179)
	at org.eclipse.ui.texteditor.spelling.SpellingReconcileStrategy.initialReconcile(SpellingReconcileStrategy.java:162)
	at org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess(MonoReconciler.java:103)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:170)

Looking at TextSpellingEngine it seems all listeners are registered on a single instance of ISpellChecker which is shared among threads and listeners can get notified about problems from other threads. The NPE could occur like:
- reconciling threads 1 & 2:
  - call SpellingProblemCollector.beginCollecting()
  - register their listeners in TextSpellingEngine
- thread 1:
  - starts listener notification in DefaultSpellChecker#fireEvent()
- thread 2:
  - unregisters its listener
  - calls SpellingProblemCollector.endCollecting() (setting fAddAnnotations to null)
- thread 1:
  - continuous listener notification on its copied set of listeners and triggers the NPE in the listener belonging to thread 2

Reassigning.
The CME from comment 15 might be covered by bug 69289.
Wow, that code is ugly and more than broken!
*** Bug 214961 has been marked as a duplicate of this bug. ***
Besides NPEs and CMEs, the checker is notifying unrelated listeners i.e. if document A and B get checked in parallel then problems of A also get reported to B and vice versa.

No idea what the intention behind that code was. I've now completely rewritten the notification mechanism.

Fixed in HEAD.
Available in builds > N20080420-2000.


[spell checking] NPE thrown by SpellingReconcileStrategy$SpellingProblemCollector.accept



Fixed bug 204207: [spell checking] NPE thrown by SpellingReconcileStrategy$SpellingProblemCollector.accept 
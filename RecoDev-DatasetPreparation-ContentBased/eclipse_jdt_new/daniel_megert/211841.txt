Hello.

From the beginning I use the mechanism of templates.

And all my templates start with an underscore, '_xyz'. No problem, I've export my templates from an old Eclipse 3.1 and imported in Eclipse Europe (about tells me it is the Version: 3.3.1 Build id: M20070921-1145).

But if I want to edit an old template or create a new one, I become an error message, that the name of the template start with an invalid character.

If if export the template, edit the template name in an external ASCII Editor and import the template again, it can, again, start with an underscore.

Why have you prevent that a template name can start with an underscore.

TIA

Jan

Hello.

From the beginning I use the mechanism of templates.

And all my templates start with an underscore, '_xyz'. No problem, I've export my templates from an old Eclipse 3.1 and imported in Eclipse Europe (about tells me it is the Version: 3.3.1 Build id: M20070921-1145).

But if I want to edit an old template or create a new one, I become an error message, that the name of the template start with an invalid character.

If if export the template, edit the template name in an external ASCII Editor and import the template again, it can, again, start with an underscore.

Why have you prevent that a template name can start with an underscore.

TIA

Jan
Caused by partial fix for bug 21926.
I have same problem with all code templates contains any characters except [a-zA-Z0-9]. I use comment's templates like this "//--" every often and it's very inconveniently to type it manually.

Eclipse 3.3 doesn't contain this trouble. Ecilpse 3.3.1 contains it on each platform.
I don't think the regression is a good way to fix a validation bug such as 21926.
As Oleg I'm also using (used) templates like "//-" and "//=". As a wourkaround I renamed them to "c1" and "c2", but I'd like to ask if there is any chance for using templates like these again?
We'll look at it during M7.
Starting with "/" or "$" never worked up to 3.3 but unfortunately the fix for it ( bug 21926) was not good enough and caused several problems.

Obviously the current name checking rejects too much e.g. names starting with "_" or having "foo//bar" or "foo$bar" works just fine in 3.4.

So here's the deal: I'll remove the checking so that we get the < 3.3 behavior back. Supporting "/" and "$" will have to wait for 3.5 though (see bug 21926).


[templates] Template name contains invalid characters



Fixed bug 211841: [templates] Template name contains invalid characters 
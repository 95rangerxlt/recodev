+++ This bug was initially created as a clone of Bug #452457 +++

+++ This bug was initially created as a clone of Bug #452336 +++

I've studied the logs in bug 452336 and can summarize the issue below. It primarily comes down to several "prereq" ranges in jdt test bundles ... both Core, and UI ... being "too tight" to install into 4.4. 

To explain the "big picture", what we are trying to do is run the "4.5 performance unit tests, compiled against 4.5, but ran against 4.4, as "the baseline measurements". 

The "long running" set of performance tests consist of 5 suites, and 4 of them will not install into 4.4 due to "tight prereq ranges" in the 4.5 stream. 
They are probably correct, in the "pure" sense of semantic versioning -- I'm assuming they were "tighten up for a reason? --  BUT ... I'm not sure we need them to be "exactly right" for test bundles (for several reasons) and the issue mostly comes down to if we did "loosen the range" would the test still (mostly) run? Or would they be "completely broken at runtime time" due to changes between 4.4 and 4.5? 

= = = = = 

There remains 2 suites to fix: 



org.eclipse.jdt.text.tests
org.eclipse.jdt.ui.tests.refactoring


When trying to install them into 4.4, to test them, the p2 operation fails with the error: 

"Cannot complete the install because one or more required items could not be found."

The following give a little more detail, and a specific proposed "fix" marked with "**". 

= = = = = 

Software being installed: JDT Text Test Plug-in 3.10.100.v20141113-1557 (org.eclipse.jdt.text.tests 3.10.100.v20141113-1557)
Missing requirement: Java Test Plug-in 3.10.100.v20141114-1947 (org.eclipse.jdt.ui.tests 3.10.100.v20141114-1947) 
   requires 'bundle org.eclipse.jdt.ui [3.10.100,4.0.0)' but it could not be found

** Can org.eclipse.jdt.ui.tests be change to "prereq" org.eclipse.jdt.ui [3.10.1,4.0.0) instead of [3.10.100,4.0.0)?

= = = = 

Software being installed: Refactoring Tests Plug-in 3.10.100.v20141113-1557 (org.eclipse.jdt.ui.tests.refactoring 3.10.100.v20141113-1557)
Missing requirement: Refactoring Tests Plug-in 3.10.100.v20141113-1557 (org.eclipse.jdt.ui.tests.refactoring 3.10.100.v20141113-1557) 
   requires 'bundle org.eclipse.jdt.ui [3.10.100,4.0.0)' but it could not be found

** Can org.eclipse.jdt.ui.tests.refactoring be change to "prereq" org.eclipse.jdt.ui [3.10.1,4.0.0) instead of [3.10.100,4.0.0)? 

= = = =

+++ This bug was initially created as a clone of Bug #452457 +++

+++ This bug was initially created as a clone of Bug #452336 +++

I've studied the logs in bug 452336 and can summarize the issue below. It primarily comes down to several "prereq" ranges in jdt test bundles ... both Core, and UI ... being "too tight" to install into 4.4. 

To explain the "big picture", what we are trying to do is run the "4.5 performance unit tests, compiled against 4.5, but ran against 4.4, as "the baseline measurements". 

The "long running" set of performance tests consist of 5 suites, and 4 of them will not install into 4.4 due to "tight prereq ranges" in the 4.5 stream. 
They are probably correct, in the "pure" sense of semantic versioning -- I'm assuming they were "tighten up for a reason? --  BUT ... I'm not sure we need them to be "exactly right" for test bundles (for several reasons) and the issue mostly comes down to if we did "loosen the range" would the test still (mostly) run? Or would they be "completely broken at runtime time" due to changes between 4.4 and 4.5? 

= = = = = 

There remains 2 suites to fix: 



org.eclipse.jdt.text.tests
org.eclipse.jdt.ui.tests.refactoring


When trying to install them into 4.4, to test them, the p2 operation fails with the error: 

"Cannot complete the install because one or more required items could not be found."

The following give a little more detail, and a specific proposed "fix" marked with "**". 

= = = = = 

Software being installed: JDT Text Test Plug-in 3.10.100.v20141113-1557 (org.eclipse.jdt.text.tests 3.10.100.v20141113-1557)
Missing requirement: Java Test Plug-in 3.10.100.v20141114-1947 (org.eclipse.jdt.ui.tests 3.10.100.v20141114-1947) 
   requires 'bundle org.eclipse.jdt.ui [3.10.100,4.0.0)' but it could not be found

** Can org.eclipse.jdt.ui.tests be change to "prereq" org.eclipse.jdt.ui [3.10.1,4.0.0) instead of [3.10.100,4.0.0)?

= = = = 

Software being installed: Refactoring Tests Plug-in 3.10.100.v20141113-1557 (org.eclipse.jdt.ui.tests.refactoring 3.10.100.v20141113-1557)
Missing requirement: Refactoring Tests Plug-in 3.10.100.v20141113-1557 (org.eclipse.jdt.ui.tests.refactoring 3.10.100.v20141113-1557) 
   requires 'bundle org.eclipse.jdt.ui [3.10.100,4.0.0)' but it could not be found

** Can org.eclipse.jdt.ui.tests.refactoring be change to "prereq" org.eclipse.jdt.ui [3.10.1,4.0.0) instead of [3.10.100,4.0.0)? 

= = = =
(In reply to David Williams from comment #0)
> To explain the "big picture", what we are trying to do is run the "4.5
> performance unit tests, compiled against 4.5, but ran against 4.4, as "the
> baseline measurements". 

This is wrong. I tried to explain in bug 390821 comment 11 but looks like I was not successful. To run the 4.4 baseline we use the 4.4 tests, assuming they are the same. In the case where we add new performance tests or modify a test in 4.5, we backport this to a separate performance test branch, 'perf_44x' in this case.
(In reply to Dani Megert from comment #1)
> (In reply to David Williams from comment #0)
> > To explain the "big picture", what we are trying to do is run the "4.5
> > performance unit tests, compiled against 4.5, but ran against 4.4, as "the
> > baseline measurements". 
> 
> This is wrong. I tried to explain in bug 390821 comment 11 but looks like I
> was not successful. To run the 4.4 baseline we use the 4.4 tests, assuming
> they are the same. In the case where we add new performance tests or modify
> a test in 4.5, we backport this to a separate performance test branch,
> 'perf_44x' in this case.

That was an unfortunate communication. And ... I'll just say it here ... seems that the conclusion is one I don't agree with. For a few reasons: it seems to me it leads a little to comparing results "with more variables" it in, so if differences are seen, you'd have to investigate both the test and the code to see where differences might be. And, of course the "tests have changed" if compiled with a different compiler, etc. So, technically there should always be a branch, a separate build, etc., so the compiler would "be the same". 

But, all that aside, as you said in bug 390821 comment 11, "...Ideally they would run the 4.5 tests but that does not work ... ". But, my point is, it does work! In nearly all cases. And to me, "making it work" by a slight adjustment to "minimum pre-req range" would be an order of magnitude easier to accomplish, than "dual maintenance", and "dual builds", just because someone wanted to change a performance test. 

Do you know for sure the 4.5 tests won't run, if you changed that minimum pre-req. I do still believe that would be the best approach, both in terms of "technical statistical methods" and "the amount of work everyone has to do". 

Naturally, my time is at your disposal, if you decide otherwise.
(In reply to David Williams from comment #0)
> 
> ** Can org.eclipse.jdt.ui.tests be change to "prereq" org.eclipse.jdt.ui
> [3.10.1,4.0.0) instead of [3.10.100,4.0.0)?
> 

> ** Can org.eclipse.jdt.ui.tests.refactoring be change to "prereq"
> org.eclipse.jdt.ui [3.10.1,4.0.0) instead of [3.10.100,4.0.0)? 
> 
> = = = =

Correction: I think I filled in this data when I (still) thought that the baseline should be 4.4.1. If the baseline is 4.4, then the "minimum range" pre-req" should be 3.10.0, instead of 3.10.1 (and, instead of current 3.10.100). 

I tried this change on my local system, and it appears all (or nearly all) the performance tests of 4.5 still run against 4.4.

For refactoring and jdt.ui, they all did run, successfully against the baseline. That was 49 tests for refactoring, and 28 for jdt.ui. 

For jdt.text.tests it was a little more complicated, in part because I "canceled" some, because I was anxious to see the "rough" results. But, there did appear to be two NPE's, and 1 "out of memory" "Error".  And, there were also some "failures" due to "performance asserts". But, there were also 124 total tests. So, even if "something were wrong" with those three tests (due to pre-req change) I still thing it would be better to a) know that and b) even if could not be fixed, better than the alternative of comparing 4.5 tests against 4.4 tests.
Instead of using out-dated/wrong version ranges we'll just remove them entirely, like it's already done for other required bundles.

Fixed with http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=c898abeddaae734a4df83ea580e155a669e98470


Long running performance tests don't run on baseline (4.4)



Remove required bundle version ranges to allow running with older versions See bug 453253 for details. 
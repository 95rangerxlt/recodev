We would like to reuse internal parts of JavaOutlinePage (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=151280 for a short "why").

Would it be possible to get protected read access to JavaOutlinePage's fOutlineViewer and fTopLevelTypeOnly members?

Additionally, we would like to have (some of) its inner classes accessible, namely ChildrenProvider, ElementChangedListener and JavaOutlineViewer.
If those could be made public we could avoid a lot of Copy&Paste code.

We would like to reuse internal parts of JavaOutlinePage (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=151280 for a short "why").

Would it be possible to get protected read access to JavaOutlinePage's fOutlineViewer and fTopLevelTypeOnly members?

Additionally, we would like to have (some of) its inner classes accessible, namely ChildrenProvider, ElementChangedListener and JavaOutlineViewer.
If those could be made public we could avoid a lot of Copy&Paste code.
Can you attach a patch?
Created attachment 46651
the patch containing the requested changes

Yes, I'm happy to! :-)
Not sure whether it's a good idea to make all these types public. Leaving for Dani to decide.
The patch opens up things too much:
- it provides write access to the fields which we do not want to provide
  ==> add a getter would be OK
- it makes the inner classes public which is too much
  ==> making them protected would be OK
Please reopen if you have a better patch.
Created attachment 47071
a revised patch

Thanks for your feedback -- here's a revised patch. I made the classes protected instead of public and added protected getters for the two fields. I also added some bits of javadoc for all that.

I don't know if you prefer the one method to be named isTopLevelTypeOnly(), getTopLevelTypeOnly() or maybe getShowTopLevelTypeOnly(). I went with isTopLevelTypeOnly() for now.
The patch is better now but the accessors should be final and they should have the @since 3.3 tag in their comment. Does it work for you like that? If so I release the changes.
Yes, that's fine with me.

Thanks a lot for your time and help!
.
Fixed in HEAD.
Available in builds > N20060802-0010.


[misc] Softening visibility of parts of JavaOutlinePage



Fixed bug 151404: [misc] Softening visibility of parts of JavaOutlinePage 
Build Identifier: I20100330-0800

OS:Windows 7
JRE:IBM Java 1.6
Locale:Japanese


Reproducible: Always

Steps to Reproduce:
1.Import the attached Java file into a Java Project with the encoding UTF-8.
2.Click the mouse on methodASCII(), javadoc pops up. 
3.Click the mouse on methodCJK&#x53F1;(), javadoc pops up.
4.Click the mouse on methodCJKExtB&#x20B9F;(), javadoc does not pops up.

Build Identifier: I20100330-0800

OS:Windows 7
JRE:IBM Java 1.6
Locale:Japanese


Reproducible: Always

Steps to Reproduce:
1.Import the attached Java file into a Java Project with the encoding UTF-8.
2.Click the mouse on methodASCII(), javadoc pops up. 
3.Click the mouse on methodCJK&#x53F1;(), javadoc pops up.
4.Click the mouse on methodCJKExtB&#x20B9F;(), javadoc does not pops up.
Created attachment 164342
Bug308612.java with the encoding UTF-8
The JavaWordFinder does not consider supplementary characters.

Since support for code points has only been added in Java 1.5, the fix needs to
implement this manually (like the Scanner in JDT Core, see bug 308147 comment 3).

ICU has some APIs for this in classes UTF16 and UCharacter, but I found no equivalent of java.lang.Character.isJavaIdentifierPart(int).
Fixed in JavaWordFinder.java rev. 1.15 with a heuristic since java.lang.Character in 1.4 does not support surrogates and because com.ibm.icu.lang.UCharacter.isJavaIdentifierPart(int) is not correctly implemented and we don't want to reinvent the wheel here.

We can correctly fix this once we switch to 1.5 or ICU fixed their issue.

Available in builds > N20100408-2000.
.


[implementation] DBCS3.6: Javadoc does not pop up on methods containing CJK Ext-B.



Fixed bug 308612: DBCS3.6: Javadoc does not pop up on methods containing CJK Ext-B. 
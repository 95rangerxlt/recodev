Hamcrest 1.1.0, which is bundled as part of junit 4.5 is exported as hamcrest version 4.5.

From junit's MANIFEST.MF:
org.hamcrest;version="4.5.0",org.hamcrest.core;version="4.5.0",org.hamcrest.internal;version="4.5.0"

Requesting that this not be exported at all (which will possibly annoy a lot of users) or mark these hamcrest packages as version 1.1.0.

Hamcrest 1.1.0, which is bundled as part of junit 4.5 is exported as hamcrest version 4.5.

From junit's MANIFEST.MF:
org.hamcrest;version="4.5.0",org.hamcrest.core;version="4.5.0",org.hamcrest.internal;version="4.5.0"

Requesting that this not be exported at all (which will possibly annoy a lot of users) or mark these hamcrest packages as version 1.1.0.
JUnit 4.5 is not in Orbit.
>JUnit 4.5 is not in Orbit.
Yes, but it should be (see bug 186369).

Unfortunately lowering the numbers would break p2 / update manager.

Markus to decide.
We won't downgrade the version numbers in the org.junit4 plug-in for compatibility reasons. We can look at this again when JUnit 4 is moved to Orbit.
Tom and Jeff, can you guys advise on this problem. JUnit 4.5 bundles a specific version of hamcrest, but we never set the package version numbers right for Hamcrest. Since JUnit 4.5 hasn't shipped with Eclipse 3.5 yet, I don't see a problem with this fix... otherwise we're lying about the package version. This can cause potential issues for people who are using Hamcrest in the SDK (ie., SWTBot).

I think the ideal fix would be JUnit to not bundle Hamcrest the way it is but that would require fighting with upstream.
>I think the ideal fix would be JUnit to not bundle Hamcrest the way it is but
>that would require fighting with upstream.
Well, Orbit should finally take care of this and also offer Harmcrest as separate bundle (while it can still be included in JUnit).

Downgrading the version can cause harm.
JUnit does provide a version without integrated hamcrest. So if you want to go the full way, Orbit could also ship hamcrest-core and the full hamcrest as separate bundles and JUnit4 could use Import-Package, similar to how we currently do it with ICU.
Ketan, have you put Hamcrest in Orbit so JUnit can do this?
Those that need to import harmcrest via Import-Package header can use it without version and I strongly suggest that those projects who need harmcrest without JUnit talk to the Orbit project. Relying on the fact that JUnit contains this is not a good idea.
(In reply to comment #7)
> Ketan, have you put Hamcrest in Orbit so JUnit can do this?

Since SWTBot is currently the only consumer of Hamcrest, it is available as an all-in-one jar. I'll be happy to pull out hamcrest-core if it helps getting this issue resolved.
Note that it's not just a matter of declaring plug-ins and adjusting dependencies.

First, all this will only happen if Junit4 is moved to Orbit (bug 186369). For that, someone has to make sure PDE works fine with multiple plug-ins with the same name but different versions. The last time we tried, there were a bunch of unresolved issues -- and I don't have the time to investigate all this again for 3.5 (and honestly, I think it's too late now for 3.5).

And of course, the JUnit classpath container and the Java and PDE JUnit launch configurations would have to be adjusted to work with the org.junit 4.5 bundle. And everything also needs to work when you develop with Eclipse 3.5 against a 3.4 target platform.
To begin with, would it be possible to mark the hamcrest API as 1.1.

I agree that the JUnitClassPathContainer and related infrastructure will also need to change, and I'd be happy to file a patch if that helps.

We looked at this again and after discussion decided to adjust the version
numbers. Given that the Hamcrest stuff was added during 3.5 there's no official
breakage.

Once Hamcrest Core is available in Oribt (see bug 260092) we can remove it from
JUnit4 and require Hamcrest Core from Obribt. Best would be to have this done
for 3.5.

I've raised another bug 266962 for junit to consume hamcrest core from orbit.


[JUnit] Incorrect version numbers of hamcrest packages in junit 4.5



Fixed bug 261234: [JUnit] Incorrect version numbers of hamcrest packages in junit 4.5 
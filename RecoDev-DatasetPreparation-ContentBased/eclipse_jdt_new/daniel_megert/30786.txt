Using Eclipse in Linux with Build id: 200302020010 i occasionally get strange
errors which prevents modified Java-files from being saved. Happens randomly but
when starting to appear stays until the file is removed editor and after
reopening saving works ok (for awhile). Notice the same behaviour in maybe build
20030201. Build 2901 (ddmm) doesn't suffer from this bug. 
Here's the .log:

!ENTRY org.eclipse.ui 4 4 helmi 03, 2003 03:49:34.516
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 helmi 03, 2003 03:49:34.607
!MESSAGE handle
!STACK 0
java.lang.NoSuchFieldError: handle
        at
org.eclipse.jdt.internal.ui.javaeditor.JavaMarkerAnnotation.getImage(JavaMarkerAnnotation.java:267)
        at
org.eclipse.ui.texteditor.MarkerAnnotation.paint(MarkerAnnotation.java:196)
        at
org.eclipse.jface.text.source.AnnotationRulerColumn.doPaint(AnnotationRulerColumn.java:350)
        at
org.eclipse.jface.text.source.AnnotationRulerColumn.doubleBufferPaint(AnnotationRulerColumn.java:241)
        at
org.eclipse.jface.text.source.AnnotationRulerColumn.access$3(AnnotationRulerColumn.java:216)
        at
org.eclipse.jface.text.source.AnnotationRulerColumn$1.paintControl(AnnotationRulerColumn.java:155)
        at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:80)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:897)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:922)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:906)
        at org.eclipse.swt.widgets.Control.gtk_expose_event(Control.java:1618)
        at org.eclipse.swt.widgets.Composite.gtk_expose_event(Composite.java:322)
        at org.eclipse.swt.widgets.Canvas.gtk_expose_event(Canvas.java:101)
        at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1138)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:1844)
        at org.eclipse.swt.internal.gtk.OS.gtk_main_iteration(Native Method)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1255)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1265)
        at org.eclipse.ui.internal.Workbench.run(Workbench.java:1248)
 at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
        at org.eclipse.core.launcher.Main.run(Main.java:703)
        at org.eclipse.core.launcher.Main.main(Main.java:539)

I tried looking for an existing bug but didn't find one, so i decided to make a
new one.

Using Eclipse in Linux with Build id: 200302020010 i occasionally get strange
errors which prevents modified Java-files from being saved. Happens randomly but
when starting to appear stays until the file is removed editor and after
reopening saving works ok (for awhile). Notice the same behaviour in maybe build
20030201. Build 2901 (ddmm) doesn't suffer from this bug. 
Here's the .log:

!ENTRY org.eclipse.ui 4 4 helmi 03, 2003 03:49:34.516
!MESSAGE Unhandled exception caught in event loop.
!ENTRY org.eclipse.ui 4 0 helmi 03, 2003 03:49:34.607
!MESSAGE handle
!STACK 0
java.lang.NoSuchFieldError: handle
        at
org.eclipse.jdt.internal.ui.javaeditor.JavaMarkerAnnotation.getImage(JavaMarkerAnnotation.java:267)
        at
org.eclipse.ui.texteditor.MarkerAnnotation.paint(MarkerAnnotation.java:196)
        at
org.eclipse.jface.text.source.AnnotationRulerColumn.doPaint(AnnotationRulerColumn.java:350)
        at
org.eclipse.jface.text.source.AnnotationRulerColumn.doubleBufferPaint(AnnotationRulerColumn.java:241)
        at
org.eclipse.jface.text.source.AnnotationRulerColumn.access$3(AnnotationRulerColumn.java:216)
        at
org.eclipse.jface.text.source.AnnotationRulerColumn$1.paintControl(AnnotationRulerColumn.java:155)
        at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:80)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:77)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:897)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:922)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:906)
        at org.eclipse.swt.widgets.Control.gtk_expose_event(Control.java:1618)
        at org.eclipse.swt.widgets.Composite.gtk_expose_event(Composite.java:322)
        at org.eclipse.swt.widgets.Canvas.gtk_expose_event(Canvas.java:101)
        at org.eclipse.swt.widgets.Widget.windowProc(Widget.java:1138)
        at org.eclipse.swt.widgets.Display.windowProc(Display.java:1844)
        at org.eclipse.swt.internal.gtk.OS.gtk_main_iteration(Native Method)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1255)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1265)
        at org.eclipse.ui.internal.Workbench.run(Workbench.java:1248)
 at
org.eclipse.core.internal.boot.InternalBootLoader.run(InternalBootLoader.java:845)
        at org.eclipse.core.boot.BootLoader.run(BootLoader.java:461)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at
sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at
sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.eclipse.core.launcher.Main.basicRun(Main.java:247)
        at org.eclipse.core.launcher.Main.run(Main.java:703)
        at org.eclipse.core.launcher.Main.main(Main.java:539)

I tried looking for an existing bug but didn't find one, so i decided to make a
new one.
Oh, found another exception from .log:
!ENTRY org.eclipse.ui 4 0 helmi 03, 2003 03:45:32.382
!MESSAGE Failed to execute runnable (java.lang.NoSuchFieldError: handle)
!STACK 0
org.eclipse.swt.SWTException: Failed to execute runnable
(java.lang.NoSuchFieldError: handle)
        at org.eclipse.swt.SWT.error(SWT.java:2292)
        at
org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:97)
        at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:1412)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:1259)
        at org.eclipse.jface.window.Window.runEventLoop(Window.java:561)
        at org.eclipse.jface.window.Window.open(Window.java:541)
        at org.eclipse.jface.dialogs.ErrorDialog.open(ErrorDialog.java:291)
        at org.eclipse.jface.dialogs.ErrorDialog.openError(ErrorDialog.java:354)
       at org.eclipse.jface.dialogs.ErrorDialog.openError(ErrorDialog.java:317)
       at
org.eclipse.ui.texteditor.AbstractTextEditor.handleExceptionOnSave(AbstractTextEditor.java:2933)
        at
org.eclipse.ui.texteditor.AbstractTextEditor.performSaveOperation(AbstractTextEditor.java:2881)
        at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.performSaveOperation(CompilationUnitEditor.java:746)
        at
org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditor.doSave(CompilationUnitEditor.java:810)
        at org.eclipse.ui.internal.EditorManager$11.run(EditorManager.java:1058)
       at org.eclipse.ui.internal.EditorManager$8.run(EditorManager.java:927)
        at
org.eclipse.jface.operation.ModalContext.runInCurrentThread(ModalContext.java:296)
        at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:246)
        at
org.eclipse.jface.window.ApplicationWindow$1.run(ApplicationWindow.java:432)
        at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:65)
       at org.eclipse.jface.window.ApplicationWindow.run(ApplicationWindow.java:429)

Jarkko, the build 0202 is a nightly build. They are untested and should only be 
used if you want to live on the edge. They can even contain compile errors. I 
recomment that you use milestone builds or if you want to be more advanced 
integration builds but no nightly builds.

Kai, are you aware of this ?
The used "handle" is a platform dependent field. I.e. it does not exist on the 
GTK port. We have to use a different scheme.
Fixed by using hash() instead of field.

Hello, 
I'm aware that i'm using "unstable" nightly builds, for they're made for testing
purposes and for fixing bugs, right? ;) Nice one to have this one fixed too!
start verifying


java.lang.NoSuchFieldError: handle



Fixed bug 30786: java.lang.NoSuchFieldError: handle 
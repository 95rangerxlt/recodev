TM (6/5/2001 17:42:56)
	sdk 118

	1) select two .class files in a jar
	2) open the compare menu in the context menu
	3) you can't compare the two files.

	would be nice, since both files have source attached.

NOTES:

GDA (6/5/01 12:31:25 PM)
	Defer

TM (6/5/2001 17:42:56)
	sdk 118

	1) select two .class files in a jar
	2) open the compare menu in the context menu
	3) you can't compare the two files.

	would be nice, since both files have source attached.

NOTES:

GDA (6/5/01 12:31:25 PM)
	Defer
Not for 2.0
This has been fixed long time ago.


Can't compare class files with attached source [compare]



Bug 382350 - [1.8][compiler] Unable to invoke inherited default method via I.super.m() syntax 

Bug 382347 - [1.8][compiler] Compiler accepts incorrect default method inheritance - more (simple) tests 

Bug 382347 - [1.8][compiler] Compiler accepts incorrect default method inheritance - copyright updates 

Bug 382347 - [1.8][compiler] Compiler accepts incorrect default method inheritance 

Bug 382355 - [1.8][compiler] Compiler accepts erroneous default method Complain if a default method attempts to override a method from Object. 

Update for Bug 382353 - [1.8][compiler] Implementation property modifiers should be accepted on default methods. - add missing @since tag. 

Test update for Bug 382345 - [1.8][compiler] Compiler should not complain about unimplemented method where default implementation exists - fix comment - add a mixed test (abstract + non-abstract method) 

Update headers: disclaimer and contributors section for bug 382353 and bug 382354 

Test for Bug 382345 - [1.8][compiler] Compiler should not complain about unimplemented method where default implementation exists 

Tests & fix for Bug 382353 - [1.8][compiler] Implementation property modifiers should be accepted on default methods. 

BETA_JAVA7 - Fixed bug 338234: [compiler] Missing warning for uninitialized variable in dead code 

HEAD- Fixed bug 338234: [compiler] Missing warning for uninitialized variable in dead code 

38237 
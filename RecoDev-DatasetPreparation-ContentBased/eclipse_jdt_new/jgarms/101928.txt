JPF's annotation processor makes a lot of calls to PackageDeclaration's 
getClasses().  This kills perf & memory consumption on the beehive petstore 
demo. 

After following the setup instructions below, build the J1Petstore app and 
note how long it takes.  Occasionally hitting pause in the debugger, you will 
often find that the stack is somewehere in getClasses() implementation. 


Setup Instructions for Beehive Petstore Demo 
--------------------------------------------

1.  WTP-enable your eclipse installation.  You'll need to drop the following 
plugins into your eclipse\plugins directory.  
	
	6/17 I-build of WTP - 
http://download.eclipse.org/webtools/downloads/drops/I-I20050617-
200506171814/wtp-I20050617.zip
	6/9 build of EMF    - 
http://download.eclipse.org/webtools/downloads/drivers/emf-sdo-xsd-SDK-
I200506091102.zip
	RC1 of GEF 3.1      - 
http://download.eclipse.org/webtools/downloads/drivers/GEF-SDK-3.1RC1.zip
	JME 1.1 M2          - 
http://download.eclipse.org/webtools/downloads/drivers/JEM-SDK-1.1M2.zip
 
2.  Get the org.eclipse.beehive and org.eclipse.beehive.zip & 
org.eclipse.beehive.ide.eclipse.core.zip plugins from the file share, and 
exppand them onto your hard-drive
3.  Import these projects into your workspace that contains the apt projects
4.  Launch a debug instance of eclipse from this workspace.
5.  Get the J1Petstore.zip and JDBCControlSample.zip files from the file 
share, and extract them onto your filesystem.
6.  Import these projects into your debug workspace.
7.  Beehive-enable your projects, for J1Petstore and JDBCControlSample 
	a) right-click the project, and then choose Add/Remove Beehive support
	b) open the .project file and make sure that the beehive builder has 
been removed
	c) right-click the project and then choose Add/Remove Beehive support 
again
	d) got to "Project | Properties | Java Annotaiton Processing ", and 
then choose the "apply" button, and then choose the "OK" button. (this will 
cause the options to be persisted)

7.  Do a clean build of the J1Petstore project (note the many bugs and crappy 
performance)
8.  Do a clean build of the JDBCControlSample project (note the many bugs and 
crappy performance)

The JDBCControlSample project is a smaller project, and builds more quickly 
than J1Petstore project.

Also note that there are some nasty bugs here.  You may need to disable the 
reconcile-time apt dispatch (see APTDispatch.java), and disable the resource & 
model listeners (see the GeneratedFileManager's init() method)

JPF's annotation processor makes a lot of calls to PackageDeclaration's 
getClasses().  This kills perf & memory consumption on the beehive petstore 
demo. 

After following the setup instructions below, build the J1Petstore app and 
note how long it takes.  Occasionally hitting pause in the debugger, you will 
often find that the stack is somewehere in getClasses() implementation. 


Setup Instructions for Beehive Petstore Demo 
--------------------------------------------

1.  WTP-enable your eclipse installation.  You'll need to drop the following 
plugins into your eclipse\plugins directory.  
	
	6/17 I-build of WTP - 
http://download.eclipse.org/webtools/downloads/drops/I-I20050617-
200506171814/wtp-I20050617.zip
	6/9 build of EMF    - 
http://download.eclipse.org/webtools/downloads/drivers/emf-sdo-xsd-SDK-
I200506091102.zip
	RC1 of GEF 3.1      - 
http://download.eclipse.org/webtools/downloads/drivers/GEF-SDK-3.1RC1.zip
	JME 1.1 M2          - 
http://download.eclipse.org/webtools/downloads/drivers/JEM-SDK-1.1M2.zip
 
2.  Get the org.eclipse.beehive and org.eclipse.beehive.zip & 
org.eclipse.beehive.ide.eclipse.core.zip plugins from the file share, and 
exppand them onto your hard-drive
3.  Import these projects into your workspace that contains the apt projects
4.  Launch a debug instance of eclipse from this workspace.
5.  Get the J1Petstore.zip and JDBCControlSample.zip files from the file 
share, and extract them onto your filesystem.
6.  Import these projects into your debug workspace.
7.  Beehive-enable your projects, for J1Petstore and JDBCControlSample 
	a) right-click the project, and then choose Add/Remove Beehive support
	b) open the .project file and make sure that the beehive builder has 
been removed
	c) right-click the project and then choose Add/Remove Beehive support 
again
	d) got to "Project | Properties | Java Annotaiton Processing ", and 
then choose the "apply" button, and then choose the "OK" button. (this will 
cause the options to be persisted)

7.  Do a clean build of the J1Petstore project (note the many bugs and crappy 
performance)
8.  Do a clean build of the JDBCControlSample project (note the many bugs and 
crappy performance)

The JDBCControlSample project is a smaller project, and builds more quickly 
than J1Petstore project.

Also note that there are some nasty bugs here.  You may need to disable the 
reconcile-time apt dispatch (see APTDispatch.java), and disable the resource & 
model listeners (see the GeneratedFileManager's init() method)

Unable to upload project .zip files because they are too large.  Stay tuned...
Implementation was horribly broken for the default package, and ended up finding
every class on the classpath. Fixed to look only in a specific package.


performance of PackageUtil's getClasses() is really bad on Beehive Petstore


With the exception of Sun's mirror api, the API in APT was intended to be provisional. It was decided that provisional API needs to be in a package with the name "internal" in it. This needs to be done for the API in APT.

With the exception of Sun's mirror api, the API in APT was intended to be provisional. It was decided that provisional API needs to be in a package with the name "internal" in it. This needs to be done for the API in APT.
If the API really is provisional, it should be marked as such. +1 to doing this.

Given that we are past the API freeze, taking away API could potentially be a bad thing. Do we have any sense who this would impact? Has this been talked about on the mailing lists?
I've posted a question to the jdt-apt-dev mailing list asking if anyone is using the current API. I'll add more info to this bug as I get replies.
Haven't heard any replies on the mailing list objecting to our privatizing most of the APT APIs. I believe most people are just using annotation processors written for Sun's commandline APT, which won't be affected by this change.
You have PMC approval for this (comment #1).  Do you have an ETA on when this will happen?  It really should be in before 3.2 M6.  Any other PMC on the list with comments/reservations?
Ah, I didn't realize that first comment indicated PMC approval. I'll go ahead with this change. I hope to have it completed by the end of this week (3/17), as I'll be at EclipseCon the following week.


(This is mainly for my information, but this bug also covers deletion of the interface org.eclipse.jdt.apt.core.env.EclipseMirrorObject shortly after M5)
Fixed in HEAD: moved classes and interfaces not intended to be API into internal packages.


Need to make much of APT provisional API

api
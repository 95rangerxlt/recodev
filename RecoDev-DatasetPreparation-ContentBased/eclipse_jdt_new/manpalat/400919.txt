BETA_JAVA8:

Searching for references to Existing in the following program brings up
only one - it should show two:

// ---
import java.lang.annotation.ElementType;
import java.lang.annotation.Target;
import java.util.Map;
import java.util.List;
import java.util.Collection;

interface I {
	I doit();
}

class X {
	class Folder<F extends @Existing File> {  }
	Collection<? super @Existing File> s;
}

@Target(ElementType.TYPE_USE)
@interface Existing {
	
}

BETA_JAVA8:

Searching for references to Existing in the following program brings up
only one - it should show two:

// ---
import java.lang.annotation.ElementType;
import java.lang.annotation.Target;
import java.util.Map;
import java.util.List;
import java.util.Collection;

interface I {
	I doit();
}

class X {
	class Folder<F extends @Existing File> {  }
	Collection<? super @Existing File> s;
}

@Target(ElementType.TYPE_USE)
@interface Existing {
	
}
Also in type variables themselves:

class X<@Immutable T> {}

@Target(ElementType.TYPE_USE)
@interface Immutable {
	
}

We don't find the Immutable in @Immutable T
Same issue, one level deeper example:

import java.lang.annotation.*;
/**
 * @param <T> 
 * @param <Q>  
 */
public class X <@Marker T extends @Marker Y<@Marker ?>, @Marker Q extends @Marker Object> {
}
/**
 * @param <T>  
 */
class Y<T> {}
@Target(ElementType.TYPE_USE)
@interface Marker {}
Created attachment 230448
Proposed Patch
Created attachment 230489
Proposed Patch

Attached a wrong patch earlier
Review comments: 

(1) Could you add a variant of the test that has annotations on type variables
of a generic method ?

(2) Likewise, a test that shows the results when searching for TYPE as opposed
to ANNOTATION_TYPE would be useful.

(3) I would also add some type annotations to the ? in the wildcard

(4) reportMatching: please pull the array length computation outside the loop into
the initializer.
Created attachment 230633
Proposed Patch

- Review comments addressed.
- addition of test cases into suite (correction)
The better practice is to declare the length variable right within the for loop.
Adjusted the patch accordingly and released the test and fix here:
http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=b4a98585238f00ec169e6c6eb5998e9d404a7925

Thanks Manoj.


[1.8][search] Search engine fails to annotation matches in type variable bounds.



Fixed Bug 400919 - [1.8][search] Search engine fails to annotation matches in type variable bounds. 
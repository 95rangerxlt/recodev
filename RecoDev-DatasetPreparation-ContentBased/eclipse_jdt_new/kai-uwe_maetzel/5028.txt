1. Create this class:
public class Hello {
	int x;
	int y;
}
 Note that x and y both show up in the outliner correctly.
3. Delete the line "int y;".
 Note that y disappears from the outliner correctly.
4. Change line 2 to read "int x, y;"
 Note that y is added to the outliner correctly, but x
 vanishes erroneously.
From this state a number of erroneous states can be reached. For instance:
5. Revert line 2 to the original version ("int x;".
 Note that y disappears correctly but the outliner now
 appears empty despite the presence of x;

1. Create this class:
public class Hello {
	int x;
	int y;
}
 Note that x and y both show up in the outliner correctly.
3. Delete the line "int y;".
 Note that y disappears from the outliner correctly.
4. Change line 2 to read "int x, y;"
 Note that y is added to the outliner correctly, but x
 vanishes erroneously.
From this state a number of erroneous states can be reached. For instance:
5. Revert line 2 to the original version ("int x;".
 Note that y disappears correctly but the outliner now
 appears empty despite the presence of x;
Build > 207.


Outliner fails with sequence of declarations



HEAD - Fix for 350285: ASTRewrite destroys formatting on CatchClause#setBody(copyTarget) 

R3_2_maintenance - 150289 

HEAD - 150289 

Bug 450286: Introduce Parameter dialog: table of parameters does not scroll into view 

See comment 12 of bug 350285: ASTRewrite destroys formatting on CatchClause#setBody(copyTarget) 

extracted workaround for bug 350285 into separate method 

145028 [clean up] Use of modifier final messes volatile variables 
I20060214-0010

0. create Java project 'P'
1. add Test.java:
public class Test {
	int foo() {
		return 1;
	}
	int useFoo() {
		return foo();
	}
}
class TestO extends Test {
	int useFoo() {
		return foo();
	}
}
2. select foo() in TestO.useFoo()
3. Refactor > Introduce Indirection

==> creates source with compile error:
public class Test {
	protected int foo() {
		return 1;
	}
	int useFoo() {
		return TestO.foo(this);
	}
}
class TestO extends Test {
	/*
	 * @see Test#foo()
	 * @since 3.2
	 */
	public static int foo(Test test) {
		return test.foo();
	}

	int useFoo() {
		return TestO.foo(Test.this);
	}
}

I20060214-0010

0. create Java project 'P'
1. add Test.java:
public class Test {
	int foo() {
		return 1;
	}
	int useFoo() {
		return foo();
	}
}
class TestO extends Test {
	int useFoo() {
		return foo();
	}
}
2. select foo() in TestO.useFoo()
3. Refactor > Introduce Indirection

==> creates source with compile error:
public class Test {
	protected int foo() {
		return 1;
	}
	int useFoo() {
		return TestO.foo(this);
	}
}
class TestO extends Test {
	/*
	 * @see Test#foo()
	 * @since 3.2
	 */
	public static int foo(Test test) {
		return test.foo();
	}

	int useFoo() {
		return TestO.foo(Test.this);
	}
}
Fixed.


Introduce Indirection refactoring results in compile error



127665: Introduce Indirection refactoring results in compile error 
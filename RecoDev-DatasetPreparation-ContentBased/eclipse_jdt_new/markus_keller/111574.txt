I20050928-1300

- new workspace
- add org.eclipse.jdt.ui to Java Search (Plug-ins view)
- import org.eclipse.jdt.ui as binary project
- open caller hierarchy for ProjectionMapping#toImageRegion(IRegion)
-> the view only no callers, but the search view shows 7

The problem is somewhere in RefactoringScopeFactory.createReferencingScope(..).
ProjectionMapping comes from org.eclipse.text_3.1.0.jar in 'Plug-in
Dependencies'. The createReferencingScope(..) only includes projects referencing
org.eclipse.jdt.ui, but does not include other plug-ins that reference
org.eclipse.text.

We probably have to take out the optimization from bug 95584 comment 2

I20050928-1300

- new workspace
- add org.eclipse.jdt.ui to Java Search (Plug-ins view)
- import org.eclipse.jdt.ui as binary project
- open caller hierarchy for ProjectionMapping#toImageRegion(IRegion)
-> the view only no callers, but the search view shows 7

The problem is somewhere in RefactoringScopeFactory.createReferencingScope(..).
ProjectionMapping comes from org.eclipse.text_3.1.0.jar in 'Plug-in
Dependencies'. The createReferencingScope(..) only includes projects referencing
org.eclipse.jdt.ui, but does not include other plug-ins that reference
org.eclipse.text.

We probably have to take out the optimization from bug 95584 comment 2
Probably fixed in RefactoringScopeFactory.createReferencingScope(..) by not
including referenced projects.
This is probably the same issue:

Call Hierarchy does not show any callers to java.lang.Runtime#maxMemory(), but
Search finds two (in org.eclipse.jdt.core, org.eclipse.ui.workbench.texteditor).
Scope reduction cannot work with references in libraries (especially when libraries occur in multiple projects). I removed the too optimistic optimization and reverted to only optimize for private methods.
*** Bug 118016 has been marked as a duplicate of this bug. ***


[call hierarchy] Caller hierarchy scope too narrow with target from Plug-in Dependencies



111574: [call hierarchy] Caller hierarchy scope too narrow with target from Plug-in Dependencies 

111574: [call hierarchy] Caller hierarchy scope too narrow with target from Plug-in Dependencies 
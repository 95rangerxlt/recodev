I20030825

Some of the refactoring tests still use assertEquals to compare source code. 
This asked for trouble if the two file have different line delimiters. All 
code should compare source code using SourceCompareUtil.compare.

Note: I would like to see the method on RefactoringTest. AbstractCUTestCase 
already has such a method and having the method on RefactoringTest instead of 
in SourceCompareUtil gives us the possibility to merge the two classes in the 
long term.

I20030825

Some of the refactoring tests still use assertEquals to compare source code. 
This asked for trouble if the two file have different line delimiters. All 
code should compare source code using SourceCompareUtil.compare.

Note: I would like to see the method on RefactoringTest. AbstractCUTestCase 
already has such a method and having the method on RefactoringTest instead of 
in SourceCompareUtil gives us the possibility to merge the two classes in the 
long term.
Markus, can you please provide a patch for this.
Created attachment 5892
Patch

I removed SourceCompareUtil and integrated the functionality in
RefactoringTest.

RefactoringTest now shadows two static methods from junit.framework.Assert:
- assertEquals(String, String, String)
- assertEquals(String, String)
... and marks them as deprecated to warn the inadvertent user.

In subclasses of RefactoringTest, we now use assertEqualLines(..) to compare
source files and assertEqualsOrig(..) for other strings (method names, ...).
assertEqualsOrig(..) could also be replaced by Assert.assertEquals(..).
Released patch. Fixed for I-build > 20030901


Refactoring tests should use SourceCompareUtil [refactoring]



[41932] 
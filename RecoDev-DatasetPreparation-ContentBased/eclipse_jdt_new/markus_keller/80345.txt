Take this example (the caret is at the |):

  updateTable(keepSameLeavesVisible|, true);

When you now invoke Expand Selection|Enclosing Element, the whole line gets
selected, but I want keepSameLeavesVisible to be selected. The reason is, that I
just from word to word using Ctrl-Left/Right and this stops at the word
begining/end. Currently, to be able to use ES|EE, I still need to press
Left/Right to step one character into the word.

Take this example (the caret is at the |):

  updateTable(keepSameLeavesVisible|, true);

When you now invoke Expand Selection|Enclosing Element, the whole line gets
selected, but I want keepSameLeavesVisible to be selected. The reason is, that I
just from word to word using Ctrl-Left/Right and this stops at the word
begining/end. Currently, to be able to use ES|EE, I still need to press
Left/Right to step one character into the word.
Note: "Expand Selection To > Next/Previous Element" already works on boundaries.

But I agree that "Expand Selection To > Enclosing Element" should also select
the adjacent element first. However, there may be situations like in statements
";;;|;;", where the adjacent element is not unique.
> However, there may be situations like in statements
> ";;;|;;", where the adjacent element is not unique.

Sorry, but this is a useless statement, because there is nothing before or after
the semicolon.

I much use this feature to easily select variables (or larger expressions). This
means, that the caret is either immediately before or after an variable name.
This should be possible to solve for the Eclipse team.
Of course this is doable. My comment was only meant as a hint to the
implementor, that the algorithm has to consider such cases too (and handle them
either way, I don't really care ...).
Fixed in HEAD and updated tests.

The StructureSelectEnclosingAction now selects an adjacent ASTNode if the
selection was zero-length and lying on a boundary.


[navigation] Expand Selection|Enclosing Element should work on boundaries



80345: [navigation] Expand Selection|Enclosing Element should work on boundaries 
I20031203++

Test case:

public class A {
    static void foo() {
        final int x= 10; 
        Runnable runnable= new Runnable() {
            private int field;
            public void run() {
                I i= new I() {
                    public void method() {
                        field= x;
                    }
                };
            }
        };
    }
}

interface I {
    void method();
}

- convert I to nested type
- observe: the field "field" can't be referenced. We should flag an error in 
  this case, but still allow the refactoring.

I20031203++

Test case:

public class A {
    static void foo() {
        final int x= 10; 
        Runnable runnable= new Runnable() {
            private int field;
            public void run() {
                I i= new I() {
                    public void method() {
                        field= x;
                    }
                };
            }
        };
    }
}

interface I {
    void method();
}

- convert I to nested type
- observe: the field "field" can't be referenced. We should flag an error in 
  this case, but still allow the refactoring.
I found an even weirder test case:
---------------------------------------
public class B {
	static Interface i = new Interface() {
		class C {
			int field;
			void foo() {
				Interface i = new Interface() {
					public void method() {
						field = 3;
					}
				};
			}
		}
		
		public void method() {
		}
	};
}

interface Interface {
	void method();
}
----------------------------------------------------
In this case the resulting inner class cannot be set to Public, Private or 
Protected and ideally those options should not be presented!
Created attachment 7135
fix

* fixes this bug
* fixes Bug 43360. 
* adds the static checkbox to the Wizard
* only presents modifier options if they make sense
Markus, can you please review the code. Thanks.

Two remarks I saw in th UI:

- refactorings that generate compile errors should flag them as errors not as
  warnings
- the error should only show up after the user has pressed OK or Next to be 
  consistent with other refactorings. We don't show precondition checking 
  results in the status bar of the input page.
 
Thanks for your contribution, Nikolay.

Released > 20031216 with some corrections and additions:
- checkbox label: Declare the *nested class* as static (not the "local variable")
- moved error check to checkInput (in contrast to the other checks, this one
does not validate user-changeable dialog input) and increased severity to ERROR
- "anonymous" is correct spelling, "annonymous" isn't
- used an ASTVisitor to traverse AST in getAllAccessedFields()
- added code to protect from errors in source files
- added tests


Convert anonymous to nested: should show error if field form outer anonymous type is references [refactoring]



43360: convert anonymous to nested should sometimes declare class as static 48282: Convert anonymous to nested: should show error if field form outer anonymous type is references -: protection from errors in source file 
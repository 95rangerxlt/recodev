Junit 4.12 was released, it would be good to update the version of junit in jdt to the latest version.

Upstream's release notes:

https://github.com/junit-team/junit/blob/master/doc/ReleaseNotes4.12.md

Junit 4.12 was released, it would be good to update the version of junit in jdt to the latest version.

Upstream's release notes:

https://github.com/junit-team/junit/blob/master/doc/ReleaseNotes4.12.md
CQ: https://dev.eclipse.org/ipzilla/show_bug.cgi?id=9232
Fixes for failing tests (for undocumented changes in JUnit 4.12):
http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=d4f9c3a05c94647f801324f4fab5898aa5c9f921
Can't go on with this without an approved CQ.
Unfortunately, I cannot access the CQ on IPZilla.

I am a JUnit maintainer and would like to help. What exactly do you need from us to satisfy the CQ requirement?

We are in the process of updating our Contributing.MD as suggested by Sharon Corbett. That will cover future releases.
Sorry, I don't know what's blocking this CQ. The CQ doesn't contain any more information. The ball is in Sharon's hands, and the best you can do is to work closely with Sharon to resolve the issues.
I contacted Sharon via email but still haven't received a reply.

@Markus: Could you reach out to her?
Time is running out for Mars and I haven't heard of any conclusions about the provenance discussion (for which Sharon and Marc should be connected now). 

RC1 would be the very last change to squeeze this in (May 6).
Marc and I are connected and in touch.  

I've re-circled with Marc today.  

Thanks for letting us know the time constraints...

Appreciate your patience.  

Regards,
Sharon
Created attachment 252856
org.junit_v4.12.0.zip (project for new Orbit branch v4_12_0)
(In reply to Markus Keller from comment #9)
> Created attachment 252856 [details]
> org.junit_v4.12.0.zip (project for new Orbit branch v4_12_0)

Thanks Markus. Code is in Orbit's CVS and a build has started. 

Since we have to 'touch' any features that include junit, 
if you want to go ahead and touch the features that will will need it, then it'd be more likely I could do a test build, just to sanity check there is not surprises by tonight's I-build. 

From what I have loaded, it appears these two will have to be touched: 
feature.xml - org.eclipse.jdt-feature
feature.xml - org.eclipse.test-feature

(I could do the test-feature, but not the jdt-feature). 

I'm also surprised we don't include "org.junit.source" anywhere ... but ... guess that'd be a different bug (or ... I'm just not seeing it).
(In reply to David Williams from comment #10)
> Since we have to 'touch' any features that include junit,

I don't think this really necessary. I see I20150428-0800\features\org.eclipse.jdt_3.11.0.v20150428-0943, where the qualifier is the highest qualifier of all included bundles (jdt.core). Even if orbit-bundles wouldn't trigger an update, we still get one because I just released a fix to jdt.ui.

> I'm also surprised we don't include "org.junit.source" anywhere ... but ...
> guess that'd be a different bug (or ... I'm just not seeing it).

I don't see it in the feature.xml either, but I also don't see any other source bundles there. I guess the build (tycho?) takes care of that.

But I do see it in /eclipse.platform.releng.aggregator/eclipse.platform.releng.prereqs.sdk/eclipse-sdk-prereqs.target:
      <unit id="org.junit" version="4.11.0.v201303080030"/>
      <unit id="org.junit.source" version="4.11.0.v201303080030"/>

I guess you'll update that as part of adopting the new Orbit build.
(In reply to Markus Keller from comment #11)
> (In reply to David Williams from comment #10)
> > Since we have to 'touch' any features that include junit,
> 
> I don't think this really necessary. I see
> I20150428-0800\features\org.eclipse.jdt_3.11.0.v20150428-0943, where the
> qualifier is the highest qualifier of all included bundles (jdt.core). Even
> if orbit-bundles wouldn't trigger an update, we still get one because I just
> released a fix to jdt.ui.
> 
> > I'm also surprised we don't include "org.junit.source" anywhere ... but ...
> > guess that'd be a different bug (or ... I'm just not seeing it).
> 
> I don't see it in the feature.xml either, but I also don't see any other
> source bundles there. I guess the build (tycho?) takes care of that.
> 
> But I do see it in
> /eclipse.platform.releng.aggregator/eclipse.platform.releng.prereqs.sdk/
> eclipse-sdk-prereqs.target:
>       <unit id="org.junit" version="4.11.0.v201303080030"/>
>       <unit id="org.junit.source" version="4.11.0.v201303080030"/>
> 
> I guess you'll update that as part of adopting the new Orbit build.

I've promoted the Orbit build, 
http://download.eclipse.org/tools/orbit/downloads/drops/S20150428165605/

updated our pre-req file, and 'touched" the test feature (I actually incremented it's minor version, since one of it's contained features, org.junit, changed in minor version (though, not sure they follow the same semantics as we do). Plus, noticed our "master" version was "lower than" our R4_4_maintenance version!? (I mean, before I updated master). 

So, think we are all set for a test build ... though by this time (5 PM) will not finish until shortly before 8 PM build) ... but, still worth a sanity check.
My test build completed without failing, so think we can move this to "fixed", and, then 'verify' once functionality is confirmed in tonight's 8 PM build. (that is, >= I20150428-2000.
Created attachment 252879
API Changes


[JUnit] Update to JUnit 4.12



Bug 457926: [JUnit] Update to JUnit 4.12 
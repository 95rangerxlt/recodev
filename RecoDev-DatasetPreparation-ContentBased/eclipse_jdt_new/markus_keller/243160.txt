I20080805-0100 + plug-in export.

public class C {
	/**
	 * This is a test.
	 * 
	 * @since 3.5
	 */
	void f() {
	}
	/**
	 * This is a test.
	 * 
	 * @since 3.5
	 * @deprecated as of 3.5
	 */
	void f2() {
		
	}
}

==> hover for f is OK but for f2 the empty line is missing.

I20080805-0100 + plug-in export.

public class C {
	/**
	 * This is a test.
	 * 
	 * @since 3.5
	 */
	void f() {
	}
	/**
	 * This is a test.
	 * 
	 * @since 3.5
	 * @deprecated as of 3.5
	 */
	void f2() {
		
	}
}

==> hover for f is OK but for f2 the empty line is missing.
Not sure whether this is related:

On the build machine (no Browser) look at the Javadoc of:
ResourceTextFileBufferManager.createEmptyDocumentFromFactory(IFile):

Deprecated. As of 3.5Helper to get rid of deprecation warnings.

==> the Javadoc text comes directly after the deprecation message but it should be below with on empty line.


Hairy.

This is rendered with an empty line:
<p>Deprecated.<p>This is a test.<dl style="margin-top: 0px;"><dt>Since:</dt><dd> 3.5</dd></dl>

This is rendered without an empty line:
<p>Deprecated.</p>This is a test.<dl style="margin-top: 0px;"><dt>Since:</dt><dd> 3.5</dd></dl>

In the first case, "This is a test." is in a <p> block, which is *implicitly* closed at the <dt>. Since the larger margin wins, the <p> causes an empty line.

In the second case, "This is a test." is not inside a <p> block, because there was a </p> before.
Fixed in JavadocContentAccess2 by closing the "Deprecated." header with <p> instead of </p>.

The description and the definition list are still not separated in some cases like the one below, but that's an old problem and will be fixed with bug 243318:

        /**
         * <p>This is a test.</p>
         * End of description.
         * 
         * @since 3.5
         */
        void f3() {
        }


[misc] missing empty line after Javadoc text in case of @deprecated



243160: [misc] missing empty line after Javadoc text in case of @deprecated 
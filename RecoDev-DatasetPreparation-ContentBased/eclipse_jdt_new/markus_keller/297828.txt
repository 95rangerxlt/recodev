User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.7) Gecko/2009030616 LHM/2.0 (halut) Firefox/3.0.14
Build Identifier: I20091210-1301

When creating a try/catch handler with Quick Fix for an exception that has the same name as an exception in java.lang, Quick Fix creates an import that overrides the implicit import from java.lang. Now every implicit reference to the java.lang exception is an explicit reference of the newly imported class.
The expected behaviour would be to use the fully qualified name of the class instead of an import. 

Reproducible: Always

Steps to Reproduce:
1. Create a class 'test.Exception' that extends java.lang.Throwable.
2. Create a class 'Test'
3. Create a function 'test1' that throws 'test.Exception'
4. Create a function 'test1a' that throws 'java.lang.Exception'
4. Create a function 'test2' that contains a cqall to 'test1a' and a try/catch for 'Exception' (no package name)
5. Create a function 'test3' that calls 'test1'.
6. Use Quick Fix on the line in 'test3' that calls 'test1'.

Quick Fix adds an import for 'test.Exception'. The try/catch in 'test2' no longer catches 'java.lang.Exception'.

User-Agent:       Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.7) Gecko/2009030616 LHM/2.0 (halut) Firefox/3.0.14
Build Identifier: I20091210-1301

When creating a try/catch handler with Quick Fix for an exception that has the same name as an exception in java.lang, Quick Fix creates an import that overrides the implicit import from java.lang. Now every implicit reference to the java.lang exception is an explicit reference of the newly imported class.
The expected behaviour would be to use the fully qualified name of the class instead of an import. 

Reproducible: Always

Steps to Reproduce:
1. Create a class 'test.Exception' that extends java.lang.Throwable.
2. Create a class 'Test'
3. Create a function 'test1' that throws 'test.Exception'
4. Create a function 'test1a' that throws 'java.lang.Exception'
4. Create a function 'test2' that contains a cqall to 'test1a' and a try/catch for 'Exception' (no package name)
5. Create a function 'test3' that calls 'test1'.
6. Use Quick Fix on the line in 'test3' that calls 'test1'.

Quick Fix adds an import for 'test.Exception'. The try/catch in 'test2' no longer catches 'java.lang.Exception'.
Created attachment 154467
Testcase

Eclipse project that exemplifies the problem.
Move to JDT/UI
Will probably be fixed by bug 295638.
Fixed with patch in bug 295638 comment 14. Thanks for the test project.
.


[surround with try/catch] doesn't consider implicit java.lang imports when creating imports for ambiguously named exceptions


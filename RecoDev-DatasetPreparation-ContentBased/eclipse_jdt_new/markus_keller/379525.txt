JavaDocLocations and clients have a fundamental problem: They deal with illegal URLs for which URL#toURI() throws an exception.

The problem is that they use an unescaped and unencoded form of URLs. This format is lossy, since it is not possible to later distinguish characters like #!? that can occur in file system paths from characters that delimit the components of a URL (path, ref, query).

APIs in JavaUI and stored data in classpath attribute and persistent project properties are also affected. If the fix also touches the storage format, then it needs a migration story. No migration story is necessary for API clients who implemented workarounds for the bad URL format (that's their fault).

JavaDocLocations and clients have a fundamental problem: They deal with illegal URLs for which URL#toURI() throws an exception.

The problem is that they use an unescaped and unencoded form of URLs. This format is lossy, since it is not possible to later distinguish characters like #!? that can occur in file system paths from characters that delimit the components of a URL (path, ref, query).

APIs in JavaUI and stored data in classpath attribute and persistent project properties are also affected. If the fix also touches the storage format, then it needs a migration story. No migration story is necessary for API clients who implemented workarounds for the bad URL format (that's their fault).
Bug 339422 could also influence this work.

A nice directory name for testing purposes: a ~!@#$%20^&()_-+,;[]{}z
Fixed with http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=3b943594b074108f1f0c2947216e91d834623b6f

Note bug 382748: The help server is broken if a path contains one of these characters: %+;[]§#°ä
Javadoc in an archive still won't work if one of these characters is used.


I've also removed the obsolete workaround from bug 367629 comment 9.


[api][implementation] get rid of illegal unencoded URLs



Bug 379525: [api][implementation] get rid of illegal unencoded URLs 
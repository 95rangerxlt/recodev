+++ This bug was initially created as a clone of Bug #416904 +++

In order to lower entry barrier for contribution and execution of unit tests, it would be quite helpful to make it possible to run tests with tycho-surefire-plugin and a simple "mvn clean verify".

+++ This bug was initially created as a clone of Bug #416904 +++

In order to lower entry barrier for contribution and execution of unit tests, it would be quite helpful to make it possible to run tests with tycho-surefire-plugin and a simple "mvn clean verify".
Gerrit pull request: https://git.eclipse.org/r/#/c/16359/

Only one tests is still failing.
Setting target to M3. We have M2 next week and we should not destabilize the current build.
(In reply to Mickael Istria from comment #1)
> Gerrit pull request: https://git.eclipse.org/r/#/c/16359/
> 
> Only one tests is still failing.

The change depended on some other change which is not necessary. In addition, it used tabs instead of spaces and in one file the copyright was not updated.

Fixed with http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=147a5b324458bb1104f39aad22df088f5a3cd308

Sorry it took so long. There was M2 and then I was on vacation.
Tests are failing with tycho-surefire-plugin because of bug 416935 . It's difficult to make sure tests are actually working with surefire until this bug gets resolved.
So far, I've just seen *sone* tests running with tycho-surefire, but not all of them. So this bug may require additional efforts, but we can't easily guess before Bug 416935 gets resolved.
Work on this bug is not complete.
Now that the JUnit part is fixed, I get another issue with surefire, on the org.eclipse.jdt.text.tests : testPluginsNotLoaded fails with
"""
junit.framework.AssertionFailedError: Wrong bundles loaded:
- org.eclipse.debug.ui
- org.eclipse.ui.navigator
- org.eclipse.ui.navigator.resources
"""

Any hint on this topic would be welcome!
(In reply to Mickael Istria from comment #6)
> Now that the JUnit part is fixed, I get another issue with surefire, on the
> org.eclipse.jdt.text.tests : testPluginsNotLoaded fails with
> """
> junit.framework.AssertionFailedError: Wrong bundles loaded:
> - org.eclipse.debug.ui
> - org.eclipse.ui.navigator
> - org.eclipse.ui.navigator.resources
> """
> 
> Any hint on this topic would be welcome!

Bundles are loaded that shouldn't be. This can e.g. happen if more than just "our" test suite is ran in the same run or other bundles are installed that trigger the loading of some unrelated bundles.
Ok.
It seems like surefire only runs the right TestSuite. But enables those bundles anyway...
To reproduce it, you can try:
 $ cd org.eclipse.jdt.text.tests
 $ mvn clean verify -Pbuild-individual-bundles -Dmaven.test.skip=false

What application is meant to run the tests? By default, surefire uses org.eclipse.ui.ide.workbench. The bundles could be started because of a different default perspective.
The test.xml tells you which tests are executed as own suite/run and whether they are core or UI tests. If I recall correctly they use 'org.eclipse.test.coretestapplication' or 'org.eclipse.test.uitestapplication'.
I've seen that, my question is more "which functional application is started by the test application"?
Adding David as CC as he may know the answer.
(In reply to Mickael Istria from comment #10)
> "which functional application is started by the test application"?

org.eclipse.jdt.text.tests/test.xml calls the "ui-test" target, and http://git.eclipse.org/c/platform/eclipse.platform.releng.git/tree/bundles/org.eclipse.test/src/org/eclipse/test/UITestApplication.java starts app "org.eclipse.ui.ide.workbench".
org.eclipse.jdt.ui.tests currently fails with:

[INFO] --- tycho-surefire-plugin:0.22.0:test (default-test) @ org.eclipse.jdt.ui.tests ---
[INFO] {osgi.ws=gtk, osgi.os=linux, osgi.arch=x86, org.eclipse.update.install.features=true}
[ERROR] Cannot resolve project dependencies:
[ERROR]   You requested to install 'bundle org.eclipse.jdt.junit4.runtime 0.0.0' but it could not be found
[ERROR] 
[ERROR] See http://wiki.eclipse.org/Tycho/Dependency_Resolution_Troubleshooting for help.
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] eclipse.jdt.ui .................................... SUCCESS [49.168s]
[INFO] org.eclipse.ltk.core.refactoring .................. SUCCESS [44.688s]
[INFO] org.eclipse.ltk.ui.refactoring .................... SUCCESS [10.550s]
[INFO] org.eclipse.jdt.core.manipulation ................. SUCCESS [17.246s]
[INFO] org.eclipse.jdt.ui ................................ SUCCESS [36.915s]
[INFO] org.eclipse.jdt.junit.runtime ..................... SUCCESS [7.428s]
[INFO] org.eclipse.jdt.junit.core ........................ SUCCESS [7.694s]
[INFO] org.eclipse.jdt.junit ............................. SUCCESS [8.109s]
[INFO] org.eclipse.jdt.ui.tests .......................... FAILURE [7.299s]
[INFO] org.eclipse.jdt.text.tests ........................ SKIPPED
[INFO] org.eclipse.ltk.core.refactoring.tests ............ SKIPPED
[INFO] org.eclipse.ltk.ui.refactoring.tests .............. SKIPPED
[INFO] org.eclipse.jdt.ui.tests.refactoring .............. SKIPPED
[INFO] org.eclipse.jdt.junit4.runtime .................... SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 13:55.570s
[INFO] Finished at: Mon Mar 09 19:30:04 EDT 2015
[INFO] Final Memory: 223M/1250M
[INFO] ------------------------------------------------------------------------

I guess the problem is that org.eclipse.jdt.ui.tests doesn't explicitly require org.eclipse.jdt.junit4.runtime, but there's a reference in the pom.xml.

The dependencies may be a bit hard to understand in that area, so I'll try to list the intentions:
- org.eclipse.jdt.junit.core requires org.eclipse.jdt.junit.runtime and org.eclipse.jdt.junit4.runtime in the target platform, but doesn't need them in the host. Since the o.e.jdt.junit4.runtime has a 1.5 BREE, we didn't want to make o.e.jdt.junit.core depend on that bundle.
- /org.eclipse.jdt-feature/feature.xml includes the junit4.runtime bundle, that's why it is included in the build.
- now that o.e.jdt.junit.core could also be bumped to 1.7, we could just do that and then add a normal dependency on org.eclipse.jdt.junit4.runtime and remove the special dependency in the pom.xml
Created attachment 251429
dependency fix

(In reply to Markus Keller from comment #12)
> I guess the problem is that org.eclipse.jdt.ui.tests doesn't explicitly
> require org.eclipse.jdt.junit4.runtime, but there's a reference in the
> pom.xml.

Exactly. 

Meanwhile I found that the attached patch gets us past this point.
For the test issue, it seems to be enough to just move some dependencies (incl. o.e.j.annotation) from pom.xml to MANIFEST.MF.
By modifying only the dependencies of o.e.j.ui.tests we avoid any change to the actual deliverables and no BREE changes seem to be needed.

This is close, but no cigar: With this patch I'm back to a failure in testPluginsNotLoaded() like reported above:

  PluginsNotLoadedTest.testPluginsNotLoaded:262 Wrong bundles loaded:
- org.eclipse.ui.navigator
- org.eclipse.ui.navigator.resources
(In reply to Stephan Herrmann from comment #13)
> Created attachment 251429 [details] [diff]
> dependency fix

Looks good, OK to release.

>   PluginsNotLoadedTest.testPluginsNotLoaded:262 Wrong bundles loaded:
> - org.eclipse.ui.navigator
> - org.eclipse.ui.navigator.resources

I think the problem is that the official Eclipse SDK build and a JUnit Plug-in Test launched from the workbench both launch with "-product org.eclipse.sdk.ide".
That way, the Java perspective is opened by default, and that perspective doesn't include the Project Explorer view.

If I instead choose to launch the test with application "org.eclipse.ui.ide.workbench" and without a product, then I also see the navigator bundles loaded because the default perspective is Resource.

Does anybody know the magic incantation to make the Surefire test run with the product as well?
(In reply to Markus Keller from comment #14)
> (In reply to Stephan Herrmann from comment #13)
> > Created attachment 251429 [details] [diff]
> > dependency fix
> 
> Looks good, OK to release.
> 
> >   PluginsNotLoadedTest.testPluginsNotLoaded:262 Wrong bundles loaded:
> > - org.eclipse.ui.navigator
> > - org.eclipse.ui.navigator.resources
> 
> I think the problem is that the official Eclipse SDK build and a JUnit
> Plug-in Test launched from the workbench both launch with "-product
> org.eclipse.sdk.ide".
> That way, the Java perspective is opened by default, and that perspective
> doesn't include the Project Explorer view.
> 
> If I instead choose to launch the test with application
> "org.eclipse.ui.ide.workbench" and without a product, then I also see the
> navigator bundles loaded because the default perspective is Resource.
> 
> Does anybody know the magic incantation to make the Surefire test run with
> the product as well?

You need:
<build>
    <plugins>
      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>tycho-surefire-plugin</artifactId>
        <version>${tycho-version}</version>
        <configuration>
          <product>org.eclipse.sdk.ide</product>
        </configuration>
      </plugin>
    </plugins>
  </build> 

in your pom
(In reply to Alexander Kurtakov from comment #15)
> You need:
> <build>
>     <plugins>
>       <plugin>
>         <groupId>org.eclipse.tycho</groupId>
>         <artifactId>tycho-surefire-plugin</artifactId>
>         <version>${tycho-version}</version>
>         <configuration>
>           <product>org.eclipse.sdk.ide</product>
>         </configuration>
>       </plugin>
>     </plugins>
>   </build> 
> 
> in your pom

Thanks, I'll try this.
New Gerrit change created: https://git.eclipse.org/r/43605
(In reply to Alexander Kurtakov from comment #15)
> You need:
> <build>
>     <plugins>
>       <plugin>
>         <groupId>org.eclipse.tycho</groupId>
>         <artifactId>tycho-surefire-plugin</artifactId>
>         <version>${tycho-version}</version>
>         <configuration>
>           <product>org.eclipse.sdk.ide</product>
>         </configuration>
>       </plugin>
>     </plugins>
>   </build> 
> 
> in your pom

That change created this command line:

/opt/public/common/jdk1.7.0_51/jre/bin/java, -Dosgi.noShutdown=false, -Dosgi.os=linux, -Dosgi.ws=gtk, -Dosgi.arch=x86_64, -Dosgi.clean=true, -jar, /jobs/genie.platform/eclipse.jdt.ui-Gerrit/workspace/.maven/repo/p2/osgi/bundle/org.eclipse.equinox.launcher/1.3.0.N20150309-2000/org.eclipse.equinox.launcher-1.3.0.N20150309-2000.jar, -data, /jobs/genie.platform/eclipse.jdt.ui-Gerrit/workspace/org.eclipse.jdt.text.tests/target/work/data, -install, /jobs/genie.platform/eclipse.jdt.ui-Gerrit/workspace/org.eclipse.jdt.text.tests/target/work, -configuration, /jobs/genie.platform/eclipse.jdt.ui-Gerrit/workspace/org.eclipse.jdt.text.tests/target/work/configuration, -application, org.eclipse.tycho.surefire.osgibooter.uitest, -testproperties, /jobs/genie.platform/eclipse.jdt.ui-Gerrit/workspace/org.eclipse.jdt.text.tests/target/surefire.properties, -product, org.eclipse.sdk.ide

Looks good, no? But still we get: 

Failed tests: 
  PluginsNotLoadedTest.testPluginsNotLoaded:262 Wrong bundles loaded:
- org.eclipse.ui.navigator
- org.eclipse.ui.navigator.resources

I'll disable tests on gerrit-hudson again for now, just one change I'll leave intact: 
[x] Run Xvnc during build
The issue about Navigator plugins state may be caused by having the Project Explorer loaded whereas the test didn't expect it.
(In reply to Mickael Istria from comment #19)
> The issue about Navigator plugins state may be caused by having the Project
> Explorer loaded whereas the test didn't expect it.

Yes, that certainly is the issue. And the reason for that is that the "-product org.eclipse.sdk.ide" at the end of the command line is apparently not enough to launch surefire tests with that product.

Somehow, the product setting makes it into the test run:
https://hudson.eclipse.org/platform/job/eclipse.jdt.ui-Gerrit/ws/org.eclipse.jdt.text.tests/target/surefire-reports/TEST-org.eclipse.jdt.text.tests.JdtTextTestSuite.xml contains
    <property name="eclipse.product" value="org.eclipse.sdk.ide"/>
and
    <property name="sun.java.command" value="... -application org.eclipse.tycho.surefire.osgibooter.uitest ... -product org.eclipse.sdk.ide"/>

I think the problem is simply that surefire doesn't make the whole Eclipse SDK product available during test runs, so the product is not available in the test environment.

https://hudson.eclipse.org/hudson/view/Eclipse%20and%20Equinox/job/ep45I-unit-lin64/ws/workarea/I20150311-1300/eclipse-testing/test-eclipse/eclipse/configuration/config.ini contains "eclipse.product=org.eclipse.sdk.ide", and 
the /org.eclipse.equinox.simpleconfigurator/bundles.info contains the org.eclipse.sdk bundle (which defines that product).

OTOH, https://hudson.eclipse.org/platform/job/eclipse.jdt.ui-Gerrit/ws/org.eclipse.jdt.text.tests/target/work/configuration/config.ini doesn't contain "sdk"

I've disabled the check for those two bundles: http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=f955d0404f7b6640229742b2819cc16364676de2

In https://hudson.eclipse.org/platform/job/eclipse.jdt.ui-Gerrit/configure , I've replaced
  maven.test.skip=true
  skipTests=true
by
  skipTests=false
and I've rebased https://git.eclipse.org/r/43605 to trigger https://hudson.eclipse.org/platform/job/eclipse.jdt.ui-Gerrit/146/
This time, it tried to run jdt.ui.tests before jdt.text.tests and then ran into a "java.lang.OutOfMemoryError: PermGen space".

Let's try with Java 8:
https://hudson.eclipse.org/platform/job/eclipse.jdt.ui-Gerrit/147/
Not too bad! This time, all test bundles except for org.eclipse.jdt.ui.tests.refactoring ended with SUCCESS.

The problem in the refactoring tests is that they were launched with:
-application org.eclipse.tycho.surefire.osgibooter.headlesstest

That obviously doesn't work for UI tests. I guess the project just lacks the configuration that is present e.g. in org.eclipse.jdt.ui.tests/pom.xml
(In reply to Markus Keller from comment #22)
> Not too bad! This time, all test bundles except for
> org.eclipse.jdt.ui.tests.refactoring ended with SUCCESS.
> 
> The problem in the refactoring tests is that they were launched with:
> -application org.eclipse.tycho.surefire.osgibooter.headlesstest
> 
> That obviously doesn't work for UI tests. I guess the project just lacks the
> configuration that is present e.g. in org.eclipse.jdt.ui.tests/pom.xml

Mid-air collision :)

I just copied the tycho-surefire configuration over :)
https://hudson.eclipse.org/platform/job/eclipse.jdt.ui-Gerrit/148/
Gerrit change https://git.eclipse.org/r/43605 was merged to [master].
Commit: http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=58652b11cea1165ec97623ed1e6304ea2632fb90
(In reply to Eclipse Genie from comment #24)
> Gerrit change https://git.eclipse.org/r/43605 was merged to [master].
> Commit:
> http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/
> ?id=58652b11cea1165ec97623ed1e6304ea2632fb90

Additional change: help tycho-surfire by marking test-less test classes as abstract. With this, https://hudson.eclipse.org/platform/job/eclipse.jdt.ui-Gerrit/149 was a full success, yeah! :)


Just, from looking at the test numbers, we don't seem to execute all tests at this point (e.g. only 530 refactoring tests). Should probably use explicit inclusions in the tycho-surfire configuration.
New Gerrit change created: https://git.eclipse.org/r/43717
(In reply to Markus Keller from comment #20)
> I think the problem is simply that surefire doesn't make the whole Eclipse
> SDK product available during test runs, so the product is not available in
> the test environment.
> 
> I've disabled the check for those two bundles:
> http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=f955d0404f7b6640229742b2819cc16364676de2

For reference: I think this would be the way to add the org.eclipse.sdk.ide product to the surefire test (note that "p2Installed" is EXPERIMENTAL): https://eclipse.org/tycho/sitedocs/tycho-surefire/tycho-surefire-plugin/test-mojo.html#testRuntime
New Gerrit change created: https://git.eclipse.org/r/43722
in https://git.eclipse.org/r/#/c/43717 I first tried pattern-based includes for tycho-surfire-plugin. When I noticed that this includes too much, I aborted the build and instead added precise includes with the same data as specified in test.xml.

now in https://git.eclipse.org/r/43722 Markus instead specifies properties testSuite and testClass.


Which of these approaches better harmonizes with our production builds? If the properties are the preferred approach, I can cancel the job for https://git.eclipse.org/r/#/c/43717 so we get to run the other job sooner?


FYI: I also enabled collecting junit test results in the job.
(In reply to Stephan Herrmann from comment #29)
> in https://git.eclipse.org/r/#/c/43717 I first tried pattern-based includes
> for tycho-surfire-plugin. When I noticed that this includes too much, I
> aborted the build and instead added precise includes with the same data as
> specified in test.xml.

This worked for some tests, but not for the refactoring tests. My guess would be: due to the directory name "test cases". How many tools like spaces in file names?

> FYI: I also enabled collecting junit test results in the job.

This worked:

https://hudson.eclipse.org/platform/job/eclipse.jdt.ui-Gerrit/151/testReport/
New Gerrit change created: https://git.eclipse.org/r/43737
Gerrit change https://git.eclipse.org/r/43737 was merged to [master].
Commit: http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=8497f0da70d7c0ce665c19a870d2f7650d56fbfd
(In reply to Eclipse Genie from comment #32)
> Gerrit change https://git.eclipse.org/r/43737 was merged to [master].
> Commit:
> http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/
> ?id=8497f0da70d7c0ce665c19a870d2f7650d56fbfd

We have SUCCESS, yeah!

On top of Markus' changes I only added one more explicit dependency to o.e.j.annotation 2.x (needed by PullUpTests18).

Also the test reports look pretty complete: https://hudson.eclipse.org/platform/job/eclipse.jdt.ui-Gerrit/153/testReport/

Except, that the LeakTestSuite seems to be missing. AFAICS that's the only remaining reason to leave this bug open ...
New Gerrit change created: https://git.eclipse.org/r/43751
Our good old test.xml scripts are the source for the test suites to run. See the "run" target. I indeed missed the org.eclipse.jdt.ui.tests.LeakTestSuite. 

However, I'm not sure how well that suite works when it's run in the same VM as the AutomatedSuite. In test.xml we run the two suites in separate workbenches. If it doesn't work out, then we can also live without the LeakTestSuite in Gerrit reviews.

> <testClass> vs. <includes>
I don't think that matters. The first one just allows a single suite, and it overrides any <includes>.

org.eclipse.jdt.ui.tests.refactoring can't have a hard dependency on o.e.jdt.annotations 2.0.0, since that would block testing with 1.7.

Let's try to put the dependency into the tycho-surefire-plugin in pom.xml:
https://git.eclipse.org/r/43751
(In reply to Markus Keller from comment #35)
> > <testClass> vs. <includes>
> I don't think that matters. The first one just allows a single suite, and it
> overrides any <includes>.

thanks for explaining.
 
> org.eclipse.jdt.ui.tests.refactoring can't have a hard dependency on
> o.e.jdt.annotations 2.0.0, since that would block testing with 1.7.

Sorry if my change broke anything. Seeing PullUpTests18 accessing the bundle without any checks for 1.8 I now wonder how this can work on 1.7 anyway?

Is it only necessary to *have* it without being able to *resolve* it, is that the difference?

> 
> Let's try to put the dependency into the tycho-surefire-plugin in pom.xml:
> https://git.eclipse.org/r/43751

Is a pom dependency weaker in any way?
How about an optional require bundle as we have in other tests?
(In reply to Stephan Herrmann from comment #36)
> Is it only necessary to *have* it without being able to *resolve* it, is
> that the difference?

Exactly. Refactoring tests typically just need stuff on the classpath, but they never execute it.

> Is a pom dependency weaker in any way?

Depends on where in the pom it is. I added it in the tycho-surefire-plugin, so it should only affect Gerrit tests, but not the official SDK build nor the tests that are run after SDK builds.

> How about an optional require bundle as we have in other tests?

Yes, an optional dependency would be the last resort. Though I'm not sure if Tycho includes it if it's optional.
Now tests failed in org.eclipse.jdt.ui.tests with:
org.eclipse.swt.SWTError: No more handles [gtk_init_check() failed]
	at org.eclipse.swt.SWT.error(SWT.java:4503)
	at org.eclipse.swt.widgets.Display.createDisplay(Display.java:933)

That looks like an infrastructure issue, so I just clicked Retrigger.
(In reply to Markus Keller from comment #38)
> Now tests failed in org.eclipse.jdt.ui.tests with:
> org.eclipse.swt.SWTError: No more handles [gtk_init_check() failed]
> 	at org.eclipse.swt.SWT.error(SWT.java:4503)
> 	at org.eclipse.swt.widgets.Display.createDisplay(Display.java:933)
> 
> That looks like an infrastructure issue, so I just clicked Retrigger.

I've seen that a lot in other contexts, where typically restart of Xvnc would help. Not sure if that's related here. I thought Hudson starts a fresh Xvnc for each build.
Gerrit change https://git.eclipse.org/r/43751 was merged to [master].
Commit: http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=18f0454b970744aebee3cc3482aa33c5f9b5915b
Everything good now, even including the leak tests.

Thanks Stephan! It's hard to set a correct assignee for this bug, but since the final commit was mine, I'll grab it ;-)
(In reply to Markus Keller from comment #41)
> Everything good now, even including the leak tests.
> 
> Thanks Stephan! It's hard to set a correct assignee for this bug, but since
> the final commit was mine, I'll grab it ;-)

I was going to say: sorry for diverting so much of your attention.
OTOH, I know you understand why I wanted this fixed :)

Great!


Allow to run tests with tycho-surefire-plugin



Bug 416915: Allow to run tests with tycho-surefire-plugin 

Bug 416915: Allow to run tests with tycho-surefire-plugin 

Bug 416915 - Allow to run tests with tycho-surefire-plugin 

Bug 416915: Allow to run tests with tycho-surefire-plugin 

Bug 416915: Allow to run test with tycho-surefire-plugin 
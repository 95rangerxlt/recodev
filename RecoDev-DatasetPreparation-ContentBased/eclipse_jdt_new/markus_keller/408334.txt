public class Test {

}

Right click and select 'Refactor > Extract Interface' for the above class.
Give some name for interface and click "Preview".
Use down arrow button i.e. "Select Next Change".   

It expands the 1st change node and "Add super interface" is selected.
No input in the details page.
Error is logged in the Error Log view:

org.eclipse.core.runtime.AssertionFailedException: assertion failed: 
	at org.eclipse.core.runtime.Assert.isTrue(Assert.java:110)
	at org.eclipse.core.runtime.Assert.isTrue(Assert.java:96)
	at org.eclipse.ltk.core.refactoring.TextChange.getCurrentContent(TextChange.java:334)
	at org.eclipse.ltk.internal.ui.refactoring.TextEditChangePreviewViewer.setInput(TextEditChangePreviewViewer.java:192)
...

public class Test {

}

Right click and select 'Refactor > Extract Interface' for the above class.
Give some name for interface and click "Preview".
Use down arrow button i.e. "Select Next Change".   

It expands the 1st change node and "Add super interface" is selected.
No input in the details page.
Error is logged in the Error Log view:

org.eclipse.core.runtime.AssertionFailedException: assertion failed: 
	at org.eclipse.core.runtime.Assert.isTrue(Assert.java:110)
	at org.eclipse.core.runtime.Assert.isTrue(Assert.java:96)
	at org.eclipse.ltk.core.refactoring.TextChange.getCurrentContent(TextChange.java:334)
	at org.eclipse.ltk.internal.ui.refactoring.TextEditChangePreviewViewer.setInput(TextEditChangePreviewViewer.java:192)
...
Not a regression. 
Also reproducible in:
Version: 3.8.1
Build id: M20120914-1540
Created attachment 231162
Fix

This is not trivial to fix, because ExtractInterfaceProcessor#rewriteTypeOccurrences(..) abuses the CompilationUnitRewrite infrastructure.

The method calls "rewrite.rewriteAST(..)", applies the TextEdits on a private document and then creates multiple levels of working copies and additional ASTs. The operations on the ASTRewrite in ExtractInterfaceProcessor#createTypeSignature(..) assign a CategorizedTextEditGroup to the rewrite event, and every execution of rewriteAST(..) adds more TextEdits to the CategorizedTextEditGroup, although only the last ones are relevant for the final CompilationUnitChange.

I think the right fix for this bug and the equivalent http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=f9e9d48ede0432e8537dc71496c5ca2ce432ff7c is to always clear all TextEdits before running the last rewriteAST(..) whose results end up in the CompilationUnitChange.
Fixed with http://git.eclipse.org/c/jdt/eclipse.jdt.ui.git/commit/?id=c100afc6ed5f1c88c6024bb1bf5789552f013be5


[extract interface] AFE on selecting next change in refactoring Preview



Bug 408334: [extract interface] AFE on selecting next change in refactoring Preview 
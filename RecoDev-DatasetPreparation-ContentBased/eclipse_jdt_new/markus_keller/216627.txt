Build ID: 3.3.1.1: M20071023-1652

Steps To Reproduce:
When inferring generic arguments over a large source collection, I consistently encounter the exception attached below. It's unfortunate that the stability of 3.3 is so much lower than the 3.2 series. I do not know exactly which class or condition is creating the NPE.

More information:
!ENTRY org.eclipse.ltk.ui.refactoring 4 10000 2008-01-25 11:48:11.308

!MESSAGE Internal Error

!STACK 0

java.lang.reflect.InvocationTargetException

	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:350)

	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.run(RefactoringWizardDialog2.java:310)

	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.createChange(RefactoringWizard.java:579)

	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:422)

	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.computeSuccessorPage(UserInputWizardPage.java:75)

	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.getNextPage(UserInputWizardPage.java:115)

	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.nextOrPreviewPressed(RefactoringWizardDialog2.java:481)

	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.access$0(RefactoringWizardDialog2.java:478)

	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2$1.widgetSelected(RefactoringWizardDialog2.java:671)

	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:227)

	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)

	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)

	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3682)

	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3293)

	at org.eclipse.jface.window.Window.runEventLoop(Window.java:820)

	at org.eclipse.jface.window.Window.open(Window.java:796)

	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation$1.run(RefactoringWizardOpenOperation.java:142)

	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)

	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:154)

	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:49)

	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startInferTypeArgumentsRefactoring(RefactoringExecutionStarter.java:312)

	at org.eclipse.jdt.ui.actions.InferTypeArgumentsAction.run(InferTypeArgumentsAction.java:114)

	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:268)

	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:244)

	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)

	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:546)

	at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:490)

	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:402)

	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)

	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)

	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3682)

	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3293)

	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)

	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)

	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)

	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)

	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)

	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)

	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)

	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)

	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:169)

	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)

	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)

	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)

	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)

	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)

	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)

	at java.lang.reflect.Method.invoke(Unknown Source)

	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)

	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)

	at org.eclipse.equinox.launcher.Main.run(Main.java:1173)

Caused by: java.lang.NullPointerException

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.getUsedIn(InferTypeArgumentsTCModel.java:148)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.pruneCvIfUnused(InferTypeArgumentsTCModel.java:171)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.pruneCvIfUnused(InferTypeArgumentsTCModel.java:186)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.pruneUnusedCuScopedCvs(InferTypeArgumentsTCModel.java:166)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.newCu(InferTypeArgumentsTCModel.java:158)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$1.acceptAST(InferTypeArgumentsRefactoring.java:208)

	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:720)

	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:473)

	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:731)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring.checkFinalConditions(InferTypeArgumentsRefactoring.java:182)

	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:83)

	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:118)

	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1797)

	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)

	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)

Root exception:

java.lang.NullPointerException

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.getUsedIn(InferTypeArgumentsTCModel.java:148)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.pruneCvIfUnused(InferTypeArgumentsTCModel.java:171)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.pruneCvIfUnused(InferTypeArgumentsTCModel.java:186)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.pruneUnusedCuScopedCvs(InferTypeArgumentsTCModel.java:166)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.newCu(InferTypeArgumentsTCModel.java:158)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$1.acceptAST(InferTypeArgumentsRefactoring.java:208)

	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:720)

	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:473)

	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:731)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring.checkFinalConditions(InferTypeArgumentsRefactoring.java:182)

	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:83)

	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:118)

	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1797)

	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)

	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)

Build ID: 3.3.1.1: M20071023-1652

Steps To Reproduce:
When inferring generic arguments over a large source collection, I consistently encounter the exception attached below. It's unfortunate that the stability of 3.3 is so much lower than the 3.2 series. I do not know exactly which class or condition is creating the NPE.

More information:
!ENTRY org.eclipse.ltk.ui.refactoring 4 10000 2008-01-25 11:48:11.308

!MESSAGE Internal Error

!STACK 0

java.lang.reflect.InvocationTargetException

	at org.eclipse.jface.operation.ModalContext.run(ModalContext.java:350)

	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.run(RefactoringWizardDialog2.java:310)

	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.createChange(RefactoringWizard.java:579)

	at org.eclipse.ltk.ui.refactoring.RefactoringWizard.computeUserInputSuccessorPage(RefactoringWizard.java:422)

	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.computeSuccessorPage(UserInputWizardPage.java:75)

	at org.eclipse.ltk.ui.refactoring.UserInputWizardPage.getNextPage(UserInputWizardPage.java:115)

	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.nextOrPreviewPressed(RefactoringWizardDialog2.java:481)

	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2.access$0(RefactoringWizardDialog2.java:478)

	at org.eclipse.ltk.internal.ui.refactoring.RefactoringWizardDialog2$1.widgetSelected(RefactoringWizardDialog2.java:671)

	at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:227)

	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)

	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)

	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3682)

	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3293)

	at org.eclipse.jface.window.Window.runEventLoop(Window.java:820)

	at org.eclipse.jface.window.Window.open(Window.java:796)

	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation$1.run(RefactoringWizardOpenOperation.java:142)

	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)

	at org.eclipse.ltk.ui.refactoring.RefactoringWizardOpenOperation.run(RefactoringWizardOpenOperation.java:154)

	at org.eclipse.jdt.internal.ui.refactoring.actions.RefactoringStarter.activate(RefactoringStarter.java:49)

	at org.eclipse.jdt.internal.corext.refactoring.RefactoringExecutionStarter.startInferTypeArgumentsRefactoring(RefactoringExecutionStarter.java:312)

	at org.eclipse.jdt.ui.actions.InferTypeArgumentsAction.run(InferTypeArgumentsAction.java:114)

	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.dispatchRun(SelectionDispatchAction.java:268)

	at org.eclipse.jdt.ui.actions.SelectionDispatchAction.run(SelectionDispatchAction.java:244)

	at org.eclipse.jface.action.Action.runWithEvent(Action.java:498)

	at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:546)

	at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:490)

	at org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:402)

	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:66)

	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:938)

	at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3682)

	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3293)

	at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2389)

	at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2353)

	at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2219)

	at org.eclipse.ui.internal.Workbench$4.run(Workbench.java:466)

	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:289)

	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:461)

	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)

	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:106)

	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:169)

	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:106)

	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:76)

	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:363)

	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:176)

	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)

	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)

	at java.lang.reflect.Method.invoke(Unknown Source)

	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:508)

	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:447)

	at org.eclipse.equinox.launcher.Main.run(Main.java:1173)

Caused by: java.lang.NullPointerException

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.getUsedIn(InferTypeArgumentsTCModel.java:148)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.pruneCvIfUnused(InferTypeArgumentsTCModel.java:171)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.pruneCvIfUnused(InferTypeArgumentsTCModel.java:186)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.pruneUnusedCuScopedCvs(InferTypeArgumentsTCModel.java:166)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.newCu(InferTypeArgumentsTCModel.java:158)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$1.acceptAST(InferTypeArgumentsRefactoring.java:208)

	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:720)

	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:473)

	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:731)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring.checkFinalConditions(InferTypeArgumentsRefactoring.java:182)

	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:83)

	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:118)

	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1797)

	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)

	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)

Root exception:

java.lang.NullPointerException

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.getUsedIn(InferTypeArgumentsTCModel.java:148)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.pruneCvIfUnused(InferTypeArgumentsTCModel.java:171)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.pruneCvIfUnused(InferTypeArgumentsTCModel.java:186)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.pruneUnusedCuScopedCvs(InferTypeArgumentsTCModel.java:166)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.newCu(InferTypeArgumentsTCModel.java:158)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring$1.acceptAST(InferTypeArgumentsRefactoring.java:208)

	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:720)

	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:473)

	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:731)

	at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsRefactoring.checkFinalConditions(InferTypeArgumentsRefactoring.java:182)

	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:83)

	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:118)

	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1797)

	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)

	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)
Moving to JDT/UI
I don't think this move makes sense. Although the outermost exception occurs in the UI, the wrapped exception, and thus the bug, actually occurs at org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.getUsedIn(InferTypeArgumentsTCModel.java:148).

The innermost exception really indicates the problem, and it clearly shows the issue is in the JDT internals.

(In reply to comment #2)
> I don't think this move makes sense. Although the outermost exception occurs in
> the UI, the wrapped exception, and thus the bug, actually occurs at
>org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel.getUsedIn(InferTypeArgumentsTCModel.java:148).
> The innermost exception really indicates the problem, and it clearly shows the
> issue is in the JDT internals.
This move makes perfect sense regarding the stack trace. The NPE occurs in org.eclipse.jdt.internal.corext.refactoring.generics.InferTypeArgumentsTCModel which is defined in the "core refactoring" source folder inside the JDT/UI plugin.
Now this doesn't mean the problem comes from the UI. It might be that the UI exposes a bug in the JDT/Core, but I think it should be investigated where the exception occurs first.
Okay, that's sensible enough. It seems wrong that a refactoring code transformer would be categorized (or packaged) as part of the UI--but if that's how it is then I won't gripe any further. 

Thanks for your patience: I'm not familiar with the JDT code.
UI issue or not, I did a little more playing around and have a simple test case that reproduces this issue. The code is as seen below. There's something about casting to MyEntry that creates the NPE. The interface is also necessary, but the specific methods are irrelevant.

class Test<A> {
    interface MyInt<K> {
        K getKey();
    }
    class MyEntry implements MyInt<A> {
        public A getKey() { return null; }
        public boolean equals(Object o) {
            if(!(o instanceof Test.MyEntry))
                return false;
            MyEntry m = (MyEntry) o;
            return m.getKey().equals(getKey());
        }
    }
}
Can reproduce in I20080122-1600 using test case from comment 5.
We're still trying to find time to look at this...
Here is a simplified version of the snippet above to reproduce the NPE:

package p;

class A<T> {
	class E implements I<T> {
		public void foo() {
			E m = (E) this;
		}
	}
}

interface I<K> {
}
Observed in I20081211-1908 with the http://simple.sourceforge.net/ code.
Retested in I20100312-1448 (3.6M6), still 100% reproducible.
Fixed in HEAD of InferTypeArgumentsTCModel and added regression test.

We still don't infer type arguments for the examples in comment 5 and comment 8, but at least we don't fail with an NPE any more.


[infer type arguments] NullPointerException when inferring generic arguments



Bug 216627: [infer type arguments] NullPointerException when inferring generic arguments 
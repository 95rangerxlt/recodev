Created attachment 117316
Fix

N20081106-2000

FatJarExportTests occasionally fail because ZipFile has not been closed, see test failure below.

I used these 3 conditional breakpoints to track this down:

1.) Last line of java.util.zip.ZipFile.ZipFile(File, int):
if (name.endsWith("mylib_stdout.jar")) {
	new Exception("open: " + this).printStackTrace();
}
return false;

2.) After 'if (jzfile != 0) {' in java.util.zip.ZipFile.close():
boolean isIt= name.endsWith("mylib_stdout.jar");
if (isIt) {
	System.out.println("close: " + this);
}
return isIt;

3.) In java.util.zip.ZipFile.finalize():
if (name.endsWith("mylib_stdout.jar") && jzfile != 0) {
	System.out.println("finalize: " + this);
}
return false;

Whenever a breakpoint was hit, I resumed (F8). In the end, I inspected the console for ZipFiles that have been opened but not closed.

The patch fixes all callers of JarPackagerUtil.getArchiveFile(..).


org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
at org.eclipse.core.internal.resources.Resource.delete(Resource.java:723)
at org.eclipse.core.internal.resources.Resource.delete(Resource.java:681)
at org.eclipse.jdt.testplugin.JavaProjectHelper.delete(JavaProjectHelper.java:281)
at org.eclipse.jdt.testplugin.JavaProjectHelper.access$0(JavaProjectHelper.java:278)
at org.eclipse.jdt.testplugin.JavaProjectHelper$2.run(JavaProjectHelper.java:311)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1800)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1782)
at org.eclipse.jdt.testplugin.JavaProjectHelper.clear(JavaProjectHelper.java:316)
at org.eclipse.jdt.ui.tests.jarexport.FatJarExportTests.tearDown(FatJarExportTests.java:134)
at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)
at junit.extensions.TestSetup$1.protect(TestSetup.java:21)
at junit.extensions.TestSetup.run(TestSetup.java:25)
at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)
at junit.extensions.TestSetup$1.protect(TestSetup.java:21)
at junit.extensions.TestSetup.run(TestSetup.java:25)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:354)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:206)
at org.eclipse.test.UITestApplication$3.run(UITestApplication.java:195)
at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:133)
at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3825)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3449)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2382)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2346)
at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2198)
at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:493)
at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:333)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:488)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
at org.eclipse.test.UITestApplication.runApplication(UITestApplication.java:138)
at org.eclipse.test.UITestApplication.run(UITestApplication.java:60)
at org.eclipse.test.UITestApplication.start(UITestApplication.java:210)
at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:193)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:370)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:549)
at org.eclipse.equinox.launcher.Main.basicRun(Main.java:504)
at org.eclipse.equinox.launcher.Main.run(Main.java:1236)
at org.eclipse.equinox.launcher.Main.main(Main.java:1212)
at org.eclipse.core.launcher.Main.main(Main.java:30)
Contains: Could not delete 'C:\buildtest\N20081106-2000\eclipse-testing\test-eclipse\eclipse\jdt_folder\TestSetupProject\mylib_stdout.jar'.

Created attachment 117316
Fix

N20081106-2000

FatJarExportTests occasionally fail because ZipFile has not been closed, see test failure below.

I used these 3 conditional breakpoints to track this down:

1.) Last line of java.util.zip.ZipFile.ZipFile(File, int):
if (name.endsWith("mylib_stdout.jar")) {
	new Exception("open: " + this).printStackTrace();
}
return false;

2.) After 'if (jzfile != 0) {' in java.util.zip.ZipFile.close():
boolean isIt= name.endsWith("mylib_stdout.jar");
if (isIt) {
	System.out.println("close: " + this);
}
return isIt;

3.) In java.util.zip.ZipFile.finalize():
if (name.endsWith("mylib_stdout.jar") && jzfile != 0) {
	System.out.println("finalize: " + this);
}
return false;

Whenever a breakpoint was hit, I resumed (F8). In the end, I inspected the console for ZipFiles that have been opened but not closed.

The patch fixes all callers of JarPackagerUtil.getArchiveFile(..).


org.eclipse.core.internal.resources.ResourceException: Problems encountered while deleting resources.
at org.eclipse.core.internal.resources.Resource.delete(Resource.java:723)
at org.eclipse.core.internal.resources.Resource.delete(Resource.java:681)
at org.eclipse.jdt.testplugin.JavaProjectHelper.delete(JavaProjectHelper.java:281)
at org.eclipse.jdt.testplugin.JavaProjectHelper.access$0(JavaProjectHelper.java:278)
at org.eclipse.jdt.testplugin.JavaProjectHelper$2.run(JavaProjectHelper.java:311)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1800)
at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1782)
at org.eclipse.jdt.testplugin.JavaProjectHelper.clear(JavaProjectHelper.java:316)
at org.eclipse.jdt.ui.tests.jarexport.FatJarExportTests.tearDown(FatJarExportTests.java:134)
at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)
at junit.extensions.TestSetup$1.protect(TestSetup.java:21)
at junit.extensions.TestSetup.run(TestSetup.java:25)
at junit.extensions.TestDecorator.basicRun(TestDecorator.java:24)
at junit.extensions.TestSetup$1.protect(TestSetup.java:21)
at junit.extensions.TestSetup.run(TestSetup.java:25)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:354)
at org.eclipse.test.EclipseTestRunner.run(EclipseTestRunner.java:206)
at org.eclipse.test.UITestApplication$3.run(UITestApplication.java:195)
at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)
at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:133)
at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3825)
at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3449)
at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2382)
at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2346)
at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2198)
at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:493)
at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:333)
at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:488)
at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:113)
at org.eclipse.test.UITestApplication.runApplication(UITestApplication.java:138)
at org.eclipse.test.UITestApplication.run(UITestApplication.java:60)
at org.eclipse.test.UITestApplication.start(UITestApplication.java:210)
at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:193)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:370)
at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:549)
at org.eclipse.equinox.launcher.Main.basicRun(Main.java:504)
at org.eclipse.equinox.launcher.Main.run(Main.java:1236)
at org.eclipse.equinox.launcher.Main.main(Main.java:1212)
at org.eclipse.core.launcher.Main.main(Main.java:30)
Contains: Could not delete 'C:\buildtest\N20081106-2000\eclipse-testing\test-eclipse\eclipse\jdt_folder\TestSetupProject\mylib_stdout.jar'.
Fixed in HEAD.

I tried to force GC and finalization, but even then it sometimes failed. I tried to find out why the files are not finalized in all cases, but I had to give up -- probably a bug in one of ZipFile's native methods, or a bogus VM optimization that strips away the finalizer too early.


FatJarExportTests occasionally fail because ZipFile has not been closed



254601: FatJarExportTests occasionally fail because ZipFile has not been closed 
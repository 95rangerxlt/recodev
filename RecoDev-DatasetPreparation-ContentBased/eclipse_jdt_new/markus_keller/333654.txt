On of the test teams reported intermittent failures from ArrayIndexOutOfBoundsExceptions on 64 bit JVMs in
org.eclipse.jdt.ui.leaktest.reftracker.IdentityHashSet.getInsertionIndex(Object, Object[]).

It seems System.identityHashCode(*) is returning an extremely large number, which results in the modulo being negative.  It should probably be protected against numbers larger than 0x7FFFFFFF

PW

On of the test teams reported intermittent failures from ArrayIndexOutOfBoundsExceptions on 64 bit JVMs in
org.eclipse.jdt.ui.leaktest.reftracker.IdentityHashSet.getInsertionIndex(Object, Object[]).

It seems System.identityHashCode(*) is returning an extremely large number, which results in the modulo being negative.  It should probably be protected against numbers larger than 0x7FFFFFFF

PW
Paul, we need
- the exact VM
- the build id
Created attachment 186200
Fix

Yeah, makes sense. My VMs don't produce such high (low) identity hash codes, but the problem is easily reproducible when you replace
    System.identityHashCode(x)
with
    (0x80000000 | System.identityHashCode(x))
Fixed in HEAD.


AIOOBE in IdentityHashSet.getInsertionIndex(*)



Bug 333654: AIOOBE in IdentityHashSet.getInsertionIndex(*) 
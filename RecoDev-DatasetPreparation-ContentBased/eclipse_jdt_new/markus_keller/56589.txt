The Call Hierarchy is the only view which shows its input as root
element. All other views (Search, Package Explorer, CVS Resource History,
etc.) only show their input in the view title via
ViewPart#setTitle(String). I think the Call Hierarchy should also follow
this pattern and just add the current input to the title. The currently
shown "declaration" node could the be removed, which makes the model
cleaner (only one node type: method calls) and saves some horizontal
screen space.

Before:
[Title:] Calls To Method
- updateView() : void - ...
   + setCallMode(int) : void - ...
   + refresh() : void - ...

Proposed change:
[Title:] Calls to method 'updateView()'
+ setCallMode(int) : void - ...
+ refresh() : void - ...

The Call Hierarchy is the only view which shows its input as root
element. All other views (Search, Package Explorer, CVS Resource History,
etc.) only show their input in the view title via
ViewPart#setTitle(String). I think the Call Hierarchy should also follow
this pattern and just add the current input to the title. The currently
shown "declaration" node could the be removed, which makes the model
cleaner (only one node type: method calls) and saves some horizontal
screen space.

Before:
[Title:] Calls To Method
- updateView() : void - ...
   + setCallMode(int) : void - ...
   + refresh() : void - ...

Proposed change:
[Title:] Calls to method 'updateView()'
+ setCallMode(int) : void - ...
+ refresh() : void - ...
Created attachment 9010
Patch moving the root of the call hierarchy into the view title.

Patch against org.eclipse.jdt.ui/ui/org.eclipse.jdt.internal.ui.callhierarchy
and org.eclipse.jdt.ui.tests/ui/org.eclipse.jdt.ui.tests.callhierarchy.

This patch moves the root of the call hierarchy into the view title.

Markus, I'm aware that there are some selection issues, especially in the Java
Browsing perspective (yes, now I have learned to look there as well...).

There are two scenarios:
1) The selected method has callers/callees: The selection of the browsing views
change to the first child of the root. Earlier, the root was selected, i.e. the
same method as the user was already looking at.

2) The selected method has no callers/callees. The selection is cleared.

I'd really like your comments on this and suggestions on how to avoid this
flickering of selections in the Java Browsing perspective. Is it possible to
have this perspective not subscribe to selection changes in the Call Hierarchy
view (or only special kinds)? It seems OK in the Java perspective.
Jesper, your patch has two bugs:

a) Searching children of the root element should also happen in background.
Background searching loses a lot of its appeal if it doesn't work on the first
level.

b) Children are not shown iff there's only one. The callee hierarchy of
junit.framework.TestCase#run(TestResult) should show TestResult#run(TestCase),
but it is empty.

Re selection changes in the Java Browsing Perspective:
The current behavior of the Call Hierarchy is just fine. The Java Browsing
Perspective views listen to selection changes - and if the selection changes,
they update themselves. This is consitent with the Package Explorer and the
(New) Search view, where the Java Browsing views also follow the selection (and
also get cleared when the selection becomes empty).
Jesper, please excuse my change of directions, but we came to the conclusion
that removing the root element was not the best idea after all.

There's a difference between
(a) views which show information about one input element:
    Search, CVS Resource History, ...
and
(b) views which show a hierarchical structure and allow switching the direction:
    Call Hierarchy, Type Hierarchy, ...

For (b)s, it's more clear to show the root element in the hierarchy as well as
in the title.

For short, is it OK for you to close this PR by only changing the view's title
to something like the following?
Caller mode: "Members calling 'updateView()'"
Callee mode: "Calls from method 'updateView()'"
(I think it's better to have a bigger textual distance between caller and callee
mode to help the user to distinguish them.)

Again, sorry for not having thought about this in depth before filing the bug.
Created attachment 9059
Patch for the new title only

Patch against org.eclipse.jdt.ui/ui/org.eclipse.jdt.internal.ui.callhierarchy

No hard feelings, Markus :-)
Thanks Jesper. Fixed in head.


Call Hierarchy should show root element in title



56589: Call Hierarchy should show root element in title 
On a 1 project scenario, the image builder fails to notice the addition of java.lang.Object and refresh the affected type.

TEST CASE:

1. Define java project Proj1 
2. Remove rt.jar from its build path
5. Add class X.java to Proj1: class X{}

Workspace should look like:
	Proj1 	
	+- X.java (class X{})

After adding X.java, an error is reported against it, complaining that java.lang.Object cannot be found.

6. Add class java.lang\Object.java to Proj1 --> the error on X.java did not get replaced with another one (Throwable is not found).

NOTES:

PM (4/3/2001 4:28:49 PM)
	TechPreview had same problem.

PM (4/26/2001 4:37:10 PM)
1.	Define:

<default package>
	X.java									public class X {}

<java.lang>
	Error.java							package java.lang;
												public class Error extends Throwable {}

	Object.java							package java.lang;
												public class Object {}

	RuntimeException.java		package java.lang;
												public class RuntimeException extends Throwable {}

	Throwable.java					package java.lang;
												public class Throwable {}

2.		Rebuild all (no problem)
3. 	Comment out the Object class declaration, save -> problems everywhere
4. 	Uncomment Object class declaration, save -> some problems persist

NE (04/30/01 10:37:04 AM)
	I believe the compiler is not generating the proper dependencies if it can't find these types.
	If it can't find java.lang.Object, it should at least generate a namespace dependency on java.lang
	(if it actually resolved java.lang).

PM (4/30/2001 7:58:23 PM)
	The namespace dependency was added in 101.

On a 1 project scenario, the image builder fails to notice the addition of java.lang.Object and refresh the affected type.

TEST CASE:

1. Define java project Proj1 
2. Remove rt.jar from its build path
5. Add class X.java to Proj1: class X{}

Workspace should look like:
	Proj1 	
	+- X.java (class X{})

After adding X.java, an error is reported against it, complaining that java.lang.Object cannot be found.

6. Add class java.lang\Object.java to Proj1 --> the error on X.java did not get replaced with another one (Throwable is not found).

NOTES:

PM (4/3/2001 4:28:49 PM)
	TechPreview had same problem.

PM (4/26/2001 4:37:10 PM)
1.	Define:

<default package>
	X.java									public class X {}

<java.lang>
	Error.java							package java.lang;
												public class Error extends Throwable {}

	Object.java							package java.lang;
												public class Object {}

	RuntimeException.java		package java.lang;
												public class RuntimeException extends Throwable {}

	Throwable.java					package java.lang;
												public class Throwable {}

2.		Rebuild all (no problem)
3. 	Comment out the Object class declaration, save -> problems everywhere
4. 	Uncomment Object class declaration, save -> some problems persist

NE (04/30/01 10:37:04 AM)
	I believe the compiler is not generating the proper dependencies if it can't find these types.
	If it can't find java.lang.Object, it should at least generate a namespace dependency on java.lang
	(if it actually resolved java.lang).

PM (4/30/2001 7:58:23 PM)
	The namespace dependency was added in 101.
PRODUCT VERSION:
JT 0.036			


Closed - not reproducable with new builder.

All problems are removed once the Class Error is added.


Incremental builder does not notice addition of java.lang.Object inside same project (1GBM23T)



Bug 432348 - [1.8] Internal compiler error (NPE) after upgrade to 1.8 

Regression test for 132348 

32342 

Bug 32347 - bookmarks in every kind of editor 

123234 [build path] link source wizard has wrong title/description 

33234 Goto source doesn't work when running a single test [JUnit] 
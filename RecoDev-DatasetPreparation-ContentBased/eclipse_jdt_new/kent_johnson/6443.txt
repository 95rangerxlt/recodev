Add or remove a folder called "org" anywhere under the source folder of any 
eclipse project.  The entire project and all dependent projects get recompiled.  
For example, in my workspace, I start with:

/org.eclipse.core.resources/src/org/eclipse/core/resources/

Then I create:

/org.eclipse.core.resources/src/org/eclipse/core/resources/org/

It recompiles everything.  Deletion does the same.

On folder additions/removals, it seems to invalid any type that has a dependency 
on any package that contains that folder name.  This is too coarse-grained.

Add or remove a folder called "org" anywhere under the source folder of any 
eclipse project.  The entire project and all dependent projects get recompiled.  
For example, in my workspace, I start with:

/org.eclipse.core.resources/src/org/eclipse/core/resources/

Then I create:

/org.eclipse.core.resources/src/org/eclipse/core/resources/org/

It recompiles everything.  Deletion does the same.

On folder additions/removals, it seems to invalid any type that has a dependency 
on any package that contains that folder name.  This is too coarse-grained.
Just to clarify. Had you switched to using the new builder ?
The new builder is recompiling the entire project where 'org' got added, but 
does not recompile any of the dependent projects, since none of the classfiles 
got actually refreshed (since identical).

It is though questionable whether or not the initiating project should be that 
much refreshed...
This was in build 20011127.  I'm guessing this uses the new builder, the 
behaviour seems generally different.

It seems to be recompiling dependent projects as well, but I can't be sure.  I 
get messages saying "Compiling contents of ..." for packages in other projects, 
but I don't know if this really means it's compiling or just doing the 
incremental analysis.
The new builder isn't officially enabled yet, so unless you changed your 
org.eclipse.jdt.core/plugin.xml, you are running the old builder implementation.

Recently (around 20011120), we released a fix into the old builder which causes 
it to recompile all dependents of any touched classfile (in dependent 
projects). Without this change, there was quite simple scenarii which the 
builder was not handling, causing grief to many end-users.

The new builder should deal far better with these scenarii. 
The new builder was recompiling too much since "org" is a well known name.

Released a fix to improve the behaviour, now only references to 
org.eclipse.core.resources are recompiled.
The 7 well known names will have less than optimal behaviour but its worth the 
trade off to save the space.


Incremental java builder doesn't handle folder create/delete nicely



Bug 186443 - Remove dead code 

Bug 266443: [navigation] JavaElementImplementationHyperlink does not work for method declarations 
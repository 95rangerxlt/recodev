Created attachment 227361
Screen shot

When you search for a JDK/JRE on Mac, we use information from the plist file to compute a name. This works fine most of the time, but if you happen to have more than one of the same version of VM installed they are added with the same name.

To make matters a bit worse, if you edit one of the JREs the wizard starts out with an error complaining that the name is already in use.

The attached screen shot shows the duplicated names for the Java 7 JREs

Created attachment 227361
Screen shot

When you search for a JDK/JRE on Mac, we use information from the plist file to compute a name. This works fine most of the time, but if you happen to have more than one of the same version of VM installed they are added with the same name.

To make matters a bit worse, if you edit one of the JREs the wizard starts out with an error complaining that the name is already in use.

The attached screen shot shows the duplicated names for the Java 7 JREs
Also, we should not add the '(MacOS X Default)' text to the name of the JRE when we create the JRE, because when you update the JRE you will have two of them saying '(MacOS X Default)'. We should instead annotate the label when the page shows.
(In reply to comment #1)
> Also, we should not add the '(MacOS X Default)' text to the name of the JRE
> when we create the JRE, because when you update the JRE you will have two of
> them saying '(MacOS X Default)'. We should instead annotate the label when
> the page shows.

I think we should get rid of the text about '(MacOS X Default)', since the new Oracle VMs do not report that they are built-in (the default mac one) and the code currently to determine 'default for the mac' in non-deterministic (just picks the first JRE/JDK that was parsed).

For example from the latest java_home output the Oracle 1.7 update 13 JDK reports: JVMIsBuiltIn=false, JVMEnabled=true, whereas the deprecated Apple 1.6 JRE reports: JVMIsBuiltIn=true, JVMEnabled=true.

Also when we do the search perhaps we should consult the blacklisted flag so users won't try to use a JRE/JDK Apple will not allow to be run - the java_home output contains a flag for this as well (JVMBlacklisted). Or rather than not allowing them to be found we could colour them differently or something on the page to show they have been black-listed.
Pushed changes to:

http://git.eclipse.org/c/jdt/eclipse.jdt.debug.git/commit/?id=77d4abfbdd0994bf2c52c68841216173de6fec48

Things that got updated:

1. I cleaned up the code for searching for Mac VMs, there was a lot of excessive processing happening.

2. I removed the '(MacOS X Default)' post-amble

3. for Mac VMs I added the version of the VM after the name - the reason being is now there are no name conflicts if you edit, and that you can now have N VMs with the same name, so the version makes it immediately obvious which is which

4. I added a '(workspace default)' + bolding so that the default JRE is more easy identifiable - similar to what we do on the API baselines, etc page.
Created attachment 227483
screen shot

This screen shot shows what the new labels look like
pushed: http://git.eclipse.org/c/jdt/eclipse.jdt.debug.git/commit/?id=d113f6d5a301638526a853346150555a79d37823

to remove the 'workspace' word from the default label, it made some of the labels too long.
While Curtis and I were playing with the page (original and with the latest changes), we found that trying to select all JREs and delete them does not work.

fixed with:

http://git.eclipse.org/c/jdt/eclipse.jdt.debug.git/commit/?id=271ac50d622f5043690427eaab9a8f0bfc65bab1
Curtis, please give it a spin.
+1 I reviewed the Mac specific changes with Mike.  The general fixes to the page are good as well.

Marking as FIXED.


Name selection for Mac VM installs needs improvement



Bug 401358 - Name selection for Mac VM installs needs improvement - fix selecting and deleting JREs 

Bug 401358 - Name selection for Mac VM installs needs improvement - remove 'workspace' from JRE label 

Bug 401358 - Name selection for Mac VM installs needs improvement 
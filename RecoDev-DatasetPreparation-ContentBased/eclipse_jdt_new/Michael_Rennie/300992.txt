I20100127-0100

The 'Suspend Policy' option is missing in the line breakpoint properties dialog. The option is available in the Breakpoints view details pane, but not in the dialog any more (it's there in latest 3.5.x build).

I20100127-0100

The 'Suspend Policy' option is missing in the line breakpoint properties dialog. The option is available in the Breakpoints view details pane, but not in the dialog any more (it's there in latest 3.5.x build).
Oh, I realized that this only happens for breakpoints whose target has gone:

- create a line breakpoint in a class from the JDK
- add another JDK and remove the original one
- open breakpoint properties dialog

=> Log:
!ENTRY org.eclipse.jdt.debug.ui 4 4 2010-01-27 15:03:39.651
!MESSAGE C:\java\jdk6_16\jre\lib\rt.jar is not on its project's build path

=> 'Suspend Policy' missing
=> Combo behind 'Condition' checkbox empty

- click OK
=> "Problem Occurred" dialog is quickly shown (only for 0.5 seconds) and NPE in log:
!ENTRY org.eclipse.jface 4 0 2010-01-27 15:07:04.839
!MESSAGE java.lang.NullPointerException
!STACK 0
java.lang.NullPointerException
        at org.eclipse.jdt.internal.debug.ui.propertypages.JavaBreakpointPage.storeSuspendPolicy(JavaBreakpointPage.java:184)
        at org.eclipse.jdt.internal.debug.ui.propertypages.JavaBreakpointPage.doStore(JavaBreakpointPage.java:143)
        at org.eclipse.jdt.internal.debug.ui.propertypages.JavaLineBreakpointPage.doStore(JavaLineBreakpointPage.java:57)
        at org.eclipse.jdt.internal.debug.ui.propertypages.JavaBreakpointPage$1.run(JavaBreakpointPage.java:92)
        at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1982)
        at org.eclipse.jdt.internal.debug.ui.propertypages.JavaBreakpointPage.performOk(JavaBreakpointPage.java:96)
        at org.eclipse.jface.preference.PreferenceDialog$13.run(PreferenceDialog.java:964)
        at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
        at org.eclipse.ui.internal.JFaceUtil$1.run(JFaceUtil.java:49)
        at org.eclipse.jface.util.SafeRunnable.run(SafeRunnable.java:175)
        at org.eclipse.jface.preference.PreferenceDialog.okPressed(PreferenceDialog.java:944)
        at org.eclipse.ui.internal.dialogs.FilteredPreferenceDialog.okPressed(FilteredPreferenceDialog.java:446)
        at org.eclipse.jface.preference.PreferenceDialog.buttonPressed(PreferenceDialog.java:233)
        at org.eclipse.jface.dialogs.Dialog$2.widgetSelected(Dialog.java:624)
        at org.eclipse.swt.widgets.TypedListener.handleEvent(TypedListener.java:228)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1050)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3984)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3577)
        at org.eclipse.jface.window.Window.runEventLoop(Window.java:825)
        at org.eclipse.jface.window.Window.open(Window.java:801)
        at org.eclipse.jdt.internal.debug.ui.actions.JavaBreakpointPropertiesAction.run(JavaBreakpointPropertiesAction.java:44)
        at org.eclipse.ui.internal.PluginAction.runWithEvent(PluginAction.java:251)
        at org.eclipse.jface.action.ActionContributionItem.handleWidgetSelection(ActionContributionItem.java:584)
        at org.eclipse.jface.action.ActionContributionItem.access$2(ActionContributionItem.java:501)
        at org.eclipse.jface.action.ActionContributionItem$5.handleEvent(ActionContributionItem.java:411)
        at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
        at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1050)
        at org.eclipse.swt.widgets.Display.runDeferredEvents(Display.java:3984)
        at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3577)
        at org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:2407)
        at org.eclipse.ui.internal.Workbench.runUI(Workbench.java:2371)
        at org.eclipse.ui.internal.Workbench.access$4(Workbench.java:2220)
        at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:500)
        at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
        at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:493)
        at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)
        at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:115)
        at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:194)
        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
        at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:367)
        at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:611)
        at org.eclipse.equinox.launcher.Main.basicRun(Main.java:566)
        at org.eclipse.equinox.launcher.Main.run(Main.java:1363)
In M20100107-1128, I just get the first log entry for this scenario, but the dialog looks fine and does not crash when I click OK.
The way we are creating the widgets on the page needs some updating. In our creatControl() method we enclose calling the methods to create the various controls in a try - catch, which is the cause of this bug. If one of the methods throws an exception, some controls that are expected to be created are not (leading to NPEs when we try to save).

We should change how we create the controls to avoid 'skipping' creating controls. We could also guard against the NPE(s)
Created attachment 157966
proposed fix

patch removes the necessity to throw exceptions by properly separating out the control creation from the control initialization.

Also contains a few layout updates to the detail panes (in general).

Needs to be tested on Mac to make sure all layouts look the same
All the layouts + changes look good on Mac, released patch.

Please verify Darin W


Line breakpoint properties dialog has problems when target class is not available



 Bug 300992 -  Line breakpoint properties dialog has problems when target class is not available 
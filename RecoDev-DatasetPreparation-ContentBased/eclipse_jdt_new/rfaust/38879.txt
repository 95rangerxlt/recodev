Build 3.0-M1

Amongst the options offered to generate code should figure one allowing non-
static field accesses to be qualified with 'this'.

We (jdt/core) use this convention instead of 'f' prefixes.

Build 3.0-M1

Amongst the options offered to generate code should figure one allowing non-
static field accesses to be qualified with 'this'.

We (jdt/core) use this convention instead of 'f' prefixes.
Martin, please comment.
we could add that as a preference


Randy, please take care.
Where do you want this preference to go... Code Gen panel?
yes, Code Gen -> Names

Something like:
'Qualify all generated field accesses with 'this.'
Created attachment 5229
proposed enhancement.

Adds a preference option to the code gen page for prefixing field accesses in
non static contexts with "this" keyword. This option is now reflected in
creation of getter/setter methods.
The option can only be on the preference page, not on the project property page.

Either we ask jdt.core to offer this setting so we also have it on a per project
basis, or we only offer it a workbench global option.

Philippe, what do you think? 
released the patch > 20030618

We offer the variable prefix/suffix on a per project basis, so the current
solution works out fine.



Getter/setter code gen



Backport of bug 388739 for bug 395681: [compiler] Improve simulation of javac6 behavior from bug 317719 after fixing bug 388795 

Bug 388795 - [compiler] detection of name clash depends on order of super interfaces 

Bug 388795 - [compiler] detection of name clash depends on order of super interfaces 

38879 Getter/setter code gen 
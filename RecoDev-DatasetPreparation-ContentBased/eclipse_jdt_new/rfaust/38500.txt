20030604
strange things happen when you start generating getters/setters for interface 
fields:

- dialog says you can make them 'private/protected/default' which is incorrect 
for interface methods (default makes some sense but the others do not)
- even if you say 'private' it still generates 'public'
- all interface methods are always 'abstract' so 'final' makes no sense - it 
will never compile
-'synchronized' makes no sense either
-nor does 'native'

20030604
strange things happen when you start generating getters/setters for interface 
fields:

- dialog says you can make them 'private/protected/default' which is incorrect 
for interface methods (default makes some sense but the others do not)
- even if you say 'private' it still generates 'public'
- all interface methods are always 'abstract' so 'final' makes no sense - it 
will never compile
-'synchronized' makes no sense either
-nor does 'native'
in general creating setters makes no sense either because all the fields are 
final
I guess best would be to not bring up the getter/setter dialog on interfaces.

When the 'Add Getter/Setter' action is invoked on a invalid location (interface,
outside of a type, type without members), a information dialog should come up to
inform what is a valid selection
*** Bug 38498 has been marked as a duplicate of this bug. ***
Created attachment 5139
proposed fix.

When chosen from an interface cu, now pops up a dialog with the message, "The
Generate Getters and Setters operation is not applicable to the fields in this
type."
patch release > 20030610


getters/setters: very confused by interface fields



Fixed bug 385009: [1.8][compiler] Running alternate parser/scanner in reconnaissance mode could add rigor. 

38500 getters/setters: very confused by interface fields 
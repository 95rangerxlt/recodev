The IVariableBinding for a LambdaExpression parameter has a non-unique key:

    IntPredicate f = (i) -> i == 1;
    IntPredicate g = (i) -> i != 2;

Key for both variables 'i' is just '#i'. Should be prefixed with the LambdaExpression's method binding key.

The IVariableBinding for a LambdaExpression parameter has a non-unique key:

    IntPredicate f = (i) -> i == 1;
    IntPredicate g = (i) -> i != 2;

Key for both variables 'i' is just '#i'. Should be prefixed with the LambdaExpression's method binding key.
Working on it.
Created attachment 238549
Patch

Patch with test case.
Test results are green.
Please review.
Patch is good. Just one small suggestion in the new test - can you use the testcase from comment #0 and add a test to confirm the keys are not equal for the two keys? Also, please adjust the copyright to 2014. Thanks!
Created attachment 238688
Patch

Copyright has been updated to 2014.
Added a new test case (Comment 0).
I agree to the terms and conditions on http://www.eclipse.org/legal/CoO.php.
Released here: 

http://git.eclipse.org/c/jdt/eclipse.jdt.core.git/commit/?h=BETA_JAVA8&id=5388a4d8d85e37aca7900d6712dbfdecbd3eda4d


[1.8][dom ast] variable binding for LambdaExpression parameter has non-unique key



Fix for bug 416559 - [1.8][dom ast] variable binding for LambdaExpression parameter has non-unique key 
I20060807-2000

With the current support, I found no way to rewrite the
"Test - test method (JUnit 4)" template to automatically add an import org.junit.Test when the template is applied.

A variable ${type(org.junit.Test)} would be a way to solve this. It should not be a tab stop in linked mode and it should use an ImportRewrite to add the type.

The solution should also be used in the "for - iterate over collection" default template, which currently causes a compile error when another type named "Iterator" is already visible in scope.

I20060807-2000

With the current support, I found no way to rewrite the
"Test - test method (JUnit 4)" template to automatically add an import org.junit.Test when the template is applied.

A variable ${type(org.junit.Test)} would be a way to solve this. It should not be a tab stop in linked mode and it should use an ImportRewrite to add the type.

The solution should also be used in the "for - iterate over collection" default template, which currently causes a compile error when another type named "Iterator" is already visible in scope.
With bug 200000 fixed you can now write:

@Test
public void ${testname}() throws Exception {
	${:import(org.junit.Test)}${cursor} 
}

But this will do nothing if a conflicting import exists. Instead we need something like:

@${type:newType(org.junit.Test)}
public void ${testname}() throws Exception {
	${:import(org.junit.Test)}${cursor} 
}

-----------------------------
${id:newType(reference)}

Evaluates to a type name of the type specified by the reference. An import for the reference will be added if no conflicting import exists, otherwise the type name will be fully qualified. The reference may either be a Java type name or the name of another template variable.
So, we can mark this fixed?
or is this: ${id:newType(reference)} not yet added?
(In reply to comment #3)
> or is this: ${id:newType(reference)} not yet added?
> 

Exactly, this variable does not yet exist. I'll attach a patch. The 'import' variable does not fix this bug because it can not handle conflicting imports.
Created attachment 76790
proposed fix
Comment on attachment 76790
proposed fix

Patch is good. I would use newType(type) instead of newType(reference).
fixed > I20070828-0800


[templates] Allow templates to add an explicit import



Bug 153252 [templates] Allow templates to add an explicit import 
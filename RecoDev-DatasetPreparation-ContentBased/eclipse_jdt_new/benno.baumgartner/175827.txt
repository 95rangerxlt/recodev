I20070227-0800

Given:
package test1;
public class E1 {
    public void foo(int[] ints) {
        //Top comment
        for (int i = 0; i < ints.length; i++) {
            System.out.println(ints[i]);
        }
        //Bottom comment
    }
}

1. Source>Clean Up...
2. Select 'Code Style>Convert For loops to enhanced' as only clean up
3. Finish
Is:

org.eclipse.text.edits.MalformedTreeException: Range of child edit lies outside of parent edit
	at org.eclipse.text.edits.TextEdit.internalAdd(TextEdit.java:774)
	at org.eclipse.text.edits.TextEdit.addChild(TextEdit.java:333)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.addEdit(ASTRewriteAnalyzer.java:211)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doCopySourcePreVisit(ASTRewriteAnalyzer.java:1278)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.preVisit(ASTRewriteAnalyzer.java:1259)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2474)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisit(ASTRewriteAnalyzer.java:314)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisit(ASTRewriteAnalyzer.java:320)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ASTRewriteAnalyzer.java:2039)
	at org.eclipse.jdt.core.dom.ForStatement.accept0(ForStatement.java:222)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2476)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisit(ASTRewriteAnalyzer.java:314)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextRemoveAndVisit(ASTRewriteAnalyzer.java:282)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer$ListRewriter.rewriteList(ASTRewriteAnalyzer.java:541)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteParagraphList(ASTRewriteAnalyzer.java:866)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ASTRewriteAnalyzer.java:1528)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:133)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2476)
	at org.eclipse.jdt.core.dom.rewrite.ASTRewrite.internalRewriteAST(ASTRewrite.java:259)
	at org.eclipse.jdt.core.dom.rewrite.ASTRewrite.rewriteAST(ASTRewrite.java:248)
	at org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite.attachChange(CompilationUnitRewrite.java:220)
	at org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite.createChange(CompilationUnitRewrite.java:185)
	at org.eclipse.jdt.internal.corext.fix.LinkedFix.createChange(LinkedFix.java:80)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:751)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.calculateSolutions(CleanUpRefactoring.java:248)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.acceptAST(CleanUpRefactoring.java:226)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:712)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:466)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:705)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpParser.createASTs(CleanUpRefactoring.java:340)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator.next(CleanUpRefactoring.java:432)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.cleanUpProject(CleanUpRefactoring.java:665)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.checkFinalConditions(CleanUpRefactoring.java:619)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:83)
	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:118)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:208)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1798)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)


This got introduced by bug 110599

Martin, I'm using a TightSourceRangeComputer in ConvertForLoopOperation. Not using the TightSourceRangeComputer makes the exception go away, but also the Top comment.

I20070227-0800

Given:
package test1;
public class E1 {
    public void foo(int[] ints) {
        //Top comment
        for (int i = 0; i < ints.length; i++) {
            System.out.println(ints[i]);
        }
        //Bottom comment
    }
}

1. Source>Clean Up...
2. Select 'Code Style>Convert For loops to enhanced' as only clean up
3. Finish
Is:

org.eclipse.text.edits.MalformedTreeException: Range of child edit lies outside of parent edit
	at org.eclipse.text.edits.TextEdit.internalAdd(TextEdit.java:774)
	at org.eclipse.text.edits.TextEdit.addChild(TextEdit.java:333)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.addEdit(ASTRewriteAnalyzer.java:211)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doCopySourcePreVisit(ASTRewriteAnalyzer.java:1278)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.preVisit(ASTRewriteAnalyzer.java:1259)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2474)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisit(ASTRewriteAnalyzer.java:314)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisit(ASTRewriteAnalyzer.java:320)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ASTRewriteAnalyzer.java:2039)
	at org.eclipse.jdt.core.dom.ForStatement.accept0(ForStatement.java:222)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2476)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.voidVisit(ASTRewriteAnalyzer.java:314)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.doTextRemoveAndVisit(ASTRewriteAnalyzer.java:282)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer$ListRewriter.rewriteList(ASTRewriteAnalyzer.java:541)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.rewriteParagraphList(ASTRewriteAnalyzer.java:866)
	at org.eclipse.jdt.internal.core.dom.rewrite.ASTRewriteAnalyzer.visit(ASTRewriteAnalyzer.java:1528)
	at org.eclipse.jdt.core.dom.Block.accept0(Block.java:133)
	at org.eclipse.jdt.core.dom.ASTNode.accept(ASTNode.java:2476)
	at org.eclipse.jdt.core.dom.rewrite.ASTRewrite.internalRewriteAST(ASTRewrite.java:259)
	at org.eclipse.jdt.core.dom.rewrite.ASTRewrite.rewriteAST(ASTRewrite.java:248)
	at org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite.attachChange(CompilationUnitRewrite.java:220)
	at org.eclipse.jdt.internal.corext.refactoring.structure.CompilationUnitRewrite.createChange(CompilationUnitRewrite.java:185)
	at org.eclipse.jdt.internal.corext.fix.LinkedFix.createChange(LinkedFix.java:80)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.calculateChange(CleanUpRefactoring.java:751)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.calculateSolutions(CleanUpRefactoring.java:248)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpASTRequestor.acceptAST(CleanUpRefactoring.java:226)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:712)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.resolve(CompilationUnitResolver.java:466)
	at org.eclipse.jdt.core.dom.ASTParser.createASTs(ASTParser.java:705)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpParser.createASTs(CleanUpRefactoring.java:340)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring$CleanUpFixpointIterator.next(CleanUpRefactoring.java:432)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.cleanUpProject(CleanUpRefactoring.java:665)
	at org.eclipse.jdt.internal.corext.fix.CleanUpRefactoring.checkFinalConditions(CleanUpRefactoring.java:619)
	at org.eclipse.ltk.core.refactoring.CheckConditionsOperation.run(CheckConditionsOperation.java:83)
	at org.eclipse.ltk.core.refactoring.CreateChangeOperation.run(CreateChangeOperation.java:118)
	at org.eclipse.ltk.core.refactoring.PerformChangeOperation.run(PerformChangeOperation.java:208)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:1798)
	at org.eclipse.ltk.internal.ui.refactoring.WorkbenchRunnableAdapter.run(WorkbenchRunnableAdapter.java:87)
	at org.eclipse.jface.operation.ModalContext$ModalContextThread.run(ModalContext.java:113)


This got introduced by bug 110599

Martin, I'm using a TightSourceRangeComputer in ConvertForLoopOperation. Not using the TightSourceRangeComputer makes the exception go away, but also the Top comment.
Problem is not the ASTRewriter but the TightSourceRangeComputer not working along spec:

"a source range of a parent node must fully cover the source ranges of its children"

In this case the parent (ForStatement) is tighter then the child (Block)

Created attachment 59999
fix
fixed > I20070227-0800


[clean up] ASTRewriteAnalyzer produces MalformedTreeException on convert loop clean up



175827 [clean up] ASTRewriteAnalyzer produces MalformedTreeException on convert loop clean up 
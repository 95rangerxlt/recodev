Build ID: I20070323-1616

Steps To Reproduce:
1.Create an empty class
2.Add two constants
private static final int z=5;
private static final int a=2*Z;
3.Sort/cleanup with sort enabled/save with automatic sorting enabled


More information:

I entered a new bug regarding sorting, even though there are already, because all existing ones I found have been postponed with state LATER pointing out that sorting is no refactoring action and thus is not meant to preserve semantic.

This might have been ok, as long as sorting was a deliberate act by the programmer she or he had to invoke explicitly.

With 3.3 one can include sorting in Clean-Up and also have sort performed automatically on save. These automatic rules make no sense at all, if sort can occasionally produce code which does not compile any more.

Build ID: I20070323-1616

Steps To Reproduce:
1.Create an empty class
2.Add two constants
private static final int z=5;
private static final int a=2*Z;
3.Sort/cleanup with sort enabled/save with automatic sorting enabled


More information:

I entered a new bug regarding sorting, even though there are already, because all existing ones I found have been postponed with state LATER pointing out that sorting is no refactoring action and thus is not meant to preserve semantic.

This might have been ok, as long as sorting was a deliberate act by the programmer she or he had to invoke explicitly.

With 3.3 one can include sorting in Clean-Up and also have sort performed automatically on save. These automatic rules make no sense at all, if sort can occasionally produce code which does not compile any more.
This is a known "issue": Sorting fields can change the semantic of the code, that's why there is an option in the cleanup/save action/sort members action do not sort fields. Don't sort the fields and you wont have any problems...

But, I just saw that the clean up dialog/save action dialog does not show a warning that sorting fields may change the semantic. They should show the same warning as the sort members action. Minor M7 polish.
> that's why there is an option in the cleanup/save action/sort members action do
> not sort fields. Don't sort the fields and you wont have any problems...

Sure, but why put them there in the first place then? I don't think anyone would actually activate this when knowing they can make your source uncompilable.

Fixing sorting so that it won't change semantic is IMHO the only right solution if one wants to have sort in cleanup and save-actions.
(In reply to comment #2)
> Fixing sorting so that it won't change semantic is IMHO the only right 
> solution if one wants to have sort in cleanup and save-actions.
> 

I agree, see Bug 92782
Re: comment #2, there are plenty of people who want to sort fields. It only applies if you have fields which are defined in terms of other fields; avoid that programming pracitce and you don't have a problem :-)

But yes, it would be good if it were possible to detect that condition and then warn for it (see associated bug). In the meantime, if you get compile errors you can always undo :-)

Alex.
Created attachment 64594
fix
fixed > I20070417-0800


[clean up] sort fields should warn for semantic change



180929 [clean up] sort fields should warn for semantic change 
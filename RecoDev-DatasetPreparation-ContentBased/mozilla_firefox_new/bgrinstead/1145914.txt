Open the inspector on https://bgrins.github.io/devtools-demos/inspector/mutations.html.

There is an attribute changing in a loop:

    for (var i = 0; i < 1000; i++) {
      document.querySelector("#toofast").setAttribute("data-toofast", toofast++);
    }

If you open the inspector on that tab and watch the protocol traffic, you'll see 1000 duplicate packets per batch like this:

    {
      "type": "attributes",
      "target": "server1.conn1.domnode107",
      "numChildren": 3,
      "attributeName": "data-toofast",
      "newValue": "5999"
    },
    {
      "type": "attributes",
      "target": "server1.conn1.domnode107",
      "numChildren": 3,
      "attributeName": "data-toofast",
      "newValue": "5999"
    },
    {
      "type": "attributes",
      "target": "server1.conn1.domnode107",
      "numChildren": 3,
      "attributeName": "data-toofast",
      "newValue": "5999"
    }

Open the inspector on https://bgrins.github.io/devtools-demos/inspector/mutations.html.

There is an attribute changing in a loop:

    for (var i = 0; i < 1000; i++) {
      document.querySelector("#toofast").setAttribute("data-toofast", toofast++);
    }

If you open the inspector on that tab and watch the protocol traffic, you'll see 1000 duplicate packets per batch like this:

    {
      "type": "attributes",
      "target": "server1.conn1.domnode107",
      "numChildren": 3,
      "attributeName": "data-toofast",
      "newValue": "5999"
    },
    {
      "type": "attributes",
      "target": "server1.conn1.domnode107",
      "numChildren": 3,
      "attributeName": "data-toofast",
      "newValue": "5999"
    },
    {
      "type": "attributes",
      "target": "server1.conn1.domnode107",
      "numChildren": 3,
      "attributeName": "data-toofast",
      "newValue": "5999"
    }
Interestingly, after the fix in Bug 1139569, the frontend doesn't care much about these duplicate packets since the attribute value hasn't changed, but we still shouldn't send them to prevent unnecessary noise
Created attachment 8581010
inspector-duplicate-attribute-changes.patch

Something like this, probably
(In reply to Brian Grinstead [:bgrins] from comment #2)
> https://bgrins.github.io/devtools-demos/inspector/mutations.html
You just killed my browser with this page :)
Created attachment 8581691
inspector-duplicate-attribute-changes.patch

Dave, we've discussed the issue in which multiple attribute modifications get queued up and sent across in a single call to getMutations.  This patch prunes out any duplicate attribute modifications that happen within a single call to getMutations.  What do you think?  If you're too busy, please redirect the review to Patrick.
Try push: https://treeherder.mozilla.org/#/jobs?repo=try&revision=b1524b9d1d3a
https://hg.mozilla.org/integration/fx-team/rev/fde5601c5dd4
https://hg.mozilla.org/mozilla-central/rev/fde5601c5dd4


Multiple attribute changes are queued up on server and sent over with the same values



Bug 1145914 - Make the inspector actor send over only the most recent change for each attribute;r=dcamp 
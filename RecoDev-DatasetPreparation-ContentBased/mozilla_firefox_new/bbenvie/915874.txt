There's some gratuitous inefficiencies as well as a lot of inter-mixing of arrow functions with normal.bind(this) ones and just some plain nutty stuff going in toolbox.js that's driving me bonkers. This bug is to fix it.

There's some gratuitous inefficiencies as well as a lot of inter-mixing of arrow functions with normal.bind(this) ones and just some plain nutty stuff going in toolbox.js that's driving me bonkers. This bug is to fix it.
Created attachment 804129
bug-915875.patch

Cleans up toolbox.js, also with a minor modification to gDevTools.jsm.

Let me know if you can't review this and I'll find someone else.

https://tbpl.mozilla.org/?tree=Try&rev=3ee9688f81ae
Comment on attachment 804129
bug-915875.patch

Review of attachment 804129:
-----------------------------------------------------------------

Too much OCD going around :)
You might wanna pass it through try again with the perma orange cause backed out.

::: browser/devtools/framework/toolbox.js
@@ +132,5 @@
>     * likely that we're going to want to get the panel that we've just made
>     * visible
>     */
> +  getCurrentPanel: function() {
> +    return this.getPanel(this.currentToolId);

You can directly do 

this._tools.get(this.currentToolId)

right ?

@@ +319,5 @@
>      }
>  
>      let sideEnabled = Services.prefs.getBoolPref(this._prefs.SIDE_ENABLED);
>  
> +    for (let type in Toolbox.HostType) {

let position of Toolbox.HostType ?
Thanks for the review!

> ::: browser/devtools/framework/toolbox.js
> @@ +132,5 @@
> >     * likely that we're going to want to get the panel that we've just made
> >     * visible
> >     */
> > +  getCurrentPanel: function() {
> > +    return this.getPanel(this.currentToolId);
> 
> You can directly do 
> 
> this._tools.get(this.currentToolId)

Yeah I had that originally but changed it. However, I think you're right, better to do it directly rather than another level of indirection.

> >      }
> >  
> >      let sideEnabled = Services.prefs.getBoolPref(this._prefs.SIDE_ENABLED);
> >  
> > +    for (let type in Toolbox.HostType) {
> 
> let position of Toolbox.HostType ?

Can't use for-of on a plain object (they don't define "iterator".


https://tbpl.mozilla.org/?tree=Try&rev=9f2a90a48dcb
Trying this again, not getting failures when I test locally.

https://tbpl.mozilla.org/?tree=Try&rev=e47d67371900
Created attachment 809356
bug-915874.patch

Rebases. Let's do another try run just to make sure...

https://tbpl.mozilla.org/?tree=Try&rev=af1485fc7126
https://hg.mozilla.org/integration/fx-team/rev/ab4ffa5b2428
This landed with the wrong bug number (bug 915875): https://hg.mozilla.org/mozilla-central/rev/ab4ffa5b2428


[toolbox] Clean up toolbox.js


When redirecting Tab* events, FUEL currently passes an empty string for the event data. Passing the BrowserTab corresponding to the target of the event is preferable.

http://mxr.mozilla.org/mozilla-central/source/browser/fuel/src/fuelApplication.js#142

When redirecting Tab* events, FUEL currently passes an empty string for the event data. Passing the BrowserTab corresponding to the target of the event is preferable.

http://mxr.mozilla.org/mozilla-central/source/browser/fuel/src/fuelApplication.js#142
ubiquity could use this. currently there's no way to (for example) get the newly opened tab from a TabOpen event.
Created attachment 353703
patch

This patch sends a BrowserTab object with the "Tab*" events of the Window object and the "load" event of the BrowserTab object.

Tests included. Also, adds some missing methods to the nsIWebProgressListener impl - errors were showing up in the console.
Comment on attachment 353703
patch

>diff --git a/browser/fuel/src/fuelApplication.js b/browser/fuel/src/fuelApplication.js

>+    this._events.dispatch(aEvent.type, new BrowserTab(this._window, aEvent.originalTarget.linkedBrowser));

Technically you should be using tabbrowser.getBrowserForTab, I think, but I bet we couldn't get away with changing how the browser is stored at this point anyways, so probably doesn't matter.

>diff --git a/browser/fuel/test/browser_Browser.js b/browser/fuel/test/browser_Browser.js

Perhaps worth adding a test that the tab object's "window" is correct, for the TabOpen case?
(In reply to comment #3)
> (From update of attachment 353703 [details])
> >diff --git a/browser/fuel/src/fuelApplication.js b/browser/fuel/src/fuelApplication.js
> 
> >+    this._events.dispatch(aEvent.type, new BrowserTab(this._window, aEvent.originalTarget.linkedBrowser));
> 
> Technically you should be using tabbrowser.getBrowserForTab, I think, but I bet
> we couldn't get away with changing how the browser is stored at this point
> anyways, so probably doesn't matter.

True, but we do that in more places, so a new "cleanup" bug might be best. I'll file a bug.

> Perhaps worth adding a test that the tab object's "window" is correct, for the
> TabOpen case?

The objects returned from Application.activeWindow and gPageA(B).window are not the same object as the event.data.window and I don't have a handy alternative to use as a test, like I do with BrowserTab.uri.spec
http://hg.mozilla.org/mozilla-central/rev/09ac7c3e27e7
Beltzner, this could be a nice feature for Ubiquity users. No public API is changed by the patch. The only public change is the data passed to an event handler now has a reference to the BrowserTab object that spawned the event, instead of null.
Just ask for approval on the patch?
Comment on attachment 353703
patch

a191=beltzner
fixed1.9.1
http://hg.mozilla.org/releases/mozilla-1.9.1/rev/61f8eafbdf25


FUEL: pass BrowserTab object as event data for Tab* events

fixed1.9.1

Bug 470163: [FUEL] pass BrowserTab object as event data for Tab* events, r=gavin 
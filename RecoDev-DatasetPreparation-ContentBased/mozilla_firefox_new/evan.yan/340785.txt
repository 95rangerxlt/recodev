This bug could be reproduced only when orca is running and www.yahoo.com is print previewing.

1. Invoke orca and firefox.
2. Load www.yahoo.com.
3. Select menu File->Print Preview

Actual result:
Firefox crashed.

Additional info:
Here's the core stack trace:
core 'core' of 1424:    firefox/firefox-bin
-----------------  lwp# 1 / thread# 1  --------------------
 ff31e100 _lwp_kill (b, ffbfdd18, 0, b, 0, 1) + 8
 0053ab74 __1cNnsProfileLockSFatalSignalHandler6Fi_v_ (b, 0, 53aa50, 53a800, a, c4) + e8
 ff31d040 __sighndlr (b, 0, ffbfde98, 53aa8c, ffbffeff, 1) + c
 ff3120b8 call_user_handler (0, ffbffeff, ffbfde98, 0, b, fefa2000) + 390
 00f466e0 __1cXnsXULMenuitemAccessibleNGetChildCount6Mpi_I_ (2191230, ffbfe5bc, 17e4504, b23620, 17e4504, 832294) + 490
 00f119e4 __1cMnsAccessibleKGetChildAt6MippnNnsIAccessible__I_ (2191230, 4, ffbfe624, 2191230, f46250, 18446ac) + 10
 00f27d2c ???????? (f119d4, 4, 18446ac, ffbfe624, 80000000, 218c2f0)
 f991033c impl_accessibility_accessible_get_child_at_index (218cad4, 4, ffbfe904, 10800, 1d2dc, f992d5b8) + 64
 f990e3d0 _ORBIT_skel_small_Accessibility_Accessible_getChildAtIndex (218cad4, ffbfe760, ffbfe758, ffbfe748, ffbfe904, f99102d8) + 10
 fa6e4158 ORBit_small_invoke_adaptor (1ef9230, 2075d30, 0, ffbfe758, ffbfe904, f992f7c8) + 438
 fa6f5680 ORBit_POAObject_handle_request (1ef9230, 2ca0494, 0, 0, 0, 2075d30) + 420
 fa6f585c ORBit_POAObject_invoke_incoming_request (1ef9230, 2075d30, ffbfe904, 0, fefa2000, 2400) + 54
 fa6f5e1c ORBit_POA_handle_request (0, 2075d30, 2075d48, ffbfe904, 0, fe7a7dc8) + 32c
 fa6faa94 ORBit_handle_request (1a28c38, 2075d30, 1a28c38, 2ca04c4, 23a00, fa6f5af0) + 4c
 fa6e0754 giop_connection_handle_input (20558c8, 2075d30, 278, 0, 0, fa6e04d8) + 25c
 fa7028ec link_connection_io_handler (0, 1, 20558c8, 1, 1a2d9c8, 1) + 4c
 fe72fa60 g_main_dispatch (1881b00, 0, fa704af8, fe7a7dd4, fe7a7dc0, fe7a7dc4) + 1e0
 fe7310a0 g_main_context_dispatch (1, 1, fe7a7dc0, 1, fe7a7dc4, 1881b00) + c8
 fe7315c0 g_main_context_iterate (1, 0, 1, 1881b00, d, d) + 49c
 fe731844 g_main_context_iteration (0, 0, fe7a7dc4, 1881b00, 1, 28) + c4
 007c0bf4 __1cOnsBaseAppShellYDoProcessNextNativeEvent6Mi_i_ (190e7d0, 0, 7de798, 0, 190e7d0, 17a57c4) + 20
 007c0d5c __1cOnsBaseAppShellSOnProcessNextEvent6MpnRnsIThreadInternal_iI_I_ (190e7d0, 1897808, 1, 0, 1400, 0) + 48
 ff0ca894 __1cInsThreadQProcessNextEvent6Mipi_I_ (1897808, 1, ffbfed7c, 0, 7de834, 17a57fc) + 88
 ff071d10 __1cVNS_ProcessNextEvent_P6FpnJnsIThread_i_i_ (1897808, 1, 0, 80000000, ff0ca80c, ff13cf44) + 40
 007c0c4c __1cOnsBaseAppShellDRun6M_I_ (190e7d0, 8000fc00, 1, 1897808, 0, 0) + 40
 00f9f738 __1cMnsAppStartupDRun6M_I_ (1947730, 17a57c4, 1, 16bb78c, f9f700, 0) + 38
 0052fdc8 XRE_main (16ba510, ffbfefb8, ffbff064, ffbff088, ffbff0a0, ffbfefd8) + 16bc
 00529b70 _start   (0, 0, 0, 0, 0, 0) + 108
-----------------  lwp# 2 / thread# 2  --------------------
 ff31dcdc __pollsys (fa9fb998, 1, 0, 0, 0, 1400) + 8
 ff2db8b4 poll     (fa9fb998, 1, ffffffff, 1, 10000, 1) + 7c
 fec58b58 ???????? (1, fa9fb998, ffffffff, 18e3448, 0, 1)
 005d63e8 __1cYnsSocketTransportServiceEPoll6MipI_i_ (18e2f68, 6ba00a27, fa9fbc5c, 1, 0, 18e3448) + 74
 005d6ee8 __1cYnsSocketTransportServicePDoPollIteration6Mi_I_ (18e2f68, 1, ffffffff, ffffffff, 1773800, 17739b0) + 1a8
 005d6ad8 __1cYnsSocketTransportServiceSOnProcessNextEvent6MpnRnsIThreadInternal_iI_I_ (18e2f68, 18c5888, 1, 1, 1, ff0ca7c8) + 5c
 ff0ca894 __1cInsThreadQProcessNextEvent6Mipi_I_ (18c5888, 1, fa9fbd94, 18c576c, 5d721c, 1773a88) + 88
 ff071d10 __1cVNS_ProcessNextEvent_P6FpnJnsIThread_i_i_ (18c5888, 1, 0, 80000000, ff0ca80c, ff13cf44) + 40
 005d6be0 __1cYnsSocketTransportServiceDRun6M_I_ (18e2f68, 1, 2, 0, ffffffff, 18c5888) + d8
 ff0ca914 __1cInsThreadQProcessNextEvent6Mipi_I_ (18c5888, 1, fa9fbed4, 1, 5d71ac, 1773aa4) + 108
 ff071d10 __1cVNS_ProcessNextEvent_P6FpnJnsIThread_i_i_ (18c5888, 1, 1, 80000000, ff0ca80c, ff13cf44) + 40
 ff0c9cb4 __1cInsThreadKThreadFunc6Fpv_v_ (18c5888, ff13cffc, 18c5938, 0, 400, 1) + ac
 fec5a510 ???????? (18e36e8, 1800, fec727d0, 0, 0, fec73fd4)
 ff31cf38 _lwp_start (0, 0, 0, 0, 0, 0)
-----------------  lwp# 3 / thread# 3  --------------------
 ff31cfb8 __lwp_park (1, 1895970, fa87bbd8, fab2de40, 0, fa8a0000) + 14
 ff316f30 cond_wait_queue (1893f50, 1895970, fa87bbd8, 0, 0, 0) + 28
 ff317380 cond_wait_common (1893f50, 1895970, fa87bbd8, 0, 0, 0) + 288
 ff317518 _cond_timedwait (1893f50, 1895970, fa87bd38, 18976ec, 3, 0) + 34
 ff317608 cond_timedwait (1893f50, 1895970, fa87bd38, 3f90f300, f21e6000, 5b6e0350) + 14
 ff317648 pthread_cond_timedwait (1893f50, 1895970, fa87bd38, 0, 4487d8f3, 4487d8f3) + c
 fec542d0 ???????? (1893f50, 1895970, 4487d8f3, 0, 60, 0)
 fec5450c PR_WaitCondVar (1893f48, 4220, 216b730, 7, 1970718, 0) + 7c
 ff0cff20 __1cLTimerThreadDRun6M_I_ (1897200, ffffbde0, fffff326, 6baf006e, 1947760, 6baeb174) + 160
 ff0ca914 __1cInsThreadQProcessNextEvent6Mipi_I_ (1970578, 1, fa87bed4, 1, ff0cfdc0, ff13d354) + 108
 ff071d10 __1cVNS_ProcessNextEvent_P6FpnJnsIThread_i_i_ (1970578, 1, 1, 80000000, ff0ca80c, ff13cf44) + 40
 ff0c9cb4 __1cInsThreadKThreadFunc6Fpv_v_ (1970578, ff13cffc, 1970788, 0, 400, 1) + ac
 fec5a510 ???????? (1970718, 1800, fec727d0, 0, 0, fec73fd4)
 ff31cf38 _lwp_start (0, 0, 0, 0, 0, 0)
-----------------  lwp# 4 / thread# 4  --------------------
 ff31cfb8 __lwp_park (1, 1ac69a8, f9ffbb70, fab2dac0, 0, fa8a0400) + 14
 ff316f30 cond_wait_queue (1aa8e18, 1ac69a8, f9ffbb70, 0, 0, 0) + 28
 ff317380 cond_wait_common (1aa8e18, 1ac69a8, f9ffbb70, 0, 0, 0) + 288
 ff317518 _cond_timedwait (1aa8e18, 1ac69a8, f9ffbcd0, 0, 3, 0) + 34
 ff317608 cond_timedwait (1aa8e18, 1ac69a8, f9ffbcd0, 0, 0, c350) + 14
 ff317648 pthread_cond_timedwait (1aa8e18, 1ac69a8, f9ffbcd0, 0, 4487f063, 4487d8f3) + c
 fec542d0 ???????? (1aa8e18, 1ac69a8, 4487f063, 0, 49, 0)
 fec5450c PR_WaitCondVar (1aa8e10, 23c34600, fec73bd0, 23c34600, 1ac71a0, 0) + 7c
 fec547d8 PR_Wait  (1ac69a0, 4, fec73bd0, 1ac69a0, 10000, 1) + 20
 ff0cceec __1cMnsThreadPoolDRun6M_I_ (1ac68a0, ff0a5638, 6baeab18, f9ffbe00, f9ffbdf8, 1ac68b0) + 10c
 ff0ca914 __1cInsThreadQProcessNextEvent6Mipi_I_ (1ac7000, 1, f9ffbed4, 1, ff0cd478, ff13d1b0) + 108
 ff071d10 __1cVNS_ProcessNextEvent_P6FpnJnsIThread_i_i_ (1ac7000, 1, 1, 80000000, ff0ca80c, ff13cf44) + 40
 ff0c9cb4 __1cInsThreadKThreadFunc6Fpv_v_ (1ac7000, ff13cffc, 1ac7210, 0, 400, 1) + ac
 fec5a510 ???????? (1ac71a0, 1800, fec727d0, 0, 0, fec73fd4)
 ff31cf38 _lwp_start (0, 0, 0, 0, 0, 0)
-----------------  lwp# 5 / thread# 5  --------------------
 ff31cfb8 __lwp_park (0, 1d78d98, 0, fab2b000, 0, fa8a0800) + 14
 ff316f30 cond_wait_queue (1d45c28, 1d78d98, 0, 0, 0, 0) + 28
 ff317488 cond_wait (1d45c28, 1d78d98, 0, c, 6, fa8a080c) + 10
 ff3174c4 pthread_cond_wait (1d45c28, 1d78d98, 1, fec73bd0, 1400, 1400) + 8
 fec544f0 PR_WaitCondVar (1d45c20, ffffffff, 928a0, fec73bd0, 1d78f98, 0) + 60
 006a5388 ???????? (0, 5, 1, 1, 1, 1)
 006a5558 __1cQAsyncWriteThreadDRun6M_I_ (1d787c8, 4, 2, 1, 2, fe287838) + 4
 ff0ca914 __1cInsThreadQProcessNextEvent6Mipi_I_ (1d78df8, 1, f9efbed4, 1, 6a5554, 177a02c) + 108
 ff071d10 __1cVNS_ProcessNextEvent_P6FpnJnsIThread_i_i_ (1d78df8, 1, 1, 80000000, ff0ca80c, ff13cf44) + 40
 ff0c9cb4 __1cInsThreadKThreadFunc6Fpv_v_ (1d78df8, ff13cffc, 1d6be20, 0, 400, 1) + ac
 fec5a510 ???????? (1d78f98, 1800, fec727d0, 0, 0, fec73fd4)
 ff31cf38 _lwp_start (0, 0, 0, 0, 0, 0)
-----------------  lwp# 8 / thread# 8  --------------------
 ff31cfb8 __lwp_park (1, 1fa4470, f9cfbcf8, fab29a00, 0, fa8a1000) + 14
 ff316f30 cond_wait_queue (1fa5e68, 1fa4470, f9cfbcf8, 0, 0, 0) + 28
 ff317380 cond_wait_common (1fa5e68, 1fa4470, f9cfbcf8, 0, 0, 0) + 288
 ff317518 _cond_timedwait (1fa5e68, 1fa4470, f9cfbe58, 0, 3, 0) + 34
 ff317608 cond_timedwait (1fa5e68, 1fa4470, f9cfbe58, 5de097c0, bc12f800, c41f5350) + 14
 ff317648 pthread_cond_timedwait (1fa5e68, 1fa4470, f9cfbe58, 0, 4487d8f3, 4487d8f3) + c
 fec542d0 ???????? (1fa5e68, 1fa4470, 4487d8f3, 0, 65, 0)
 fec5450c PR_WaitCondVar (1fa5e60, 61a8, fec73bd0, fec727d0, 1fa44d0, 0) + 7c
 01001da4 __1cLnsSSLThreadDRun6M_v_ (1fa5e38, 1fa44d0, 1, 1850294, 0, 1001b38) + 26c
 fec5a510 ???????? (1fa44d0, 1800, fec727d0, 0, 0, fec73fd4)
 ff31cf38 _lwp_start (0, 0, 0, 0, 0, 0)
-----------------  lwp# 9 / thread# 9  --------------------
 ff31cfb8 __lwp_park (1, 1fa45c0, f9dfbd08, fab29dc0, 0, fa8a0c00) + 14
 ff316f30 cond_wait_queue (1fa5e90, 1fa45c0, f9dfbd08, 0, 0, 0) + 28
 ff317380 cond_wait_common (1fa5e90, 1fa45c0, f9dfbd08, 0, 0, 0) + 288
 ff317518 _cond_timedwait (1fa5e90, 1fa45c0, f9dfbe68, ff000000, 3, 0) + 34
 ff317608 cond_timedwait (1fa5e90, 1fa45c0, f9dfbe68, 5de097c0, bc12f800, c41f5350) + 14
 ff317648 pthread_cond_timedwait (1fa5e90, 1fa45c0, f9dfbe68, 0, 4487d8f3, 4487d8f3) + c
 fec542d0 ???????? (1fa5e90, 1fa45c0, 4487d8f3, 0, 70, 0)
 fec5450c PR_WaitCondVar (1fa5e88, 61a8, 0, 1fa4570, 1fa66e0, 0) + 7c
 00fe5724 __1cYnsCertVerificationThreadDRun6M_v_ (1fa4570, 1fa66e0, 1fa4620, 1fa4584, 1864e18, 1) + 54
 fec5a510 ???????? (1fa66e0, 1800, fec727d0, 0, 0, fec73fd4)
 ff31cf38 _lwp_start (0, 0, 0, 0, 0, 0)
-----------------  lwp# 10 / thread# 10  --------------------
 ff31cfb8 __lwp_park (1, 18e4a20, f9a7bca8, fab2c140, 0, fa8a1400) + 14
 ff316f30 cond_wait_queue (18e3f30, 18e4a20, f9a7bca8, 0, 0, 0) + 28
 ff317380 cond_wait_common (18e3f30, 18e4a20, f9a7bca8, 0, 0, 0) + 288
 ff317518 _cond_timedwait (18e3f30, 18e4a20, f9a7be08, 2, 3, 0) + 34
 ff317608 cond_timedwait (18e3f30, 18e4a20, f9a7be08, 0, 0, c350) + 14
 ff317648 pthread_cond_timedwait (18e3f30, 18e4a20, f9a7be08, 0, 4487d913, 4487d8d7) + c
 fec542d0 ???????? (18e3f30, 18e4a20, 4487d913, 0, 43, 0)
 fec5450c PR_WaitCondVar (18e3f28, 5b8d80, 0, fec727d0, 1f6fe20, 0) + 7c
 005e3d10 __1cOnsHostResolverPGetHostToLookup6MppnMnsHostRecord__i_ (18e49b8, f9a7bf3c, 0, 14, 1, 5b8d80) + 6c
 005e4130 __1cOnsHostResolverKThreadFunc6Fpv_v_ (18e49b8, 8000, f9a7bf3c, 0, 15897e3, 8020) + dc
 fec5a510 ???????? (1f6fe20, 1800, fec727d0, 1, 1, fec73fd4)
 ff31cf38 _lwp_start (0, 0, 0, 0, 0, 0)
-----------------  lwp# 11 / thread# 11  --------------------
 ff31cfb8 __lwp_park (0, 2102400, 0, fab28740, 0, fa8a1800) + 14
 ff316f30 cond_wait_queue (220f090, 2102400, 0, 0, 0, 0) + 28
 ff317488 cond_wait (220f090, 2102400, 0, c, 2102404, fa8a180c) + 10
 ff3174c4 pthread_cond_wait (220f090, 2102400, 1, fec73bd0, 1400, 1400) + 8
 fec544f0 PR_WaitCondVar (220f088, ffffffff, 928a0, b, 20103e8, 0) + 60
 fec547d8 PR_Wait  (21023f8, b, 2, 21023f8, 10000, 1) + 20
 ff0c86b4 __1cMnsEventQdDueueIGetEvent6MippnLnsIRunnable__i_ (20f87c8, 1, f987be68, fec73bd0, 1400, 1400) + 74
 ff0ca8d0 __1cInsThreadQProcessNextEvent6Mipi_I_ (20f87a8, 1, f987bed4, 0, 0, 0) + c4
 ff071d10 __1cVNS_ProcessNextEvent_P6FpnJnsIThread_i_i_ (20f87a8, 1, 0, 80000000, ff0ca80c, ff13cf44) + 40
 ff0c9cb4 __1cInsThreadKThreadFunc6Fpv_v_ (20f87a8, ff13cffc, 20120d8, 0, 400, 1) + ac
 fec5a510 ???????? (20103e8, 1800, fec727d0, 0, 0, fec73fd4)
 ff31cf38 _lwp_start (0, 0, 0, 0, 0, 0)

This bug could be reproduced only when orca is running and www.yahoo.com is print previewing.

1. Invoke orca and firefox.
2. Load www.yahoo.com.
3. Select menu File->Print Preview

Actual result:
Firefox crashed.

Additional info:
Here's the core stack trace:
core 'core' of 1424:    firefox/firefox-bin
-----------------  lwp# 1 / thread# 1  --------------------
 ff31e100 _lwp_kill (b, ffbfdd18, 0, b, 0, 1) + 8
 0053ab74 __1cNnsProfileLockSFatalSignalHandler6Fi_v_ (b, 0, 53aa50, 53a800, a, c4) + e8
 ff31d040 __sighndlr (b, 0, ffbfde98, 53aa8c, ffbffeff, 1) + c
 ff3120b8 call_user_handler (0, ffbffeff, ffbfde98, 0, b, fefa2000) + 390
 00f466e0 __1cXnsXULMenuitemAccessibleNGetChildCount6Mpi_I_ (2191230, ffbfe5bc, 17e4504, b23620, 17e4504, 832294) + 490
 00f119e4 __1cMnsAccessibleKGetChildAt6MippnNnsIAccessible__I_ (2191230, 4, ffbfe624, 2191230, f46250, 18446ac) + 10
 00f27d2c ???????? (f119d4, 4, 18446ac, ffbfe624, 80000000, 218c2f0)
 f991033c impl_accessibility_accessible_get_child_at_index (218cad4, 4, ffbfe904, 10800, 1d2dc, f992d5b8) + 64
 f990e3d0 _ORBIT_skel_small_Accessibility_Accessible_getChildAtIndex (218cad4, ffbfe760, ffbfe758, ffbfe748, ffbfe904, f99102d8) + 10
 fa6e4158 ORBit_small_invoke_adaptor (1ef9230, 2075d30, 0, ffbfe758, ffbfe904, f992f7c8) + 438
 fa6f5680 ORBit_POAObject_handle_request (1ef9230, 2ca0494, 0, 0, 0, 2075d30) + 420
 fa6f585c ORBit_POAObject_invoke_incoming_request (1ef9230, 2075d30, ffbfe904, 0, fefa2000, 2400) + 54
 fa6f5e1c ORBit_POA_handle_request (0, 2075d30, 2075d48, ffbfe904, 0, fe7a7dc8) + 32c
 fa6faa94 ORBit_handle_request (1a28c38, 2075d30, 1a28c38, 2ca04c4, 23a00, fa6f5af0) + 4c
 fa6e0754 giop_connection_handle_input (20558c8, 2075d30, 278, 0, 0, fa6e04d8) + 25c
 fa7028ec link_connection_io_handler (0, 1, 20558c8, 1, 1a2d9c8, 1) + 4c
 fe72fa60 g_main_dispatch (1881b00, 0, fa704af8, fe7a7dd4, fe7a7dc0, fe7a7dc4) + 1e0
 fe7310a0 g_main_context_dispatch (1, 1, fe7a7dc0, 1, fe7a7dc4, 1881b00) + c8
 fe7315c0 g_main_context_iterate (1, 0, 1, 1881b00, d, d) + 49c
 fe731844 g_main_context_iteration (0, 0, fe7a7dc4, 1881b00, 1, 28) + c4
 007c0bf4 __1cOnsBaseAppShellYDoProcessNextNativeEvent6Mi_i_ (190e7d0, 0, 7de798, 0, 190e7d0, 17a57c4) + 20
 007c0d5c __1cOnsBaseAppShellSOnProcessNextEvent6MpnRnsIThreadInternal_iI_I_ (190e7d0, 1897808, 1, 0, 1400, 0) + 48
 ff0ca894 __1cInsThreadQProcessNextEvent6Mipi_I_ (1897808, 1, ffbfed7c, 0, 7de834, 17a57fc) + 88
 ff071d10 __1cVNS_ProcessNextEvent_P6FpnJnsIThread_i_i_ (1897808, 1, 0, 80000000, ff0ca80c, ff13cf44) + 40
 007c0c4c __1cOnsBaseAppShellDRun6M_I_ (190e7d0, 8000fc00, 1, 1897808, 0, 0) + 40
 00f9f738 __1cMnsAppStartupDRun6M_I_ (1947730, 17a57c4, 1, 16bb78c, f9f700, 0) + 38
 0052fdc8 XRE_main (16ba510, ffbfefb8, ffbff064, ffbff088, ffbff0a0, ffbfefd8) + 16bc
 00529b70 _start   (0, 0, 0, 0, 0, 0) + 108
-----------------  lwp# 2 / thread# 2  --------------------
 ff31dcdc __pollsys (fa9fb998, 1, 0, 0, 0, 1400) + 8
 ff2db8b4 poll     (fa9fb998, 1, ffffffff, 1, 10000, 1) + 7c
 fec58b58 ???????? (1, fa9fb998, ffffffff, 18e3448, 0, 1)
 005d63e8 __1cYnsSocketTransportServiceEPoll6MipI_i_ (18e2f68, 6ba00a27, fa9fbc5c, 1, 0, 18e3448) + 74
 005d6ee8 __1cYnsSocketTransportServicePDoPollIteration6Mi_I_ (18e2f68, 1, ffffffff, ffffffff, 1773800, 17739b0) + 1a8
 005d6ad8 __1cYnsSocketTransportServiceSOnProcessNextEvent6MpnRnsIThreadInternal_iI_I_ (18e2f68, 18c5888, 1, 1, 1, ff0ca7c8) + 5c
 ff0ca894 __1cInsThreadQProcessNextEvent6Mipi_I_ (18c5888, 1, fa9fbd94, 18c576c, 5d721c, 1773a88) + 88
 ff071d10 __1cVNS_ProcessNextEvent_P6FpnJnsIThread_i_i_ (18c5888, 1, 0, 80000000, ff0ca80c, ff13cf44) + 40
 005d6be0 __1cYnsSocketTransportServiceDRun6M_I_ (18e2f68, 1, 2, 0, ffffffff, 18c5888) + d8
 ff0ca914 __1cInsThreadQProcessNextEvent6Mipi_I_ (18c5888, 1, fa9fbed4, 1, 5d71ac, 1773aa4) + 108
 ff071d10 __1cVNS_ProcessNextEvent_P6FpnJnsIThread_i_i_ (18c5888, 1, 1, 80000000, ff0ca80c, ff13cf44) + 40
 ff0c9cb4 __1cInsThreadKThreadFunc6Fpv_v_ (18c5888, ff13cffc, 18c5938, 0, 400, 1) + ac
 fec5a510 ???????? (18e36e8, 1800, fec727d0, 0, 0, fec73fd4)
 ff31cf38 _lwp_start (0, 0, 0, 0, 0, 0)
-----------------  lwp# 3 / thread# 3  --------------------
 ff31cfb8 __lwp_park (1, 1895970, fa87bbd8, fab2de40, 0, fa8a0000) + 14
 ff316f30 cond_wait_queue (1893f50, 1895970, fa87bbd8, 0, 0, 0) + 28
 ff317380 cond_wait_common (1893f50, 1895970, fa87bbd8, 0, 0, 0) + 288
 ff317518 _cond_timedwait (1893f50, 1895970, fa87bd38, 18976ec, 3, 0) + 34
 ff317608 cond_timedwait (1893f50, 1895970, fa87bd38, 3f90f300, f21e6000, 5b6e0350) + 14
 ff317648 pthread_cond_timedwait (1893f50, 1895970, fa87bd38, 0, 4487d8f3, 4487d8f3) + c
 fec542d0 ???????? (1893f50, 1895970, 4487d8f3, 0, 60, 0)
 fec5450c PR_WaitCondVar (1893f48, 4220, 216b730, 7, 1970718, 0) + 7c
 ff0cff20 __1cLTimerThreadDRun6M_I_ (1897200, ffffbde0, fffff326, 6baf006e, 1947760, 6baeb174) + 160
 ff0ca914 __1cInsThreadQProcessNextEvent6Mipi_I_ (1970578, 1, fa87bed4, 1, ff0cfdc0, ff13d354) + 108
 ff071d10 __1cVNS_ProcessNextEvent_P6FpnJnsIThread_i_i_ (1970578, 1, 1, 80000000, ff0ca80c, ff13cf44) + 40
 ff0c9cb4 __1cInsThreadKThreadFunc6Fpv_v_ (1970578, ff13cffc, 1970788, 0, 400, 1) + ac
 fec5a510 ???????? (1970718, 1800, fec727d0, 0, 0, fec73fd4)
 ff31cf38 _lwp_start (0, 0, 0, 0, 0, 0)
-----------------  lwp# 4 / thread# 4  --------------------
 ff31cfb8 __lwp_park (1, 1ac69a8, f9ffbb70, fab2dac0, 0, fa8a0400) + 14
 ff316f30 cond_wait_queue (1aa8e18, 1ac69a8, f9ffbb70, 0, 0, 0) + 28
 ff317380 cond_wait_common (1aa8e18, 1ac69a8, f9ffbb70, 0, 0, 0) + 288
 ff317518 _cond_timedwait (1aa8e18, 1ac69a8, f9ffbcd0, 0, 3, 0) + 34
 ff317608 cond_timedwait (1aa8e18, 1ac69a8, f9ffbcd0, 0, 0, c350) + 14
 ff317648 pthread_cond_timedwait (1aa8e18, 1ac69a8, f9ffbcd0, 0, 4487f063, 4487d8f3) + c
 fec542d0 ???????? (1aa8e18, 1ac69a8, 4487f063, 0, 49, 0)
 fec5450c PR_WaitCondVar (1aa8e10, 23c34600, fec73bd0, 23c34600, 1ac71a0, 0) + 7c
 fec547d8 PR_Wait  (1ac69a0, 4, fec73bd0, 1ac69a0, 10000, 1) + 20
 ff0cceec __1cMnsThreadPoolDRun6M_I_ (1ac68a0, ff0a5638, 6baeab18, f9ffbe00, f9ffbdf8, 1ac68b0) + 10c
 ff0ca914 __1cInsThreadQProcessNextEvent6Mipi_I_ (1ac7000, 1, f9ffbed4, 1, ff0cd478, ff13d1b0) + 108
 ff071d10 __1cVNS_ProcessNextEvent_P6FpnJnsIThread_i_i_ (1ac7000, 1, 1, 80000000, ff0ca80c, ff13cf44) + 40
 ff0c9cb4 __1cInsThreadKThreadFunc6Fpv_v_ (1ac7000, ff13cffc, 1ac7210, 0, 400, 1) + ac
 fec5a510 ???????? (1ac71a0, 1800, fec727d0, 0, 0, fec73fd4)
 ff31cf38 _lwp_start (0, 0, 0, 0, 0, 0)
-----------------  lwp# 5 / thread# 5  --------------------
 ff31cfb8 __lwp_park (0, 1d78d98, 0, fab2b000, 0, fa8a0800) + 14
 ff316f30 cond_wait_queue (1d45c28, 1d78d98, 0, 0, 0, 0) + 28
 ff317488 cond_wait (1d45c28, 1d78d98, 0, c, 6, fa8a080c) + 10
 ff3174c4 pthread_cond_wait (1d45c28, 1d78d98, 1, fec73bd0, 1400, 1400) + 8
 fec544f0 PR_WaitCondVar (1d45c20, ffffffff, 928a0, fec73bd0, 1d78f98, 0) + 60
 006a5388 ???????? (0, 5, 1, 1, 1, 1)
 006a5558 __1cQAsyncWriteThreadDRun6M_I_ (1d787c8, 4, 2, 1, 2, fe287838) + 4
 ff0ca914 __1cInsThreadQProcessNextEvent6Mipi_I_ (1d78df8, 1, f9efbed4, 1, 6a5554, 177a02c) + 108
 ff071d10 __1cVNS_ProcessNextEvent_P6FpnJnsIThread_i_i_ (1d78df8, 1, 1, 80000000, ff0ca80c, ff13cf44) + 40
 ff0c9cb4 __1cInsThreadKThreadFunc6Fpv_v_ (1d78df8, ff13cffc, 1d6be20, 0, 400, 1) + ac
 fec5a510 ???????? (1d78f98, 1800, fec727d0, 0, 0, fec73fd4)
 ff31cf38 _lwp_start (0, 0, 0, 0, 0, 0)
-----------------  lwp# 8 / thread# 8  --------------------
 ff31cfb8 __lwp_park (1, 1fa4470, f9cfbcf8, fab29a00, 0, fa8a1000) + 14
 ff316f30 cond_wait_queue (1fa5e68, 1fa4470, f9cfbcf8, 0, 0, 0) + 28
 ff317380 cond_wait_common (1fa5e68, 1fa4470, f9cfbcf8, 0, 0, 0) + 288
 ff317518 _cond_timedwait (1fa5e68, 1fa4470, f9cfbe58, 0, 3, 0) + 34
 ff317608 cond_timedwait (1fa5e68, 1fa4470, f9cfbe58, 5de097c0, bc12f800, c41f5350) + 14
 ff317648 pthread_cond_timedwait (1fa5e68, 1fa4470, f9cfbe58, 0, 4487d8f3, 4487d8f3) + c
 fec542d0 ???????? (1fa5e68, 1fa4470, 4487d8f3, 0, 65, 0)
 fec5450c PR_WaitCondVar (1fa5e60, 61a8, fec73bd0, fec727d0, 1fa44d0, 0) + 7c
 01001da4 __1cLnsSSLThreadDRun6M_v_ (1fa5e38, 1fa44d0, 1, 1850294, 0, 1001b38) + 26c
 fec5a510 ???????? (1fa44d0, 1800, fec727d0, 0, 0, fec73fd4)
 ff31cf38 _lwp_start (0, 0, 0, 0, 0, 0)
-----------------  lwp# 9 / thread# 9  --------------------
 ff31cfb8 __lwp_park (1, 1fa45c0, f9dfbd08, fab29dc0, 0, fa8a0c00) + 14
 ff316f30 cond_wait_queue (1fa5e90, 1fa45c0, f9dfbd08, 0, 0, 0) + 28
 ff317380 cond_wait_common (1fa5e90, 1fa45c0, f9dfbd08, 0, 0, 0) + 288
 ff317518 _cond_timedwait (1fa5e90, 1fa45c0, f9dfbe68, ff000000, 3, 0) + 34
 ff317608 cond_timedwait (1fa5e90, 1fa45c0, f9dfbe68, 5de097c0, bc12f800, c41f5350) + 14
 ff317648 pthread_cond_timedwait (1fa5e90, 1fa45c0, f9dfbe68, 0, 4487d8f3, 4487d8f3) + c
 fec542d0 ???????? (1fa5e90, 1fa45c0, 4487d8f3, 0, 70, 0)
 fec5450c PR_WaitCondVar (1fa5e88, 61a8, 0, 1fa4570, 1fa66e0, 0) + 7c
 00fe5724 __1cYnsCertVerificationThreadDRun6M_v_ (1fa4570, 1fa66e0, 1fa4620, 1fa4584, 1864e18, 1) + 54
 fec5a510 ???????? (1fa66e0, 1800, fec727d0, 0, 0, fec73fd4)
 ff31cf38 _lwp_start (0, 0, 0, 0, 0, 0)
-----------------  lwp# 10 / thread# 10  --------------------
 ff31cfb8 __lwp_park (1, 18e4a20, f9a7bca8, fab2c140, 0, fa8a1400) + 14
 ff316f30 cond_wait_queue (18e3f30, 18e4a20, f9a7bca8, 0, 0, 0) + 28
 ff317380 cond_wait_common (18e3f30, 18e4a20, f9a7bca8, 0, 0, 0) + 288
 ff317518 _cond_timedwait (18e3f30, 18e4a20, f9a7be08, 2, 3, 0) + 34
 ff317608 cond_timedwait (18e3f30, 18e4a20, f9a7be08, 0, 0, c350) + 14
 ff317648 pthread_cond_timedwait (18e3f30, 18e4a20, f9a7be08, 0, 4487d913, 4487d8d7) + c
 fec542d0 ???????? (18e3f30, 18e4a20, 4487d913, 0, 43, 0)
 fec5450c PR_WaitCondVar (18e3f28, 5b8d80, 0, fec727d0, 1f6fe20, 0) + 7c
 005e3d10 __1cOnsHostResolverPGetHostToLookup6MppnMnsHostRecord__i_ (18e49b8, f9a7bf3c, 0, 14, 1, 5b8d80) + 6c
 005e4130 __1cOnsHostResolverKThreadFunc6Fpv_v_ (18e49b8, 8000, f9a7bf3c, 0, 15897e3, 8020) + dc
 fec5a510 ???????? (1f6fe20, 1800, fec727d0, 1, 1, fec73fd4)
 ff31cf38 _lwp_start (0, 0, 0, 0, 0, 0)
-----------------  lwp# 11 / thread# 11  --------------------
 ff31cfb8 __lwp_park (0, 2102400, 0, fab28740, 0, fa8a1800) + 14
 ff316f30 cond_wait_queue (220f090, 2102400, 0, 0, 0, 0) + 28
 ff317488 cond_wait (220f090, 2102400, 0, c, 2102404, fa8a180c) + 10
 ff3174c4 pthread_cond_wait (220f090, 2102400, 1, fec73bd0, 1400, 1400) + 8
 fec544f0 PR_WaitCondVar (220f088, ffffffff, 928a0, b, 20103e8, 0) + 60
 fec547d8 PR_Wait  (21023f8, b, 2, 21023f8, 10000, 1) + 20
 ff0c86b4 __1cMnsEventQdDueueIGetEvent6MippnLnsIRunnable__i_ (20f87c8, 1, f987be68, fec73bd0, 1400, 1400) + 74
 ff0ca8d0 __1cInsThreadQProcessNextEvent6Mipi_I_ (20f87a8, 1, f987bed4, 0, 0, 0) + c4
 ff071d10 __1cVNS_ProcessNextEvent_P6FpnJnsIThread_i_i_ (20f87a8, 1, 0, 80000000, ff0ca80c, ff13cf44) + 40
 ff0c9cb4 __1cInsThreadKThreadFunc6Fpv_v_ (20f87a8, ff13cffc, 20120d8, 0, 400, 1) + ac
 fec5a510 ???????? (20103e8, 1800, fec727d0, 0, 0, fec73fd4)
 ff31cf38 _lwp_start (0, 0, 0, 0, 0, 0)
This bug can be reproduced on vermillion_42/snv_41 with firefox trunk 20060527 nightly build.
Try installing firefox with the updates. What version of firefox are you using?
This bug can be found with the latest trunk nightly build. It's firefox3.0.
Thanks.
tim,

can you trace down to find the earliest nightly build to cause the crash?
The earliest firefox trunk build is 20060513 for solaris. This bug is still reproducible.

And, it seems when a website has rich content and its print preview exceeds 2 pages, this bug will be easier to reproduce.
in nsXULMenuitemAccessible::GetChildCount(), when we get into the function, mDOMNode has a proper value; but before calling CacheChildren() in the function, mDOMNode becomes -1.

It seems the accessible object is destroyed while it is running in the function, which caused the crash.
I've seen this before as well. It's a tricky one -- was not related to multiple threads.
accessibility code is changing a lot these days and not stable, It's hard to debug  with the unstable code (In fact, with accessibility on, firefox often crashes before I can reproduce the bug). I'll leave this bug until we finished the new-atk development.
in the days when this bug was filed, in nsXULMenuitemAccessible::GetChildCount(), after call HandleDOMEventWithTarget, mDOMNode becomes -1, that's the cause of this bug.
Then after bug 342139 fixed, the code of event handling changed a lot, i.e. the code which related to this bug has changed.
And in today's code, after bug 346649 fixed, this bug should not exist any more.

close it.



Firefox crashes when print preview(with orca running).

access
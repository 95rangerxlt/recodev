WebIDE shows an error, even though connection succeeds.

WebIDE shows an error, even though connection succeeds.
Somewhat related, I find the connection's sudden success confusing:

One moment WebIDE displays a dialog with a QR code that you're trying to get with your phone's camera feed, and the next all interfaces suddenly vanish (phone shows homescreen, WebIDE becomes blank apart from a discreet blue hint that connection was successful).

Maybe a brief "Connection successful!" confirmation screen before everything disappears could make the transition less confusing?
Jan, are you able to replicate the "error on success" state anymore?  I can't seem to do it now.
Created attachment 8577161
timedout.png

Yes, it still says "timed out" when QR scanning takes a long time, but the connection works anyway (I think I just did the scanning dance for 5 complete minutes to get this screenshot!)
Created attachment 8579763
MozReview Request: bz://1130084/jryans

/r/5699 - Bug 1130084 - Avoid spurious connection errors even on success. r=past

Pull down this commit:

hg pull review -r 00ed35911a16345fd5ccb81a63f92e9b83c19ab6
Try: https://treeherder.mozilla.org/#/jobs?repo=try&revision=0015ec19ae90
To encourage this bad case to happen, you can lower "devtools.debugger.remote-timeout" before connecting.  The default value (20000) meant you would see an error if the WiFi connection took more than 20 seconds to complete.

With this patch, we disable the timeout for WiFi connections.
Comment on attachment 8579763
MozReview Request: bz://1130084/jryans

https://reviewboard.mozilla.org/r/5697/#review4641

Ship It!
Comment on attachment 8579763
MozReview Request: bz://1130084/jryans

Works like a charm! Thank you for this.
https://hg.mozilla.org/integration/fx-team/rev/a244a42cfa0c
https://hg.mozilla.org/mozilla-central/rev/a244a42cfa0c
Created attachment 8580647
timeoutagain.png

The landed patch seems to help, but it looks like the bug isn't entirely fixed. I was able to reproduce this 2 out of 3 times when the scanning took a very, very long time.
(In reply to Jan Keromnes [:janx] from comment #11)
> Created attachment 8580647
> timeoutagain.png
> 
> The landed patch seems to help, but it looks like the bug isn't entirely
> fixed. I was able to reproduce this 2 out of 3 times when the scanning took
> a very, very long time.

Hmm, yeah, I can see it sometimes too.  I'll try piling on more changes. :)
Created attachment 8581824
0001-Bug-1130084-Allow-runtimes-to-take-infinite-time-to-.patch

A second patch to clear out WebIDE's own global timeout.  I *think* this covers all cases now.

This probably suggests it's unnecessary to have two levels of timeouts... but I think I'll worry about that another day.

Try: https://treeherder.mozilla.org/#/jobs?repo=try&revision=2af3eabcd6bb
Comment on attachment 8581824
0001-Bug-1130084-Allow-runtimes-to-take-infinite-time-to-.patch

Review of attachment 8581824:
-----------------------------------------------------------------

::: browser/devtools/webide/modules/runtimes.js
@@ +65,5 @@
>   *   to be stable across Firefox sessions.
>   * |name| field
>   *   A user-visible label to identify the runtime that will be displayed in a
>   *   runtime list.
> + * |connectionIndeterminate| field

Nit: The name "connectionIndeterminate" is confusing. Please use something more understandable like "disableTimeout" or "noTimeout".

::: browser/devtools/webide/test/test_runtime.html
@@ +188,5 @@
> +          ok(win.document.querySelector("window").className, "busy", "UI is busy");
> +
> +          setTimeout(() => {
> +            noErrorDeferred.resolve();
> +          }, 1000);

It feels painful to make a test last 1000 seconds on purpose. Isn't there another way, e.g. checking if the busy timeout was indeed cancelled?
Sorry, I meant 1000 milliseconds. But maybe that's not too painful after all.
Comment on attachment 8581824
0001-Bug-1130084-Allow-runtimes-to-take-infinite-time-to-.patch

I was able to try the patch, the time-out error seems to be gone, and the tests do not become painfully long.

As discussed on IRC, f+ if you change to the runtime field name to "prolongedConnection".
(In reply to Jan Keromnes [:janx] from comment #14)

> ::: browser/devtools/webide/test/test_runtime.html
> @@ +188,5 @@
> > +          ok(win.document.querySelector("window").className, "busy", "UI is busy");
> > +
> > +          setTimeout(() => {
> > +            noErrorDeferred.resolve();
> > +          }, 1000);
> 
> It feels painful to make a test last 1000 seconds on purpose. Isn't there
> another way, e.g. checking if the busy timeout was indeed cancelled?

Thankfully it's indeed just 1 second...  I know timeouts are bad, but I did not see a nice way to avoid it here, since the real feature under test is also based on a timeout.
Created attachment 8581920
Allow runtimes to take infinite time to connect (v2)

Changed to "prolongedRuntime" as :janx suggested.

Try: https://treeherder.mozilla.org/#/jobs?repo=try&revision=932ad6adbf8f
Comment on attachment 8581920
Allow runtimes to take infinite time to connect (v2)

Review of attachment 8581920:
-----------------------------------------------------------------

::: browser/devtools/webide/test/test_runtime.html
@@ +159,5 @@
>            ok(win.UI.toolboxIframe, "Toolbox iframe exists");
>  
>            yield win.Cmds.disconnectRuntime();
>  
> +          Services.prefs.setIntPref("devtools.webide.busyTimeout", 100);

Is this pref cleared anywhere afterwards?
(In reply to Panos Astithas [:past] from comment #19)
> ::: browser/devtools/webide/test/test_runtime.html
> @@ +159,5 @@
> >            ok(win.UI.toolboxIframe, "Toolbox iframe exists");
> >  
> >            yield win.Cmds.disconnectRuntime();
> >  
> > +          Services.prefs.setIntPref("devtools.webide.busyTimeout", 100);
> 
> Is this pref cleared anywhere afterwards?

Yes, I added it to a general pref clearing blocking in head.js for the folder.
https://hg.mozilla.org/integration/fx-team/rev/0362eb765103
https://hg.mozilla.org/mozilla-central/rev/0362eb765103
Comment on attachment 8579763
MozReview Request: bz://1130084/jryans
Created attachment 8619334
MozReview Request: Bug 1130084 - Avoid spurious connection errors even on success. r=past


WiFi connection error even though it worked



Bug 1130084 - Avoid spurious connection errors even on success. r=past 

Bug 1130084 - Allow runtimes to take infinite time to connect. r=past 
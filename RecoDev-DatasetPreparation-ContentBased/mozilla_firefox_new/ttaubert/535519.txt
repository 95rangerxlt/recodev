we register for a bunch of events, which hurts page load time, especially on mobile. we need to investigate ways to reduce the number of events we listen to, as well as increasing the interval between actually doing anything about oft-recurring events.

we register for a bunch of events, which hurts page load time, especially on mobile. we need to investigate ways to reduce the number of events we listen to, as well as increasing the interval between actually doing anything about oft-recurring events.
Global notifications:

"domwindowopened", "domwindowclosed",
"quit-application-requested", "quit-application-granted",
"browser-lastwindow-close-granted",
"quit-application", "browser:purge-session-history",
"private-browsing", "browser:purge-domain-data",
"private-browsing-change-granted"

Events:

window: load

tabbrowser: TabOpen, TabClose, TabSelect, TabShow, TabHide, TabPinned, TabUnpinned

tab: load, pageshow, change, input, DOMAutoComplete

textarea in design mode: keypress
Can we use DeferredTask.jsm for some of the oft-recurring events such as keypress?
We should be able to call this fixed by bug 930967 and friends, I think?
Yeah, I don't think we listen for too many events. It's just the right number to invalidate data. However, this bug also mentions mobile that like every product has their own sessionstore implementation.

WRT to desktop Firefox I don't see how listening to events hurts perf as long as we make sure to not collect data immediately and have a small damper. All this is done now that we broadcast data from frame scripts.

Let's call this fixed and file a new, more specific bug if we think there is room for improvement in sessionstore's event handling.


session restore is overly event hungry

perf
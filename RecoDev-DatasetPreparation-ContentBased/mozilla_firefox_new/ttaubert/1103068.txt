This is a regression from bug 1099490.  A bunch of docshell-y and JS stuff is being held alive by a JS implementation of nsIWebProgressListener.

Just looking at the patch, it looks like there is a new call to addProgressListener() without a corresponding removeProgressListener().  Could that be the problem?  I'll try digging into this further.

This is a regression from bug 1099490.  A bunch of docshell-y and JS stuff is being held alive by a JS implementation of nsIWebProgressListener.

Just looking at the patch, it looks like there is a new call to addProgressListener() without a corresponding removeProgressListener().  Could that be the problem?  I'll try digging into this further.
That's probably because nsBrowserStatusFilter doesn't take a weak reference, unlike the nsDocLoader when calling addProgressListener().
Created attachment 8527286
0001-Bug-1103068-Stop-leaking-due-to-a-strong-reference-h.patch

Andew, can you try this please?
Andrew. Sorry for the typo :/
Comment on attachment 8527286
0001-Bug-1103068-Stop-leaking-due-to-a-strong-reference-h.patch

This fixes the leak for me, thanks!

Sorry, I meant to include a way to reproduce the leak easily.  You can just do:
  ./mach mochitest-plain --e10s dom/xbl/test/
Comment on attachment 8527286
0001-Bug-1103068-Stop-leaking-due-to-a-strong-reference-h.patch

Review of attachment 8527286:
-----------------------------------------------------------------

Could we also remove _filter from the docshell? It's nice to do even if it's not necessary.
(In reply to Bill McCloskey (:billm) from comment #5)
> Could we also remove _filter from the docshell? It's nice to do even if it's
> not necessary.

Sure!
https://hg.mozilla.org/integration/fx-team/rev/101073587164
https://hg.mozilla.org/mozilla-central/rev/101073587164


Child process leaks held alive by nsXPCWrappedJS (nsIWebProgressListener)

mlk

Bug 1103068 - Stop leaking due to a strong reference held by the nsBrowserStatusFilter r=billm 
I need to load up directories with engines that will live in appdir/distribution/* somewhere.  The actual directory to load will change depending on locale, so I can't hardcode it to be loaded during the search service's init.  It would be great if I could simply run loadEngines on the right path from my code.

Currently, FYI, I'm running my code using the "final-ui-startup" hook in nsBrowserGlue.js.  Though this may change.

Let me know what else you'd like to know.  I'm not tied to loadEngines as such.  addEngineToStore could be an option too.  Though I'd more or less reimplement loadEngines.

I need to load up directories with engines that will live in appdir/distribution/* somewhere.  The actual directory to load will change depending on locale, so I can't hardcode it to be loaded during the search service's init.  It would be great if I could simply run loadEngines on the right path from my code.

Currently, FYI, I'm running my code using the "final-ui-startup" hook in nsBrowserGlue.js.  Though this may change.

Let me know what else you'd like to know.  I'm not tied to loadEngines as such.  addEngineToStore could be an option too.  Though I'd more or less reimplement loadEngines.
Requesting blocker status.
Created attachment 278561
expose loadEngines v1

Gavin, does this look OK?
Changing bug's summary; the search service is not necessarily the correct place to fix the real bug that needs to be fixed (loading distro search plugins)
Created attachment 279822
load distribution search engines v1

This patch makes it so, if they exist, the distribution search plugin directories will be prepended to the current list of search plugin directories.

It seems to work well on my machine.
Comment on attachment 279822
load distribution search engines v1

Looks OK to me, might want to get Benjamin and Axel to review the idea if they haven't already.
Comment on attachment 279822
load distribution search engines v1

Requesting further review from Benjamin
I'd prefer a comment for that function that actually defines what is intended to happen.

I guess Benjamin knows if NS_XPCOM_CURRENT_PROCESS_DIR is doing exactly what we need for all weird ways of invoking Firefox, the comments in nsDirectoryServiceDefs.h didn't enlighten me.

Apart from this, there isn't a whole lot l10n here, this is more about partners and if that has locale dependent parts, and I'm not familiar with anything there.
Created attachment 279945
load distribution search engines v1.1

Thanks Axel.  Here is a new patch with a comment above the function explaining what is going on.

About NS_XPCOM_CURRENT_PROCESS_DIR, I was also doubtful (the docs at http://developer.mozilla.org/en/docs/Code_snippets:File_I/O#Getting_special_files say "usually") but this actually came up in bug 392501 comment #8.  So I think it's OK.
Comment on attachment 279945
load distribution search engines v1.1

requesting m8 approval
Comment on attachment 279945
load distribution search engines v1.1

a=me on behalf of 1.9 drivers, and carrying over mconnor's approval from dependent bug 392501
Checking in nsIBrowserSearchService.idl;
/cvsroot/mozilla/browser/components/search/nsIBrowserSearchService.idl,v  <--  nsIBrowserSearchService.idl
new revision: 1.19; previous revision: 1.18
done
Checking in nsSearchService.js;
/cvsroot/mozilla/browser/components/search/nsSearchService.js,v  <--  nsSearchService.js
new revision: 1.101; previous revision: 1.100
done

Wheee - wrong patch.  Reverted:

Checking in browser/components/search/nsIBrowserSearchService.idl;
/cvsroot/mozilla/browser/components/search/nsIBrowserSearchService.idl,v  <--  nsIBrowserSearchService.idl
new revision: 1.20; previous revision: 1.19
done
Checking in browser/components/search/nsSearchService.js;
/cvsroot/mozilla/browser/components/search/nsSearchService.js,v  <--  nsSearchService.js
new revision: 1.102; previous revision: 1.101
done

And relanded:

Checking in browser/components/dirprovider/nsBrowserDirectoryProvider.cpp;
/cvsroot/mozilla/browser/components/dirprovider/nsBrowserDirectoryProvider.cpp,v  <--  nsBrowserDirectoryProvider.cpp
new revision: 1.19; previous revision: 1.18
done



Load search engines from appdir/distribution/searchplugins dir tree



Bug 392771: Load distribution-specific search engines at startup. r=gavin, r=bsmedberg, a=beltzner 

Bug 392771: Load distribution-specific search engines at startup. r=gavin, r=bsmedberg, a=beltzner 
Created attachment 8592474
patch

I looked at some of the telemetry data for the add-on shims and some of it looked invalid. When I looked closer, I noticed a few problems:

1. If an add-on registers a "load" event listener on the XUL window (very common) and then unregisters it right after the load, we act as if the add-on used the event listener shim. However, no events are ever proxied from the child process, so we're not really using the shim. To fix this, I created a "delayed" warning so that we can warn about the event listener registration only when the listener actually fires in the child process.

2. I noticed that we warn about observers even for observers that we don't proxy. That was easy to fix.

3. My refactoring in bug 1150754 left |url| as an unused variable. Fixed.

Created attachment 8592474
patch

I looked at some of the telemetry data for the add-on shims and some of it looked invalid. When I looked closer, I noticed a few problems:

1. If an add-on registers a "load" event listener on the XUL window (very common) and then unregisters it right after the load, we act as if the add-on used the event listener shim. However, no events are ever proxied from the child process, so we're not really using the shim. To fix this, I created a "delayed" warning so that we can warn about the event listener registration only when the listener actually fires in the child process.

2. I noticed that we warn about observers even for observers that we don't proxy. That was easy to fix.

3. My refactoring in bug 1150754 left |url| as an unused variable. Fixed.
Created attachment 8592477
test patch

This patch enables the compatibility warnings during the add-on shim test. This would have caught the issue with |url| being undefined.
Comment on attachment 8592474
patch

Review of attachment 8592474:
-----------------------------------------------------------------

::: toolkit/components/addoncompat/RemoteAddonsParent.jsm
@@ +376,5 @@
>    function(addon, target, observer, topic, ownsWeak) {
>      if (TOPIC_WHITELIST.indexOf(topic) >= 0) {
> +      CompatWarning.warn(`${topic} observer should be added from the child process only.`,
> +                         addon, CompatWarning.warnings.observers);
> +

whoops, sorry about this one...

@@ +533,3 @@
>          if ((wantsUntrusted || isTrusted) && useCapture == capturing) {
> +          // Issue a warning for this listener.
> +          delayedWarning();

This looks great. Although I wonder if we should hold back the warning itself or just its reporting to telemetry... But I assume we can do only the first option?
Comment on attachment 8592477
test patch

Review of attachment 8592477:
-----------------------------------------------------------------

::: toolkit/components/addoncompat/tests/browser/browser_addonShims.js
@@ +47,5 @@
>    });
>  }
>  
> +registerCleanupFunction(function() {
> +  Services.prefs.clearUserPref("dom.ipc.shims.enabledWarnings");

I would prefer using SpecialPowers.pushPrefEnv. It's a bit cleaner, and I can imagine a case where someone wants to run all the tests with this pref on and then this test would reset it back to off, no?
remote:   https://hg.mozilla.org/integration/mozilla-inbound/rev/94b6048a6f60
remote:   https://hg.mozilla.org/integration/mozilla-inbound/rev/08617429d7c1
https://hg.mozilla.org/mozilla-central/rev/94b6048a6f60
https://hg.mozilla.org/mozilla-central/rev/08617429d7c1


Improve add-on shim telemetry



Bug 1154465 - Fix add-on shim telemetry (r=gabor) 

Bug 1154465 - Test for add-on compat warnings (r=gabor) 
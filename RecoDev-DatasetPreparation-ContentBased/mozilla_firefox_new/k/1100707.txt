It actually does very well already, but it seems its synthesizeKey calls on popup windows do nothing:

  EventUtils.synthesizeKey("t", { accelKey: true }, win);
  is(win.gBrowser.browsers.length, 1, "Accel+T doesn't open a new tab in the popup");

  EventUtils.synthesizeKey("w", { accelKey: true }, win);
  ok(win.closed, "Accel+W closes the popup");

The former test passes, of course, but the second test fails. The test is nice and cleans up the extra window anyway, so nothing worse happens, but I'm not entirely sure why the test fails. synthesizeMouse on content things has issues, but this is synthesizeKey, on a (secondary) chrome window, which AIUI should be same process, so I don't understand why it doesn't work. In any case... this should be fixed.

CC'ing some folks pre-emptively in case they have ideas.

It actually does very well already, but it seems its synthesizeKey calls on popup windows do nothing:

  EventUtils.synthesizeKey("t", { accelKey: true }, win);
  is(win.gBrowser.browsers.length, 1, "Accel+T doesn't open a new tab in the popup");

  EventUtils.synthesizeKey("w", { accelKey: true }, win);
  ok(win.closed, "Accel+W closes the popup");

The former test passes, of course, but the second test fails. The test is nice and cleans up the extra window anyway, so nothing worse happens, but I'm not entirely sure why the test fails. synthesizeMouse on content things has issues, but this is synthesizeKey, on a (secondary) chrome window, which AIUI should be same process, so I don't understand why it doesn't work. In any case... this should be fixed.

CC'ing some folks pre-emptively in case they have ideas.
Strange. It's true that the secondary chrome window is running in the parent process - but the content running in that window is running out-of-process.
e10s test bugs should block tracking-e10s=+
This test works ok and was re-enabled in bug 1153340.


Fix browser_popupUI.js to work in e10s


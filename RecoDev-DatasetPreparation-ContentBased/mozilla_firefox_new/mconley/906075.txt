According to my data, we spend about 2.5ms inside buildArea per each window for the tpaint test.

But buildArea's sole purpose is to add widgets to toolbars if they don't exist (if a user put them there) and to remove things that are there that the user had customized away.

But if the toolbar was *never changed*, this function, I believe, serves no purpose except to waste us time.

I'm experimenting with detecting if a toolbar is in a "dirty" state or not, and only running it through buildArea if it's dirty.

I've got a proof-of-concept patch baking on try.

Baseline: https://tbpl.mozilla.org/?tree=Try&rev=e736fa7b4de5
Patch: https://tbpl.mozilla.org/?tree=Try&rev=dbba7e3627f1

According to my data, we spend about 2.5ms inside buildArea per each window for the tpaint test.

But buildArea's sole purpose is to add widgets to toolbars if they don't exist (if a user put them there) and to remove things that are there that the user had customized away.

But if the toolbar was *never changed*, this function, I believe, serves no purpose except to waste us time.

I'm experimenting with detecting if a toolbar is in a "dirty" state or not, and only running it through buildArea if it's dirty.

I've got a proof-of-concept patch baking on try.

Baseline: https://tbpl.mozilla.org/?tree=Try&rev=e736fa7b4de5
Patch: https://tbpl.mozilla.org/?tree=Try&rev=dbba7e3627f1
Created attachment 791459
Patch v1
Created attachment 791462
Patch v1.1

Fixing self-review nit.
Comment on attachment 791462
Patch v1.1

What do you think of this, Jared?
Here's the compare talos. This maybe gains us something like 0.5ms on XP? (Smaller than I expected, but that's about par for the course).

http://compare-talos.mattn.ca/?oldRevs=e736fa7b4de5&newRev=dbba7e3627f1&submit=true
jaws: +1 on fast turnaround.

https://hg.mozilla.org/projects/ux/rev/5a2fbb868edd
Backed this out because I tried the patch on my OS X machine and it seemed to break CustomizableUI in unexpected ways. Needs further investigation.

https://hg.mozilla.org/projects/ux/rev/e7977c9175f2
Created attachment 791601
Screen Shot of tpaint XP regression on 5a2fbb868edd

This seemed to cause an XP tpaint regression with 5a2fbb868edd and it went away the the backout.
Yep, noticed that too. Clearly there's something wrong with the patch, which is strange, because I swore I had it working fine on my Windows box at work.

But when I tried it on my Mac tonight, everything was horribly busted. :/ So, clearly, this needs to more investigation. I still think this is a viable avenue for a performance win, albeit a small one.
Created attachment 791698
Patch v1.2

Turns out I forgot to close one of the last-minute comments I added, and accidentally commented out a huge chunk of code. Classic.

Going to push this to try and see what we get.
This is what we got:

https://tbpl.mozilla.org/?tree=Try&rev=39c003c08bf6

Looks like a win - and local testing seems to show this new patch is A-OK. Let's try this again.
Re-landed here:

https://hg.mozilla.org/projects/ux/rev/f1b79ee158c9
After a quick discussion with Matt on IRC, I decided to land this followup patch:

https://hg.mozilla.org/projects/ux/rev/0cf7690c8428

which I presume should have been part of this bug.

Sadly, the patch means that previously, we will have always fast-pathed, whereas now we may or may not. We should, but we may not. Let's keep an eye on tpaint/ts_paint numbers.
Ouch. My mistake. :/
Data's come in - I think we're in the clear.

tpaint: https://datazilla.mozilla.org/?start=1378482638&stop=1379087438&product=Firefox&repository=UX-Non-PGO&test=tpaint&page=tpaint&tr_id=2810330&graph=win%206.1.7601&project=talos

ts_paint: https://datazilla.mozilla.org/?start=1378482638&stop=1379087438&product=Firefox&repository=UX-Non-PGO&test=ts_paint&page=ts_paint&tr_id=2810330&graph=win%206.1.7601&project=talos

I don't see any troubling spikes.
https://hg.mozilla.org/mozilla-central/rev/f1b79ee158c9
https://hg.mozilla.org/mozilla-central/rev/0cf7690c8428


Only send toolbars through buildArea if they're not in their default state



Bug 906075 - Only send toolbars through buildArea if they're not in their default state. r=jaws. 

Backed out bug 906075 (changeset 5a2fbb868edd) due to CustomizableUI breakage. r=bustage-fix. 

Re-land Bug 906075 - Only send toolbars through buildArea if they're not in their default state. r=jaws. 

Bug 906075 - public registerToolbar should actually be passing aIsOverlayed, rs=MattN 
Created attachment 463111
screenshot

At the moment, the result of the evaluation of any expression is not truncated, which can lead to really big results being displayed in the WebConsole output. We need to limit the output for each result.

To reproduce:

- Open www.robodesign.ro
- Open the WebConsole
- Type in the input: wf2_datalist
- Press Enter.

Expected result: I see a line or two from the wf2_datalist function source.

Actual result: The entire function source code is displayed.

I attached a screenshot to show how the result is displayed.

Created attachment 463111
screenshot

At the moment, the result of the evaluation of any expression is not truncated, which can lead to really big results being displayed in the WebConsole output. We need to limit the output for each result.

To reproduce:

- Open www.robodesign.ro
- Open the WebConsole
- Type in the input: wf2_datalist
- Press Enter.

Expected result: I see a line or two from the wf2_datalist function source.

Actual result: The entire function source code is displayed.

I attached a screenshot to show how the result is displayed.
Sucks if you actually want to see the full output instead of the cauterized form, though.
(In reply to comment #1)
> Sucks if you actually want to see the full output instead of the cauterized
> form, though.

True, but for that there's bug 573103. Once that is done, I presume we will be able to click on evaluation results to see the complete output if we desire.
This is not a blocker - doesn't break or regress primary browser features.

I'm also not convinced truncation is desirable. I'd prefer immediate access to the output and scrolling through it, over truncation and having to click to see.
(In reply to comment #3)
> This is not a blocker - doesn't break or regress primary browser features.
> 
> I'm also not convinced truncation is desirable. I'd prefer immediate access to
> the output and scrolling through it, over truncation and having to click to
> see.

Agreed, however, it may eventually be something that is confugrable, as some JSD objects will no doubt be immense. Back burner for sure.
This bug makes me think we need pretty printed JS outputted to the console more than truncation - although truncation is a good idea if used via a pref.
*** Bug 657940 has been marked as a duplicate of this bug. ***
This is likely to be fixed by inline object inspection.
However might still be a problem for strings such as document.body.innerHTML
After a loong time. :)


JSTerm evaluation output needs truncation

uiwanted
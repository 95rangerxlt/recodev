While doing some unrelated debugging I noticed that Places makes some inefficient/unnecessary calls to the clipboard service when opening the Places organizer. It actually pulls data off of the clipboard in its function _canPaste, which is unnecessary if all it wants to do is find out if it could paste. It should probably just use HasDataMatchingFlavors instead, which doesn't involved any significant calls to malloc or significant data copying.

Fixing this should shave off some of the time it takes to open the Places organizer and speed up most command updating.

While doing some unrelated debugging I noticed that Places makes some inefficient/unnecessary calls to the clipboard service when opening the Places organizer. It actually pulls data off of the clipboard in its function _canPaste, which is unnecessary if all it wants to do is find out if it could paste. It should probably just use HasDataMatchingFlavors instead, which doesn't involved any significant calls to malloc or significant data copying.

Fixing this should shave off some of the time it takes to open the Places organizer and speed up most command updating.
Created attachment 271115
fix v1.0

This should make things much faster. Everything that _canPaste does is accomplished much more efficiently and robustly by calling _canInsert and _hasClipboardData.

-      return this._canInsert() && 
-             this._hasClipboardData() && this._canPaste();
+      return this._canInsert() && this._hasClipboardData();

We already do that anyway, so calling _canPaste is even more wasteful than just being an inefficient version of _canIsert and _hasClipboardData.
(In reply to comment #1)
> We already do that anyway, so calling _canPaste is even more wasteful than just
> being an inefficient version of _canIsert and _hasClipboardData.

Does that "we" include Windows and Linux code, too?


Comment on attachment 271115
fix v1.0

this isn't going to work, because in _canPaste() we unwrap the nodes, which will throw if the clipboard data is not valid.

So with this patch, if I have "foo bar cheese" on the clipboard, cmdPaste will be enabled (but it should not be.)
chatting with josh, what we think we want is really _isClipboardDataPasteable() and call that instead of _canPaste()

_isClipboardDataPasteable() could just check that we either have the TYPE_X_MOZ_PLACE_* flavors, or if we only have the TYPE_UNICODE flavor of data, that it is valid uris, by calling unwrapNodes().

The goal here is to avoid pulling off all the clipboard data and calling unwrapNodes() when we don't have to.  It is is expensive (especially if there is a lot of data on the clipboard), and we do this when command updating.

So if we do this fix, we'll only end up calling unwrapNodes() when there is only TYPE_UNICODE.

over to nobody for now.  note, we may want to wait for cyen's fix for bug #378558 before fixing this.
note, I am seeing some serious performance issues when in the places organizer due to this issue.  

when I've got a lot of serialized places data on the clipboard, selecting a node in the tree can be costly, as we will unwrap and validate the clipboard data frequently during command updating.

note to jay:  this is the performance bug we were seeing yesterday on your machine, when you were attempting to copy and then paste a ton of bookmarks to your new toolbar folder.
Created attachment 275885
patch described in comment 4
Created attachment 276268
updated patch
fixed

Checking in controller.js;
/cvsroot/mozilla/browser/components/places/content/controller.js,v  <--  control
ler.js
new revision: 1.177; previous revision: 1.176
done
Bug 451915 - move Firefox/Places bugs to Firefox/Bookmarks and History. Remove all bugspam from this move by filtering for the string "places-to-b-and-h".

In Thunderbird 3.0b, you do that as follows:
Tools | Message Filters
Make sure the correct account is selected. Click "New"
Conditions: Body   contains   places-to-b-and-h
Change the action to "Delete Message".
Select "Manually Run" from the dropdown at the top.
Click OK.

Select the filter in the list, make sure "Inbox" is selected at the bottom, and click "Run Now". This should delete all the bugspam. You can then delete the filter.

Gerv


with lots of places data on the clipboard, command update is very slow: Places inefficiently determines whether or not it is able to paste

perf

fix for bug #387007:  with lots of places data on the clipboard, command update is very slow: Places inefficiently determines whether or not it is able to paste patch=Christine Yen <christineyen+bugs@gmail.com> r=sspitzer 
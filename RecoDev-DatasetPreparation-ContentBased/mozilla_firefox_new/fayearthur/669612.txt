It's common practice in editors to add a "*" postfix to the window title when the editor contains unsaved changes. Scratchpad doesn't currently do this.

It's common practice in editors to add a "*" postfix to the window title when the editor contains unsaved changes. Scratchpad doesn't currently do this.
Created attachment 572147
Add "*" to scratchpad window title when there are unsaved changes

This patch adds a "*" to the scratchpad title when the scratchpad is from a file and there are unsaved changes.

This does not cover the case where you undo back to the saved state (most editors remove the star in this case). I think that would require some deeper integration with the editor, which I think would be okay as a separate bug.
Created attachment 572149
Add "*" to scratchpad window title when there are unsaved changes, clean apply

Sorry, that patch didn't apply to fx-team cleanly. Here's one that does.
Shouldn't this be a prefix instead?
When the scratchpad has a long title (ie. long file name or long page title) a postfix "*" would not be visible in a task bar (or the title bar even).
Comment on attachment 572149
Add "*" to scratchpad window title when there are unsaved changes, clean apply

Review of attachment 572149:
-----------------------------------------------------------------

Heather, thank you very much for your patch!

This patch is great! Some concerns:

1. the onTextChanged event listener is added only by onTextSaved which means that when the user starts Scratchpad and makes changes ... those are not marked as unsaved. They should be. Even the test expects that, but the test manually calls onTextSaved which adds the onTextChanged event listener so it doesn't fail (hehe).

2. before Scratchpad closes the user should be asked to save the changes - not much point in marking the window with a star if the user is going to lose data by mistake. This is something for a follow up bug report - please open one.

3. please open another follow up bug report about adding isDirty state tracking into the SourceEditor component itself. This is needed beyond Scratchpad.

(please mention in this bug the new bug reports, for easier tracking. thank you!)


As for Cedric's comment - it's fine either way (prepend or append the star) - I have no strong preference. The choice is yours.

Giving the patch r- for point 1 and for the problem with the import/export callback (onTextSaved doesn't check if the operation was successful).

More comments below.

Looking forward for the updated patch! Thanks!

::: browser/devtools/scratchpad/scratchpad.js
@@ +765,5 @@
> +    if (this.saved === false) {
> +      this.onTextChanged();
> +    }
> +    else if (this.saved === true) {
> +      this.onTextSaved();

(Non-review comment) just a nit: this could be if (!this.saved) { ... } else { ... }

(Why: the strict value check is not needed. You just check if .saved is falsy or not.)

@@ +837,5 @@
> +   * a scratchpad is saved, opened from file, or restored from a saved file.
> +   */
> +  onTextSaved: function SP_onTextSaved()
> +  {
> +    document.title = document.title.replace(/\*$/, "");

onTextSaved is used as a callback for importFromFile() and exportToFile(). You should check if the import/export was successful.
I'm with Cedric, I'd prefer this as a prefix. I think most editors put their unsaved changes indicator before the title.
(In reply to Mihai Sucan [:msucan] from comment #4)

> 1. the onTextChanged event listener is added only by onTextSaved which means
> that when the user starts Scratchpad and makes changes ... those are not
> marked as unsaved. They should be. Even the test expects that, but the test
> manually calls onTextSaved which adds the onTextChanged event listener so it
> doesn't fail (hehe).

This brings up a good point.

The most common use case for scratchpad (I think) is opening it, trying something out, and closing it without saving it. In this case we just show "Scratchpad" in the titlebar. I think it'd be distracting to show the star in this case, it would make you feel like you had to save the scratchpad. I'm open to be convinced.

Right now it will only show the star if there are unsaved changes in a scratchpad that's from a file. I'm not sure what most editors do in this case.

> 2. before Scratchpad closes the user should be asked to save the changes -
> not much point in marking the window with a star if the user is going to
> lose data by mistake. This is something for a follow up bug report - please
> open one.

This is bug 653427.

> 
> As for Cedric's comment - it's fine either way (prepend or append the star)
> - I have no strong preference. The choice is yours.

Sounds like prepend is the consensus, I'll do that.

> ::: browser/devtools/scratchpad/scratchpad.js
> @@ +765,5 @@
> > +    if (this.saved === false) {
> > +      this.onTextChanged();
> > +    }
> > +    else if (this.saved === true) {
> > +      this.onTextSaved();
> 
> (Non-review comment) just a nit: this could be if (!this.saved) { ... } else
> { ... }
> 
> (Why: the strict value check is not needed. You just check if .saved is
> falsy or not.)

Right now I don't want to do anything if this.saved is "undefined", but that depends on the decision above.
Hello Heather!


(In reply to Heather Arthur [:harth] from comment #6)
> (In reply to Mihai Sucan [:msucan] from comment #4)
> 
> > 1. the onTextChanged event listener is added only by onTextSaved which means
> > that when the user starts Scratchpad and makes changes ... those are not
> > marked as unsaved. They should be. Even the test expects that, but the test
> > manually calls onTextSaved which adds the onTextChanged event listener so it
> > doesn't fail (hehe).
> 
> This brings up a good point.
> 
> The most common use case for scratchpad (I think) is opening it, trying
> something out, and closing it without saving it. In this case we just show
> "Scratchpad" in the titlebar. I think it'd be distracting to show the star
> in this case, it would make you feel like you had to save the scratchpad.
> I'm open to be convinced.
> 
> Right now it will only show the star if there are unsaved changes in a
> scratchpad that's from a file. I'm not sure what most editors do in this
> case.

I can agree with the idea. Sure, but one can also start to work some cool snippet and forget to save, forget the transitory nature of Scratchpads, and lose his one-hour work of coding just because Scratchpad has no close confirmation to ask him/her to save the code.

I suggest that we should provide a safeguard for such cases. Maybe ask for confirmation if the user had the window open for more than 10 minutes? Or if the code is greater than 2KB? True that for two lines of code we shouldn't always ask for a save, because it would start to be annoying. Still, it's far more annoying to lose an hour-worth of work (or more).

Anyhow, as you pointed out, this is for bug 653427. I think, nonetheless, the star should show up when there are unsaved changes - please ping Rob for a decision on this.


> > As for Cedric's comment - it's fine either way (prepend or append the star)
> > - I have no strong preference. The choice is yours.
> 
> Sounds like prepend is the consensus, I'll do that.

Yep.

> > ::: browser/devtools/scratchpad/scratchpad.js
> > @@ +765,5 @@
> > > +    if (this.saved === false) {
> > > +      this.onTextChanged();
> > > +    }
> > > +    else if (this.saved === true) {
> > > +      this.onTextSaved();
> > 
> > (Non-review comment) just a nit: this could be if (!this.saved) { ... } else
> > { ... }
> > 
> > (Why: the strict value check is not needed. You just check if .saved is
> > falsy or not.)
> 
> Right now I don't want to do anything if this.saved is "undefined", but that
> depends on the decision above.

The initial impression is that this.saved is a boolean, but it seems to be a tri-state property: saved, unsaved, not-tracking. That's what surprised me.


Thanks for your reply! Looking forward for the updated patch.
Created attachment 572978
patch updated to comments

Patch updated to comments. As decided on irc, we won't show the star unless the scratchpad is from a file.

Thanks for the review Mihai, good point about the three-state property, I made it a bit clearer.
Comment on attachment 572978
patch updated to comments

Thanks for your updated patch Heather!
http://hg.mozilla.org/integration/fx-team/rev/7e1f046b173b

Filed bug 700893 for aiding the "undo to a saved state" senario.

To make the story complete, we've discussed implementing an "undo closed tab" (could be part of bug 651942) feature so you don't lose work in temporary scratchpads and a "prompt for saving before closing" feature (bug 653427).
(In reply to Heather Arthur [:harth] from comment #10)
> http://hg.mozilla.org/integration/fx-team/rev/7e1f046b173b

It seems to consistently fail on fx-team (and I can repro locally) :
https://tbpl.mozilla.org/?tree=Try&rev=9acea551a4cf

(the failing tests might depend on another patch?)
(In reply to Cedric Vivier [cedricv] from comment #11)
> (In reply to Heather Arthur [:harth] from comment #10)
> > http://hg.mozilla.org/integration/fx-team/rev/7e1f046b173b
> 
> It seems to consistently fail on fx-team (and I can repro locally) :
> https://tbpl.mozilla.org/?tree=Try&rev=9acea551a4cf

This not on fx-team. It's on try server with your patches pushed. :)

> (the failing tests might depend on another patch?)

Do you have a link to show failures of Heather's test without your patches? (on fx-team)

I believe you need to fix the test, as you fixed browser_scratchpad_bug_660560_tab.js. The Orion change causes the failure in Heather's test. I can also repro the failure. Please add a patch in bug 583041.

Thank you!
https://hg.mozilla.org/mozilla-central/rev/7e1f046b173b


In scratchpad, add "*" postfix to window title when editor contains unsaved changes



Bug 669612 - In scratchpad, add * postfix to window title when editor contains unsaved changes. r=msucan 
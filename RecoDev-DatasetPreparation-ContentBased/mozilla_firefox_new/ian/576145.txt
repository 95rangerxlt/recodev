Now that TabCandy's in the browser, we may want a more controllable way to start it up. Right now, each of the components start themselves up as their files are loaded, but instead we should have them all wait to be called. This way we can start TabCandy immediately or later in the browser's start up, depending on what we need.

Now that TabCandy's in the browser, we may want a more controllable way to start it up. Right now, each of the components start themselves up as their files are loaded, but instead we should have them all wait to be called. This way we can start TabCandy immediately or later in the browser's start up, depending on what we need.
Mass moving all Tab Candy bugs from Mozilla Labs to Firefox::Tab Candy.  Filter the bugmail spam with "tabcandymassmove".
Too slow - on restart each tab takes around 1 second to be reloaded into groups.   100 tabs -> 100 seconds.

Also 100 tabs  uses 900MB memory.
Closing this bug as the architectural point Ian is describing above has already been (in many cases) resolved. Please open a new bug for new, specific issues.

(In reply to comment #2)
> Too slow - on restart each tab takes around 1 second to be reloaded into
> groups.   100 tabs -> 100 seconds.

John, I believe this is a separate issue. We're tracking various startup performance-related issues in bug 591704.


Better control for when/how TabCandy starts up

perf
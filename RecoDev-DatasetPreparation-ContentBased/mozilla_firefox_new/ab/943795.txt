If you drag the mouse (mousedown, mousemove, mousemove) and during that time a fake mouse event comes in the touch-events.js will cancel the mouseevents and emit a touchend. That is not correct. This should be handled as a separate event and not interfere with the physical mouse.

If you drag the mouse (mousedown, mousemove, mousemove) and during that time a fake mouse event comes in the touch-events.js will cancel the mouseevents and emit a touchend. That is not correct. This should be handled as a separate event and not interfere with the physical mouse.
It's like:

mousedown -> touchstart
mousemove -> touchmove
fake mousedown/mouseup event -> touchend <-- this is incorrect
mousemove -> ignored
mouseup -> ignored
The event is sent through _domWinUtils.sendMouseEvent by the way.
Created attachment 8339211
Patch

Alright, so the problem is that when sending mouse events from DOMWindowUtils in chrome code is that they're indistinguishable from normal mouse events (they're trusted, have mouse as inputsource, etc.) so this is a bit of dirty workaround.

If we're already in a mousedown/mouseup flow and in between a new mousedown event comes in we'll ignore all events until the first following mouseup comes. This solves calling a fake click while dragging the mouse, but multiple drag actions would not work. I think it's acceptable as it's part of devtools.

Paul, I saw that you touched the file last, so feel free to forward to someone else if you're not the person to review this.
(In reply to Jan Jongboom [:janjongboom] from comment #1)
> mousedown -> touchstart
> mousemove -> touchmove
> fake mousedown/mouseup event -> touchend <-- this is incorrect
> mousemove -> ignored
> mouseup -> ignored

Where do these fake events come from?
Could be anywhere. But for now I'm using the FF for Android selection code and that creates a fake click in the new position.
See bug 921964
(In reply to Jan Jongboom [:janjongboom] from comment #5)
> Could be anywhere. But for now I'm using the FF for Android selection code
> and that creates a fake click in the new position.

Do you think this could be handled at the selection code side?

I'm just guessing, but is this what happen?
1.    mouse down to start cursor-jump-mode
2.    mouse move left/right to change the cursor position
2.1   mouse down where the cursor position should be
2.2   mouse up to finish one cursor jump
3.    mouse up to leave the cursor-jump-mode

mouseup in 2.2 will trigger 3.

Could you send touch events instead of mouse events? Could you find way to not forward events to touch-events.js (prevent default somewhere)?

Because with mouse events, we're not supposed to get encapsulated Mousedown/mouseup sequences. Handling this in touch-events.js sounds a bit hacky (but I'm not against it).
Yeah, the code is not mine. I'm reusing the FF for Android code here. Maybe they can change to touch events but I think it'll be a hard case because it doesn't fix anything on device, it's just to make sure it also works in non-touch envs at the moment...

I can't catch the mouse events and preventDefault them because I don't know which one are fake because the sendMouseEvent in DOMWindowUtil sends trusted 'real' mouse events...
(In reply to Jan Jongboom [:janjongboom] from comment #8)
> Yeah, the code is not mine. I'm reusing the FF for Android code here. Maybe
> they can change to touch events but I think it'll be a hard case because it
> doesn't fix anything on device, it's just to make sure it also works in
> non-touch envs at the moment...

Where does this code live?

I'm sorry to slow you down here, but I want to have a good understanding of the different options we have before integrating such a workaround in touch-events.js.
For Android: mobile/android/chrome/content/SelectionHandler.js line 600
Now that bug 891882 landed, events dispatches through domWinUtils.sendMouseEvent will no longer be modifier by the touch event helper.

Feel free to reopen with an updated description if that hasn't addressed your issues.


[DevTool] devtool/touch-events.js cancels touch movement if fake mouse event comes in


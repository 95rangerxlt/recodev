We should change this check to use something like

window.getInterface(Ci.nsIWebNavigation)
             .QueryInterface(Ci.nsIDocShellTreeItem)
             .treeOwner
             .QueryInterface(Ci.nsIInterfaceRequestor)
             .getInterface(Ci.nsIXULWindow)
             .docShell.QueryInterface(Ci.nsILoadContext).usePrivateBrowsing;

to determine if the window is private or not.

We should change this check to use something like

window.getInterface(Ci.nsIWebNavigation)
             .QueryInterface(Ci.nsIDocShellTreeItem)
             .treeOwner
             .QueryInterface(Ci.nsIInterfaceRequestor)
             .getInterface(Ci.nsIXULWindow)
             .docShell.QueryInterface(Ci.nsILoadContext).usePrivateBrowsing;

to determine if the window is private or not.
Created attachment 633912
Patch v1

Why has Josh advised to use the QI goop he says and not             

let temp = window.QueryInterface(Ci.nsIInterfaceRequestor)
                 .getInterface(Ci.nsIWebNavigation)
                 .QueryInterface(Ci.nsIDocShellTreeItem)
                 .rootTreeItem
                 .QueryInterface(Ci.nsIInterfaceRequestor)
                 .getInterface(Ci.nsIDOMWindow)
                 .wrappedJSObject;
and then just accesing |temp.gPrivateBrowsingUI.privateWindow|. Is there any difference in what I propose (although I feel both will give the same result) ?
I think Josh's suggestion predates the privateWindow API.  Have you run this through the try server?
Comment on attachment 633912
Patch v1

Please use the privateWindow API.
Rereading the code now, I can't imagine that using window works here. I think we need to modify the collection code to avoid private browsing windows and remove the check from the observe method.
@Ehsan, one silly question :P, is the privateWindow API something special that I don't know about or is it just the process that I have written in my comment ?

@Josh, do you mean that the QI goop that I've said in my comment(which uses window to QI and get chrome window) will not work ?

@Both, for the try run should I do |try: -b do -p all -u all -t none| or all the talos suites also ?
Created attachment 633953
Patch v2

Tried to combine Ehsan's and Josh's comments. Still have a doubt(as Josh said) that using window might not work. So please check if the QI goop that I used is correct or not.
Comment on attachment 633953
Patch v2

This still won't work, since there's no window object to manipulate. http://mxr.mozilla.org/mozilla-central/source/browser/components/tabview/groupitems.js defines the groupItems that is being manipulated in _collect - we should iterate through the result of groupItem.getChildren and obtain window objects from each one, and only then can we do the QI dance. We'll also want to have counter values that hold the totals of non-private windows we encounter.
With regards to tests, running mochitest-browser-chrome should cover it.
Use gWindow.gPrivateBrowsingUI.privateWindow.
(In reply to Saurabh Anand [:sawrubh] from comment #5)
> @Ehsan, one silly question :P, is the privateWindow API something special
> that I don't know about or is it just the process that I have written in my
> comment ?

What you wrote in your comment.

> @Both, for the try run should I do |try: -b do -p all -u all -t none| or all
> the talos suites also ?

No, you generally don't need to run talos tests, unless you're trying to measure performance.
@Josh, About the counter that you say is needed , what do you want me to do with it, set up a telemetry attribute for it or just return it ?
Please disregard comment 7, you don't need a counter. Your patch is on the right track, except that it should use gWindow.gPrivateBrowsingUI.privateWindow.
Created attachment 637300
Patch v3

Is there anything else that needs to be done in this patch ?
Comment on attachment 637300
Patch v3

Review of attachment 637300:
-----------------------------------------------------------------

Looks good with the nit below.  Please ask Tim Taubert to review this, though, since it's been a while since I've looked at the Panorama code.

::: browser/components/tabview/telemetry.js
@@ +30,5 @@
>      let childCounts = [];
> +    // Assuming the default state is Normal mode
> +    let pbFlag = false;
> +    if (gWindow && ("gPrivateBrowsingUI" in gWindow))
> +      pbFlag = gWindow.gPrivateBrowsingUI.privateWindow;

Nit: instead of storing the result in pbFlag, just move this code down and check directly in the if condition.
Created attachment 637632
Patch v4

Fixed the nit pointed by Ehsan.
https://tbpl.mozilla.org/?tree=Try&rev=a2deb9e92927
Comment on attachment 637632
Patch v4

The tree is green.
Comment on attachment 637632
Patch v4

Review of attachment 637632:
-----------------------------------------------------------------

Thanks Saurabh, that looks good.

::: browser/components/tabview/telemetry.js
@@ +28,4 @@
>    _collect: function Telemetry_collect() {
>      let stackedGroupsCount = 0;
>      let childCounts = [];
> +    

Nit: please just revert this change.

@@ +46,5 @@
>        let middle = Math.floor(aChildCounts.length / 2);
>        return aChildCounts[middle];
>      }
> +    
> +    if (gWindow && ("gPrivateBrowsingUI" in gWindow) && !gWindow.gPrivateBrowsingUI.privateWindow) {

You don't need to check for 'gWindow', that'll always exist. Please move this check back to its original position - the observe method.
Created attachment 637830
Patch v5

Fixed the nits and comments.
Comment on attachment 637830
Patch v5

Review of attachment 637830:
-----------------------------------------------------------------

::: browser/components/tabview/telemetry.js
@@ +56,4 @@
>     * Observes for gather telemetry topic.
>     */
>    observe: function Telemetry_observe(aSubject, aTopic, aData) {
> +    if (("gPrivateBrowsingUI" in gWindow) && !gWindow.gPrivateBrowsingUI.privateWindow)

This must be:

> if (!("gPrivateBrowsingUI" in gWindow) || !gWindow.gPrivateBrowsingUI.privateWindow)

because we'll want to collect when there's no private browsing UI.
Created attachment 637834
Patch v6

Sorry for the wrong logic.
Comment on attachment 637834
Patch v6

Review of attachment 637834:
-----------------------------------------------------------------

Please also remove the 'gPrivateBrowsing' getter defined in browser/components/tabview/tabview.js, it's not used anymore. r=me with that change. Thank you!
Created attachment 637837
Patch v7
Comment on attachment 637837
Patch v7

Review of attachment 637837:
-----------------------------------------------------------------

That should be r++ now. Can you please push it to try before we land it?
https://tbpl.mozilla.org/?tree=Try&rev=ed38fbf4c316
https://hg.mozilla.org/integration/mozilla-inbound/rev/6ad21d37ab91
https://hg.mozilla.org/mozilla-central/rev/6ad21d37ab91
(In reply to Tim Taubert [:ttaubert] from comment #20)
> Comment on attachment 637830
> Patch v5
> 
> Review of attachment 637830:
> -----------------------------------------------------------------
> 
> ::: browser/components/tabview/telemetry.js
> @@ +56,4 @@
> >     * Observes for gather telemetry topic.
> >     */
> >    observe: function Telemetry_observe(aSubject, aTopic, aData) {
> > +    if (("gPrivateBrowsingUI" in gWindow) && !gWindow.gPrivateBrowsingUI.privateWindow)
> 
> This must be:
> 
> > if (!("gPrivateBrowsingUI" in gWindow) || !gWindow.gPrivateBrowsingUI.privateWindow)
> 
> because we'll want to collect when there's no private browsing UI.

gPrivateBrowsingUI must exist here. What's the point of the check?
(In reply to DÃ£o Gottwald [:dao] from comment #28)
> > > if (!("gPrivateBrowsingUI" in gWindow) || !gWindow.gPrivateBrowsingUI.privateWindow)
> > 
> > because we'll want to collect when there's no private browsing UI.
> 
> gPrivateBrowsingUI must exist here. What's the point of the check?

Yeah, in retrospect, that's unnecessary. Panorama is of course active in browser windows only. Doesn't really hurt but can be removed in the future.


Panorama telemetry gatherer checks global PB state



Bug 758660 - Panorama telemetry gatherer checks global PB state; r=ttaubert 
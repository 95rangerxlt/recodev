Steps to reproduce:
1. Run Firefox twice in immediate succession
2. Navigate to a different page in both windows
3. Kill Firefox (or restart having browser.startup.page == 3)

Actual result:
Only one of both windows is restored.

Steps to reproduce:
1. Run Firefox twice in immediate succession
2. Navigate to a different page in both windows
3. Kill Firefox (or restart having browser.startup.page == 3)

Actual result:
Only one of both windows is restored.
Created attachment 233383
fix

The issue is that for performance reasons we register windows in two different ways: the first through nsISessionStore.init and all others through a domwindowopened observer registered during init. This makes SessionStore miss all windows opened before the first call to init (except the first window calling init itself).

This patch ensures that all browser windows calling init with itself as the argument are really tracked.
In the code, I see how this *could* happen. However, I'm not actually able to make it occur! Are you missing a step in the reproduction steps above?
I don't think so. What could make a difference is that my computer is somewhat dated (P-III). You'll have to make sure to launch Firefox twice with as little time in between as possible (and, of course, that it isn't running at that time).
mozilla/browser/components/sessionstore/src/nsSessionStore.js 	1.40
Comment on attachment 233383
fix

a=beltzner on behalf of 181drivers


SessionStore ignores certain browser windows

fixed1.8.1
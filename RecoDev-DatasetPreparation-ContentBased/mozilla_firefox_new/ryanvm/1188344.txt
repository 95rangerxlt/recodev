+++ This bug was initially created as a clone of Bug #1182228 +++

Changes since last update:
#6192 Refactor the 'resize' event handler in viewer.js (issue 6158)
#6166 Add a supplemental glyph map for non-embedded ArialBlack fonts (issue 5801)
#6193 Issue a warning instead of an error for long Names
#6195 Remove `PDFViewerApplication.updateScaleControls` (issue 6158)
#6194 Subtract start offset for xrefs in recovery mode
#6110 Refactor viewer code to fix issues with the "pageviewer" components example (issue 6056)
#6197 Improve robustness of stream parser (invalid length)
#6199 Simplify the code that resets the value of the `pageNumber` element in `PDFViewerApplication.setInitialView`
#6198 Use taskkill to stop the browser on Windows in tests
#6187 A couple of improvements of `getDestination` (unit-test included)
#6207 Remove `PDFViewerApplication.setScale` and further simplify the `scalechange` event handler (issue 6158)
#6208 Fetch all indirect objects (i.e. `Ref`s) in `NameTree_getAll` and `NameTree_get` (issue 6204)
#6214 Refactor annotation color handling and add unit tests
#6157 Make sure that the document is rendered on zooming and rotation for `PDFViewer` instances using the `defaultRenderingQueue`
#6221 Fixing find toolbar checkboxes not being accessible through keyboard
#6226 Update fonttools location and version (issue 6223)
#6220 Ignore double negative in `Lexer_getNumber` (issue 6218)
#6215 More cleanup regarding annotation border styles
#6201 [CRX] Respect download requests in main frame
#6196 Add --testfilter and -t flags
#6189 Improved build tools (preprocessor & postprocessor)
#6232 Simplify annotation data passing
#6235 Move handling of the 'custom' scale value from pdf_viewer.js to viewer.js
#6239 Refactor annotation rectangle code and add unit tests
#6254 Prevent documents from intermittently opening with the zoom level set to 1% (issue 6253)
#6256 Ensure that the viewer always receives focus when the HOME/END keys are pressed (bug 1186842)
#6257 Remove unused globals and updateViewarea function from viewer.js
#6240 Check if the `Decode` entry is non-default when deciding if JPEG images are natively supported/decodable (issue 6238)
#6268 Optimize text layer: Avoid unneeded .textContent access
#6236 Detect scripted auto-print requests

+++ This bug was initially created as a clone of Bug #1182228 +++

Changes since last update:
#6192 Refactor the 'resize' event handler in viewer.js (issue 6158)
#6166 Add a supplemental glyph map for non-embedded ArialBlack fonts (issue 5801)
#6193 Issue a warning instead of an error for long Names
#6195 Remove `PDFViewerApplication.updateScaleControls` (issue 6158)
#6194 Subtract start offset for xrefs in recovery mode
#6110 Refactor viewer code to fix issues with the "pageviewer" components example (issue 6056)
#6197 Improve robustness of stream parser (invalid length)
#6199 Simplify the code that resets the value of the `pageNumber` element in `PDFViewerApplication.setInitialView`
#6198 Use taskkill to stop the browser on Windows in tests
#6187 A couple of improvements of `getDestination` (unit-test included)
#6207 Remove `PDFViewerApplication.setScale` and further simplify the `scalechange` event handler (issue 6158)
#6208 Fetch all indirect objects (i.e. `Ref`s) in `NameTree_getAll` and `NameTree_get` (issue 6204)
#6214 Refactor annotation color handling and add unit tests
#6157 Make sure that the document is rendered on zooming and rotation for `PDFViewer` instances using the `defaultRenderingQueue`
#6221 Fixing find toolbar checkboxes not being accessible through keyboard
#6226 Update fonttools location and version (issue 6223)
#6220 Ignore double negative in `Lexer_getNumber` (issue 6218)
#6215 More cleanup regarding annotation border styles
#6201 [CRX] Respect download requests in main frame
#6196 Add --testfilter and -t flags
#6189 Improved build tools (preprocessor & postprocessor)
#6232 Simplify annotation data passing
#6235 Move handling of the 'custom' scale value from pdf_viewer.js to viewer.js
#6239 Refactor annotation rectangle code and add unit tests
#6254 Prevent documents from intermittently opening with the zoom level set to 1% (issue 6253)
#6256 Ensure that the viewer always receives focus when the HOME/END keys are pressed (bug 1186842)
#6257 Remove unused globals and updateViewarea function from viewer.js
#6240 Check if the `Decode` entry is non-default when deciding if JPEG images are natively supported/decodable (issue 6238)
#6268 Optimize text layer: Avoid unneeded .textContent access
#6236 Detect scripted auto-print requests
Created attachment 8639833
Update pdf.js to version 1.1.341

r? bdahl/yury (whoever gets to it first)
Brendan, any chance that you can review https://github.com/mozilla/pdf.js/pull/6270, since it would be great if we could get that one included here as well?
Jonas fixed the regression above. Ryan, can we get an updated patch?
Changes since last update:
#6273 Refactor annotation code to use a factory
#6285 Rename `PatternType` to `ShadingType` to avoid confusion
#6281 Keep the Link annotation's data URL on one line
#6292 Fix various shading pattern regressions (issue 6287)
#6270 Adjust the heuristics used to detect OpenType font file with CFF data (bug 1186827, bug 1182130, issue 6264)
Created attachment 8642493
Update pdf.js to version 1.1.352
One more while we wait...

Changes since last update:
#6222 Improve robustness of builder (esp. on Windows)
#6304 fix handling of flags 1-3 in coons shading
#6308 Apply hover style to .overlayButton not only when hovered, but also when focused.
#6310 fix handling of flags 1-3 in tensor shading
#6282 Add a `PDFLinkService` instance to the "simpleviewer" component example
#6315 Test case for tensor shading PR 6310
Created attachment 8643454
Update pdf.js to version 1.1.366

For whoever gets to it first.
https://hg.mozilla.org/integration/fx-team/rev/1a75b4e0ac8b
https://hg.mozilla.org/mozilla-central/rev/1a75b4e0ac8b
Ryan, Wes, is this something that needs to be uplifted to moz-beta branch? I was trying to follow up on bug 1186842 which is FF41+ tracked and therefore wondering.
Typically pdf.js fix backports are done via cherry-picking specific changes rather than wholesale updates. So basically, Jonas should attach a patch to bug 1186842 that can be uplifted to beta.
Created attachment 8651805
bug1188344-beta-uplifts.patch

:yury, can you please push this to try for me?

Approval Request Comment
[Feature/regressing bug #]: Prevents keyboard buttons from becoming unresponsive in the PDF viewer, and most importantly, also fixes a number of font and shadingPattern rendering regressions.
[User impact if declined]: Broken font/shadingPattern rendering, and unresponsive keyboard buttons, in the PDF Viewer of Firefox 41.
[Describe test coverage new/current, TreeHerder]: Manual testing. Also, both the font and the shadingPattern issues are covered by the PDF.js regression test-suite on GitHub.
[Risks and why]: Fairly low; the code is already present in central/aurora.
[String/UUID change made/needed]: None.
Comment on attachment 8651805
bug1188344-beta-uplifts.patch

Review of attachment 8651805:
-----------------------------------------------------------------

Uplifts:
#6256 Ensure that the viewer always receives focus when the HOME/END keys are pressed (bug 1186842)
#6292 Fix various shading pattern regressions (issue 6287)
#6270 Adjust the heuristics used to detect OpenType font file with CFF data (bug 1186827, bug 1182130, issue 6264)
Comment on attachment 8651805
bug1188344-beta-uplifts.patch

These fixes have already stabilized in Aurora and Nightly for a few weeks. It seems safe to uplift to Beta. We need keyboard buttons to be responsive in PDF viewer mode.
https://hg.mozilla.org/releases/mozilla-beta/rev/419f68e92395


Update pdf.js to version 1.1.366



Bug 1188344 - Update pdf.js to version 1.1.366. r=bdahl 
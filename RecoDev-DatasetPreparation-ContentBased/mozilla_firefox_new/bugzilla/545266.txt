Testing should be the first priority when constructing a tool for developers to use.

I would like to work on this code in a TDD fashion.

Testing should be the first priority when constructing a tool for developers to use.

I would like to work on this code in a TDD fashion.
Trying to set this toolkit stuff up like other toolkit/mozapps components,  getting a build error around the idl file:

nsIHUDService.idl
usage: /home/ddahl/code/moz/mozilla-central/obj-i686-pc-linux-gnu-debug/config/nsinstall [-C cwd] [-L linkprefix] [-m mode] [-o owner] [-g group]
                                                                                         [-DdltR] file [file ...] directory
make[6]: *** [libs] Error 2
make[5]: *** [libs] Error 2
make[4]: *** [hudservice_libs] Error 2
make[3]: *** [libs_tier_toolkit] Error 2
make[2]: *** [tier_toolkit] Error 2
make[1]: *** [default] Error 2
make: *** [build] Error 2
Created attachment 426786
0.1 WIP patch with build errors

Patch with build errors
I think the error is from the empty DIRS definition in toolkit/components/hudservice/tests/Makefile.in. Just remove the DIRS definition until you need to add anything.

Also, HUD service? Really?
Created attachment 426835
0.2 WIP - building OK

Ok, it builds now, but the idl must not be registered correctly:

js> Components.utils.import("resource://gre/modules/XPCOMUtils.jsm");

XPCOMUtils.defineLazyServiceGetter(this, "hud",
                                   "@mozilla.org/hud-service;1",
                                   "nsIHUDService");
[object BackstagePass @ 0x8b7e240 (native @ 0x8b52a7c)]
js>
js> hud
file:///home/ddahl/code/moz/mozilla-central/obj-i686-pc-linux-gnu-debug/dist/bin/modules/XPCOMUtils.jsm:272: TypeError: Cc[aContract] is undefined
Your problem is that the component itself isn't getting built, in the makefile you need:

EXTRA_PP_COMPONENTS = hudservice.js
Ok, so no wit is being built, but is null. I looked up the exception being thrown:

js> Components.utils.import("resource://gre/modules/XPCOMUtils.jsm");

XPCOMUtils.defineLazyServiceGetter(this, "hud",
                                   "@mozilla.org/hud-service;1",
                                   "nsIHUDService");
[object BackstagePass @ 0x8344308 (native @ 0x84262dc)]
js> js> js> hud
uncaught exception: [Exception... "Component returned failure code: 0x80570016 (NS_ERROR_XPC_GS_RETURNED_FAILURE) [nsIJSCID.getService]"  nsresult: "0x80570016 (NS_ERROR_XPC_GS_RETURNED_FAILURE)"  location: "JS frame :: file:///home/ddahl/code/moz/mozilla-central/obj-i686-pc-linux-gnu-debug/dist/bin/modules/XPCOMUtils.jsm :: XPCU_serviceLambda :: line 272"  data: no]
js> 

This appears to be the real error message:

"service manager returned success, but service is null!"

from: http://mxr.mozilla.org/mozilla-central/source/js/src/xpconnect/src/xpcjsid.cpp#897
Created attachment 427170
0.2.1 WIP - building OK but service is null
Your generateQI doesn't include any interfaces, you need to include at least
nsIHUDService or you won't be able to QI to that.
 QueryInterface: XPCOMUtils.generateQI([Ci.nsIHUDService]),

  getInterfaces: function(countRef) {
    var interfaces = [Ci.nsIHUDService];
    countRef.value = interfaces.length;
    return interfaces;
  },

not like this, i assume?? ^^ 

since that throws the same error
Just like that but you haven't declared Cc and Ci at the top of your js file.
Actually I added the Cc, Ci, Cu constants. weird.
ah ok, when building I get failure:

this madness started up above make[10000]:

make[12]: *** [export] Error 2
make[11]: *** [export] Error 2
make[10]: *** [export] Error 2
make[9]: *** [export] Error 2
make[8]: *** [export] Error 2
make[7]: *** [export] Error 2
make[6]: *** [export] Error 2
make[5]: *** [export] Error 2
make[4]: *** [hudservice_export] Error 2
make[3]: *** [export_tier_toolkit] Error 2
make[2]: *** [tier_toolkit] Error 2
make[1]: *** [default] Error 2
make: *** [build] Error 2
whatever I am doing is spawning hundreds of make processes like this:

2370 pts/2    S+     0:00 make -C ../hudservice export
 2373 pts/2    S+     0:00 make -C ../hudservice export
 2376 pts/2    S+     0:00 make -C ../hudservice export

its doing this about 20,000 times:

make: Entering directory `/home/ddahl/code/moz/mozilla-central/obj-i686-pc-linux-gnu-debug/toolkit/components/hudservice'
make export
make[1]: Entering directory `/home/ddahl/code/moz/mozilla-central/obj-i686-pc-linux-gnu-debug/toolkit/components/hudservice'
/home/ddahl/code/moz/mozilla-central/obj-i686-pc-linux-gnu-debug/config/nsinstall -D ../../../dist/idl
/home/ddahl/code/moz/mozilla-central/obj-i686-pc-linux-gnu-debug/config/nsinstall -D ../../../dist/idl
ok, figureed it out. I had a DIRS declaration in the makefile that was errant:

DIRS = ../hudservice \
  $(NULL)

i removed it. now I have a real service running. on to some tests.
Created attachment 427228
0.2.2 WIP - building OK - tests pass

just saving it in a working state before I move it up into toolkit/console as per mossop's advice.
Created attachment 427236
0.3 WIP - Moved into toolkit/components/console

Moved into toolkit/console, builds, tests run.
Created attachment 427509
v 0.4 WIP
exciting!
Created attachment 429655
0.5 WIP Adding window, tab accounting, message routing
Created attachment 429660
0.5.1 WIP forgot to add jar.mn
Created attachment 429903
0.6 WIP
Created attachment 430781
0.6.1 WIP

so far so good. the service needs a battery of tests now:)
Created attachment 431793
0.6.3 WIP

I need to re-create about:hud for the logging documents. I attempted to just use "about:blank" to no avail.
Created attachment 431794
0.6.2 WIP 

Whoops - previous patch was browser not toolkit
Created attachment 432055
WIP 0.6.4

Still have invisible nodes being appended. May have some kind of .cloneNode() bug.
Created attachment 432093
WIP 0.6.5
Created attachment 432297
WIP 0.6.6
This code has some critical Firefox-tabbrowser dependencies, especially for a toolkit service. What's the go-forward plan to work around this? Should we be looking at making a simple, app-side (not in toolkit) JS XPCOM component to act as a bridge?
(In reply to comment #28)
> This code has some critical Firefox-tabbrowser dependencies, especially for a
> toolkit service. What's the go-forward plan to work around this? Should we be
> looking at making a simple, app-side (not in toolkit) JS XPCOM component to act
> as a bridge?

It does, and I have been thinking about it all weekend. I think instead of passing in a aTab object to the constructor, you pass in the parent DOM node you want the HUD to attach to as well as the node you insertBefore. Any other dependencies like this should be removed with more agnostic approaches, as I would like the HeadsUpDisplay .jsm to reside in toolkit and be consumed into the service as a factory. 

Mark: thanks for taking a peek at this.
Closing this bug, moving beginning implementation and new patches to bug 534398


Setup toolkit component scaffolding and xpcshell test harness


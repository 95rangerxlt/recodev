Usually, the name of the devices we get via `adb devices` are not very useful (often it's just the serial number of the device). ro.product.model appears to be the right way to get a more descriptive name.

> adb shell getprop ro.product.model

Usually, the name of the devices we get via `adb devices` are not very useful (often it's just the serial number of the device). ro.product.model appears to be the right way to get a more descriptive name.

> adb shell getprop ro.product.model
I'm trying to use:

> adb.runCommand("shell:getprop ro.product.model")

but apparently, I'm doing something wrongâ€¦ part of the string is not sent.
Hmm, apparently, we don't dump the whole string.

Anyway, I get this error:

"adb: runCommand ondata" adb.js:48
"adb: Response: FAIL" adb.js:48
"adb: Error: device offline (x)" adb.js:48
"adb: runCommand onclose" adb.js:48
For some reasons that I don't understand, sending host:transform-any will make adb.js fail:

>  _unpackPacket: function adb_unpackPacket(aPacket, aIgnoreResponse) {
>    let buffer = aPacket;
>    let lengthView = new Uint8Array(buffer, aIgnoreResponse ? 0 : 4, 4);
>    let decoder = new TextDecoder();
>    let length = parseInt(decoder.decode(lengthView), 16);
>    let text = new Uint8Array(buffer, aIgnoreResponse ? 4 : 8, length);
>    return { length: length, data: decoder.decode(text) }
>  },

This line:
>    let lengthView = new Uint8Array(buffer, aIgnoreResponse ? 0 : 4, 4);

buffer is 4 bytes long and aIgnoreResponse is false.
Hmm, well, I haven't looked in depth at the ADB Helper addon recently... but last night I added a similar thing to libadb:

https://github.com/mozilla/libadb.js/pull/28
Filter on 86b7095e-2bd0-499e-a704-d00f2524aeef / PAUL STOP SETTING QA CONTACT TO THE DEVTOOLS COMPONENT'S WATCHERS EMAIL FOR BUGS YOU FILE :)
Created attachment 8459160
v1

Haven't tested yet.
Created attachment 8459177
v1
Comment on attachment 8459177
v1

Review of attachment 8459177:
-----------------------------------------------------------------

Looks good, just a small optimization to make.

::: browser/devtools/webide/modules/runtimes.js
@@ +34,5 @@
>    },
>    getName: function() {
> +    return this._productModel || this.id;
> +  },
> +  updateNameFromADB: function() {

The caller in app-manager.js is going to run this everytime any USB devices changes...  I know we don't really expect someone to have 10 devices plugged at once, but still there's extra work being done to existing devices when you plug an extra one, etc.  You can optimize this quite easily: if you already have |this._productModel|, return a resolved promise with this value immediately, instead of another shell call to get the value you already have.
(In reply to J. Ryan Stinnett [:jryans] from comment #8)
> The caller in app-manager.js is going to run this everytime any USB devices
> changes...

Yes. I know that but...

> I know we don't really expect someone to have 10 devices plugged
> at once, but still there's extra work being done to existing devices when
> you plug an extra one, etc.  You can optimize this quite easily: if you
> already have |this._productModel|, return a resolved promise with this value
> immediately, instead of another shell call to get the value you already have.

that would make getName() asynchronous. And that would impact the way the runtime node items are built. I don't think it's a problem to have such little overhead.
Created attachment 8459625
v1.1
https://hg.mozilla.org/integration/fx-team/rev/ded46374a161
https://hg.mozilla.org/mozilla-central/rev/ded46374a161


Use `ro.product.model` to identify USB devices



Bug 991589 - Use ro.product.model to identify USB devices. r=jryans 
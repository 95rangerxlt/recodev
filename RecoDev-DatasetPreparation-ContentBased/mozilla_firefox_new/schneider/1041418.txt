The master branch currently has two JS optimization passes:

1. Remove `if (DEBUG)` code in release builds with Esprima compiler
2. Optimize JS code with Closure compiler

We need to enable these optimizations on the nat branch. Till says Closure does not able to optimize TypeScripts' generated JS very well. We might need to investigate other optimizers.

The master branch currently has two JS optimization passes:

1. Remove `if (DEBUG)` code in release builds with Esprima compiler
2. Optimize JS code with Closure compiler

We need to enable these optimizations on the nat branch. Till says Closure does not able to optimize TypeScripts' generated JS very well. We might need to investigate other optimizers.
We should also evaluate the TypeScript compiler:

http://blogs.msdn.com/b/typescript/archive/2014/07/21/new-compiler-and-moving-to-github.aspx
I should mention that the TS compiler team added an optimization pass to remove unnecessary rest arguments. These were causing lots of allocations in the JS engine, since they couldn't be optimized away at the JS level.

https://github.com/Microsoft/TypeScript/issues/498

In other news, I've already added closure support to the build system. This will constant fold all references to `debug` or `release`, but hasn't been tested, yet.

I'll need info yury for now to see if it can be integrated into the build system.
Since Tobias is assigned to the blocking bug, I'll reassign this also.
Taken. See updates on https://bugzilla.mozilla.org/show_bug.cgi?id=1063367.
Tobias: was this bug fixed by bug 1063367?


Update Shumway's JS optimization for TypeScript

perf
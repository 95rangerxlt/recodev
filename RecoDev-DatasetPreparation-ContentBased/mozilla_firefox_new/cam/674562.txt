They become immortal zombie windows.

They become immortal zombie windows.
immortal, brain-eating zombie windows.
Created attachment 548823
[in-fx-team] zombie hud fix

fix for zombied panels on os x.

Some loss of functionality with this. No longer setting window positions on close. We'll need another mechanism to do that reliably on OS X.
Comment on attachment 548823
[in-fx-team] zombie hud fix

Review of attachment 548823:
-----------------------------------------------------------------

The patch is fine, but I believe we need to store the top/left xul:panel location in some other way.

::: browser/devtools/webconsole/HUDService.jsm
@@ +3247,5 @@
>      }
>  
>      if (aPosition == "window") {
> +      let closeButton = this.consoleFilterToolbar.
> +        getElementsByClassName("webconsole-close-button")[0];

nit: I would favor querySelector(".webconsole-close-button").
(In reply to comment #3)
> Comment on attachment 548823 [details] [review]
> zombie hud fix
> 
> Review of attachment 548823 [details] [review]:
> -----------------------------------------------------------------
> 
> The patch is fine, but I believe we need to store the top/left xul:panel
> location in some other way.
> 
> ::: browser/devtools/webconsole/HUDService.jsm
> @@ +3247,5 @@
> >      }
> >  
> >      if (aPosition == "window") {
> > +      let closeButton = this.consoleFilterToolbar.
> > +        getElementsByClassName("webconsole-close-button")[0];
> 
> nit: I would favor querySelector(".webconsole-close-button").

oh yeah. Good catch. Had a bit of a brain cramp there.

This is going to need a similar patch for aurora and possibly beta channels.
Comment on attachment 548823
[in-fx-team] zombie hud fix

http://hg.mozilla.org/integration/fx-team/rev/27a921f53d73
Created attachment 549097
zombie hud fix for aurora/beta

would like to get this in on aurora and beta channels as well. This patch should apply to both.
Comment on attachment 549097
zombie hud fix for aurora/beta

Can you explain what was causing the bug, and why this fixes it?

I don't really understand why you need to remove the panel from the document at all (rather than just showing/hiding it). The comment about not storing the position doesn't make it clear _why_ you can't save the position (the bug reference doesn't help because this bug doesn't explain that either). What happens if people already have a stored position? Are they going to continue to be broken?

The querySelector call in this patch is missing a leading "." (though you seem to have fixed that in the patch you landed on fx-team). You also left in a getElementsByClassName, seems like you should be consistent.
(In reply to comment #7)
> Comment on attachment 549097 [details] [review]
> zombie hud fix for aurora/beta
> 
> Can you explain what was causing the bug, and why this fixes it?

Speaking with Neil Deakin, he asked if we were doing anything in a popuphiding event listener. I said yes. He suggested that the operating system was causing the nsIFrame to detach from it in gecko before the event handler could complete. It's a bug in the underlying widget code. See bug 674589.

> I don't really understand why you need to remove the panel from the document
> at all (rather than just showing/hiding it). The comment about not storing
> the position doesn't make it clear _why_ you can't save the position (the
> bug reference doesn't help because this bug doesn't explain that either).
> What happens if people already have a stored position? Are they going to
> continue to be broken?

We would end up polluting the XULDocument with a bunch of leftover console panels. Probably wouldn't be a huge deal, but it's consistent with what we do for the "docked" version.

People with a stored position should see their window open in the previously saved position. It just won't update anymore.

This is preferably, imo, to not being able to close the window at all.

> The querySelector call in this patch is missing a leading "." (though you
> seem to have fixed that in the patch you landed on fx-team). You also left
> in a getElementsByClassName, seems like you should be consistent.

Oops, thanks for that. I manually applied the patch and will update it.
Comment on attachment 549097
zombie hud fix for aurora/beta

not likely that any patch here would make Beta. We'll track this and if you can produce a safe-looking positively reviewed patch, please nominate for Aurora.
An alternative could be to wrap the windowing position code behind a pref and turn it off. It's fairly isolated code and should be easy to do. Does that sound like it'd be within the realms of acceptable risk? I don't want to release this with the windowing code with this bug in place.
landed in m-c:
http://hg.mozilla.org/mozilla-central/rev/27a921f53d73
I don't think there's anything necessarily wrong with the previous patch such that it wouldn't be suitable for beta/aurora, I just didn't understand what it does. I'm still not clear on what is changing and why. A summary of the order of actions/events and how they're changing would be useful, otherwise I'll need to sort it out myself.

> We would end up polluting the XULDocument with a bunch of leftover console
> panels.

I just missed the fact that these panels were dynamically created.
Just to elaborate on what isn't clear, I see several different changes:
- panel is now removed in popuphidden, rather than popuphiding
- an added if (panel.parentNode) check before removing the panel
- disabling of the position saving
- we now hide the close button in some cases
- width pref sanity check is now > 0 instead of > -1

Which of those changes is necessary for fixing the bug as it is summarized? If "all", why are they all needed? If not "all", why are the other changes wrapped into this patch? (I'm not implying that they shouldn't be, I just want to understand the reasoning)

Sorry if this stuff is somehow really obvious and annoying to spell out, but just a short sentence describing why each of these changes were made would be extremely helpful to me (as someone who wasn't involved with the debugging or IRC discussion about this bug).
(In reply to comment #13)
> - panel is now removed in popuphidden, rather than popuphiding

Er, sorry, that isn't quite right. More accurately:
- bunch of teardown stuff is now done in popuphidden, rather than popuphiding

Is this what broke saving the position (position can't be saved that late)?
(In reply to comment #14)
> (In reply to comment #13)
> > - panel is now removed in popuphidden, rather than popuphiding
> 
> Er, sorry, that isn't quite right. More accurately:
> - bunch of teardown stuff is now done in popuphidden, rather than popuphiding
> 
> Is this what broke saving the position (position can't be saved that late)?

Yes. The panel's already gone (in popuphiding) by the time we retrieve and try to set the preferences for the panel coordinates. Moving that teardown code to popuphidden is what fixes this method.

if (panel.parentNode) check is done in case the Web Console's notification box has been removed. I think this can happen if the tab is removed and we're in windowed mode, but I'd have to go through this patch again to remember exactly why that check is needed, or indeed if it is needed. This is the one chunk of this patch we might be able to ditch, but I'd have to re-verify that.

The position saving couldn't work on OS X. It was better to remove it. We need to file a follow-up to reintroduce this based on some other event (e.g., panelmove or resize).

We hide the close button on the Toolbar when the Web Console is in the windowed position. There are problems with this close button on Mac and Windows. Hiding it and forcing users to use the supplied titlebar close button on the web console fixes this.

Width is initialized to 0 in the function. The sanity check should account for that. Might also be optional.
Which of the things done in popuphiding were causing the zombie behavior? Does just removing the popuphiding listener entirely (and making no other changes) make the panel closeable again?
Just saw bug 674589 comment 3, which presumably describes this situation. That seems very odd.
(In reply to comment #16)
> Which of the things done in popuphiding were causing the zombie behavior?
> Does just removing the popuphiding listener entirely (and making no other
> changes) make the panel closeable again?

it would, though we'd lose the behavior that we were doing in that listener.


Web Console windows don't close on osx



Bug 674562 - Web Console windows don't close on osx; r=mihai.sucan 
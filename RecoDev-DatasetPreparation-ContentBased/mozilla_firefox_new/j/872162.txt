We check appOrigin to still disable chrome, but the only place that gets set is in web apps code which is no longer used. The caller was removed in https://bugzilla.mozilla.org/show_bug.cgi?id=774216#c16 without removing the function itself. We should remove the function and remove our checks, and then remove the CSS for [disablechrome].

We check appOrigin to still disable chrome, but the only place that gets set is in web apps code which is no longer used. The caller was removed in https://bugzilla.mozilla.org/show_bug.cgi?id=774216#c16 without removing the function itself. We should remove the function and remove our checks, and then remove the CSS for [disablechrome].
Created attachment 749759
Patch

This should do the trick...
Created attachment 749768
Remove CSS
Comment on attachment 749768
Remove CSS

>   #main-window[sizemode=normal] #nav-bar[tabsontop=true],
>   #main-window[sizemode=normal] #nav-bar[tabsontop=true][collapsed=true]:not([customizing]) + toolbar,
>-  #main-window[sizemode=normal] #nav-bar[tabsontop=true][collapsed=true]:not([customizing]) + #customToolbars + #PersonalToolbar,
>-  #main-window[sizemode=normal][disablechrome] #navigator-toolbox[tabsontop=true]::after {
>+  #main-window[sizemode=normal] #nav-bar[tabsontop=true][collapsed=true]:not([customizing]) + #customToolbars + #PersonalToolbar {
>     border-top: 1px solid @toolbarShadowColor@;
>     border-top-left-radius: 2.5px;
>     border-top-right-radius: 2.5px;
>     background-clip: padding-box;
>   }

Can you file a bug on removing :not([customizing]), since collapsed toolbars aren't shown anymore while customizing?
(In reply to DÃ£o Gottwald [:dao] from comment #3)
> Can you file a bug on removing :not([customizing]), since collapsed toolbars
> aren't shown anymore while customizing?

Filed bug 872446.
Both of these pushed to UX:
JS:  http://hg.mozilla.org/projects/ux/rev/4a4cb69ab494
CSS: http://hg.mozilla.org/projects/ux/rev/63ed2aa76f4d
Can the JS(M)-only change also go to m-c? There was just a merge conflict from the patch since :marco is working on desktop app support again. I don't see a point in keeping dead code on m-c since it may become used again without notice and our merge will be harder.
(In reply to Matthew N. [:MattN] from comment #6)
> Can the JS(M)-only change also go to m-c? There was just a merge conflict
> from the patch since :marco is working on desktop app support again. I don't
> see a point in keeping dead code on m-c since it may become used again
> without notice and our merge will be harder.

I believe so.
https://hg.mozilla.org/mozilla-central/rev/4a4cb69ab494
https://hg.mozilla.org/mozilla-central/rev/63ed2aa76f4d


Remove dead openURL function from web apps code, no longer check appOrigin in browser.js' onLocationChange



Bug 872162 - Remove dead openURL function from web apps code, no longer check appOrigin in browser.js' onLocationChange, r=felipe 

Bug 872162 - Remove obsolete disablechrome CSS, r=dao 
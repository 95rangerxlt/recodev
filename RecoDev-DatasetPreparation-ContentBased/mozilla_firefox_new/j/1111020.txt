


This is more annoying that beetlejuice, damn it.
Created attachment 8560692
1111020-fix-key-events.patch

https://treeherder.mozilla.org/#/jobs?repo=try&revision=3c461e087c02
Comment on attachment 8560692
1111020-fix-key-events.patch

Review of attachment 8560692:
-----------------------------------------------------------------

Wow

::: browser/devtools/performance/test/browser_perf-events-calltree.js
@@ +34,5 @@
> +  fireKey("VK_DOWN");
> +
> +  JsCallTreeView.off("focus", focusEvent);
> +
> +  ok(focus > 1, "several focus events are fired for the js calltree.");

Shouldn't we check for an exact number here?

@@ +52,5 @@
> +  fireKey("VK_UP");
> +  fireKey("VK_DOWN");
> +
> +  MemoryCallTreeView.off("focus", focusEvent);
> +  ok(focus > 1, "several focus events are fired for the memory calltree.");

Ditto.

::: browser/devtools/shared/widgets/AbstractTreeItem.jsm
@@ +447,5 @@
>  
>      switch (e.keyCode) {
>        case e.DOM_VK_UP:
>          this._focusPrevNode();
> +        e.preventDefault();

Huh? Why?
Comment on attachment 8560692
1111020-fix-key-events.patch

Review of attachment 8560692:
-----------------------------------------------------------------

::: browser/devtools/performance/test/browser_perf-events-calltree.js
@@ +34,5 @@
> +  fireKey("VK_DOWN");
> +
> +  JsCallTreeView.off("focus", focusEvent);
> +
> +  ok(focus > 1, "several focus events are fired for the js calltree.");

Will we always have sufficient enough call tree items? That's my concern as the stack generated isn't deterministic, I believe

::: browser/devtools/shared/widgets/AbstractTreeItem.jsm
@@ +447,5 @@
>  
>      switch (e.keyCode) {
>        case e.DOM_VK_UP:
>          this._focusPrevNode();
> +        e.preventDefault();

Not necessary for this patch, but to prevent sideeffects in other views from occuring possibly -- want me to remove?
(In reply to Jordan Santell [:jsantell] [@jsantell] from comment #4)
> Comment on attachment 8560692
> 1111020-fix-key-events.patch
> 
> Review of attachment 8560692:
> -----------------------------------------------------------------
> 
> ::: browser/devtools/performance/test/browser_perf-events-calltree.js
> @@ +34,5 @@
> > +  fireKey("VK_DOWN");
> > +
> > +  JsCallTreeView.off("focus", focusEvent);
> > +
> > +  ok(focus > 1, "several focus events are fired for the js calltree.");
> 
> Will we always have sufficient enough call tree items? That's my concern as
> the stack generated isn't deterministic, I believe
> 

Sounds like we should populate the tree manually.

> ::: browser/devtools/shared/widgets/AbstractTreeItem.jsm
> @@ +447,5 @@
> >  
> >      switch (e.keyCode) {
> >        case e.DOM_VK_UP:
> >          this._focusPrevNode();
> > +        e.preventDefault();
> 
> Not necessary for this patch, but to prevent sideeffects in other views from
> occuring possibly -- want me to remove?

"possibly" is a weird reason. I'd steer clear from changes like these, but it's up to you.
Created attachment 8561584
1111020-fix-key-events.patch

Manually populating the call tree view, and removed the preventDefaults
https://hg.mozilla.org/integration/fx-team/rev/0dab1771c9b7
https://hg.mozilla.org/mozilla-central/rev/0dab1771c9b7


UP/DOWN keys don't work to navigate the call tree in the new performance tool



Bug 1111020 - Fix key events in perf tool's call trees. r=vp 
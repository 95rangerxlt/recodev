STR:

1) Go to https://www.facebook.com/about/messenger-for-firefox and make sure you've activated the SocialAPI for Firefox (there's probably a pref you can flip, but this the route I went). A Facebook icon should now be in the nav-bar.
1) In a new profile, enter customization mode (Menu button > Customize)
2) Click on an item in either the palette or the menu panel, and drag it on to the Facebook item.

What happens?

The widget that is dragged does not appear in the nav-bar. In fact, the widget just seems to disappear. Very strange.

What's expected?

The Facebook button should move out of the way when we hover over it, and if we drop ON the Facebook button, the dragged widget should appear before it.

See http://screencast.com/t/0xuBdC6E (the first 10 seconds demonstrate the problem - the rest of the time, I keep dragging items onto the widget, and sometimes things get inserted into the nav-bar, and sometimes not).

STR:

1) Go to https://www.facebook.com/about/messenger-for-firefox and make sure you've activated the SocialAPI for Firefox (there's probably a pref you can flip, but this the route I went). A Facebook icon should now be in the nav-bar.
1) In a new profile, enter customization mode (Menu button > Customize)
2) Click on an item in either the palette or the menu panel, and drag it on to the Facebook item.

What happens?

The widget that is dragged does not appear in the nav-bar. In fact, the widget just seems to disappear. Very strange.

What's expected?

The Facebook button should move out of the way when we hover over it, and if we drop ON the Facebook button, the dragged widget should appear before it.

See http://screencast.com/t/0xuBdC6E (the first 10 seconds demonstrate the problem - the rest of the time, I keep dragging items onto the widget, and sometimes things get inserted into the nav-bar, and sometimes not).
It's not disappearing anymore, but it's not appearing where you'd expect, either... investigating this.
So the social-toolbar-item has skipintoolbarset="true", which means it doesn't end up in placements. It also has removable="false", which means you can't remove it.

Because it doesn't occur in placements, when we drop something on top of it, we get a null placement, which means we use aTargetArea.childElementCount instead.

This last part is wrong already, I think; we should be using the maximum placement index (which could be higher - and is, in the case of the navbar). Jared, is that correct?

However, that's unlikely to get us what we want here in all cases. I guess I fundamentally don't really understand how we're meant to behave here. If you drop something on top of a skipintoolbarset widget, my understanding is, you don't get a say in whether it appears before or after, because the social-toolbar-item doesn't appear in the placement array, and so the order is non-deterministic. Testing this on trunk, that appears to be true. While you can drop something to the right of the social-toolbar-item, after a restart it will appear on its left.

Should we just hide skipintoolbarset items while customizing? Alternatively, I guess we could just take the next non-skipped item (or the container node itself if we don't have anything else after it).
A few things...

1) Why does social-toolbar-item have skipintoolbarset="true"? Shane, do you know why? Can this be changed?

2) As I understand most uses of skipintoolbarset, they are for things like spacers, springs, etc. If we hide them during customization then it may not be clear to users what side of the element it will appear on outside of customization. With these elements being so wide, that means that it can be the difference between the left side of the screen and the right side of the screen.

3) Is it possible for us to include skipintoolbarset items in a placement-like array when building areas? This way we could get definitive indices and not have to make guesses about where to place the dropped item?
looks like mconley added skipintoolbarset, I think it had something to do with session restore?  I'm not familiar with the affects of that attr.
(In reply to Jared Wein [:jaws] from comment #3)
> A few things...
> 
> 1) Why does social-toolbar-item have skipintoolbarset="true"? Shane, do you
> know why? Can this be changed?

mconley added it in bug 811263. Mike? :-)

 
> 2) As I understand most uses of skipintoolbarset, they are for things like
> spacers, springs, etc. If we hide them during customization then it may not
> be clear to users what side of the element it will appear on outside of
> customization. With these elements being so wide, that means that it can be
> the difference between the left side of the screen and the right side of the
> screen.

I think we're otherwise only using it for the splitter between the search box and awesomebar, and for the downloads-indicator (which replaces the download-button, which is why, I guess, it's not supposed to show up in currentset... although I wonder how that currently works in customization mode - do we dynamically swap them back out?). In any case, I don't think we use it for spacers/springs right now.

> 3) Is it possible for us to include skipintoolbarset items in a
> placement-like array when building areas? This way we could get definitive
> indices and not have to make guesses about where to place the dropped item?

I think the "whole point" of doing this is it not appearing in currentset/placements, but Dao added support for this attribute, so he might be able to clarify. Dao?
(In reply to :Gijs Kruitbosch from comment #5)
> (In reply to Jared Wein [:jaws] from comment #3)
> > A few things...
> > 
> > 1) Why does social-toolbar-item have skipintoolbarset="true"? Shane, do you
> > know why? Can this be changed?
> 
> mconley added it in bug 811263. Mike? :-)

Hrm. So the real guts of that bug is in bug 803546. I remember that bug being really strange and complicated to debug, and had to do with how the nav-bar was being re-initialized when a draggable binding was put on it for lw-themes.

I removed the skipintoolbarset attribute locally, and I'm unable to reproduce bug 811263, so I think our new toolbar binding side-steps the bug that bug 811263 resulted from. So I think it can safely be removed.
Created attachment 778385
remove skipintoolbarset from social widget

Per comment 6, I think this should work.
Comment on attachment 778385
remove skipintoolbarset from social widget

Review of attachment 778385:
-----------------------------------------------------------------

::: browser/base/content/browser.xul
@@ +532,5 @@
>      <toolbar id="nav-bar" class="toolbar-primary chromeclass-toolbar"
>               aria-label="&navbarCmd.label;"
>               fullscreentoolbar="true" mode="icons" customizable="true"
>               iconsize="large"
> +             defaultset="urlbar-container,search-container,webrtc-status-button,bookmarks-menu-button,downloads-button,home-button,social-share-button,social-toolbar-item"

Why does social-toolbar-item need to be removed from the the defaultset? As I read in the comments, your findings appear to be that the 'skipintoolbarset' is the only culprit?
(In reply to Mike de Boer [:mikedeboer] from comment #8)
> Comment on attachment 778385
> remove skipintoolbarset from social widget
> 
> Review of attachment 778385:
> -----------------------------------------------------------------
> 
> ::: browser/base/content/browser.xul
> @@ +532,5 @@
> >      <toolbar id="nav-bar" class="toolbar-primary chromeclass-toolbar"
> >               aria-label="&navbarCmd.label;"
> >               fullscreentoolbar="true" mode="icons" customizable="true"
> >               iconsize="large"
> > +             defaultset="urlbar-container,search-container,webrtc-status-button,bookmarks-menu-button,downloads-button,home-button,social-share-button,social-toolbar-item"
> 
> Why does social-toolbar-item need to be removed from the the defaultset? As
> I read in the comments, your findings appear to be that the
> 'skipintoolbarset' is the only culprit?

It's not removed, it's added. This is because skipintoolbarset causes items to not be taken into account for the placement array / defaultset. Removing it means that now the item *does* count, and it's in the navbar by default, so it should be part of the placement array, otherwise reset won't do the right thing (and will always be enabled because we can't remove a non-removable item in the reset code).
Comment on attachment 778385
remove skipintoolbarset from social widget

Review of attachment 778385:
-----------------------------------------------------------------

Thanks for clarifying! :)
Pushed: https://hg.mozilla.org/projects/ux/rev/5dd57b76bc71

Filed bug 895827 for the issue I noted in comment 2.
https://hg.mozilla.org/mozilla-central/rev/5dd57b76bc71


Dragging a widget onto the SocialAPI item while customizing causes that widget to disappear



Bug 885075 - remove skipintoolbarset from social widget, r=mikedeboer 
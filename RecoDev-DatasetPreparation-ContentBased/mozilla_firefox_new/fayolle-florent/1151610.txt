User Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0
Build ID: 20150330154247

Steps to reproduce:

After bug 1143497 (which introduces the WebConsoleCommands API), the conflicts between two extensions for a same command introduces inconsistent behavior.

See: https://pastebin.mozilla.org/8828974

Conversation with :bgrins about this: https://pastebin.mozilla.org/8828979

Florent

User Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101 Firefox/38.0
Build ID: 20150330154247

Steps to reproduce:

After bug 1143497 (which introduces the WebConsoleCommands API), the conflicts between two extensions for a same command introduces inconsistent behavior.

See: https://pastebin.mozilla.org/8828974

Conversation with :bgrins about this: https://pastebin.mozilla.org/8828979

Florent
My thinking right now is that any call to unregister() should restore the default behavior, if any.  So anything that "built in" (i.e. registered by the tools from utils.js) will be restored if that key is unregistered.

This will both prevent the built in commands from being removed with no replacement, and also make it easy for addons to clean up after themselves (just call unregister() on any commands you've added).
I am OK with your idea, Brian. I would also introduce a new API to easily and properly override a command. See https://pastebin.mozilla.org/8829109

Florent
Created attachment 8589848
1151610.patch

Here is the current status of my work.

Florent
Honza, what do you think?

Florent
(In reply to fayolle-florent from comment #4)
> Honza, what do you think?
> 
> Florent
I also vote for restoring the default (command) behavior if an extension calls unregister (even if there is yet another extension overriding the same command).

Honza
Comment on attachment 8589848
1151610.patch

Alright. So :brian, could you review the patch (which only implements your idea).

Florent
Comment on attachment 8589848
1151610.patch

Review of attachment 8589848:
-----------------------------------------------------------------

LGTM

::: toolkit/devtools/webconsole/utils.js
@@ +1570,5 @@
>     * @param {string} name The name of the command
>     */
>    unregister: function(name) {
>      this._registeredCommands.delete(name);
> +    if (this._originalCommands.has(name))

Nit: brackets around the if block
Created attachment 8598188
1151610.patch

Done.

Florent
Try push: https://treeherder.mozilla.org/#/jobs?repo=try&revision=ec39444222e7
Everything looks good after the try push.

Florent
https://hg.mozilla.org/integration/fx-team/rev/21b92a74a01f
https://hg.mozilla.org/mozilla-central/rev/21b92a74a01f


Manage the case where two extensions fight over the same command



Bug 1151610 - Manage the case where two extensions fight over the same command. r=bgrins 
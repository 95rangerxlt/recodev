Memory management in Firefox comes in two forms: garbage collection (GC), and cycle collection (CC).

To make things more fun, CC will often trigger a GC!

Right now the timeline only shows GC, but it should also show CC -- we are missing half of the picture.

Memory management in Firefox comes in two forms: garbage collection (GC), and cycle collection (CC).

To make things more fun, CC will often trigger a GC!

Right now the timeline only shows GC, but it should also show CC -- we are missing half of the picture.
Moving into the Profiler component. Filter on GUTHRIE'S WAVY CAKES.
Related bug for GC, bug 1136945, and via panos' memory tool https://github.com/past/memory-profiler/blob/master/chrome/tool.js#L201
Is any platform work needed for this? Or does exposing GC info via bug 1137527 solve the platform work as well?
Main thread CC statistics are exposed using "cycle-collection-statistics" observer service notification.

http://mxr.mozilla.org/mozilla-central/source/dom/base/nsJSEnvironment.cpp?rev=0b0c492a33b5#1726
(In reply to Olli Pettay [:smaug] from comment #4)
> Main thread CC statistics are exposed using "cycle-collection-statistics"
> observer service notification.
> 
> http://mxr.mozilla.org/mozilla-central/source/dom/base/nsJSEnvironment.
> cpp?rev=0b0c492a33b5#1726

We aren't using that observer directly because its a huge pain to synchronize prefs being used across multiple debugger servers and multiple actors within those debugger servers, and we can't control it on a per debuggee global basis.
Fixed in bug 1141614.


[marker] Cycle collection should be shown in the timeline


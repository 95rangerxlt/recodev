I found a case where the debugger misses a source -- but it is
dependent on the order of operations:

Start firefox and open the Browser Toolbox.
Now in firefox open the Timeline.
Go back to the Browser Toolbox and type "timeline.js" into the
search box.

When I do this I see just .../actors/timeline.js.
However, there is actually another one available...

Close the Browser Toolbox, and then reopen it.
Once it comes up, type "timeline.js" into the search box again.
At this point I see both actors/timeline.js and timeline/timeline.js.
This is correct.

I found a case where the debugger misses a source -- but it is
dependent on the order of operations:

Start firefox and open the Browser Toolbox.
Now in firefox open the Timeline.
Go back to the Browser Toolbox and type "timeline.js" into the
search box.

When I do this I see just .../actors/timeline.js.
However, there is actually another one available...

Close the Browser Toolbox, and then reopen it.
Once it comes up, type "timeline.js" into the search box again.
At this point I see both actors/timeline.js and timeline/timeline.js.
This is correct.
We don't keep a list of all sources that have been evaluated by the engine -- as soon as all of a source's functions have been collected, the source is collected as well.

The debugger's source list is GC sensitive :(

*** This bug has been marked as a duplicate of bug 944260 ***
Un-duping.

After discussing on irc, I think we agreed that this can't be a GC problem,
because the problem here is that closing and reopening shows a new source -- whereas
with a GC issue we'd expect instead that a source would disappear.
This works now.
I suspect the onNewScript fix handled this too.


debugger misses a source


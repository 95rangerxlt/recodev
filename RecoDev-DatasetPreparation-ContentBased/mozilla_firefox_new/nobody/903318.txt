It's #1 top crasher in 23.0 on Mac OS X and high also on Windows.

It's correlated to Trusteer Rapport:
  ScanString|EXC_BAD_ACCESS / KERN_INVALID_ADDRESS (49 crashes)
    100% (49/49) vs.  29% (150/516) RapportUtil1.dylib
          0% (0/49) vs.   0% (2/516) 47F9CFFD6AB82F553226A75451F21AA30
        100% (49/49) vs.  29% (148/516) E4135EF512708F57E5B034D5F2DAD2F70
  js::GCMarker::processMarkStackTop(js::SliceBudget&)|EXC_BAD_ACCESS / KERN_INVALID_ADDRESS (27 crashes)
     93% (27/29) vs.  29% (150/516) RapportUtil1.dylib
          0% (0/29) vs.   0% (2/516) 47F9CFFD6AB82F553226A75451F21AA30
         93% (27/29) vs.  29% (148/516) E4135EF512708F57E5B034D5F2DAD2F70
  js::GCMarker::processMarkStackTop(js::SliceBudget&)|EXCEPTION_ACCESS_VIOLATION_READ (1952 crashes)
     20% (385/1952) vs.   3% (1318/52197) RapportUtil.dll
         17% (327/1952) vs.   2% (1185/52197) 3.5.1208.44
          0% (0/1952) vs.   0% (1/52197) 3.5.1208.50
          0% (0/1952) vs.   0% (1/52197) 3.5.1209.30
          0% (2/1952) vs.   0% (4/52197) 3.5.1302.51
          3% (56/1952) vs.   0% (127/52197) 3.5.1302.54
  ScanRope|EXCEPTION_ACCESS_VIOLATION_READ (535 crashes)
     48% (258/535) vs.   3% (1318/52197) RapportUtil.dll
         45% (242/535) vs.   2% (1185/52197) 3.5.1208.44
          0% (0/535) vs.   0% (1/52197) 3.5.1208.50
          0% (0/535) vs.   0% (1/52197) 3.5.1209.30
          0% (1/535) vs.   0% (4/52197) 3.5.1302.51
          3% (15/535) vs.   0% (127/52197) 3.5.1302.54
  js::GCMarker::processMarkStackTop(js::SliceBudget&)|EXCEPTION_ACCESS_VIOLATION_WRITE (456 crashes)
     42% (190/456) vs.   3% (1318/52197) RapportUtil.dll
         38% (173/456) vs.   2% (1185/52197) 3.5.1208.44
          0% (0/456) vs.   0% (1/52197) 3.5.1208.50
          0% (0/456) vs.   0% (1/52197) 3.5.1209.30
          0% (0/456) vs.   0% (4/52197) 3.5.1302.51
          4% (17/456) vs.   0% (127/52197) 3.5.1302.54
  JS_CallObjectTracer(JSTracer*, JSObject**, char const*)|EXCEPTION_ACCESS_VIOLATION_READ (203 crashes)
     55% (112/203) vs.   3% (1318/52197) RapportUtil.dll
         51% (104/203) vs.   2% (1185/52197) 3.5.1208.44
          0% (0/203) vs.   0% (1/52197) 3.5.1208.50
          0% (0/203) vs.   0% (1/52197) 3.5.1209.30
          0% (0/203) vs.   0% (4/52197) 3.5.1302.51
          4% (8/203) vs.   0% (127/52197) 3.5.1302.54
  js::GCMarker::processMarkStackTop(js::SliceBudget&)|EXCEPTION_ACCESS_VIOLATION_EXEC (115 crashes)
     58% (67/115) vs.   3% (1318/52197) RapportUtil.dll
         55% (63/115) vs.   2% (1185/52197) 3.5.1208.44
          0% (0/115) vs.   0% (1/52197) 3.5.1208.50
          0% (0/115) vs.   0% (1/52197) 3.5.1209.30
          0% (0/115) vs.   0% (4/52197) 3.5.1302.51
          3% (4/115) vs.   0% (127/52197) 3.5.1302.54
  js::gc::Mark<JSAtom>|EXCEPTION_ACCESS_VIOLATION_READ (84 crashes)
     19% (16/84) vs.   3% (1318/52197) RapportUtil.dll
         18% (15/84) vs.   2% (1185/52197) 3.5.1208.44
          0% (0/84) vs.   0% (1/52197) 3.5.1208.50
          0% (0/84) vs.   0% (1/52197) 3.5.1209.30
          0% (0/84) vs.   0% (4/52197) 3.5.1302.51
          1% (1/84) vs.   0% (127/52197) 3.5.1302.54
  ScanRope|EXCEPTION_ACCESS_VIOLATION_WRITE (78 crashes)
     69% (54/78) vs.   3% (1318/52197) RapportUtil.dll
         60% (47/78) vs.   2% (1185/52197) 3.5.1208.44
          0% (0/78) vs.   0% (1/52197) 3.5.1208.50
          0% (0/78) vs.   0% (1/52197) 3.5.1209.30
          0% (0/78) vs.   0% (4/52197) 3.5.1302.51
          9% (7/78) vs.   0% (127/52197) 3.5.1302.54

Signature 	js::GCMarker::processMarkStackTop(js::SliceBudget&) More Reports Search
UUID 	f9e3e5a8-bf05-4810-9ec6-0e51d2130808
Date Processed	2013-08-08 11:38:14.146284
Uptime	38635
Last Crash	38654 seconds before submission
Install Age 	151848 since version was first installed.
Install Time 	2013-08-06 17:26:36
Product 	Firefox
Version 	23.0
Build ID 	20130730113002
Release Channel 	release
OS 	Mac OS X
OS Version 	10.6.8 10K549
Build Architecture 	amd64
Build Architecture Info 	family 6 model 26 stepping 5 | 8
Crash Reason 	EXC_BAD_ACCESS / KERN_INVALID_ADDRESS
Crash Address 	0x20000075
User Comments 	Why did I update?
App Notes 	
AdapterVendorID: 0x1002, AdapterDeviceID: 0x68b8GL Layers? GL Context? GL Context+ GL Layers+ 

Frame 	Module 	Signature 	Source
0 		@0x20120000075 	
1 	XUL 	js::GCMarker::processMarkStackTop(js::SliceBudget&) 	js/src/gc/Marking.cpp
2 	XUL 	js::GCMarker::drainMarkStack(js::SliceBudget&) 	js/src/gc/Marking.cpp
3 	XUL 	IncrementalCollectSlice 	js/src/jsgc.cpp
4 	XUL 	GCCycle 	js/src/jsgc.cpp
5 	XUL 	Collect 	js/src/jsgc.cpp
6 	XUL 	nsJSContext::GarbageCollectNow(JS::gcreason::Reason, nsJSContext::IsIncremental, nsJSContext::IsCompartment, nsJSContext::IsShrinking, long long) 	dom/base/nsJSEnvironment.cpp
7 	XUL 	nsTimerImpl::Fire() 	xpcom/threads/nsTimerImpl.cpp
8 	XUL 	nsTimerEvent::Run() 	xpcom/threads/nsTimerImpl.cpp
9 	XUL 	nsThread::ProcessNextEvent(bool, bool*) 	xpcom/threads/nsThread.cpp
10 	XUL 	NS_ProcessPendingEvents(nsIThread*, unsigned int) 	obj-firefox/x86_64/xpcom/build/nsThreadUtils.cpp
11 	XUL 	nsBaseAppShell::NativeEventCallback() 	widget/xpwidgets/nsBaseAppShell.cpp
12 	XUL 	nsAppShell::ProcessGeckoEvents(void*) 	widget/cocoa/nsAppShell.mm
13 	CoreFoundation 	__CFRunLoopDoSources0 	
14 	CoreFoundation 	__CFRunLoopRun 	
15 	CoreFoundation 	CFRunLoopRunSpecific 	
16 	HIToolbox 	HIToolbox@0x2e7ee 	
17 	HIToolbox 	HIToolbox@0x2e5f3 	
18 	HIToolbox 	HIToolbox@0x2e4ac 	
19 	AppKit 	_DPSNextEvent 	
20 	AppKit 	-[NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:] 	
21 	XUL 	-[GeckoNSApplication nextEventMatchingMask:untilDate:inMode:dequeue:] 	widget/cocoa/nsAppShell.mm
22 	AppKit 	-[NSApplication run] 	
23 	XUL 	nsAppShell::Run() 	widget/cocoa/nsAppShell.mm
24 	XUL 	nsAppStartup::Run() 	toolkit/components/startup/nsAppStartup.cpp
25 	XUL 	XREMain::XRE_mainRun() 	toolkit/xre/nsAppRunner.cpp
26 	XUL 	XREMain::XRE_main(int, char**, nsXREAppData const*) 	toolkit/xre/nsAppRunner.cpp
27 	XUL 	XRE_main 	toolkit/xre/nsAppRunner.cpp
28 	firefox 	main 	browser/app/nsBrowserApp.cpp
29 	firefox 	start 	
30 	RapportUtil1.dylib 	RapportUtil1.dylib@0x1a5ab4 	
31 	RapportUtil1.dylib 	RapportUtil1.dylib@0x1a3f0e 	

More reports at:
https://crash-stats.mozilla.com/report/list?product=Firefox&signature=js%3A%3AGCMarker%3A%3AprocessMarkStackTop%28js%3A%3ASliceBudget%26%29
https://crash-stats.mozilla.com/report/list?product=Firefox&signature=ScanString
https://crash-stats.mozilla.com/report/list?product=Firefox&signature=PushMarkStack
https://crash-stats.mozilla.com/report/list?product=Firefox&signature=ScanRope
https://crash-stats.mozilla.com/report/list?product=Firefox&signature=JS_CallObjectTracer%28JSTracer*%2C+JSObject**%2C+char+const*%29
https://crash-stats.mozilla.com/report/list?product=Firefox&signature=js%3A%3Agc%3A%3AMark%3CJSAtom%3E

It's #1 top crasher in 23.0 on Mac OS X and high also on Windows.

It's correlated to Trusteer Rapport:
  ScanString|EXC_BAD_ACCESS / KERN_INVALID_ADDRESS (49 crashes)
    100% (49/49) vs.  29% (150/516) RapportUtil1.dylib
          0% (0/49) vs.   0% (2/516) 47F9CFFD6AB82F553226A75451F21AA30
        100% (49/49) vs.  29% (148/516) E4135EF512708F57E5B034D5F2DAD2F70
  js::GCMarker::processMarkStackTop(js::SliceBudget&)|EXC_BAD_ACCESS / KERN_INVALID_ADDRESS (27 crashes)
     93% (27/29) vs.  29% (150/516) RapportUtil1.dylib
          0% (0/29) vs.   0% (2/516) 47F9CFFD6AB82F553226A75451F21AA30
         93% (27/29) vs.  29% (148/516) E4135EF512708F57E5B034D5F2DAD2F70
  js::GCMarker::processMarkStackTop(js::SliceBudget&)|EXCEPTION_ACCESS_VIOLATION_READ (1952 crashes)
     20% (385/1952) vs.   3% (1318/52197) RapportUtil.dll
         17% (327/1952) vs.   2% (1185/52197) 3.5.1208.44
          0% (0/1952) vs.   0% (1/52197) 3.5.1208.50
          0% (0/1952) vs.   0% (1/52197) 3.5.1209.30
          0% (2/1952) vs.   0% (4/52197) 3.5.1302.51
          3% (56/1952) vs.   0% (127/52197) 3.5.1302.54
  ScanRope|EXCEPTION_ACCESS_VIOLATION_READ (535 crashes)
     48% (258/535) vs.   3% (1318/52197) RapportUtil.dll
         45% (242/535) vs.   2% (1185/52197) 3.5.1208.44
          0% (0/535) vs.   0% (1/52197) 3.5.1208.50
          0% (0/535) vs.   0% (1/52197) 3.5.1209.30
          0% (1/535) vs.   0% (4/52197) 3.5.1302.51
          3% (15/535) vs.   0% (127/52197) 3.5.1302.54
  js::GCMarker::processMarkStackTop(js::SliceBudget&)|EXCEPTION_ACCESS_VIOLATION_WRITE (456 crashes)
     42% (190/456) vs.   3% (1318/52197) RapportUtil.dll
         38% (173/456) vs.   2% (1185/52197) 3.5.1208.44
          0% (0/456) vs.   0% (1/52197) 3.5.1208.50
          0% (0/456) vs.   0% (1/52197) 3.5.1209.30
          0% (0/456) vs.   0% (4/52197) 3.5.1302.51
          4% (17/456) vs.   0% (127/52197) 3.5.1302.54
  JS_CallObjectTracer(JSTracer*, JSObject**, char const*)|EXCEPTION_ACCESS_VIOLATION_READ (203 crashes)
     55% (112/203) vs.   3% (1318/52197) RapportUtil.dll
         51% (104/203) vs.   2% (1185/52197) 3.5.1208.44
          0% (0/203) vs.   0% (1/52197) 3.5.1208.50
          0% (0/203) vs.   0% (1/52197) 3.5.1209.30
          0% (0/203) vs.   0% (4/52197) 3.5.1302.51
          4% (8/203) vs.   0% (127/52197) 3.5.1302.54
  js::GCMarker::processMarkStackTop(js::SliceBudget&)|EXCEPTION_ACCESS_VIOLATION_EXEC (115 crashes)
     58% (67/115) vs.   3% (1318/52197) RapportUtil.dll
         55% (63/115) vs.   2% (1185/52197) 3.5.1208.44
          0% (0/115) vs.   0% (1/52197) 3.5.1208.50
          0% (0/115) vs.   0% (1/52197) 3.5.1209.30
          0% (0/115) vs.   0% (4/52197) 3.5.1302.51
          3% (4/115) vs.   0% (127/52197) 3.5.1302.54
  js::gc::Mark<JSAtom>|EXCEPTION_ACCESS_VIOLATION_READ (84 crashes)
     19% (16/84) vs.   3% (1318/52197) RapportUtil.dll
         18% (15/84) vs.   2% (1185/52197) 3.5.1208.44
          0% (0/84) vs.   0% (1/52197) 3.5.1208.50
          0% (0/84) vs.   0% (1/52197) 3.5.1209.30
          0% (0/84) vs.   0% (4/52197) 3.5.1302.51
          1% (1/84) vs.   0% (127/52197) 3.5.1302.54
  ScanRope|EXCEPTION_ACCESS_VIOLATION_WRITE (78 crashes)
     69% (54/78) vs.   3% (1318/52197) RapportUtil.dll
         60% (47/78) vs.   2% (1185/52197) 3.5.1208.44
          0% (0/78) vs.   0% (1/52197) 3.5.1208.50
          0% (0/78) vs.   0% (1/52197) 3.5.1209.30
          0% (0/78) vs.   0% (4/52197) 3.5.1302.51
          9% (7/78) vs.   0% (127/52197) 3.5.1302.54

Signature 	js::GCMarker::processMarkStackTop(js::SliceBudget&) More Reports Search
UUID 	f9e3e5a8-bf05-4810-9ec6-0e51d2130808
Date Processed	2013-08-08 11:38:14.146284
Uptime	38635
Last Crash	38654 seconds before submission
Install Age 	151848 since version was first installed.
Install Time 	2013-08-06 17:26:36
Product 	Firefox
Version 	23.0
Build ID 	20130730113002
Release Channel 	release
OS 	Mac OS X
OS Version 	10.6.8 10K549
Build Architecture 	amd64
Build Architecture Info 	family 6 model 26 stepping 5 | 8
Crash Reason 	EXC_BAD_ACCESS / KERN_INVALID_ADDRESS
Crash Address 	0x20000075
User Comments 	Why did I update?
App Notes 	
AdapterVendorID: 0x1002, AdapterDeviceID: 0x68b8GL Layers? GL Context? GL Context+ GL Layers+ 

Frame 	Module 	Signature 	Source
0 		@0x20120000075 	
1 	XUL 	js::GCMarker::processMarkStackTop(js::SliceBudget&) 	js/src/gc/Marking.cpp
2 	XUL 	js::GCMarker::drainMarkStack(js::SliceBudget&) 	js/src/gc/Marking.cpp
3 	XUL 	IncrementalCollectSlice 	js/src/jsgc.cpp
4 	XUL 	GCCycle 	js/src/jsgc.cpp
5 	XUL 	Collect 	js/src/jsgc.cpp
6 	XUL 	nsJSContext::GarbageCollectNow(JS::gcreason::Reason, nsJSContext::IsIncremental, nsJSContext::IsCompartment, nsJSContext::IsShrinking, long long) 	dom/base/nsJSEnvironment.cpp
7 	XUL 	nsTimerImpl::Fire() 	xpcom/threads/nsTimerImpl.cpp
8 	XUL 	nsTimerEvent::Run() 	xpcom/threads/nsTimerImpl.cpp
9 	XUL 	nsThread::ProcessNextEvent(bool, bool*) 	xpcom/threads/nsThread.cpp
10 	XUL 	NS_ProcessPendingEvents(nsIThread*, unsigned int) 	obj-firefox/x86_64/xpcom/build/nsThreadUtils.cpp
11 	XUL 	nsBaseAppShell::NativeEventCallback() 	widget/xpwidgets/nsBaseAppShell.cpp
12 	XUL 	nsAppShell::ProcessGeckoEvents(void*) 	widget/cocoa/nsAppShell.mm
13 	CoreFoundation 	__CFRunLoopDoSources0 	
14 	CoreFoundation 	__CFRunLoopRun 	
15 	CoreFoundation 	CFRunLoopRunSpecific 	
16 	HIToolbox 	HIToolbox@0x2e7ee 	
17 	HIToolbox 	HIToolbox@0x2e5f3 	
18 	HIToolbox 	HIToolbox@0x2e4ac 	
19 	AppKit 	_DPSNextEvent 	
20 	AppKit 	-[NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:] 	
21 	XUL 	-[GeckoNSApplication nextEventMatchingMask:untilDate:inMode:dequeue:] 	widget/cocoa/nsAppShell.mm
22 	AppKit 	-[NSApplication run] 	
23 	XUL 	nsAppShell::Run() 	widget/cocoa/nsAppShell.mm
24 	XUL 	nsAppStartup::Run() 	toolkit/components/startup/nsAppStartup.cpp
25 	XUL 	XREMain::XRE_mainRun() 	toolkit/xre/nsAppRunner.cpp
26 	XUL 	XREMain::XRE_main(int, char**, nsXREAppData const*) 	toolkit/xre/nsAppRunner.cpp
27 	XUL 	XRE_main 	toolkit/xre/nsAppRunner.cpp
28 	firefox 	main 	browser/app/nsBrowserApp.cpp
29 	firefox 	start 	
30 	RapportUtil1.dylib 	RapportUtil1.dylib@0x1a5ab4 	
31 	RapportUtil1.dylib 	RapportUtil1.dylib@0x1a3f0e 	

More reports at:
https://crash-stats.mozilla.com/report/list?product=Firefox&signature=js%3A%3AGCMarker%3A%3AprocessMarkStackTop%28js%3A%3ASliceBudget%26%29
https://crash-stats.mozilla.com/report/list?product=Firefox&signature=ScanString
https://crash-stats.mozilla.com/report/list?product=Firefox&signature=PushMarkStack
https://crash-stats.mozilla.com/report/list?product=Firefox&signature=ScanRope
https://crash-stats.mozilla.com/report/list?product=Firefox&signature=JS_CallObjectTracer%28JSTracer*%2C+JSObject**%2C+char+const*%29
https://crash-stats.mozilla.com/report/list?product=Firefox&signature=js%3A%3Agc%3A%3AMark%3CJSAtom%3E
An update to Rapport solving this on both PC and Mac is being rolled out.
(In reply to eldan.benhaim from comment #1)
> An update to Rapport solving this on both PC and Mac is being rolled out.

Great. When the Rapport update is ready and released, could you post to give its number version, please.
(In reply to Loic from comment #2)
> (In reply to eldan.benhaim from comment #1)
> > An update to Rapport solving this on both PC and Mac is being rolled out.
> 
> Great. When the Rapport update is ready and released, could you post to give
> its number version, please.

For PC it's 1208.50 (being actively rolled out) and 1302.56 (expected in a couple of days)
For Mac it's 1207.42 (being actively rolled out)
(In reply to eldan.benhaim from comment #1)
> An update to Rapport solving this on both PC and Mac is being rolled out.
Let's consider it as fixed then.
(In reply to Scoobidiver (away) from comment #4)
> Let's consider it as fixed then.

YOU LAZY TOSSER, IT WAS NEVER FIXED AND THE FCUKUP IS STILL A PROBLEM EVEN NOW, TWO YEARS LATER!


crash in js::GCMarker::processMarkStackTop with Trusteer Rapport 3.5.1302.54

crash, topcrash